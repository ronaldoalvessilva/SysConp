/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleCalendarioVacinasInterno;
import gestor.Controle.ControleItensCartilhaVacinasInternos;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.CalendarioVacinasInternos;
import gestor.Modelo.ItensCartilhaVacinasInternos;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloEnfermaria.codAlterar;
import static gestor.Visao.TelaModuloEnfermaria.codExcluir;
import static gestor.Visao.TelaModuloEnfermaria.codGravar;
import static gestor.Visao.TelaModuloEnfermaria.codigoGrupo;
import static gestor.Visao.TelaModuloEnfermaria.nomeGrupo;
import static gestor.Visao.TelaModuloEnfermaria.nomeTela;
import static gestor.Visao.TelaModuloEnfermaria.telaCalendarioVacinasIntManuENF;
import static gestor.Visao.TelaModuloEnfermaria.telaCalendarioVacinasIntVaciENF;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import static gestor.Visao.TelaModuloEnfermaria.codConsultar;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserENF;
import static gestor.Visao.TelaModuloEnfermaria.codUserAcessoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserGroupENF;
import static gestor.Visao.TelaModuloEnfermaria.codAbrirENF;
import static gestor.Visao.TelaModuloEnfermaria.codIncluirENF;

/**
 *
 * @author Ronaldo
 */
public class TelaCalendarioVacinasInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    CalendarioVacinasInternos objCal = new CalendarioVacinasInternos();
    ControleCalendarioVacinasInterno control = new ControleCalendarioVacinasInterno();
    ItensCartilhaVacinasInternos objItensVac = new ItensCartilhaVacinasInternos();
    ControleItensCartilhaVacinasInternos controle = new ControleItensCartilhaVacinasInternos();
    //   
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Enfermaria:Calendário de Vacinas de Internos:Manutenção";
    String nomeModuloTela1 = "Enfermaria:Calendário de Vacinas de Internos:Vacinas";
    //
    int flag;
    int acao;
    String dataInicial, dataFinal, dataEmissao, dataValidade;
    String dataEntrada;
    String statusMov;
    String horaMov;
    String dataModFinal;
    int count;
    String caminho;
    String codCart;
    String data1, data2, data3, dataRef;

    /**
     * Creates new form TelaCalendarioVacinasInternos
     */
    public TelaCalendarioVacinasInternos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaCalendarioVacinas = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPesqNomeInternoOdonto = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jIDPesqAtend = new javax.swing.JTextField();
        jBtIdPesqAtend = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCodRegistro = new javax.swing.JTextField();
        jStatusReg = new javax.swing.JTextField();
        jDataReg = new com.toedter.calendar.JDateChooser();
        jCelaInternoVacina = new javax.swing.JTextField();
        jPavilhaInternoVacina = new javax.swing.JTextField();
        jSexoInternoVacina = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jNomeInternoVacina = new javax.swing.JTextField();
        jDataNascInternoVacina = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jIdInternoCrcVacina = new javax.swing.JTextField();
        jMatriculaPenalVacina = new javax.swing.JTextField();
        jBtPesqInternoVacina = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jCategoriaVacina = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jDescricaoVacina = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jBtPesqVacina = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jRegistroVacina = new javax.swing.JTextField();
        jIdVacina = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLotePrimeiraDose = new javax.swing.JTextField();
        jDataPrimeiraDose = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jDataValidadePrimeiraDose = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jDataSegundaDose = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        jLoteSegundaDose = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jDataValidadeSegundaDose = new com.toedter.calendar.JDateChooser();
        jPanel13 = new javax.swing.JPanel();
        jDataTerceiraDose = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        jLoteTerceiraDose = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jDataValidadeTerceiraDose = new com.toedter.calendar.JDateChooser();
        jPanel14 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jDataReforco = new com.toedter.calendar.JDateChooser();
        jLoteReforco = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jDataValidadeReforco = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaCartaoVacina = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jBtNovaVacina = new javax.swing.JButton();
        jBtAlterarVacina = new javax.swing.JButton();
        jBtExcluirVacina = new javax.swing.JButton();
        jBtSalvarVacina = new javax.swing.JButton();
        jBtCancelarVacina = new javax.swing.JButton();
        jBtAuditoriaVacina = new javax.swing.JButton();
        jBtImprimir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Calendario de Vacinas :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jTabelaCalendarioVacinas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaCalendarioVacinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome Completo do Interno"
            }
        ));
        jTabelaCalendarioVacinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaCalendarioVacinasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaCalendarioVacinas);
        if (jTabelaCalendarioVacinas.getColumnModel().getColumnCount() > 0) {
            jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaCalendarioVacinas.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setText("Data Inicial:");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel49.setText("Data Final:");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("Nome :");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jPesqNomeInternoOdonto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("Código:");

        jIDPesqAtend.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqAtend.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtIdPesqAtend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIdPesqAtend.setContentAreaFilled(false);
        jBtIdPesqAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIdPesqAtendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jIDPesqAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtIdPesqAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel49)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1))
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(jPesqNomeInternoOdonto, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtIdPesqAtend)
                    .addComponent(jIDPesqAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel48)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInternoOdonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(jBtPesqNomeInterno))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jCodRegistro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodRegistro.setEnabled(false);

        jStatusReg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusReg.setForeground(new java.awt.Color(255, 0, 0));
        jStatusReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusReg.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jStatusReg.setEnabled(false);

        jDataReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataReg.setEnabled(false);

        jCelaInternoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCelaInternoVacina.setEnabled(false);

        jPavilhaInternoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPavilhaInternoVacina.setEnabled(false);

        jSexoInternoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSexoInternoVacina.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Cela");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Sexo");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Pavilhão");

        jNomeInternoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoVacina.setEnabled(false);

        jDataNascInternoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataNascInternoVacina.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Dt. Nascimento");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Matricula Penal");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Nome Completo do Interno");

        jIdInternoCrcVacina.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrcVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrcVacina.setEnabled(false);

        jMatriculaPenalVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMatriculaPenalVacina.setEnabled(false);

        jBtPesqInternoVacina.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtPesqInternoVacina.setForeground(new java.awt.Color(0, 0, 255));
        jBtPesqInternoVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInternoVacina.setToolTipText("Pesquisar Interno");
        jBtPesqInternoVacina.setContentAreaFilled(false);
        jBtPesqInternoVacina.setEnabled(false);
        jBtPesqInternoVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoVacinaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jMatriculaPenalVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jSexoInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDataNascInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addContainerGap(22, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jCodRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jStatusReg, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDataReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jIdInternoCrcVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jNomeInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jPavilhaInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jCelaInternoVacina)
                                .addGap(22, 22, 22))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCodRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataReg, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqInternoVacina)
                    .addComponent(jIdInternoCrcVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jMatriculaPenalVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSexoInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataNascInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPavilhaInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCelaInternoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(128, 128, 128))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Observação");

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/refresh-reload-icone-6258-16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoria.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/low-security-breach-icone-4155-16.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setContentAreaFilled(false);
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtAuditoria))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jCategoriaVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCategoriaVacina.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Categoria");

        jDescricaoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoVacina.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Descrição da Vacina");

        jBtPesqVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqVacina.setToolTipText("Pesquisar Vacina");
        jBtPesqVacina.setContentAreaFilled(false);
        jBtPesqVacina.setEnabled(false);
        jBtPesqVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqVacinaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Registro");

        jRegistroVacina.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jRegistroVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRegistroVacina.setEnabled(false);

        jIdVacina.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdVacina.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Código");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jRegistroVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jIdVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCategoriaVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDescricaoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdVacina, jRegistroVacina});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRegistroVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCategoriaVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqVacina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18))
                .addGap(8, 8, 8)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "1ª Dose", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLotePrimeiraDose.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLotePrimeiraDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLotePrimeiraDose.setEnabled(false);

        jDataPrimeiraDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataPrimeiraDose.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Lote");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Data");

        jDataValidadePrimeiraDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValidadePrimeiraDose.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Validade");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(53, 53, 53))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLotePrimeiraDose, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDataPrimeiraDose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17)))
                    .addComponent(jDataValidadePrimeiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDataPrimeiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(24, 24, 24)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLotePrimeiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataValidadePrimeiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "2ª Dose", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jDataSegundaDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSegundaDose.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Data");

        jLoteSegundaDose.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLoteSegundaDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLoteSegundaDose.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Lote");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Validade");

        jDataValidadeSegundaDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValidadeSegundaDose.setEnabled(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataSegundaDose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel19)
                            .addComponent(jLoteSegundaDose, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jDataValidadeSegundaDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDataSegundaDose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(25, 25, 25)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLoteSegundaDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jDataValidadeSegundaDose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "3ª Dose", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 153, 0))); // NOI18N

        jDataTerceiraDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataTerceiraDose.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Data");

        jLoteTerceiraDose.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLoteTerceiraDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLoteTerceiraDose.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Lote");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Validade");

        jDataValidadeTerceiraDose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValidadeTerceiraDose.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDataTerceiraDose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLoteTerceiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jDataValidadeTerceiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataTerceiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLoteTerceiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataValidadeTerceiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Reforço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Data");

        jDataReforco.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataReforco.setEnabled(false);

        jLoteReforco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLoteReforco.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLoteReforco.setEnabled(false);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Lote");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Validade");

        jDataValidadeReforco.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValidadeReforco.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLoteReforco, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jDataReforco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24))
                            .addComponent(jLabel27)
                            .addComponent(jDataValidadeReforco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataReforco, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLoteReforco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataValidadeReforco, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabelaCartaoVacina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaCartaoVacina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Registro", "Descrição da Vacina", "1ª Dose", "2ª Dose", "3ª Dose", "Reforço"
            }
        ));
        jTabelaCartaoVacina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaCartaoVacinaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaCartaoVacina);
        if (jTabelaCartaoVacina.getColumnModel().getColumnCount() > 0) {
            jTabelaCartaoVacina.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaCartaoVacina.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaCartaoVacina.getColumnModel().getColumn(1).setMinWidth(200);
            jTabelaCartaoVacina.getColumnModel().getColumn(1).setMaxWidth(200);
            jTabelaCartaoVacina.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(5).setMinWidth(80);
            jTabelaCartaoVacina.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jBtNovaVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovaVacina.setEnabled(false);
        jBtNovaVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaVacinaActionPerformed(evt);
            }
        });

        jBtAlterarVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/refresh-reload-icone-6258-16.png"))); // NOI18N
        jBtAlterarVacina.setEnabled(false);
        jBtAlterarVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarVacinaActionPerformed(evt);
            }
        });

        jBtExcluirVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirVacina.setEnabled(false);
        jBtExcluirVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirVacinaActionPerformed(evt);
            }
        });

        jBtSalvarVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarVacina.setEnabled(false);
        jBtSalvarVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarVacinaActionPerformed(evt);
            }
        });

        jBtCancelarVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarVacina.setEnabled(false);
        jBtCancelarVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarVacinaActionPerformed(evt);
            }
        });

        jBtAuditoriaVacina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaVacina.setToolTipText("Auditoria");
        jBtAuditoriaVacina.setContentAreaFilled(false);
        jBtAuditoriaVacina.setEnabled(false);
        jBtAuditoriaVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaVacinaActionPerformed(evt);
            }
        });

        jBtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimir.setToolTipText("Imprimir Calendário Vacinas");
        jBtImprimir.setEnabled(false);
        jBtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jBtNovaVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jBtAlterarVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jBtExcluirVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jBtSalvarVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jBtCancelarVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)
                                .addComponent(jBtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(jBtAuditoriaVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel11, jPanel12, jPanel13, jPanel14});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovaVacina)
                    .addComponent(jBtAlterarVacina)
                    .addComponent(jBtExcluirVacina)
                    .addComponent(jBtSalvarVacina)
                    .addComponent(jBtCancelarVacina)
                    .addComponent(jBtImprimir)
                    .addComponent(jBtAuditoriaVacina))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel11, jPanel12, jPanel13, jPanel14});

        jTabbedPane1.addTab("Vacinas", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(300, 40, 539, 492);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jDataInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataInicial.requestFocus();
        } else {
            if (jDataFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataFinal.requestFocus();
            } else {
                if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                    preencherTabelaCartaoVacinas("SELECT * FROM CARTILHA_VACINAS_INTERNOS "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON CARTILHA_VACINAS_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE DataCart BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaCartaoVacinas("SELECT * FROM CARTILHA_VACINAS_INTERNOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON CARTILHA_VACINAS_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        preencherTabelaCartaoVacinas("SELECT * FROM CARTILHA_VACINAS_INTERNOS "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON CARTILHA_VACINAS_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInternoOdonto.getText() + "%'");
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jBtIdPesqAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIdPesqAtendActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        preencherTabelaCartaoVacinas("SELECT * FROM CARTILHA_VACINAS_INTERNOS "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON CARTILHA_VACINAS_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE IdCart='" + jIDPesqAtend.getText() + "'");
    }//GEN-LAST:event_jBtIdPesqAtendActionPerformed

    private void jTabelaCalendarioVacinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaCalendarioVacinasMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaCalendarioVacinas.getValueAt(jTabelaCalendarioVacinas.getSelectedRow(), 0);
            jIDPesqAtend.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtNovaVacina.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM CARTILHA_VACINAS_INTERNOS "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON CARTILHA_VACINAS_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE CARTILHA_VACINAS_INTERNOS.IdCart='" + IdLanc + "'");
                conecta.rs.first();
                jCodRegistro.setText(String.valueOf(conecta.rs.getInt("IdCart")));
                jStatusReg.setText(conecta.rs.getString("StatusCart"));
                jDataReg.setDate(conecta.rs.getDate("DataCart"));
                jIdInternoCrcVacina.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInternoVacina.setText(conecta.rs.getString("NomeInternoCrc"));
                jMatriculaPenalVacina.setText(conecta.rs.getString("MatriculaCrc"));
                jDataNascInternoVacina.setDate(conecta.rs.getDate("DataNasciCrc"));
                jSexoInternoVacina.setText(conecta.rs.getString("SexoCrc"));
                jPavilhaInternoVacina.setText(conecta.rs.getString("DescricaoPav"));
                jCelaInternoVacina.setText(conecta.rs.getString("EndCelaPav"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
            }
            preencherTabelaItensCartaoVacinas("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS "
                    + "INNER JOIN TIPOS_VACINAS "
                    + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdVacina=TIPOS_VACINAS.IdVacina "
                    + "INNER JOIN CARTILHA_VACINAS_INTERNOS "
                    + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdCart=CARTILHA_VACINAS_INTERNOS.IdCart "
                    + "WHERE ITENS_CARTILHA_VACINAS_INTERNOS.IdCart='" + jCodRegistro.getText() + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaCalendarioVacinasMouseClicked

    private void jBtPesqInternoVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoVacinaActionPerformed
        // TODO add your handling code here:
        TelaPesqInternoCartilhaVacinaInternos objPesqIntVac = new TelaPesqInternoCartilhaVacinaInternos();
        TelaModuloEnfermaria.jPainelMedico.add(objPesqIntVac);
        objPesqIntVac.show();
    }//GEN-LAST:event_jBtPesqInternoVacinaActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntManuENF) && codIncluirENF == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 1;
            Novo();
            corCampos();
            limparTabelaItensCartaoVacina();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntManuENF) && codAlterar == 1) {
            objCal.setStatusCart(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntManuENF) && codExcluir == 1) {
            verificarItens();
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objCal.setStatusCart(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                if (jCodRegistro.getText().equals(codCart)) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, existe vacinas para esse registro.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objCal.setIdCart(Integer.valueOf(jCodRegistro.getText()));
                        control.excluirCartilhaVacinas(objCal);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Excluir();
                        JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntManuENF) && codGravar == 1) {
            if (jDataReg.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do registro.");
            } else if (jNomeInternoVacina.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para gravar o registro.");
            } else {
                objCal.setStatusCart(jStatusReg.getText());
                objCal.setDataCart(jDataReg.getDate());
                objCal.setIdInternoCrc(Integer.valueOf(jIdInternoCrcVacina.getText()));
                objCal.setNomeInternoCrcVacina(jNomeInternoVacina.getText());
                objCal.setObservacao(jObservacao.getText());
                if (acao == 1) {
                    objCal.setUsuarioInsert(nameUser);
                    objCal.setDataInsert(dataModFinal);
                    objCal.setHorarioInsert(horaMov);
                    control.incluirCartilhaVacinas(objCal);
                    buscarCodigo();
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    objCal.setUsuarioUp(nameUser);
                    objCal.setDataUp(dataModFinal);
                    objCal.setHorarioUp(horaMov);
                    objCal.setIdCart(Integer.valueOf(jCodRegistro.getText()));
                    control.alterarCartilhaVacinas(objCal);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        Integer rows = jTabelaCartaoVacina.getModel().getRowCount();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível finalizar esse lançamento, não existe internos relacionados\na esse registro.");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM CARTILHA_VACINAS_INTERNOS WHERE IdCart='" + jCodRegistro.getText() + "'");
                conecta.rs.first();
                jStatusReg.setText(conecta.rs.getString("StatusCart"));
                if (jStatusReg.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Registro já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível finalizar esse registro.\nERRO: " + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaVacinas objAudiVacinas = new TelaAuditoriaVacinas();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiVacinas);
        objAudiVacinas.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtPesqVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqVacinaActionPerformed
        // TODO add your handling code here:
        TelaPesqTipoVacinas objPesVacinas = new TelaPesqTipoVacinas();
        TelaModuloEnfermaria.jPainelMedico.add(objPesVacinas);
        objPesVacinas.show();
    }//GEN-LAST:event_jBtPesqVacinaActionPerformed

    private void jBtNovaVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaVacinaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntVaciENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntVaciENF) && codIncluirENF == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objCal.setStatusCart(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovaVacina();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovaVacinaActionPerformed

    private void jBtAlterarVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarVacinaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntVaciENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntVaciENF) && codAlterar == 1) {
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objCal.setStatusCart(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                AlterarVacina();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarVacinaActionPerformed

    private void jBtExcluirVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirVacinaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntVaciENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntVaciENF) && codExcluir == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objCal.setStatusCart(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo encontra-se FINALIZADO");
            } else {
                if (jStatusReg.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objItensVac.setIdItemCart(Integer.valueOf(jRegistroVacina.getText()));
                        controle.excluirItensCartilhaVacinaInternos(objItensVac);
                        objLog1();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        ExcluirVacina();
                        preencherTabelaItensCartaoVacinas("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS "
                                + "INNER JOIN TIPOS_VACINAS "
                                + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdVacina=TIPOS_VACINAS.IdVacina "
                                + "INNER JOIN CARTILHA_VACINAS_INTERNOS "
                                + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdCart=CARTILHA_VACINAS_INTERNOS.IdCart "
                                + "WHERE ITENS_CARTILHA_VACINAS_INTERNOS.IdCart='" + jCodRegistro.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirVacinaActionPerformed

    private void jBtSalvarVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarVacinaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCalendarioVacinasIntVaciENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTela.equals(telaCalendarioVacinasIntVaciENF) && codGravar == 1) {
            if (jDescricaoVacina.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome da vacina.");
            } else if (jDataPrimeiraDose.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data da primeira dose da vacina.");
            } else if (jLotePrimeiraDose.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o número do lote da vacina.");
            } else if (jDataValidadePrimeiraDose.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de validade da vacina.");
            } else {
                objItensVac.setIdCart(Integer.valueOf(jCodRegistro.getText()));
                objItensVac.setDescricaoVacina(jDescricaoVacina.getText());
                objItensVac.setData1Dose(jDataPrimeiraDose.getDate());
                objItensVac.setData2Dose(jDataSegundaDose.getDate());
                objItensVac.setData3Dose(jDataTerceiraDose.getDate());
                objItensVac.setDataReforco(jDataReforco.getDate());
                objItensVac.setLote1Dose(jLotePrimeiraDose.getText());
                objItensVac.setLote2Dose(jLoteSegundaDose.getText());
                objItensVac.setLote3Dose(jLoteTerceiraDose.getText());
                objItensVac.setLoteReforco(jLoteReforco.getText());
                objItensVac.setDataValidade1(jDataValidadePrimeiraDose.getDate());
                objItensVac.setDataValidade2(jDataValidadeSegundaDose.getDate());
                objItensVac.setDataValidade3(jDataValidadeTerceiraDose.getDate());
                objItensVac.setDataValidadeRef(jDataValidadeReforco.getDate());
                if (acao == 3) {
                    objItensVac.setUsuarioInsert(nameUser);
                    objItensVac.setDataInsert(dataModFinal);
                    objItensVac.setHorarioInsert(horaMov);
                    controle.incluirItensCartilhaVacinaInternos(objItensVac);
                    buscarCodigoVacina();
                    //
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarVacina();
                    preencherTabelaItensCartaoVacinas("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS "
                            + "INNER JOIN TIPOS_VACINAS "
                            + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdVacina=TIPOS_VACINAS.IdVacina "
                            + "INNER JOIN CARTILHA_VACINAS_INTERNOS "
                            + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdCart=CARTILHA_VACINAS_INTERNOS.IdCart "
                            + "WHERE ITENS_CARTILHA_VACINAS_INTERNOS.IdCart='" + jCodRegistro.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objItensVac.setUsuarioUp(nameUser);
                    objItensVac.setDataUp(dataModFinal);
                    objItensVac.setHorarioUp(horaMov);
                    objItensVac.setIdItemCart(Integer.valueOf(jRegistroVacina.getText()));
                    controle.alterarItensCartilhaVacinaInternos(objItensVac);
                    //
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarVacina();
                    preencherTabelaItensCartaoVacinas("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS "
                            + "INNER JOIN TIPOS_VACINAS "
                            + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdVacina=TIPOS_VACINAS.IdVacina "
                            + "INNER JOIN CARTILHA_VACINAS_INTERNOS "
                            + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdCart=CARTILHA_VACINAS_INTERNOS.IdCart "
                            + "WHERE ITENS_CARTILHA_VACINAS_INTERNOS.IdCart='" + jCodRegistro.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarVacinaActionPerformed

    private void jBtCancelarVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarVacinaActionPerformed
        // TODO add your handling code here:
        CancelarVacina();
    }//GEN-LAST:event_jBtCancelarVacinaActionPerformed

    private void jBtAuditoriaVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaVacinaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensVacina objAudiItensVacina = new TelaAuditoriaItensVacina();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiItensVacina);
        objAudiItensVacina.show();
    }//GEN-LAST:event_jBtAuditoriaVacinaActionPerformed

    private void jTabelaCartaoVacinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaCartaoVacinaMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String idRegistro = "" + jTabelaCartaoVacina.getValueAt(jTabelaCartaoVacina.getSelectedRow(), 0);
            jRegistroVacina.setText(idRegistro);
            //
            jBtNovaVacina.setEnabled(true);
            jBtAlterarVacina.setEnabled(true);
            jBtExcluirVacina.setEnabled(true);
            jBtSalvarVacina.setEnabled(!true);
            jBtCancelarVacina.setEnabled(true);
            jBtAuditoriaVacina.setEnabled(true);
            jBtImprimir.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS "
                        + "INNER JOIN TIPOS_VACINAS "
                        + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdVacina=TIPOS_VACINAS.IdVacina "
                        + "INNER JOIN CARTILHA_VACINAS_INTERNOS "
                        + "ON ITENS_CARTILHA_VACINAS_INTERNOS.IdCart=CARTILHA_VACINAS_INTERNOS.IdCart "
                        + "WHERE ITENS_CARTILHA_VACINAS_INTERNOS.IdItemCart='" + idRegistro + "'");
                conecta.rs.first();
                jRegistroVacina.setText(conecta.rs.getString("IdItemCart"));
                jIdVacina.setText(conecta.rs.getString("IdVacina"));
                jCategoriaVacina.setText(conecta.rs.getString("Classificacao"));
                jDescricaoVacina.setText(conecta.rs.getString("DescricaoVacina"));
                jDataPrimeiraDose.setDate(conecta.rs.getDate("Data1Dose"));
                jDataSegundaDose.setDate(conecta.rs.getDate("Data2Dose"));
                jDataTerceiraDose.setDate(conecta.rs.getDate("Data3Dose"));
                jDataReforco.setDate(conecta.rs.getDate("DataReforco"));
                jLotePrimeiraDose.setText(conecta.rs.getString("Lote1Dose"));
                jLoteSegundaDose.setText(conecta.rs.getString("Lote2Dose"));
                jLoteTerceiraDose.setText(conecta.rs.getString("Lote3Dose"));
                jLoteReforco.setText(conecta.rs.getString("LoteReforco"));
                jDataValidadePrimeiraDose.setDate(conecta.rs.getDate("DataValidade1"));
                jDataValidadeSegundaDose.setDate(conecta.rs.getDate("DataValidade2"));
                jDataValidadeTerceiraDose.setDate(conecta.rs.getDate("DataValidade3"));
                jDataValidadeReforco.setDate(conecta.rs.getDate("DataValidadeRef"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível exibir registro.\nERRO: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaCartaoVacinaMouseClicked

    private void jBtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirActionPerformed
        // TODO add your handling code here:
        try {
            conecta.abrirConexao();
            String path = "reports/RelatorioCartilhaVacinasInternos.jasper";
            conecta.executaSQL("SELECT * FROM CARTILHA_VACINAS_INTERNOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON CARTILHA_VACINAS_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN ITENSLOCACAOINTERNO "
                    + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                    + "INNER JOIN CELAS "
                    + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                    + "INNER JOIN PAVILHAO "
                    + "ON CELAS.IdPav=PAVILHAO.IdPav "
                    + "WHERE CARTILHA_VACINAS_INTERNOS.IdCart='" + jCodRegistro.getText() + "'");
            HashMap parametros = new HashMap();
            parametros.put("codCartilha", jCodRegistro.getText());
            parametros.put("nomeUsuario", nameUser);
            // Sub Relatório
            try {
                parametros.put("REPORT_CONNECTION", conecta.stmt.getConnection());
            } catch (SQLException ex) {
            }
            JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
            JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
            JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
            jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
            jv.setTitle("Relatório de Cartilha de Vacinas de Internos");
            jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
            jv.toFront(); // Traz o relatorio para frente da aplicação            
            conecta.desconecta();
        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
        }
    }//GEN-LAST:event_jBtImprimirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarVacina;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaVacina;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarVacina;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirVacina;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtIdPesqAtend;
    private javax.swing.JButton jBtImprimir;
    private javax.swing.JButton jBtNovaVacina;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqInternoVacina;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesqVacina;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarVacina;
    public static javax.swing.JTextField jCategoriaVacina;
    public static javax.swing.JTextField jCelaInternoVacina;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JTextField jCodRegistro;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    public static com.toedter.calendar.JDateChooser jDataNascInternoVacina;
    private com.toedter.calendar.JDateChooser jDataPrimeiraDose;
    private com.toedter.calendar.JDateChooser jDataReforco;
    private com.toedter.calendar.JDateChooser jDataReg;
    private com.toedter.calendar.JDateChooser jDataSegundaDose;
    private com.toedter.calendar.JDateChooser jDataTerceiraDose;
    private com.toedter.calendar.JDateChooser jDataValidadePrimeiraDose;
    private com.toedter.calendar.JDateChooser jDataValidadeReforco;
    private com.toedter.calendar.JDateChooser jDataValidadeSegundaDose;
    private com.toedter.calendar.JDateChooser jDataValidadeTerceiraDose;
    public static javax.swing.JTextField jDescricaoVacina;
    private javax.swing.JTextField jIDPesqAtend;
    public static javax.swing.JTextField jIdInternoCrcVacina;
    public static javax.swing.JTextField jIdVacina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLotePrimeiraDose;
    private javax.swing.JTextField jLoteReforco;
    private javax.swing.JTextField jLoteSegundaDose;
    private javax.swing.JTextField jLoteTerceiraDose;
    public static javax.swing.JTextField jMatriculaPenalVacina;
    public static javax.swing.JTextField jNomeInternoVacina;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JTextField jPavilhaInternoVacina;
    private javax.swing.JTextField jPesqNomeInternoOdonto;
    public static javax.swing.JTextField jRegistroVacina;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTextField jSexoInternoVacina;
    private javax.swing.JTextField jStatusReg;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaCalendarioVacinas;
    private javax.swing.JTable jTabelaCartaoVacina;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jCodRegistro.setBackground(Color.white);
        jStatusReg.setBackground(Color.white);
        jDataReg.setBackground(Color.white);
        jIdInternoCrcVacina.setBackground(Color.white);
        jMatriculaPenalVacina.setBackground(Color.white);
        jSexoInternoVacina.setBackground(Color.white);
        jDataNascInternoVacina.setBackground(Color.white);
        jNomeInternoVacina.setBackground(Color.white);
        jPavilhaInternoVacina.setBackground(Color.white);
        jCelaInternoVacina.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        // ABA VACINAS
        jRegistroVacina.setBackground(Color.white);
        jCategoriaVacina.setBackground(Color.white);
        jIdVacina.setBackground(Color.white);
        jDescricaoVacina.setBackground(Color.white);
        jDataPrimeiraDose.setBackground(Color.white);
        jLotePrimeiraDose.setBackground(Color.white);
        jDataValidadePrimeiraDose.setBackground(Color.white);
        jDataSegundaDose.setBackground(Color.white);
        jLoteSegundaDose.setBackground(Color.white);
        jDataValidadeSegundaDose.setBackground(Color.white);
        jDataTerceiraDose.setBackground(Color.white);
        jLoteTerceiraDose.setBackground(Color.white);
        jDataValidadeTerceiraDose.setBackground(Color.white);
        jDataReforco.setBackground(Color.white);
        jLoteReforco.setBackground(Color.white);
        jDataValidadeReforco.setBackground(Color.white);
    }

    public void Novo() {
        jCodRegistro.setText("");
        jStatusReg.setText("ABERTO");
        jDataReg.setCalendar(Calendar.getInstance());
        jIdInternoCrcVacina.setText("");
        jMatriculaPenalVacina.setText("");
        jSexoInternoVacina.setText("");
        jDataNascInternoVacina.setDate(null);
        jNomeInternoVacina.setText("");
        jPavilhaInternoVacina.setText("");
        jCelaInternoVacina.setText("");
        jObservacao.setText("");
        //
        jDataReg.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInternoVacina.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA VACINAS
        jBtNovaVacina.setEnabled(!true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
        jBtPesqVacina.setEnabled(!true);
        //
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setDate(null);
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setDate(null);
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(!true);
        jLotePrimeiraDose.setEnabled(!true);
        jDataValidadePrimeiraDose.setEnabled(!true);
        jDataSegundaDose.setEnabled(!true);
        jLoteSegundaDose.setEnabled(!true);
        jDataValidadeSegundaDose.setEnabled(!true);
        jDataTerceiraDose.setEnabled(!true);
        jLoteTerceiraDose.setEnabled(!true);
        jDataValidadeTerceiraDose.setEnabled(!true);
        jDataReforco.setEnabled(!true);
        jLoteReforco.setEnabled(!true);
        jDataValidadeReforco.setEnabled(!true);
    }

    public void Alterar() {
        jDataReg.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInternoVacina.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA VACINAS
        jBtNovaVacina.setEnabled(!true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
        //
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setDate(null);
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setDate(null);
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(!true);
        jLotePrimeiraDose.setEnabled(!true);
        jDataValidadePrimeiraDose.setEnabled(!true);
        jDataSegundaDose.setEnabled(!true);
        jLoteSegundaDose.setEnabled(!true);
        jDataValidadeSegundaDose.setEnabled(!true);
        jDataTerceiraDose.setEnabled(!true);
        jLoteTerceiraDose.setEnabled(!true);
        jDataValidadeTerceiraDose.setEnabled(!true);
        jDataReforco.setEnabled(!true);
        jLoteReforco.setEnabled(!true);
        jDataValidadeReforco.setEnabled(!true);
    }

    public void Excluir() {
        jCodRegistro.setText("");
        jStatusReg.setText("");
        jDataReg.setDate(null);
        jIdInternoCrcVacina.setText("");
        jMatriculaPenalVacina.setText("");
        jSexoInternoVacina.setText("");
        jDataNascInternoVacina.setDate(null);
        jNomeInternoVacina.setText("");
        jPavilhaInternoVacina.setText("");
        jCelaInternoVacina.setText("");
        jObservacao.setText("");
        //
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA VACINAS
        jBtNovaVacina.setEnabled(!true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
        //
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setDate(null);
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setDate(null);
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(!true);
        jLotePrimeiraDose.setEnabled(!true);
        jDataValidadePrimeiraDose.setEnabled(!true);
        jDataSegundaDose.setEnabled(!true);
        jLoteSegundaDose.setEnabled(!true);
        jDataValidadeSegundaDose.setEnabled(!true);
        jDataTerceiraDose.setEnabled(!true);
        jLoteTerceiraDose.setEnabled(!true);
        jDataValidadeTerceiraDose.setEnabled(!true);
        jDataReforco.setEnabled(!true);
        jLoteReforco.setEnabled(!true);
        jDataValidadeReforco.setEnabled(!true);
    }

    public void Salvar() {
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // ABA VACINAS
        jBtNovaVacina.setEnabled(true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
    }

    public void Cancelar() {
        if (jCodRegistro.getText().equals("")) {
            jStatusReg.setText("");
            jDataReg.setDate(null);
            jIdInternoCrcVacina.setText("");
            jMatriculaPenalVacina.setText("");
            jSexoInternoVacina.setText("");
            jDataNascInternoVacina.setDate(null);
            jNomeInternoVacina.setText("");
            jPavilhaInternoVacina.setText("");
            jCelaInternoVacina.setText("");
            jObservacao.setText("");
            //
            jDataReg.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqInternoVacina.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            // ABA VACINAS
            jBtNovaVacina.setEnabled(!true);
            jBtAlterarVacina.setEnabled(!true);
            jBtExcluirVacina.setEnabled(!true);
            jBtSalvarVacina.setEnabled(!true);
            jBtCancelarVacina.setEnabled(!true);
            jBtAuditoriaVacina.setEnabled(!true);
        } else {
            jDataReg.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqInternoVacina.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            // ABA VACINAS
            jBtNovaVacina.setEnabled(true);
            jBtAlterarVacina.setEnabled(!true);
            jBtExcluirVacina.setEnabled(!true);
            jBtSalvarVacina.setEnabled(!true);
            jBtCancelarVacina.setEnabled(!true);
            jBtAuditoriaVacina.setEnabled(!true);
        }
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse registro for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o registro selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objCal.setStatusCart(statusEntrada);
            objCal.setIdCart(Integer.parseInt(jCodRegistro.getText()));
            control.finalizarCartilhaVacinas(objCal);
            jStatusReg.setText(statusEntrada);
            //
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CARTILHA_VACINAS_INTERNOS");
            conecta.rs.last();
            jCodRegistro.setText(conecta.rs.getString("IdCart"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void verificarItens() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS WHERE IdCart='" + jCodRegistro.getText() + "'");
            conecta.rs.first();
            codCart = conecta.rs.getString("IdCart");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovaVacina() {
        // ABA VACINAS
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setCalendar(Calendar.getInstance());
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setCalendar(Calendar.getInstance());
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(true);
        jLotePrimeiraDose.setEnabled(true);
        jDataValidadePrimeiraDose.setEnabled(true);
        jDataSegundaDose.setEnabled(true);
        jLoteSegundaDose.setEnabled(true);
        jDataValidadeSegundaDose.setEnabled(true);
        jDataTerceiraDose.setEnabled(true);
        jLoteTerceiraDose.setEnabled(true);
        jDataValidadeTerceiraDose.setEnabled(true);
        jDataReforco.setEnabled(true);
        jLoteReforco.setEnabled(true);
        jDataValidadeReforco.setEnabled(true);
        //
        jBtPesqVacina.setEnabled(true);
        jBtNovaVacina.setEnabled(!true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(true);
        jBtCancelarVacina.setEnabled(true);
        jBtAuditoriaVacina.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void AlterarVacina() {
        jDataPrimeiraDose.setEnabled(true);
        jLotePrimeiraDose.setEnabled(true);
        jDataValidadePrimeiraDose.setEnabled(true);
        jDataSegundaDose.setEnabled(true);
        jLoteSegundaDose.setEnabled(true);
        jDataValidadeSegundaDose.setEnabled(true);
        jDataTerceiraDose.setEnabled(true);
        jLoteTerceiraDose.setEnabled(true);
        jDataValidadeTerceiraDose.setEnabled(true);
        jDataReforco.setEnabled(true);
        jLoteReforco.setEnabled(true);
        jDataValidadeReforco.setEnabled(true);
        //
        jBtPesqVacina.setEnabled(true);
        jBtNovaVacina.setEnabled(!true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(true);
        jBtCancelarVacina.setEnabled(true);
        jBtAuditoriaVacina.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void ExcluirVacina() {
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setDate(null);
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setDate(null);
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(!true);
        jLotePrimeiraDose.setEnabled(!true);
        jDataValidadePrimeiraDose.setEnabled(!true);
        jDataSegundaDose.setEnabled(!true);
        jLoteSegundaDose.setEnabled(!true);
        jDataValidadeSegundaDose.setEnabled(!true);
        jDataTerceiraDose.setEnabled(!true);
        jLoteTerceiraDose.setEnabled(!true);
        jDataValidadeTerceiraDose.setEnabled(!true);
        jDataReforco.setEnabled(!true);
        jLoteReforco.setEnabled(!true);
        jDataValidadeReforco.setEnabled(!true);
        //
        jBtPesqVacina.setEnabled(!true);
        jBtNovaVacina.setEnabled(true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void SalvarVacina() {
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setDate(null);
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setDate(null);
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(!true);
        jLotePrimeiraDose.setEnabled(!true);
        jDataValidadePrimeiraDose.setEnabled(!true);
        jDataSegundaDose.setEnabled(!true);
        jLoteSegundaDose.setEnabled(!true);
        jDataValidadeSegundaDose.setEnabled(!true);
        jDataTerceiraDose.setEnabled(!true);
        jLoteTerceiraDose.setEnabled(!true);
        jDataValidadeTerceiraDose.setEnabled(!true);
        jDataReforco.setEnabled(!true);
        jLoteReforco.setEnabled(!true);
        jDataValidadeReforco.setEnabled(!true);
        //
        jBtPesqVacina.setEnabled(!true);
        jBtNovaVacina.setEnabled(true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void CancelarVacina() {
        jRegistroVacina.setText("");
        jCategoriaVacina.setText("");
        jIdVacina.setText("");
        jDescricaoVacina.setText("");
        jDataPrimeiraDose.setDate(null);
        jLotePrimeiraDose.setText("");
        jDataValidadePrimeiraDose.setDate(null);
        jDataSegundaDose.setDate(null);
        jLoteSegundaDose.setText("");
        jDataValidadeSegundaDose.setDate(null);
        jDataTerceiraDose.setDate(null);
        jLoteTerceiraDose.setText("");
        jDataValidadeTerceiraDose.setDate(null);
        jDataReforco.setDate(null);
        jLoteReforco.setText("");
        jDataValidadeReforco.setDate(null);
        //
        jDataPrimeiraDose.setEnabled(!true);
        jLotePrimeiraDose.setEnabled(!true);
        jDataValidadePrimeiraDose.setEnabled(!true);
        jDataSegundaDose.setEnabled(!true);
        jLoteSegundaDose.setEnabled(!true);
        jDataValidadeSegundaDose.setEnabled(!true);
        jDataTerceiraDose.setEnabled(!true);
        jLoteTerceiraDose.setEnabled(!true);
        jDataValidadeTerceiraDose.setEnabled(!true);
        jDataReforco.setEnabled(!true);
        jLoteReforco.setEnabled(!true);
        jDataValidadeReforco.setEnabled(!true);
        //
        jBtPesqVacina.setEnabled(!true);
        jBtNovaVacina.setEnabled(true);
        jBtAlterarVacina.setEnabled(!true);
        jBtExcluirVacina.setEnabled(!true);
        jBtSalvarVacina.setEnabled(!true);
        jBtCancelarVacina.setEnabled(!true);
        jBtAuditoriaVacina.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataReg.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoVacina.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void buscarCodigoVacina() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CARTILHA_VACINAS_INTERNOS");
            conecta.rs.last();
            jRegistroVacina.setText(conecta.rs.getString("IdItemCart"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void preencherTabelaItensCartaoVacinas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Descrição da Vacina", "1ª Dose", "2ª Dose", "3ª Dose", "Reforço"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                data1 = conecta.rs.getString("Data1Dose");
                String dia1 = data1.substring(8, 10);
                String mes1 = data1.substring(5, 7);
                String ano1 = data1.substring(0, 4);
                data1 = dia1 + "/" + mes1 + "/" + ano1;
                //
                data2 = conecta.rs.getString("Data2Dose");
                if (data2 != null) {
                    String dia2 = data2.substring(8, 10);
                    String mes2 = data2.substring(5, 7);
                    String ano2 = data2.substring(0, 4);
                    data2 = dia2 + "/" + mes2 + "/" + ano2;
                }
                //
                data3 = conecta.rs.getString("Data3Dose");
                if (data3 != null) {
                    String dia3 = data3.substring(8, 10);
                    String mes3 = data3.substring(5, 7);
                    String ano3 = data3.substring(0, 4);
                    data3 = dia3 + "/" + mes3 + "/" + ano3;
                }
                //
                dataRef = conecta.rs.getString("DataReforco");
                if (dataRef != null) {
                    String diaRef = dataRef.substring(8, 10);
                    String mesRef = dataRef.substring(5, 7);
                    String anoRef = dataRef.substring(0, 4);
                    dataRef = diaRef + "/" + mesRef + "/" + anoRef;
                }
                //
                dados.add(new Object[]{conecta.rs.getInt("IdItemCart"), conecta.rs.getString("DescricaoVacina"), data1, data2, data3, dataRef});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaCartaoVacina.setModel(modelo);
        jTabelaCartaoVacina.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaCartaoVacina.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaCartaoVacina.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(3).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(4).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(5).setResizable(false);
        jTabelaCartaoVacina.getTableHeader().setReorderingAllowed(false);
        jTabelaCartaoVacina.setAutoResizeMode(jTabelaCartaoVacina.AUTO_RESIZE_OFF);
        jTabelaCartaoVacina.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaCartaoVacina();
        conecta.desconecta();
    }

    public void limparTabelaItensCartaoVacina() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Descrição da Vacina", "1ª Dose", "2ª Dose", "3ª Dose", "Reforço"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaCartaoVacina.setModel(modelo);
        jTabelaCartaoVacina.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaCartaoVacina.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaCartaoVacina.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(3).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(4).setResizable(false);
        jTabelaCartaoVacina.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaCartaoVacina.getColumnModel().getColumn(5).setResizable(false);
        jTabelaCartaoVacina.getTableHeader().setReorderingAllowed(false);
        jTabelaCartaoVacina.setAutoResizeMode(jTabelaCartaoVacina.AUTO_RESIZE_OFF);
        jTabelaCartaoVacina.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaCartaoVacina() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaCartaoVacina.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaCartaoVacina.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaCartaoVacina.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaCartaoVacina.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaCartaoVacina.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void preencherTabelaCartaoVacinas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome Completo do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data de emissão
                dataEmissao = conecta.rs.getString("DataCart");
                String dia = dataEmissao.substring(8, 10);
                String mes = dataEmissao.substring(5, 7);
                String ano = dataEmissao.substring(0, 4);
                dataEmissao = dia + "/" + mes + "/" + ano;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdCart"), dataEmissao, conecta.rs.getString("StatusCart"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaCalendarioVacinas.setModel(modelo);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaCalendarioVacinas.getTableHeader().setReorderingAllowed(false);
        jTabelaCalendarioVacinas.setAutoResizeMode(jTabelaCalendarioVacinas.AUTO_RESIZE_OFF);
        jTabelaCalendarioVacinas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome Completo do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaCalendarioVacinas.setModel(modelo);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaCalendarioVacinas.getTableHeader().setReorderingAllowed(false);
        jTabelaCalendarioVacinas.setAutoResizeMode(jTabelaCalendarioVacinas.AUTO_RESIZE_OFF);
        jTabelaCalendarioVacinas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaCalendarioVacinas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaCalendarioVacinas.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jCodRegistro.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog1() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jCodRegistro.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserENF = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserENF + "'");
            conecta.rs.first();
            codigoUserGroupENF = conecta.rs.getInt("IdUsuario");
            codigoGrupo = conecta.rs.getInt("IdGrupo");
            nomeGrupo = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserENF + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoENF = conecta.rs.getInt("IdUsuario");
            codAbrirENF = conecta.rs.getInt("Abrir");
            codIncluirENF = conecta.rs.getInt("Incluir");
            codAlterar = conecta.rs.getInt("Alterar");
            codExcluir = conecta.rs.getInt("Excluir");
            codGravar = conecta.rs.getInt("Gravar");
            codConsultar = conecta.rs.getInt("Consultar");
            nomeTela = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
