/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleDeposito;
import gestor.Controle.ControleDepositoInativo;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleSaldoDeposito;
import gestor.Controle.ControleSaldoDepositoInativos;
import gestor.Controle.ControleSaldoSaque;
import gestor.Controle.ControleSaque;
import gestor.Controle.ControleSaqueInativos;
import gestor.Controle.ControleTransferenciaValores;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosNum;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ConsultaSaldoInternos;
import gestor.Modelo.DepositoInterno;
import gestor.Modelo.LogSistema;
import gestor.Modelo.SaqueValores;
import gestor.Modelo.TransferenciaValores;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloFinanceiro.codGravar;
import static gestor.Visao.TelaModuloFinanceiro.codIncluir;
import static gestor.Visao.TelaModuloFinanceiro.codUserAcesso;
import static gestor.Visao.TelaModuloFinanceiro.codigoUser;
import static gestor.Visao.TelaModuloFinanceiro.nomeGrupo;
import static gestor.Visao.TelaModuloFinanceiro.nomeTela;
import static gestor.Visao.TelaModuloFinanceiro.telaTransferenciaValores;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaTransferenciaValoresInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    TransferenciaValores objTransVal = new TransferenciaValores();
    ControleTransferenciaValores control = new ControleTransferenciaValores();
    ConsultaSaldoInternos objSaldo = new ConsultaSaldoInternos();
    ControleSaldoSaque controle = new ControleSaldoSaque();
    //   
    ControleSaqueInativos controlSaquIna = new ControleSaqueInativos();
    //
    SaqueValores objSaque = new SaqueValores();
    ControleSaque controleSaque = new ControleSaque();
    //
    ControleSaldoDepositoInativos controleIna = new ControleSaldoDepositoInativos();
    ControleDepositoInativo controlDPI = new ControleDepositoInativo();
    //
    DepositoInterno objDeposito = new DepositoInterno();
    ControleDeposito controlDep = new ControleDeposito();

    ControleSaldoDeposito controleSaldoDep = new ControleSaldoDeposito();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Controle Valores:TransferenciaValoresInativos:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String dataInicial, dataFinal, dataSaq, dataLanc;
    String caminho;
    String statusLanc = "ABERTO";
    //
    int flag, acao;
    int count = 0;
    //
    double valorSaldo = 0;
    double valorTrans = 0;
    //
    String movStatus = "D";
    String movTrans = "C";
    // VALORES ATUAIS
    double saldoAtual = 0;
    double totalGeral = 0;
    float totalTransIna = 0;
    // VALORES ANTERIORES
    double saldoAnterior = 0;
    double valorAnterior = 0;
    double totalGeralAnterior = 0;
    //
    String motivoSaidaValor = "TRANSFERÊNCIA";
    String statusSaque = "FINALIZADO";
    //
    double saldoLiquido = 0;
    String tipoTrans = "TA";

    /**
     * Creates new form TelaTransferenciaValoresInternos
     */
    public TelaTransferenciaValoresInternos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jIdPesqDep = new javax.swing.JTextField();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDataDep = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaDeposito = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jStatusLanc = new javax.swing.JTextField();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jIdInternoCrc = new javax.swing.JTextField();
        jNomeInternoCrc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSaldoContaAtiva = new javax.swing.JFormattedTextField();
        jValorTransferencia = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jSituacao = new javax.swing.JTextField();
        jBtPesquisarInterno = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxTipoTransferencia = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMotivo = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jFotoInterno = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Transferência de Valores de Internos Ativos par a Inativos :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Código:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Interno:");

        jIdPesqDep.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPesqDep.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Dt. Inicial:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Dt. Final:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDataDep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDataDep.setContentAreaFilled(false);
        jBtPesqDataDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataDepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqDataDep, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jIdPesqDep, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(jIdPesqDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDataDep))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaDeposito.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaDeposito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Status", "Data", "Nome do Interno"
            }
        ));
        jTabelaDeposito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaDepositoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaDeposito);

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(204, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jStatusLanc.setEnabled(false);

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome do Interno");

        jIdInternoCrc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrc.setEnabled(false);

        jNomeInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoCrc.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Saldo Conta Ativa");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("Valor a Transferir");

        jSaldoContaAtiva.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSaldoContaAtiva.setForeground(new java.awt.Color(204, 0, 0));
        jSaldoContaAtiva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jSaldoContaAtiva.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jSaldoContaAtiva.setEnabled(false);
        jSaldoContaAtiva.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jValorTransferencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorTransferencia.setForeground(new java.awt.Color(0, 0, 255));
        jValorTransferencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorTransferencia.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        jValorTransferencia.setEnabled(false);
        jValorTransferencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Situação na Unidade");

        jSituacao.setEditable(false);
        jSituacao.setBackground(new java.awt.Color(255, 255, 255));
        jSituacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jSituacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSituacao.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jSituacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSituacaoActionPerformed(evt);
            }
        });

        jBtPesquisarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarInterno.setToolTipText("Pesquisar Interno");
        jBtPesquisarInterno.setContentAreaFilled(false);
        jBtPesquisarInterno.setEnabled(false);
        jBtPesquisarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarInternoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Tipo Transferência");

        jComboBoxTipoTransferencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoTransferencia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo para Inativo", "Inativo para Ativo" }));
        jComboBoxTipoTransferencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoTransferencia.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jStatusLanc, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jBtPesquisarInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jSaldoContaAtiva, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jValorTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxTipoTransferencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNomeInternoCrc)
                            .addComponent(jLabel5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdInternoCrc, jIdLanc});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSaldoContaAtiva, jValorTransferencia});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisarInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9))
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jSaldoContaAtiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jValorTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTipoTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Motivo");

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jMotivo.setColumns(20);
        jMotivo.setRows(5);
        jMotivo.setEnabled(false);
        jScrollPane1.setViewportView(jMotivo);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jBtSalvar)
            .addComponent(jBtCancelar)
            .addComponent(jBtSair)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtCancelar, jBtNovo, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jFotoInterno.setToolTipText("Foto Interno");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(579, 579, 579))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(350, 60, 596, 422);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIdPesqDep.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para ser pesquisado.");
        } else {
            preencherTabelaDeposito("SELECT * FROM TRANSFERENCIA_VALORES_INATIVOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON TRANSFERENCIA_VALORES_INATIVOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdLanc='" + jIdPesqDep.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome para pesquisa.");
        } else {
            preencherTabelaDeposito("SELECT * FROM TRANSFERENCIA_VALORES_INATIVOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON TRANSFERENCIA_VALORES_INATIVOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaDeposito("SELECT * FROM TRANSFERENCIA_VALORES_INATIVOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON TRANSFERENCIA_VALORES_INATIVOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesqDataDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataDepActionPerformed
        // TODO add your handling code here:
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data incial.");
            jDataPesqInicial.requestFocus();
            jDataPesqInicial.setBackground(Color.red);
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final.");
                jDataPesqFinal.requestFocus();
                jDataPesqFinal.setBackground(Color.red);
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Final não pode ser menor que a data inicial.");
                    jDataPesqFinal.requestFocus();
                    jDataPesqFinal.setBackground(Color.red);
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    jTabelaDeposito.setVisible(true);
                    preencherTabelaDeposito("SELECT * FROM TRANSFERENCIA_VALORES_INATIVOS "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON TRANSFERENCIA_VALORES_INATIVOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataDepActionPerformed

    private void jTabelaDepositoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaDepositoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String codigoDep = "" + jTabelaDeposito.getValueAt(jTabelaDeposito.getSelectedRow(), 0);
            jIdPesqDep.setText(codigoDep);
            //
            jBtNovo.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM TRANSFERENCIA_VALORES_INATIVOS "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON TRANSFERENCIA_VALORES_INATIVOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE IdLanc='" + jIdPesqDep.getText() + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                jIdInternoCrc.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInternoCrc.setText(conecta.rs.getString("NomeInternoCrc"));
                jSituacao.setText(conecta.rs.getString("SituacaoCrc"));
                if (jSituacao.getText().equals("ENTRADA NA UNIDADE") || jSituacao.getText().equals("RETORNO A UNIDADE")) {
                    jSituacao.setFont(new Font("Tahoma", Font.BOLD, 11));
                    jSituacao.setBackground(Color.white);
                    jSituacao.setForeground(Color.black);
                    jSituacao.setEditable(false);
                } else {
                    jSituacao.setFont(new Font("Tahoma", Font.BOLD, 11));
                    jSituacao.setBackground(Color.white);
                    jSituacao.setForeground(Color.red);
                    jSituacao.setEditable(false);
                }
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoInterno.setIcon(i);
                jFotoInterno.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_DEFAULT)));
                // Formata o valor para ser exibido na tela no formato BR
                valorSaldo = conecta.rs.getDouble("SaldoContaAtiva");
                DecimalFormat vs = new DecimalFormat("#,##0.00");
                String vlSaldo = vs.format(valorSaldo);
                jSaldoContaAtiva.setText(vlSaldo);
                valorTrans = conecta.rs.getDouble("ValorTransferido");
                DecimalFormat vt = new DecimalFormat("#,##0.00");
                String vlTransferencia = vt.format(valorTrans);
                jComboBoxTipoTransferencia.setSelectedItem(conecta.rs.getString("TipoTransferencia"));
                jMotivo.setText(conecta.rs.getString("Motivo"));
                jValorTransferencia.setText(vlTransferencia);
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados." + e);
            }
        }
    }//GEN-LAST:event_jTabelaDepositoMouseClicked

    private void jBtPesquisarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarInternoActionPerformed
        // TODO add your handling code here:
        if (jComboBoxTipoTransferencia.getSelectedItem().equals("Ativo para Inativo")) {
            TelaPesqInternoTransferenciaValores objPesqInternoIna = new TelaPesqInternoTransferenciaValores();
            TelaModuloFinanceiro.jPainelFinanceiro.add(objPesqInternoIna);
            objPesqInternoIna.show();
        } else if (jComboBoxTipoTransferencia.getSelectedItem().equals("Inativo para Ativo")) {
            TelaPesqInternoTransferenciaValoresInativos objPesqInterno = new TelaPesqInternoTransferenciaValoresInativos();
            TelaModuloFinanceiro.jPainelFinanceiro.add(objPesqInterno);
            objPesqInterno.show();
        }
    }//GEN-LAST:event_jBtPesquisarInternoActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        if (codigoUser == codUserAcesso && nomeTela.equals(telaTransferenciaValores) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            acao = 1;
            limparCampos();
            bloquearBotoes();
            bloquearCampos();
            Novo();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (codigoUser == codUserAcesso && nomeTela.equals(telaTransferenciaValores) && codGravar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            DecimalFormat valorReal = new DecimalFormat("#,##0.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            CalcularSaldo();
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do lançamento.");
            } else if (jIdInternoCrc.getText().equals("") || jNomeInternoCrc.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar um interno para transferência.");
            } else if (jSaldoContaAtiva.getText().equals("") && jComboBoxTipoTransferencia.getSelectedItem().equals("Ativo para Inativo")) {
                JOptionPane.showMessageDialog(rootPane, "O saldo para transferência não pode ser em branco.");
            } else if (jSaldoContaAtiva.getText().equals("0") && jComboBoxTipoTransferencia.getSelectedItem().equals("Ativo para Inativo") || jSaldoContaAtiva.getText().equals("0,00") && jComboBoxTipoTransferencia.getSelectedItem().equals("Ativo para Inativo")) {
                JOptionPane.showMessageDialog(rootPane, "O saldo da conta do interno não pode ser zero.");
            } else if (jValorTransferencia.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "O valor da transferência não pode ser em branco.");
                jValorTransferencia.setBackground(Color.red);
                jValorTransferencia.requestFocus();
            } else {
                objTransVal.setStatusLanc(statusSaque);
                objTransVal.setDataLanc(jDataLanc.getDate());
                objTransVal.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                objTransVal.setNomeInternoCrc(jNomeInternoCrc.getText());
                objTransVal.setTipoTransferencia((String) jComboBoxTipoTransferencia.getSelectedItem());
                objTransVal.setMotivo(jMotivo.getText());
                try {
                    objTransVal.setSaldoContaAtiva(valorReal.parse(jSaldoContaAtiva.getText()).doubleValue());
                    objTransVal.setValorTransferido(valorReal.parse(jValorTransferencia.getText()).doubleValue());
                    objSaque.setValorSaque(valorReal.parse(jValorTransferencia.getText()).floatValue());
                } catch (ParseException ex) {
                }
                if (acao == 1) {
                    if (objTransVal.getValorTransferido() > objTransVal.getSaldoContaAtiva()) {
                        // Formata o valor para ser exibido na tela no formato BR                                                                   
                        DecimalFormat vt = new DecimalFormat("#,##0.00");
                        String vlTransferencia = vt.format(objTransVal.getSaldoContaAtiva());
                        JOptionPane.showMessageDialog(rootPane, "O valor da transferência solicitado é superior ao saldo atual do interno. Valor do Saldo R$ " + vlTransferencia);
                    } else {
                        if (!jSituacao.getText().equals("ENTRADA NA UNIDADE") || !jSituacao.getText().equals("RETORNO A UNIDADE")) {
                            int resposta = JOptionPane.showConfirmDialog(this, "Esse interno não está mais na unidade penal, Deseja continuar?", "Confirmação",
                                    JOptionPane.YES_NO_OPTION);
                            if (resposta == JOptionPane.YES_OPTION) {
                                // log de usuario
                                objTransVal.setUsuarioInsert(nameUser);
                                objTransVal.setDataInsert(dataModFinal);
                                objTransVal.setHorarioInsert(horaMov);
                                //
                                control.incluirTransferencia(objTransVal);
                                buscarCodigo();
                                objLog();
                                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                if (jComboBoxTipoTransferencia.getSelectedItem().equals("Ativo para Inativo")) {
                                    // 
                                    objSaldo.setHistorico(jMotivo.getText());
                                    objSaldo.setDataMov(jDataLanc.getDate());
                                    objSaldo.setFavorecidoDepositante(jNomeInternoCrc.getText());
                                    objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                                    objSaldo.setStatusMov(movStatus);
                                    try {
                                        objSaldo.setSaldo(valorReal.parse(jValorTransferencia.getText()).floatValue());
                                    } catch (ParseException ex) {
                                    }
                                    objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                                    controle.incluirSaldo(objSaldo); // INCLUIR SAQUE NA  TABELA SALDOVALORES
                                    objDeposito();
                                    // CALCULAR SALDO DO INTERNO
                                    totalGeral = saldoAtual + objSaldo.getSaldo();
                                    objSaldo.setSaldoAtual(totalGeral);
                                    controleIna.incluirSaldo(objSaldo); // Incluir deposito na tabela SALDO_VALORES_INATIVOS
                                    // LANÇA DEBITO NA TABELA SAQUE
                                    objSaque.setStatusLanc(statusSaque);
                                    objSaque.setDataLanc(jDataLanc.getDate());
                                    objSaque.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                                    objSaque.setNomeInterno(jNomeInternoCrc.getText());
                                    objSaque.setFavorecido(jNomeInternoCrc.getText());
                                    objSaque.setObservacao(motivoSaidaValor);
                                    controleSaque.incluirSaque(objSaque); // TABELA - SAQUE
                                    // DEPOSITO NA CONTA DOS INATIVOS DEPOSITO_INATIVOS
                                    objDeposito.setStatusLanc(statusSaque);
                                    objDeposito.setDataLanc(jDataLanc.getDate());
                                    try {
                                        objDeposito.setValorDeposito(valorReal.parse(jValorTransferencia.getText()).floatValue());
                                    } catch (ParseException ex) {
                                    }
                                    objDeposito.setDepositante(jNomeInternoCrc.getText());
                                    objDeposito.setObservacao(jMotivo.getText());
                                    objDeposito.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                                    objDeposito.setNomeInterno(jNomeInternoCrc.getText());
                                    controlDPI.incluirDepositos(objDeposito); // TABELA - DEPOSITOS_INATIVOS
                                } else if (jComboBoxTipoTransferencia.getSelectedItem().equals("Inativo para Ativo")) {
                                    // DEBITAR VALOR DO INTERNO ATIVO NA CONTA DOS INATIVOS. TABELA (SAQUE_INATIVOS)
                                    objSaldo.setHistorico(jMotivo.getText());
                                    objSaldo.setDataMov(jDataLanc.getDate());
                                    objSaldo.setFavorecidoDepositante(jNomeInternoCrc.getText());
                                    objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                                    objSaldo.setStatusMov(movTrans); // INCLUIR "C" CREDITO
                                    try {
                                        objSaldo.setSaldo(valorReal.parse(jValorTransferencia.getText()).floatValue());
                                    } catch (ParseException ex) {
                                    }
                                    objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                                    controle.incluirSaldo(objSaldo); // INCLUIR DEPOSITO NA TABELA SALDOVALORES - (ATIVOS)
                                    //
                                    //    
                                    // INCLUIR LANÇAMENTO DE DEPOSITO NA TABELA DEPOSITO DOS ATIVOS
                                    objDeposito.setStatusLanc(statusSaque);
                                    objDeposito.setDataLanc(jDataLanc.getDate());
                                    try {
                                        objDeposito.setValorDeposito(valorReal.parse(jValorTransferencia.getText()).floatValue());
                                    } catch (ParseException ex) {
                                    }
                                    // CALCULA DEPOSITO PARA TABELA SALDOVALORES
                                    totalTransIna = objDeposito.getValorDeposito() + objSaldo.getSaldo();
                                    objSaldo.setSaldo(totalTransIna);
                                    objDeposito.setDepositante(jNomeInternoCrc.getText());
                                    objDeposito.setObservacao(jMotivo.getText());
                                    objDeposito.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                                    objDeposito.setNomeInterno(jNomeInternoCrc.getText());
                                    controlDep.incluirDepositos(objDeposito); // TABELA DE DEPOSITO - (ATIVOS)
                                    // LANÇAMENTO NOS INATIVOS
                                    objDeposito();
                                    // CALCULAR SALDO DO INTERNO
                                    totalGeral = saldoAtual - objSaldo.getSaldo();
                                    objSaldo.setSaldoAtual(totalGeral);
                                    movTrans = "D";
                                    objSaldo.setStatusMov(movTrans); // INCLUIR "D" DÉBITO
                                    controleIna.incluirSaldo(objSaldo); // Incluir deposito na tabela SALDO_VALORES_INATIVOS - (INATIVOS)                           
                                    // LANÇA DEBITO NA TABELA SAQUE_VALORES_INATIVOS
                                    objSaque.setStatusLanc(statusSaque);
                                    objSaque.setDataLanc(jDataLanc.getDate());
                                    objSaque.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                                    objSaque.setNomeInterno(jNomeInternoCrc.getText());
                                    objSaque.setFavorecido(jNomeInternoCrc.getText());
                                    objSaque.setObservacao(motivoSaidaValor);
                                    controlSaquIna.incluirSaqueInativos(objSaque); // TABELA DE SAQUE_INATIVOS - (INATIVOS)                                                                                                     
                                }
                                //
                                bloquearCampos();
                                bloquearBotoes();
                                Salvar();
                                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                            }
                        }
                    }
                }
                // DESATIVADO, BEM COMO A EXCLUSÃO
                if (acao == 2) {
                    if (objTransVal.getValorTransferido() > objTransVal.getSaldoContaAtiva()) {
                        // Formata o valor para ser exibido na tela no formato BR                                                                   
                        DecimalFormat vt = new DecimalFormat("#,##0.00");
                        String vlTransferencia = vt.format(objTransVal.getSaldoContaAtiva());
                        JOptionPane.showMessageDialog(rootPane, "O valor da transferência solicitado é superior ao saldo atual do interno. Valor do Saldo R$ " + vlTransferencia);
                    } else {
                        if (!jSituacao.getText().equals("ENTRADA NA UNIDADE") || !jSituacao.getText().equals("RETORNO A UNIDADE")) {
                            int resposta = JOptionPane.showConfirmDialog(this, "Esse interno não está mais na unidade penal, Deseja continuar?", "Confirmação",
                                    JOptionPane.YES_NO_OPTION);
                            if (resposta == JOptionPane.YES_OPTION) {
                                // log de usuario
                                objTransVal.setUsuarioUp(nameUser);
                                objTransVal.setDataUp(dataModFinal);
                                objTransVal.setHorarioUp(horaMov);
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jSituacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSituacaoActionPerformed
        // TODO add your handling code here:
        if (jSituacao.getText().equals("ENTRADA NA UNIDADE") || jSituacao.getText().equals("RETORNO A UNIDADE")) {
            jSituacao.setBackground(Color.white);
            jSituacao.setForeground(Color.black);
        }
    }//GEN-LAST:event_jSituacaoActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaTransferenciaInativos objAudiTrans = new TelaAuditoriaTransferenciaInativos();
        TelaModuloFinanceiro.jPainelFinanceiro.add(objAudiTrans);
        objAudiTrans.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqDataDep;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesquisarInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxTipoTransferencia;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JLabel jFotoInterno;
    public static javax.swing.JTextField jIdInternoCrc;
    public static javax.swing.JTextField jIdLanc;
    private javax.swing.JTextField jIdPesqDep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextArea jMotivo;
    public static javax.swing.JTextField jNomeInternoCrc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesqNomeInterno;
    public static javax.swing.JFormattedTextField jSaldoContaAtiva;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField jSituacao;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaDeposito;
    private javax.swing.JFormattedTextField jValorTransferencia;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jMotivo.setLineWrap(true);
        jMotivo.setWrapStyleWord(true);
        jValorTransferencia.setDocument(new LimiteDigitosNum(15));
    }

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jComboBoxTipoTransferencia.setBackground(Color.white);
        jIdInternoCrc.setBackground(Color.white);
        jSituacao.setBackground(Color.white);
        jNomeInternoCrc.setBackground(Color.white);
        jSaldoContaAtiva.setBackground(Color.white);
        jValorTransferencia.setBackground(Color.white);
        jMotivo.setBackground(Color.white);
    }

    public void limparCampos() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jDataLanc.setDate(null);
        jIdInternoCrc.setText("");
        jFotoInterno.setIcon(null);
        jComboBoxTipoTransferencia.setSelectedItem("Ativo para Inativo");
        jSituacao.setText("");
        jNomeInternoCrc.setText("");
        jSaldoContaAtiva.setText("");
        jValorTransferencia.setText("");
        jMotivo.setText("");
    }

    public void bloquearCampos() {
        jIdLanc.setEnabled(!true);
        jStatusLanc.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jIdInternoCrc.setEnabled(!true);
        jSituacao.setEnabled(!true);
        jNomeInternoCrc.setEnabled(!true);
        jSaldoContaAtiva.setEnabled(!true);
        jValorTransferencia.setEnabled(!true);
        jComboBoxTipoTransferencia.setEnabled(!true);
        jMotivo.setEnabled(!true);
    }

    public void bloquearBotoes() {
        jBtPesquisarInterno.setEnabled(!true);
        jBtNovo.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Novo() {
        jStatusLanc.setText("ABERTO");
        jDataLanc.setCalendar(Calendar.getInstance());
        //
        jDataLanc.setEnabled(!true);
        jComboBoxTipoTransferencia.setEnabled(true);
        jValorTransferencia.setEnabled(true);
        jMotivo.setEnabled(true);
        //
        jBtPesquisarInterno.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        jDataLanc.setEnabled(!true);
        jComboBoxTipoTransferencia.setEnabled(true);
        jValorTransferencia.setEnabled(true);
        jMotivo.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        jBtNovo.setEnabled(true);
    }

    public void Salvar() {
        jStatusLanc.setText("FINALIZADO");
        jBtNovo.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            limparCampos();
            bloquearCampos();
            bloquearBotoes();
            jBtNovo.setEnabled(true);
        } else {
            bloquearCampos();
            bloquearBotoes();
            jBtNovo.setEnabled(true);
            jBtAuditoria.setEnabled(true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM TRANSFERENCIA_VALORES_INATIVOS");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdLanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void objDeposito() {
        DecimalFormat valorReal = new DecimalFormat("###,##00.0");
        valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
        objSaldo.setHistorico(jMotivo.getText());
        objSaldo.setDataMov(jDataLanc.getDate());
        objSaldo.setFavorecidoDepositante(jNomeInternoCrc.getText());
        objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
        objSaldo.setStatusMov(movTrans);
        try {
            objSaldo.setSaldo(valorReal.parse(jValorTransferencia.getText()).floatValue());
        } catch (ParseException ex) {
        }
        objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
    }

    public void CalcularSaldo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SALDO_VALORES_INATIVOS "
                    + "WHERE IdInternoCrc='" + jIdInternoCrc.getText() + "'");
            conecta.rs.last();
            saldoAtual = conecta.rs.getDouble("SaldoAtual");
            valorAnterior = conecta.rs.getDouble("ValorMov");
            saldoAnterior = conecta.rs.getDouble("SaldoAtual");
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void buscarSaldoAnterior() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SALDO_VALORES_INATIVOS "
                    + "WHERE IdInternoCrc='" + jIdInternoCrc.getText() + "'");
            conecta.rs.last();
            valorAnterior = conecta.rs.getDouble("ValorMov");
            saldoAnterior = conecta.rs.getDouble("SaldoAtual");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaDeposito(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", " Data", "Nome do Interno"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Deposito
                dataLanc = conecta.rs.getString("DataLanc");
                String dia = dataLanc.substring(8, 10);
                String mes = dataLanc.substring(5, 7);
                String ano = dataLanc.substring(0, 4);
                dataLanc = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), conecta.rs.getString("StatusLanc"), dataLanc, conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDeposito.setModel(modelo);
        jTabelaDeposito.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaDeposito.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDeposito.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaDeposito.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDeposito.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaDeposito.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDeposito.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaDeposito.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDeposito.getTableHeader().setReorderingAllowed(false);
        jTabelaDeposito.setAutoResizeMode(jTabelaDeposito.AUTO_RESIZE_OFF);
        jTabelaDeposito.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", " Data", "Nome do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDeposito.setModel(modelo);
        jTabelaDeposito.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaDeposito.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDeposito.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaDeposito.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDeposito.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaDeposito.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDeposito.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaDeposito.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDeposito.getTableHeader().setReorderingAllowed(false);
        jTabelaDeposito.setAutoResizeMode(jTabelaDeposito.AUTO_RESIZE_OFF);
        jTabelaDeposito.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaDeposito.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaDeposito.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaDeposito.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
