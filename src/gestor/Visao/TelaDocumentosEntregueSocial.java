/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleDevolucaoDocumentos;
import gestor.Controle.ControleDocumentosInternos;
import gestor.Controle.ControleLogSistema;
import static gestor.Controle.ControleVisitaInterno.count;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.DocumentosInternos;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxCNH;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxCPF;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxCTPS;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxCertidaoCasa;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxCertidaoNasc;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxRG;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxReservista;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxStatus;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxTitulo;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jDataLanc;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jIdInterno;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jNomeInterno;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jIdLanc;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import static gestor.Visao.TelaDocumetosInternosServicoSocial.jComboBoxPassaporteDoc;

/**
 *
 * @author ronaldo
 */
public class TelaDocumentosEntregueSocial extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    DocumentosInternos objDocInternos = new DocumentosInternos();
    ControleDevolucaoDocumentos control = new ControleDevolucaoDocumentos();
    ControleDocumentosInternos controle = new ControleDocumentosInternos();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Serviço Social:Devolução de Documentos de Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String dataEntrada;
    //
    int flag;
    int acao;
    //
    String codigoDocumento;
    //
    String codigoRG = "Dev";
    String codigoCPF = "Dev";
    String codigoCNH = "Dev";
    String codigoTitulo = "Dev";
    String codigoPassaporte = "Dev";
    String codigoCTPS = "Dev";
    String codigoCN = "Dev";
    String codigoCC = "Dev";
    String codigoReservista = "Dev";

    /**
     * Creates new form TelaDocumentosEntregueSocial
     */
    public static TelaDocumetosInternosServicoSocial documentosInternos;

    public TelaDocumentosEntregueSocial(TelaDocumetosInternosServicoSocial parent, boolean modal) {
        this.documentosInternos = parent;
        this.setModal(modal);
        setLocationRelativeTo(documentosInternos);
        initComponents();
        corCampos();
        buscarRegistroDocumentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDataDevolucao = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxDocumento = new javax.swing.JComboBox();
        jIdRegistro = new javax.swing.JTextField();
        jNomeInternoDevolucao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jHorario = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jMotivoDevolucao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaDocumentos = new javax.swing.JTable();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jBtSair = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Devolução de Documentos :::...");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Data Devolução");

        jDataDevolucao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataDevolucao.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Documento");

        jComboBoxDocumento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxDocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Registro Geral -  (R.G.)", "Cadastro de Pessoa Fisica - (C.P.F.)", "Carteira Nacional de Habilitação - (C.N.H.)", "Carteira de Reservista", "Carteira de Trabalho e Previdência Social - (C.T.P.S)", "Titulo de Eleitor", "Passaporte", "Certidão de Nascimento", "Certidão de Casamento" }));
        jComboBoxDocumento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxDocumento.setEnabled(false);

        jIdRegistro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdRegistro.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jIdRegistro.setEnabled(false);

        jNomeInternoDevolucao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoDevolucao.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jNomeInternoDevolucao.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome do Interno");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Horário");

        jHorario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorario.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jHorario.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Motivo");

        jMotivoDevolucao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMotivoDevolucao.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInternoDevolucao)
                    .addComponent(jComboBoxDocumento, 0, 357, Short.MAX_VALUE)
                    .addComponent(jMotivoDevolucao)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMotivoDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaDocumentos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaDocumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Item", "Data Dev.", "Documento"
            }
        ));
        jTabelaDocumentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaDocumentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaDocumentos);
        if (jTabelaDocumentos.getColumnModel().getColumnCount() > 0) {
            jTabelaDocumentos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaDocumentos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaDocumentos.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaDocumentos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaDocumentos.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaDocumentos.getColumnModel().getColumn(2).setMaxWidth(250);
        }

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo registro");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar registro");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir registro");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar registro");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar operação");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair da tela");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        corCampos();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        acao = 2;
        Alterar();
        corCampos();
        statusMov = "Alterou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir registro selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objDocInternos.setCodigoRegistro(Integer.valueOf(jIdRegistro.getText()));
            control.excluirDevolucaoDocumentos(objDocInternos);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            Excluir();
            preencherTabelaDocumentos("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL "
                    + "INNER JOIN DOCINTERNOS "
                    + "ON DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc=DOCINTERNOS.IdDoc "
                    + "WHERE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc='" + jIdLanc.getText() + "'");
            JOptionPane.showMessageDialog(rootPane, "Registro excluido com sucesso.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (jDataDevolucao.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data de devolução do documentos.");
        } else if (jComboBoxDocumento.getSelectedItem().equals("Selecione...")) {
            JOptionPane.showMessageDialog(rootPane, "Informe qual documento irá ser devolvido ao interno.");
        } else {
            objDocInternos.setDataDevolucaoDoc(jDataDevolucao.getDate());
            objDocInternos.setHorario(jHorario.getText());
            objDocInternos.setTipoDocumento((String) jComboBoxDocumento.getSelectedItem());
            objDocInternos.setIdDoc(Integer.valueOf(jIdLanc.getText()));
            objDocInternos.setMotivoDevolucao(jMotivoDevolucao.getText());
            objDocInternos.setIdDoc(Integer.valueOf(jIdLanc.getText()));
            if (acao == 1) {
                // Log do Sistema
                objDocInternos.setUsuarioInsert(nameUser);
                objDocInternos.setDataInsert(jDataSistema.getText());
                objDocInternos.setHorarioInsert(jHoraSistema.getText());
                //
                control.incluirDevolucaoDocumentos(objDocInternos);
                buscarCodigo();
                // 
                if (jComboBoxDocumento.getSelectedItem().equals("Registro Geral -  (R.G.)")) {
                    objDocInternos.setRgDoc(codigoRG);
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Cadastro de Pessoa Fisica - (C.P.F.)")) {
                    objDocInternos.setCpfDoc(codigoCPF);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Carteira Nacional de Habilitação - (C.N.H.)")) {
                    objDocInternos.setCnhDoc(codigoCNH);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Carteira de Reservista")) {
                    objDocInternos.setReservistaDoc(codigoReservista);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Carteira de Trabalho e Previdência Social - (C.T.P.S)")) {
                    objDocInternos.setCtpsDoc(codigoCTPS);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Titulo de Eleitor")) {
                    objDocInternos.setTituloDoc(codigoTitulo);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Passaporte")) {
                    objDocInternos.setOutrosDoc(codigoPassaporte);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Certidão de Nascimento")) {
                    objDocInternos.setcNascimentoDoc(codigoCN);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Certidão de Casamento")) {
                    objDocInternos.setcCasamentoDoc(codigoCC);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                }
                objDocInternos.setStatusDoc((String) jComboBoxStatus.getSelectedItem());
                objDocInternos.setDataDoc(jDataLanc.getDate());
                objDocInternos.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
                objDocInternos.setNomeInterno(jNomeInterno.getText());
                objDocInternos.setIdDoc(Integer.valueOf(jIdLanc.getText()));
                controle.alterarDocumentosInternos(objDocInternos);
                //
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                preencherTabelaDocumentos("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL "
                        + "INNER JOIN DOCINTERNOS "
                        + "ON DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc=DOCINTERNOS.IdDoc "
                        + "WHERE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc='" + jIdLanc.getText() + "'");
                JOptionPane.showMessageDialog(null, "Registro gravado com sucesso!!!");

            }
            if (acao == 2) {
                // Log do Sistema
                objDocInternos.setUsuarioUp(nameUser);
                objDocInternos.setDataUp(jDataSistema.getText());
                objDocInternos.setHorarioUp(jHoraSistema.getText());
                //
                objDocInternos.setCodigoRegistro(Integer.valueOf(jIdRegistro.getText()));
                control.alterarDevolucaoDocumentos(objDocInternos);
                //
                if (jComboBoxDocumento.getSelectedItem().equals("Registro Geral -  (R.G.)")) {
                    objDocInternos.setRgDoc(codigoRG);
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Cadastro de Pessoa Fisica - (C.P.F.)")) {
                    objDocInternos.setCpfDoc(codigoCPF);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Carteira Nacional de Habilitação - (C.N.H.)")) {
                    objDocInternos.setCnhDoc(codigoCNH);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Carteira de Reservista")) {
                    objDocInternos.setReservistaDoc(codigoReservista);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Carteira de Trabalho e Previdência Social - (C.T.P.S)")) {
                    objDocInternos.setCtpsDoc(codigoCTPS);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Titulo de Eleitor")) {
                    objDocInternos.setTituloDoc(codigoTitulo);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Passaporte")) {
                    objDocInternos.setOutrosDoc(codigoPassaporte);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Certidão de Nascimento")) {
                    objDocInternos.setcNascimentoDoc(codigoCN);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcCasamentoDoc((String) jComboBoxCertidaoCasa.getSelectedItem());
                } else if (jComboBoxDocumento.getSelectedItem().equals("Certidão de Casamento")) {
                    objDocInternos.setcCasamentoDoc(codigoCC);
                    objDocInternos.setRgDoc((String) jComboBoxRG.getSelectedItem());
                    objDocInternos.setCpfDoc((String) jComboBoxCPF.getSelectedItem());
                    objDocInternos.setCnhDoc((String) jComboBoxCNH.getSelectedItem());
                    objDocInternos.setTituloDoc((String) jComboBoxTitulo.getSelectedItem());
                    objDocInternos.setOutrosDoc((String) jComboBoxPassaporteDoc.getSelectedItem());
                    objDocInternos.setReservistaDoc((String) jComboBoxReservista.getSelectedItem());
                    objDocInternos.setCtpsDoc((String) jComboBoxCTPS.getSelectedItem());
                    objDocInternos.setcNascimentoDoc((String) jComboBoxCertidaoNasc.getSelectedItem());
                }
                objDocInternos.setStatusDoc((String) jComboBoxStatus.getSelectedItem());
                objDocInternos.setDataDoc(jDataLanc.getDate());
                objDocInternos.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
                objDocInternos.setNomeInterno(jNomeInterno.getText());
                objDocInternos.setIdDoc(Integer.valueOf(jIdLanc.getText()));
                controle.alterarDocumentosInternos(objDocInternos);
                //
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                preencherTabelaDocumentos("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL "
                        + "INNER JOIN DOCINTERNOS "
                        + "ON DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc=DOCINTERNOS.IdDoc "
                        + "WHERE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc='" + jIdLanc.getText() + "'");
                JOptionPane.showMessageDialog(null, "Registro gravado com sucesso!!!");
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jTabelaDocumentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaDocumentosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idLanc = "" + jTabelaDocumentos.getValueAt(jTabelaDocumentos.getSelectedRow(), 0);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL "
                        + "INNER JOIN DOCINTERNOS "
                        + "ON DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc=DOCINTERNOS.IdDoc "
                        + "WHERE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc='" + jIdLanc.getText() + "' "
                        + "AND IdRegistro='" + idLanc + "'");
                conecta.rs.first();
                jIdRegistro.setText(String.valueOf(conecta.rs.getInt("IdRegistro")));
                jDataDevolucao.setDate(conecta.rs.getDate("DataDevolucao"));
                jHorario.setText(conecta.rs.getString("Horario"));
                jNomeInternoDevolucao.setText(jNomeInterno.getText());
                jComboBoxDocumento.setSelectedItem(conecta.rs.getString("Documento"));
                jMotivoDevolucao.setText(conecta.rs.getString("MotivoDevolucao"));
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados...\nERRO: " + e);
            }
        }
    }//GEN-LAST:event_jTabelaDocumentosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDocumentosEntregueSocial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDocumentosEntregueSocial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDocumentosEntregueSocial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDocumentosEntregueSocial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaDocumentosEntregueSocial dialog = new TelaDocumentosEntregueSocial(documentosInternos, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JComboBox jComboBoxDocumento;
    private com.toedter.calendar.JDateChooser jDataDevolucao;
    private javax.swing.JFormattedTextField jHorario;
    private javax.swing.JTextField jIdRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JTextField jMotivoDevolucao;
    private javax.swing.JTextField jNomeInternoDevolucao;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTabelaDocumentos;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdRegistro.setBackground(Color.white);
        jDataDevolucao.setBackground(Color.white);
        jHorario.setBackground(Color.white);
        jNomeInternoDevolucao.setBackground(Color.white);
        jComboBoxDocumento.setBackground(Color.white);
        jMotivoDevolucao.setBackground(Color.white);
    }

    public void Novo() {
        jIdRegistro.setText("");
        jDataDevolucao.setCalendar(Calendar.getInstance());
        jHorario.setText(jHoraSistema.getText());
        jNomeInternoDevolucao.setText(jNomeInterno.getText());
        jComboBoxDocumento.setSelectedItem("Selecione...");
        jMotivoDevolucao.setText("");
        //
        jDataDevolucao.setEnabled(true);
        jComboBoxDocumento.setEnabled(true);
        jMotivoDevolucao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        jDataDevolucao.setEnabled(true);
        jComboBoxDocumento.setEnabled(true);
        jMotivoDevolucao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        jIdRegistro.setText("");
        jDataDevolucao.setDate(null);
        jHorario.setText("");
        jNomeInternoDevolucao.setText("");
        jComboBoxDocumento.setSelectedItem("Selecione...");
        jMotivoDevolucao.setText("");
        //
        jDataDevolucao.setEnabled(!true);
        jComboBoxDocumento.setEnabled(!true);
        jMotivoDevolucao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Salvar() {
        jIdRegistro.setText("");
        jDataDevolucao.setDate(null);
        jHorario.setText("");
        jNomeInternoDevolucao.setText("");
        jComboBoxDocumento.setSelectedItem("Selecione...");
        jMotivoDevolucao.setText("");
        //
        jDataDevolucao.setEnabled(!true);
        jComboBoxDocumento.setEnabled(!true);
        jMotivoDevolucao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIdRegistro.getText().equals("")) {
            jDataDevolucao.setDate(null);
            jHorario.setText("");
            jNomeInternoDevolucao.setText("");
            jComboBoxDocumento.setSelectedItem("Selecione...");
            jMotivoDevolucao.setText("");
            //
            jDataDevolucao.setEnabled(!true);
            jComboBoxDocumento.setEnabled(!true);
            jMotivoDevolucao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
        } else {
            jDataDevolucao.setEnabled(!true);
            jComboBoxDocumento.setEnabled(!true);
            jMotivoDevolucao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL");
            conecta.rs.last();
            jIdRegistro.setText(conecta.rs.getString("IdRegistro"));
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaDocumentos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Dev.", "Documento"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataDevolucao");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdRegistro"), dataEntrada, conecta.rs.getString("Documento")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe dados a ser exibido!!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDocumentos.setModel(modelo);
        jTabelaDocumentos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaDocumentos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDocumentos.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaDocumentos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDocumentos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaDocumentos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDocumentos.getTableHeader().setReorderingAllowed(false);
        jTabelaDocumentos.setAutoResizeMode(jTabelaDocumentos.AUTO_RESIZE_OFF);
        jTabelaDocumentos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Dev.", "Documento"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDocumentos.setModel(modelo);
        jTabelaDocumentos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaDocumentos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDocumentos.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaDocumentos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDocumentos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaDocumentos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDocumentos.getTableHeader().setReorderingAllowed(false);
        jTabelaDocumentos.setAutoResizeMode(jTabelaDocumentos.AUTO_RESIZE_OFF);
        jTabelaDocumentos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void buscarRegistroDocumentos() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL "
                    + "WHERE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codigoDocumento = conecta.rs.getString("IdDoc");
        } catch (Exception e) {
        }
        if (codigoDocumento != null) {
            preencherTabelaDocumentos("SELECT * FROM DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL "
                    + "INNER JOIN DOCINTERNOS "
                    + "ON DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc=DOCINTERNOS.IdDoc "
                    + "WHERE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL.IdDoc='" + jIdLanc.getText() + "'");
        }
        conecta.desconecta();
    }

    public void alinharCamposTabela() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaDocumentos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaDocumentos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
