/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import static gestor.Visao.TelaDepositoBancarioInativos.jDataEntrada;
import static gestor.Visao.TelaDepositoBancarioInativos.jFotoInternoDepFin;
import static gestor.Visao.TelaDepositoBancarioInativos.jIdInternoDepFin;
import static gestor.Visao.TelaDepositoBancarioInativos.jNomeInternoDepFin;
import static gestor.Visao.TelaDepositoBancarioInativos.jSituacao;
import static gestor.Visao.TelaDepositoBancarioInativos.jValorCredito;
import static gestor.Visao.TelaDepositoBancarioInativos.origemDeposito;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaPesqDepositoPortariaInativos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    String dataDeposito;
    double valorDeposito = 0;
    int flag;
    String efetuado = "Não";
    public static int idItem;
    String caminho;

    /**
     * Creates new form TelaPesqDepositoPortaria
     */
    public TelaPesqDepositoPortariaInativos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaDepositoInternos = new javax.swing.JTable();
        jBtEnviar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        setClosable(true);
        setTitle("...::: Pesquisa de Depósitos :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Nome:");

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesqNomeInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxTodos)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jCheckBoxTodos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaDepositoInternos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaDepositoInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Nome do Interno", "Valor R$", "Data"
            }
        ));
        jTabelaDepositoInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaDepositoInternosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaDepositoInternos);
        if (jTabelaDepositoInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaDepositoInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaDepositoInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaDepositoInternos.getColumnModel().getColumn(1).setMinWidth(60);
            jTabelaDepositoInternos.getColumnModel().getColumn(1).setMaxWidth(60);
            jTabelaDepositoInternos.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaDepositoInternos.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaDepositoInternos.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaDepositoInternos.getColumnModel().getColumn(3).setMaxWidth(100);
            jTabelaDepositoInternos.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaDepositoInternos.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        jBtEnviar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtEnviar.setForeground(new java.awt.Color(0, 0, 255));
        jBtEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtEnviar.setText("Enviar");
        jBtEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarActionPerformed(evt);
            }
        });

        jBtSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSair.setForeground(new java.awt.Color(255, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtEnviar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtEnviar)
                    .addComponent(jBtSair))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pesquisa", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
        );

        setBounds(450, 100, 583, 278);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {            
            this.preencherTabelaItensInternos("SELECT * FROM ITENSDEPOSITOPORTARIA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSDEPOSITOPORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE Efetuado='" + efetuado + "'");
        } else {
            limparTabela();
        }

    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome para pesquisa.");
        } else {            
            preencherTabelaItensInternos("SELECT * FROM ITENSDEPOSITOPORTARIA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSDEPOSITOPORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'" + jPesqNomeInterno.getText() + "%' "
                    + "AND Efetuado='" + efetuado + "'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jBtEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String nomeInterno = "" + jTabelaDepositoInternos.getValueAt(jTabelaDepositoInternos.getSelectedRow(), 2);
            jPesqNomeInterno.setText(nomeInterno);
            String idCodigo = "" + jTabelaDepositoInternos.getValueAt(jTabelaDepositoInternos.getSelectedRow(), 1);
            String iditem = "" + jTabelaDepositoInternos.getValueAt(jTabelaDepositoInternos.getSelectedRow(), 0);

            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSDEPOSITOPORTARIA INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSDEPOSITOPORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN DADOSPENAISINTERNOS "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=DADOSPENAISINTERNOS.IdInternoCrc "
                        + "WHERE NomeInternoCrc='" + nomeInterno + "'AND IdItem='" + iditem + "'");
                conecta.rs.first();
                jIdInternoDepFin.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInternoDepFin.setText(conecta.rs.getString("NomeInternoCrc"));
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jSituacao.setText(conecta.rs.getString("SituacaoCrc"));
                if (jSituacao.getText().equals("ENTRADA NA UNIDADE") || jSituacao.getText().equals("RETORNO A UNIDADE")) {
                    jSituacao.setFont(new Font("Tahoma", Font.BOLD, 11));
                    jSituacao.setBackground(Color.white);
                    jSituacao.setForeground(Color.black);   
                    jSituacao.setEditable(false);

                } else {
                    jSituacao.setFont(new Font("Tahoma", Font.BOLD, 11));
                    jSituacao.setBackground(Color.white);
                    jSituacao.setForeground(Color.red);  
                    jSituacao.setEditable(false);
                }
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoInternoDepFin.setIcon(i);
                jFotoInternoDepFin.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInternoDepFin.getWidth(), jFotoInternoDepFin.getHeight(), Image.SCALE_DEFAULT)));
                //
                idItem = conecta.rs.getInt("IdItem");
                origemDeposito = "Sim"; // Variável que informa que o deposito tem origem da portaria              
                valorDeposito = conecta.rs.getFloat("ValorDeposito");
                DecimalFormat vd = new DecimalFormat(",###.00");
                String vlDeposito = vd.format(valorDeposito);
                jValorCredito.setText(vlDeposito);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados...\nERRO: " + e);
            }
            dispose();
        }
    }//GEN-LAST:event_jBtEnviarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jTabelaDepositoInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaDepositoInternosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String nomeInterno = "" + jTabelaDepositoInternos.getValueAt(jTabelaDepositoInternos.getSelectedRow(), 2);
            jPesqNomeInterno.setText(nomeInterno);
            String iditem = "" + jTabelaDepositoInternos.getValueAt(jTabelaDepositoInternos.getSelectedRow(), 0);
        }
    }//GEN-LAST:event_jTabelaDepositoInternosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtEnviar;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JCheckBox jCheckBoxTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaDepositoInternos;
    // End of variables declaration//GEN-END:variables

    public void preencherTabelaItensInternos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Internos", "Valor R$", "Data"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Mostrar o valor na telada tabela no formato BR
                valorDeposito = conecta.rs.getFloat("ValorDeposito");
                DecimalFormat vd = new DecimalFormat("#,###.00");
                String vlDeposito = vd.format(valorDeposito);
                // Formatar a data Entrada
                dataDeposito = conecta.rs.getString("DataDeposito");
                String diae = dataDeposito.substring(8, 10);
                String mese = dataDeposito.substring(5, 7);
                String anoe = dataDeposito.substring(0, 4);
                dataDeposito = diae + "/" + mese + "/" + anoe;
                dados.add(new Object[]{conecta.rs.getString("IdItem"), conecta.rs.getString("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), vlDeposito, dataDeposito});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDepositoInternos.setModel(modelo);
        jTabelaDepositoInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaDepositoInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaDepositoInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaDepositoInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaDepositoInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaDepositoInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaDepositoInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaDepositoInternos.setAutoResizeMode(jTabelaDepositoInternos.AUTO_RESIZE_OFF);
        jTabelaDepositoInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Internos", "Valor R$", "Data"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDepositoInternos.setModel(modelo);
        jTabelaDepositoInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaDepositoInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaDepositoInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaDepositoInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaDepositoInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDepositoInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaDepositoInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaDepositoInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaDepositoInternos.setAutoResizeMode(jTabelaDepositoInternos.AUTO_RESIZE_OFF);
        jTabelaDepositoInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaDepositoInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaDepositoInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaDepositoInternos.getColumnModel().getColumn(3).setCellRenderer(direita);
        jTabelaDepositoInternos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }
}
