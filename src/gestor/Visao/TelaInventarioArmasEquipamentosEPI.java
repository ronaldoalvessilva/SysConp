/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAtualizaSaldoInventarioAC;
import gestor.Controle.ControleLogSistema;
import Utilitarios.LimiteDigitosNum;
import Utilitarios.ModeloTabela;
import gestor.Controle.ControleAcessoGeral;
import gestor.Controle.ControleInventarioArmasEPIs;
import gestor.Controle.ControlePesquisaLocalAramaEPI;
import gestor.Modelo.CamposAcessos;
import gestor.Modelo.InventarioArmaEPI;
import gestor.Modelo.LogSistema;
import gestor.Modelo.ProdutoMedicamento;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import static gestor.Visao.TelaModuloSeguranca.telaInventarioEPICont;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.HashMap;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import static gestor.Visao.TelaModuloSeguranca.telaInventarioEPIManu;
import static gestor.Visao.TelaModuloSeguranca.telaInventarioEfetuarEPI;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class TelaInventarioArmasEquipamentosEPI extends javax.swing.JInternalFrame {

    ControleInventarioArmasEPIs CONTROL = new ControleInventarioArmasEPIs();
    ControlePesquisaLocalAramaEPI CONTROLE = new ControlePesquisaLocalAramaEPI();
    InventarioArmaEPI objInventEstoque = new InventarioArmaEPI();
    //
    ControleAcessoGeral pPESQUISAR_acessos = new ControleAcessoGeral();
    CamposAcessos objCampos = new CamposAcessos();
    //
    ProdutoMedicamento objProdMed = new ProdutoMedicamento();
    ControleAtualizaSaldoInventarioAC controleSaldo = new ControleAtualizaSaldoInventarioAC();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Gerencia Operacional:Inventário de Produtos:Manutenção";
    String nomeModuloTela2 = "Gerencia Operacional:Inventário de Produtos:Contagem Itens";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String horaEfetua, dataEfetua;
    int acao, flag;
    String dataEntrada, dataVctoLote;
    public static String dataInicial;
    public static String dataFinal;
    public static String idItem;
    public static String nomeProdutoArma;
    double valorCusto = 0;
    public static double qtdItem = 0;
    public static String qtdItemTab;
    String statusProd = "Ativo";
    String tipoInventario; // Saldo Inicial ou Ajuste Estoque
    String codLocal;
    String codInventario;
    int count;
    String modulo = "A";
    String codigoInventario = "";
    String codigoProduto = "";
    //
    public static int pTOTAL_inve = 0;
    public static String pCODIGO_inventario = "";
    public static String pRESPOSTA_inv = "";
    public static int pTOTAL_epi = 0;
    int TIPO_produto = 0;
    int pTIPO_ARMA_epi = 0;

    /**
     * Creates new form TelaInventarioProdutosMed
     */
    public TelaInventarioArmasEquipamentosEPI() {
        initComponents();
        formatarCampos();
        corCampos();
        corCamposItens();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        grupoBotoes = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jIDPesq = new javax.swing.JTextField();
        jBtIDPesq = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDatas = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaInventarioEstoque = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jDataInicio = new com.toedter.calendar.JDateChooser();
        jStatusLanc = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jBtPesqLocalArmazenamento = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jUsuarioResponsavel = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jDataTermino = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jHorarioInicio = new javax.swing.JTextField();
        jHorarioTermino = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jComboBoxTipoInventario = new javax.swing.JComboBox();
        jBtEfetivar = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jComboBoxTipoProduto = new javax.swing.JComboBox<>();
        jComboBoxLocalArmazenamento = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jBtResultadoInventario = new javax.swing.JButton();
        jBtAuditoriaInventario = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaItensProdutoInvent = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jDescricaoProduto = new javax.swing.JTextField();
        jBtPesqProdutoInve = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jQtd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jIdProduto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jCodigoBarra = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLocalArmazenamentoItem = new javax.swing.JTextField();
        jComboBoxUnidProduto = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jDataVctoLote = new com.toedter.calendar.JDateChooser();
        jLabel21 = new javax.swing.JLabel();
        jValorCusto = new javax.swing.JFormattedTextField();
        jLabel25 = new javax.swing.JLabel();
        jtotalItens = new javax.swing.JLabel();
        jRBtArmas = new javax.swing.JRadioButton();
        jRBtEPIs = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        jBtNovoItem = new javax.swing.JButton();
        jBtAlterarItem = new javax.swing.JButton();
        jBtExcluirItem = new javax.swing.JButton();
        jBtSalvarItem = new javax.swing.JButton();
        jBtCancelarItem = new javax.swing.JButton();
        jBtBuscarProduto = new javax.swing.JButton();
        jBtAuditoriaItens = new javax.swing.JButton();
        jBtImpressaoItens = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel5.setText("jLabel5");

        jLabel13.setText("jLabel13");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Inventário de Estoque  :::...");
        getContentPane().setLayout(null);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel37.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Código:");

        jIDPesq.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtIDPesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIDPesq.setContentAreaFilled(false);
        jBtIDPesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIDPesqActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Data Inicial:");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Data Final:");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDatas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDatas.setContentAreaFilled(false);
        jBtPesqDatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDatasActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(jIDPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtIDPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jBtPesqDatas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19)
                    .addComponent(jIDPesq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtIDPesq)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel22)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDatas))
                .addGap(16, 16, 16))
        );

        jTabelaInventarioEstoque.setAutoCreateRowSorter(true);
        jTabelaInventarioEstoque.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaInventarioEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Observação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaInventarioEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaInventarioEstoqueMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaInventarioEstoque);
        if (jTabelaInventarioEstoque.getColumnModel().getColumnCount() > 0) {
            jTabelaInventarioEstoque.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaInventarioEstoque.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaInventarioEstoque.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaInventarioEstoque.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaInventarioEstoque.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaInventarioEstoque.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaInventarioEstoque.getColumnModel().getColumn(3).setMinWidth(335);
            jTabelaInventarioEstoque.getColumnModel().getColumn(3).setMaxWidth(335);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Data de Inicio");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jDataInicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInicio.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(255, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Local de Armazenamento");

        jBtPesqLocalArmazenamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqLocalArmazenamento.setToolTipText("Pesquisa Local Armazenamento");
        jBtPesqLocalArmazenamento.setContentAreaFilled(false);
        jBtPesqLocalArmazenamento.setEnabled(false);
        jBtPesqLocalArmazenamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqLocalArmazenamentoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Observação");

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Responsável");

        jUsuarioResponsavel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jUsuarioResponsavel.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("Data Termino ");

        jDataTermino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataTermino.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 255));
        jLabel15.setText("H. Inicio");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("H. Final");

        jHorarioInicio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioInicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioInicio.setEnabled(false);

        jHorarioTermino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioTermino.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Tipo Inventário");

        jComboBoxTipoInventario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoInventario.setForeground(new java.awt.Color(102, 0, 102));
        jComboBoxTipoInventario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Estoque Inicial", "Ajuste de Estoque", "Inventário Final Ano" }));
        jComboBoxTipoInventario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoInventario.setEnabled(false);

        jBtEfetivar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtEfetivar.setForeground(new java.awt.Color(51, 153, 0));
        jBtEfetivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtEfetivar.setText("Efetivar Inventário");
        jBtEfetivar.setEnabled(false);
        jBtEfetivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEfetivarActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Tipo Produto");

        jComboBoxTipoProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Armas", "Equipamentos Segurança", "EPI´s Diversos", "Todos os Produtos" }));
        jComboBoxTipoProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoProduto.setEnabled(false);

        jComboBoxLocalArmazenamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxLocalArmazenamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione..." }));
        jComboBoxLocalArmazenamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxLocalArmazenamento.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jComboBoxLocalArmazenamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqLocalArmazenamento, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxTipoProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jComboBoxTipoInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtEfetivar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(320, 320, 320))
                            .addComponent(jUsuarioResponsavel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jHorarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jDataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jHorarioTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel26))
                            .addComponent(jLabel6)
                            .addComponent(jLabel17))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHorarioInicio, jHorarioTermino});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtEfetivar)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel24)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTipoInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxLocalArmazenamento, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqLocalArmazenamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(2, 2, 2)
                .addComponent(jUsuarioResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jHorarioInicio, jHorarioTermino});

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair");
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo");
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtResultadoInventario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtResultadoInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtResultadoInventario.setToolTipText("Resultado");
        jBtResultadoInventario.setEnabled(false);
        jBtResultadoInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtResultadoInventarioActionPerformed(evt);
            }
        });

        jBtAuditoriaInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaInventario.setContentAreaFilled(false);
        jBtAuditoriaInventario.setEnabled(false);
        jBtAuditoriaInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaInventarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jBtResultadoInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jBtAuditoriaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtResultadoInventario, jBtSair, jBtSalvar});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAuditoriaInventario)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair)
                    .addComponent(jBtResultadoInventario))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtResultadoInventario, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jTabelaItensProdutoInvent.setAutoCreateRowSorter(true);
        jTabelaItensProdutoInvent.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensProdutoInvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Código", "Código Barras", "Descrição", "UN", "Qtde.", "Local", "Data Validade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaItensProdutoInvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensProdutoInventMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaItensProdutoInvent);
        if (jTabelaItensProdutoInvent.getColumnModel().getColumnCount() > 0) {
            jTabelaItensProdutoInvent.getColumnModel().getColumn(0).setMinWidth(40);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(0).setMaxWidth(40);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(2).setMinWidth(90);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(2).setMaxWidth(90);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(3).setMinWidth(200);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(3).setMaxWidth(200);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(4).setMinWidth(40);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(4).setMaxWidth(40);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(5).setMaxWidth(50);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(6).setMinWidth(100);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(6).setMaxWidth(100);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(7).setMinWidth(80);
            jTabelaItensProdutoInvent.getColumnModel().getColumn(7).setMaxWidth(80);
        }

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adicionar ao inventário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Descrição do Produto");

        jDescricaoProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoProduto.setEnabled(false);

        jBtPesqProdutoInve.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqProdutoInve.setContentAreaFilled(false);
        jBtPesqProdutoInve.setEnabled(false);
        jBtPesqProdutoInve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqProdutoInveActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Qtde.");

        jQtd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQtd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQtd.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Localização");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jIdProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdProduto.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("UN");

        jCodigoBarra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoBarra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoBarra.setEnabled(false);
        jCodigoBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCodigoBarraActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Código Barras");

        jLocalArmazenamentoItem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLocalArmazenamentoItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLocalArmazenamentoItem.setEnabled(false);

        jComboBoxUnidProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "UN", "Caixa", "Pacote", "Ml", "Kg", "Litro", "Peça", "Ampla", "Kit", "PR", "Pç", "Pc" }));
        jComboBoxUnidProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidProduto.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Data Licença");

        jDataVctoLote.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataVctoLote.setEnabled(false);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Valor Unit.");

        jValorCusto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorCusto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorCusto.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Total Itens");

        jtotalItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalItens.setForeground(new java.awt.Color(255, 0, 0));
        jtotalItens.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        grupoBotoes.add(jRBtArmas);
        jRBtArmas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtArmas.setSelected(true);
        jRBtArmas.setText("Armas");
        jRBtArmas.setEnabled(false);

        grupoBotoes.add(jRBtEPIs);
        jRBtEPIs.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtEPIs.setText("EPI´s");
        jRBtEPIs.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtPesqProdutoInve, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(jDataVctoLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRBtArmas)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRBtEPIs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtotalItens, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING))
                                .addContainerGap())))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxUnidProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLocalArmazenamentoItem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqProdutoInve))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel12))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel21)))))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUnidProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jLabel18)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLocalArmazenamentoItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataVctoLote, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRBtArmas)
                    .addComponent(jRBtEPIs)
                    .addComponent(jtotalItens, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCodigoBarra, jComboBoxUnidProduto, jLocalArmazenamentoItem, jQtd});

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoItem.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBtNovoItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoItem.setToolTipText("Novo Item");
        jBtNovoItem.setEnabled(false);
        jBtNovoItem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoItem.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoItem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoItemActionPerformed(evt);
            }
        });

        jBtAlterarItem.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBtAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarItem.setToolTipText("Alterar Item");
        jBtAlterarItem.setEnabled(false);
        jBtAlterarItem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarItem.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarItem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarItemActionPerformed(evt);
            }
        });

        jBtExcluirItem.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBtExcluirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirItem.setToolTipText("Excluir Item");
        jBtExcluirItem.setEnabled(false);
        jBtExcluirItem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirItem.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirItem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirItemActionPerformed(evt);
            }
        });

        jBtSalvarItem.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBtSalvarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarItem.setToolTipText("Salvar Item");
        jBtSalvarItem.setEnabled(false);
        jBtSalvarItem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarItem.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarItem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarItemActionPerformed(evt);
            }
        });

        jBtCancelarItem.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBtCancelarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarItem.setToolTipText("Cancelar Operação");
        jBtCancelarItem.setEnabled(false);
        jBtCancelarItem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarItem.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarItem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarItemActionPerformed(evt);
            }
        });

        jBtBuscarProduto.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jBtBuscarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarProduto.setToolTipText("Buscar Registro gravado");
        jBtBuscarProduto.setEnabled(false);
        jBtBuscarProduto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtBuscarProduto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtBuscarProduto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarProdutoActionPerformed(evt);
            }
        });

        jBtAuditoriaItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaItens.setToolTipText("Auditoria");
        jBtAuditoriaItens.setContentAreaFilled(false);
        jBtAuditoriaItens.setEnabled(false);
        jBtAuditoriaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaItensActionPerformed(evt);
            }
        });

        jBtImpressaoItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtImpressaoItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressaoItens.setText("Impressão");
        jBtImpressaoItens.setToolTipText("Impressão dos Itens");
        jBtImpressaoItens.setEnabled(false);
        jBtImpressaoItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImpressaoItensActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jBtNovoItem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jBtAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jBtExcluirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jBtSalvarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jBtCancelarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jBtBuscarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jBtImpressaoItens)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtAuditoriaItens, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovoItem)
                    .addComponent(jBtAlterarItem)
                    .addComponent(jBtExcluirItem)
                    .addComponent(jBtSalvarItem)
                    .addComponent(jBtCancelarItem)
                    .addComponent(jBtBuscarProduto)
                    .addComponent(jBtImpressaoItens)
                    .addComponent(jBtAuditoriaItens))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Contagem", jPanel6);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 440, 430);

        setBounds(300, 20, 455, 461);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtIDPesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIDPesqActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesq.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o ID para pesquisa.");
            jIDPesq.requestFocus();
        } else {
            pPREENCHER_TABELA_codigo();
        }
    }//GEN-LAST:event_jBtIDPesqActionPerformed

    private void jBtPesqDatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDatasActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        pPREENCHER_TABELA_data();
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        pPREENCHER_TABELA_data();
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDatasActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPIManu);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPIManu) && objCampos.getCodigoIncluir() == 1) {
            acao = 1;
            Novo();
            limparProdutosInventario();
            corCampos();
            PREENCHER_COMBO_local();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPIManu);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPIManu) && objCampos.getCodigoAlterar() == 1) {
            objInventEstoque.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("EFETIVADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa inventário não poderá ser alterado, o mesmo encontra-se EFETIVADO");
            } else {
                acao = 2;
                Alterar();
                corCampos();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPIManu);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPIManu) && objCampos.getCodigoExcluir() == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objInventEstoque.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("EFETIVADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse inventário não poderá ser excluído, o mesmo encontra-se EFETIVADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    CONTROL.pVERIFICAR_CODIGO_invent(objInventEstoque);
                    if (jIdLanc.getText().equals(pCODIGO_inventario)) {
                        JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os itens relacionados a esse registro.");
                    } else {
                        objInventEstoque.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                        CONTROL.excluirInventarioAE(objInventEstoque);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação                        
                        Excluir();
                        if (pRESPOSTA_inv.equals("Sim")) {
                            JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                        } else if (pRESPOSTA_inv.equals("Não")) {
                            JOptionPane.showMessageDialog(rootPane, "Não foi possível exclui o registro, tente novamente.");
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPIManu);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPIManu) && objCampos.getCodigoGravar() == 1) {
            verificarTipoInventario();
            if (jDataInicio.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de lançamento.");
                jDataInicio.requestFocus();
                jDataInicio.setBackground(Color.red);
            } else if (jComboBoxTipoInventario.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de inventário...");
                jComboBoxTipoInventario.requestFocus();
                jComboBoxTipoInventario.setBackground(Color.red);
            } else if (jComboBoxTipoInventario.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de inventário...");
                jComboBoxTipoInventario.requestFocus();
                jComboBoxTipoInventario.setBackground(Color.red);
            } else {
                objInventEstoque.setTipoProduto((String) jComboBoxTipoProduto.getSelectedItem());
                objInventEstoque.setStatusLanc(jStatusLanc.getText());
                objInventEstoque.setTipoInventario((String) jComboBoxTipoInventario.getSelectedItem());
//                objInventEstoque.setIdLocal(Integer.valueOf(jIdLocal.getText()));
                objInventEstoque.setNomeLocalArmazenamento((String) jComboBoxLocalArmazenamento.getSelectedItem());
                objInventEstoque.setResponsavel(jUsuarioResponsavel.getText());
                objInventEstoque.setDataInicio(jDataInicio.getDate());
                objInventEstoque.setDataTermino(jDataTermino.getDate());
                objInventEstoque.setHorarioInicio(horaMov);
                objInventEstoque.setHorarioTermino(horaEfetua);
                objInventEstoque.setObservacao(jObservacao.getText());
                if (acao == 1) {
//                    if (jComboBoxTipoInventario.getSelectedItem().equals("Estoque Inicial") && jIdLocal.getText().equals(codLocal)) {
//                        JOptionPane.showMessageDialog(rootPane, "Esse tipo de inventário já foi realizado para esse estoque,\nutilize o inventário de ajuste de estoque.");
//                    } else {
                    objInventEstoque.setUsuarioInsert(nameUser);
                    objInventEstoque.setDataInsert(dataModFinal);
                    objInventEstoque.setHorarioInsert(horaMov);
                    CONTROL.incluirInventarioAE(objInventEstoque);
                    pBUSCAR_codigo();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    if (pRESPOSTA_inv.equals("Sim")) {
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    } else if (pRESPOSTA_inv.equals("Não")) {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro, tente novamente.");
                    }
//                    }
                }
                if (acao == 2) {
                    objInventEstoque.setUsuarioUp(nameUser);
                    objInventEstoque.setDataUp(dataModFinal);
                    objInventEstoque.setHorarioUp(horaMov);
                    objInventEstoque.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                    CONTROL.alterarInventarioAE(objInventEstoque);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    if (pRESPOSTA_inv.equals("Sim")) {
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    } else if (pRESPOSTA_inv.equals("Não")) {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro, tente novamente.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtEfetivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEfetivarActionPerformed
        // TODO add your handling code here: telaMovimentacaoInventarioFinaAL
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEfetuarEPI);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEfetuarEPI) && objCampos.getCodigoAbrir() == 1) {
            objInventEstoque.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("EFETIVADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse inventário encontra-se EFETIVADO");
            } else {
                TelaEfetuarInventariosAE objEfetuarInvAC = new TelaEfetuarInventariosAE();
                TelaModuloSeguranca.jPainelSeguranca.add(objEfetuarInvAC);
                objEfetuarInvAC.show();
                jDataTermino.setCalendar(Calendar.getInstance());
                jHorarioTermino.setText(jHoraSistema.getText());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtEfetivarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtNovoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoItemActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPICont);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPICont) && objCampos.getCodigoIncluir() == 1) {
            objInventEstoque.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("EFETIVADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse inventário não poderá ser modificado, o mesmo encontra-se EFETIVADO");
            } else {
                acao = 3;
                NovoItem();
                corCamposItens();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtNovoItemActionPerformed

    private void jBtAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarItemActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPICont);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPICont) && objCampos.getCodigoAlterar() == 1) {
            objInventEstoque.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("EFETIVADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse inventário não poderá ser modificado, o mesmo encontra-se EFETIVADO");
            } else {
                acao = 4;
                AlterarItem();
                corCamposItens();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtAlterarItemActionPerformed

    private void jBtExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirItemActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPICont);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPICont) && objCampos.getCodigoExcluir() == 1) {
            objInventEstoque.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("EFETIVADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse inventário não poderá ser modificado, o mesmo encontra-se EFETIVADO");
            } else {
                statusMov = "Excluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                objInventEstoque.setStatusLanc(jStatusLanc.getText());
                if (jStatusLanc.getText().equals("EFETUADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Esse  pertence não poderá ser excluído, o mesmo encontra-se FINALIZADO");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objInventEstoque.setIdItem(Integer.valueOf(idItem));
                        CONTROL.excluirItensInventarioAE(objInventEstoque);
                        ExcluirItem();
                        preencherTabelaItensInventario();
                        if (pRESPOSTA_inv.equals("Sim")) {
                            JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        } else if (pRESPOSTA_inv.equals("Não")) {
                            JOptionPane.showMessageDialog(rootPane, "Não foi possível excluir o registro, tente novamente.");
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtExcluirItemActionPerformed

    private void jBtSalvarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarItemActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaInventarioEPICont);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaInventarioEPICont) && objCampos.getCodigoGravar() == 1) {
            verificarItemCadastrado();
            count = 0;
            DecimalFormat valorReal = new DecimalFormat("###,##00.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jDescricaoProduto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o produto para o inventário.");
            } else if (jQtd.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a quantidade do item.");
                jQtd.requestFocus();
                jQtd.setBackground(Color.red);
            } else if (jComboBoxUnidProduto.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a unidade do produto.");
            } else {
                try {
                    objInventEstoque.setQtdItem(valorReal.parse(jQtd.getText()).floatValue());
                } catch (ParseException ex) {
                    Logger.getLogger(TelaInventarioArmasEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    objInventEstoque.setValorCusto(valorReal.parse(jValorCusto.getText()).floatValue());
                } catch (ParseException ex) {
                    Logger.getLogger(TelaInventarioArmasEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
                }
                objInventEstoque.setNomeLocalArmazenamento(jLocalArmazenamentoItem.getText());
                objInventEstoque.setDataLote(jDataVctoLote.getDate());
                if (jRBtArmas.isSelected()) {
                    TIPO_produto = 0;
                    objInventEstoque.setTipoArmaEPI(TIPO_produto);
                } else if (jRBtEPIs.isSelected()) {
                    TIPO_produto = 1;
                    objInventEstoque.setTipoArmaEPI(TIPO_produto);
                }
                if (acao == 3) {
                    if (jIdProduto.getText().equals(codigoProduto) && jIdLanc.getText().equals(codigoInventario)) {
                        JOptionPane.showMessageDialog(rootPane, "Produto já foi incluido nesse inventário.");
                    } else {
                        objInventEstoque.setUsuarioInsert(nameUser);
                        objInventEstoque.setDataInsert(dataModFinal);
                        objInventEstoque.setHorarioInsert(horaMov);
                        //
                        objInventEstoque.setNomeProduto(jDescricaoProduto.getText());
                        objInventEstoque.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        CONTROL.incluirItensInventarioAE(objInventEstoque);
                        preencherTabelaItensInventario();
                        SalvarItem();
                        if (pRESPOSTA_inv.equals("Sim")) {
                            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        } else if (pRESPOSTA_inv.equals("Não")) {
                            JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro.");
                        }
                    }
                }
                if (acao == 4) {
                    objInventEstoque.setUsuarioUp(nameUser);
                    objInventEstoque.setDataUp(dataModFinal);
                    objInventEstoque.setHorarioUp(horaMov);
                    //
                    objInventEstoque.setNomeProduto(jDescricaoProduto.getText());
                    objInventEstoque.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                    objInventEstoque.setIdItem(Integer.valueOf(idItem));
                    CONTROL.alterarItensInventarioAE(objInventEstoque);
                    preencherTabelaItensInventario();
                    SalvarItem();
                    if (pRESPOSTA_inv.equals("Sim")) {
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    } else if (pRESPOSTA_inv.equals("Não")) {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtSalvarItemActionPerformed

    private void jBtCancelarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarItemActionPerformed
        // TODO add your handling code here:
        CancelarItem();
    }//GEN-LAST:event_jBtCancelarItemActionPerformed

    private void jBtPesqProdutoInveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqProdutoInveActionPerformed
        // TODO add your handling code here:
        if (jRBtArmas.isSelected()) {
            TelaPesqProdutoInventarioArmas objPesqProdACe = new TelaPesqProdutoInventarioArmas();
            TelaModuloSeguranca.jPainelSeguranca.add(objPesqProdACe);
            objPesqProdACe.show();
        } else if (jRBtEPIs.isSelected()) {
            TelaPesqProdutoInventarioAE objPesqProdAC = new TelaPesqProdutoInventarioAE();
            TelaModuloSeguranca.jPainelSeguranca.add(objPesqProdAC);
            objPesqProdAC.show();
        }
    }//GEN-LAST:event_jBtPesqProdutoInveActionPerformed

    private void jTabelaInventarioEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaInventarioEstoqueMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String idLanc = "" + jTabelaInventarioEstoque.getValueAt(jTabelaInventarioEstoque.getSelectedRow(), 0);
            jIDPesq.setText(idLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoriaInventario.setEnabled(true);
            jBtEfetivar.setEnabled(true);
            //
            jBtNovoItem.setEnabled(true);
            jBtAlterarItem.setEnabled(!true);
            jBtExcluirItem.setEnabled(!true);
            jBtSalvarItem.setEnabled(!true);
            jBtCancelarItem.setEnabled(!true);
            jBtImpressaoItens.setEnabled(true);
            jBtBuscarProduto.setEnabled(true);
            //
            jComboBoxLocalArmazenamento.removeAllItems();
            try {
                for (InventarioArmaEPI ii : CONTROL.pPESQUISAR_INVENTARIO_selecionado()) {
                    jIdLanc.setText(String.valueOf(ii.getIdLanc()));
                    jComboBoxTipoProduto.setSelectedItem(ii.getTipoProduto());
                    jStatusLanc.setText(ii.getStatusLanc());
                    jComboBoxTipoInventario.setSelectedItem(ii.getTipoInventario());
//                    jIdLocal.setText(String.valueOf(ii.getIdLocal()));
                    jComboBoxLocalArmazenamento.addItem(ii.getNomeLocalArmazenamento());
                    jUsuarioResponsavel.setText(ii.getResponsavel());
                    jDataInicio.setDate(ii.getDataInicio());
                    jHorarioInicio.setText(ii.getHorarioInicio());
                    jDataTermino.setDate(ii.getDataTermino());
                    jHorarioTermino.setText(ii.getHorarioTermino());
                    jObservacao.setText(ii.getObservacao());
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaInventarioArmasEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        count = 0;
        limparProdutosInventario();
        preencherTabelaItensInventario();
        jBtResultadoInventario.setEnabled(true);

    }//GEN-LAST:event_jTabelaInventarioEstoqueMouseClicked

    private void jTabelaItensProdutoInventMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensProdutoInventMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String idProduto = "" + jTabelaItensProdutoInvent.getValueAt(jTabelaItensProdutoInvent.getSelectedRow(), 1);
            jIdProduto.setText(idProduto);
            nomeProdutoArma = "" + jTabelaItensProdutoInvent.getValueAt(jTabelaItensProdutoInvent.getSelectedRow(), 3);
            jDescricaoProduto.setText(nomeProdutoArma);
            idItem = "" + jTabelaItensProdutoInvent.getValueAt(jTabelaItensProdutoInvent.getSelectedRow(), 0);
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            //  jBtEfetivar.setEnabled(!true);
            jBtNovoItem.setEnabled(true);
            jBtAlterarItem.setEnabled(true);
            jBtExcluirItem.setEnabled(true);
            jBtSalvarItem.setEnabled(!true);
            jBtCancelarItem.setEnabled(true);
            jBtAuditoriaItens.setEnabled(true);
            CONTROLE.EXIBIR_produto(objInventEstoque);
            jIdProduto.setText(String.valueOf(objInventEstoque.getIdProduto()));
            jDescricaoProduto.setText(objInventEstoque.getNomeProduto());
            idItem = String.valueOf(objInventEstoque.getIdItem());
            jComboBoxUnidProduto.setSelectedItem(objInventEstoque.getUnidade());
            //
            qtdItem = objInventEstoque.getQtdItem();
            DecimalFormat vi = new DecimalFormat("#,##0.00");
            String vqtdItem = vi.format(qtdItem);
            jQtd.setText(vqtdItem);
            // Formata o valor para ser exibido na tela no formato BR                                                   
            valorCusto = objInventEstoque.getValorCusto();
            DecimalFormat vc = new DecimalFormat("#,##0.00");
            String vlCusto = vc.format(valorCusto);
            jValorCusto.setText(vlCusto);
            //
            jLocalArmazenamentoItem.setText(objInventEstoque.getNomeLocalArmazenamento());
            jDataVctoLote.setDate(objInventEstoque.getDataLote());
        }
    }//GEN-LAST:event_jTabelaItensProdutoInventMouseClicked

    private void jBtPesqLocalArmazenamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqLocalArmazenamentoActionPerformed
        // TODO add your handling code here:
        TelaPesqLocalArmazenamentoAE objLocalArmaAC = new TelaPesqLocalArmazenamentoAE();
        TelaModuloSeguranca.jPainelSeguranca.add(objLocalArmaAC);
        objLocalArmaAC.show();
    }//GEN-LAST:event_jBtPesqLocalArmazenamentoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaInventarioEstoque.getModel();
            try {
                for (InventarioArmaEPI pp : CONTROL.pPESQUISAR_INVENTARIO_todos()) {
                    dataEntrada = String.valueOf(pp.getDataInicio());
                    String dia = dataEntrada.substring(8, 10);
                    String mes = dataEntrada.substring(5, 7);
                    String ano = dataEntrada.substring(0, 4);
                    dataEntrada = dia + "/" + mes + "/" + ano;
                    jtotalRegistros.setText(Integer.toString(pTOTAL_inve)); // Converter inteiro em string para exibir na tela
                    dadosOrigem.addRow(new Object[]{pp.getIdLanc(), dataEntrada, pp.getStatusLanc(), pp.getObservacao()});
                    // BARRA DE ROLAGEM HORIZONTAL
                    jTabelaInventarioEstoque.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    // ALINHAR TEXTO DA TABELA CENTRALIZADO
                    DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                    centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                    //
                    jTabelaInventarioEstoque.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                    jTabelaInventarioEstoque.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                }
                if (pTOTAL_inve == 0) {
                    JOptionPane.showMessageDialog(null, "Não existem dados da serem exibidos...");
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaInventarioArmasEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtImpressaoItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImpressaoItensActionPerformed
        // TODO add your handling code here:
        if (jIdLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível listar o relatório, pois,\no código do inventário está em banco.");
        } else {
//            try {
//                conecta.abrirConexao();
//                String path = "reports/Almoxarifado/ListagemInventarioProdutosAC.jasper";
//                conecta.executaSQL("SELECT *,"
//                        + "INVENTARIO_AC.IdLanc AS INVENTARIO_AC_IdLanc, "
//                        + "INVENTARIO_AC.IdLocal AS INVENTARIO_AC_IdLocal, "
//                        + "INVENTARIO_AC.Responsavel AS INVENTARIO_AC_Responsavel, "
//                        + "INVENTARIO_AC.DataInicio AS INVENTARIO_AC_DataInicio, "
//                        + "LOCAL_ARMAZENAMENTO_AC.DescricaoLocal AS "
//                        + "LOCAL_ARMAZENAMENTO_AC_DescricaoLocal, "
//                        + "ITENS_INVENTARIO_AC.IdProd AS ITENS_INVENTARIO_AC_IdProd, "
//                        + "PRODUTOS_AC.CodigoBarra AS PRODUTOS_AC_CodigoBarra, "
//                        + "PRODUTOS_AC.DescricaoProd AS PRODUTOS_AC_DescricaoProd, "
//                        + "PRODUTOS_AC.UnidadeProd AS PRODUTOS_AC_UnidadeProd, "
//                        + "ITENS_INVENTARIO_AC.QtdItem AS ITENS_INVENTARIO_AC_QtdItem, "
//                        + "ITENS_INVENTARIO_AC.ValorCusto AS ITENS_INVENTARIO_AC_ValorCusto "
//                        + "FROM INVENTARIO_AC "
//                        + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
//                        + "ON INVENTARIO_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
//                        + "INNER JOIN ITENS_INVENTARIO_AC ITENS_INVENTARIO_AC "
//                        + "ON INVENTARIO_AC.IdLanc=ITENS_INVENTARIO_AC.IdLanc "
//                        + "INNER JOIN PRODUTOS_AC "
//                        + "ON ITENS_INVENTARIO_AC.IdProd=PRODUTOS_AC.IdProd "
//                        + "WHERE ITENS_INVENTARIO_AC.IdLanc='" + jIdLanc.getText() + "'ORDER BY PRODUTOS_AC.DescricaoProd");
//                HashMap parametros = new HashMap();
//                parametros.put("Idlanc", jIdLanc.getText());
//                parametros.put("nomeUsuario", nameUser);
//                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
//                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
//                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
//                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
//                jv.setTitle("Listagem para Contagem de Estoque");
//                jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
//                jv.toFront(); // Traz o relatorio para frente da aplicação            
//                conecta.desconecta();
//            } catch (JRException e) {
//                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \nERRO :" + e);
//            }
        }
    }//GEN-LAST:event_jBtImpressaoItensActionPerformed

    private void jBtResultadoInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtResultadoInventarioActionPerformed
        // TODO add your handling code here:
        if (jIdLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível listar o relatório, pois,\no código do inventário está em banco.");
        } else {
//            try {
//                conecta.abrirConexao();
//                String path = "reports/Almoxarifado/ListagemInventarioProdutosFinalizadoAC.jasper";
//                conecta.executaSQL("SELECT *,"
//                        + "INVENTARIO_AC.IdLanc AS INVENTARIO_AC_IdLanc, "
//                        + "INVENTARIO_AC.IdLocal AS INVENTARIO_AC_IdLocal, "
//                        + "INVENTARIO_AC.Responsavel AS INVENTARIO_AC_Responsavel, "
//                        + "INVENTARIO_AC.DataInicio AS INVENTARIO_AC_DataInicio, "
//                        + "LOCAL_ARMAZENAMENTO_AC.DescricaoLocal AS "
//                        + "LOCAL_ARMAZENAMENTO_AC_DescricaoLocal, "
//                        + "ITENS_INVENTARIO_AC.IdProd AS ITENS_INVENTARIO_AC_IdProd, "
//                        + "PRODUTOS_AC.CodigoBarra AS PRODUTOS_AC_CodigoBarra, "
//                        + "PRODUTOS_AC.DescricaoProd AS PRODUTOS_AC_DescricaoProd, "
//                        + "PRODUTOS_AC.UnidadeProd AS PRODUTOS_AC_UnidadeProd, "
//                        + "ITENS_INVENTARIO_AC.QtdItem AS ITENS_INVENTARIO_AC_QtdItem, "
//                        + "ITENS_INVENTARIO_AC.ValorCusto AS ITENS_INVENTARIO_AC_ValorCusto "
//                        + "FROM INVENTARIO_AC "
//                        + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
//                        + "ON INVENTARIO_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
//                        + "INNER JOIN ITENS_INVENTARIO_AC ITENS_INVENTARIO_AC "
//                        + "ON INVENTARIO_AC.IdLanc=ITENS_INVENTARIO_AC.IdLanc "
//                        + "INNER JOIN PRODUTOS_AC "
//                        + "ON ITENS_INVENTARIO_AC.IdProd=PRODUTOS_AC.IdProd "
//                        + "WHERE ITENS_INVENTARIO_AC.IdLanc='" + jIdLanc.getText() + "'ORDER BY PRODUTOS_AC.DescricaoProd");
//                HashMap parametros = new HashMap();
//                parametros.put("IdLanc", jIdLanc.getText());
//                parametros.put("nomeUsuario", nameUser);
//                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
//                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
//                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
//                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
//                jv.setTitle("Listagem de Inventário de Estoque - Efetivado");
//                jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
//                jv.toFront(); // Traz o relatorio para frente da aplicação            
//                conecta.desconecta();
//            } catch (JRException e) {
//                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \nERRO :" + e);
//            }
        }
    }//GEN-LAST:event_jBtResultadoInventarioActionPerformed

    private void jBtAuditoriaInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaInventarioActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaInventarioAE objAudiInvAC = new TelaAuditoriaInventarioAE();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudiInvAC);
        objAudiInvAC.show();
    }//GEN-LAST:event_jBtAuditoriaInventarioActionPerformed

    private void jBtAuditoriaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaItensActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensInventarioAE objAudiItensInvAC = new TelaAuditoriaItensInventarioAE();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudiItensInvAC);
        objAudiItensInvAC.show();
    }//GEN-LAST:event_jBtAuditoriaItensActionPerformed

    private void jCodigoBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCodigoBarraActionPerformed
        // TODO add your handling code here:
//        conecta.abrirConexao();
//        conecta.executaSQL("SELECT * FROM PRODUTOS_AC "
//                + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
//                + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
//                + "WHERE CodigoBarra LIKE'" + jCodigoBarra.getText() + "'AND StatusProd='" + statusProd + "'");
//        try {
//            if (conecta.rs.first()) {
//                jIdProduto.setText(String.valueOf(conecta.rs.getInt("IdProd")));
//                jDescricaoProduto.setText(conecta.rs.getString("DescricaoProd"));
//                jCodigoBarra.setText(conecta.rs.getString("CodigoBarra"));
//                jComboBoxUnidProduto.setSelectedItem(conecta.rs.getString("UnidadeProd"));
//                jValorCusto.setText(conecta.rs.getString("ValorCompra"));
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "Produto não cadastro.");
//            }
//        } catch (SQLException ex) {
//
//        }
//        conecta.desconecta();
    }//GEN-LAST:event_jCodigoBarraActionPerformed

    private void jBtBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarProdutoActionPerformed
        // TODO add your handling code here:
        TelaBuscarProdutosInventarioAC objBuscarProdInv = new TelaBuscarProdutosInventarioAC();
        TelaModuloAlmoxarifado.jPainelAlmoxarifado.add(objBuscarProdInv);
        objBuscarProdInv.show();
    }//GEN-LAST:event_jBtBuscarProdutoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoes;
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarItem;
    private javax.swing.JButton jBtAuditoriaInventario;
    public static javax.swing.JButton jBtAuditoriaItens;
    public static javax.swing.JButton jBtBuscarProduto;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarItem;
    private javax.swing.JButton jBtEfetivar;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirItem;
    private javax.swing.JButton jBtIDPesq;
    public static javax.swing.JButton jBtImpressaoItens;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoItem;
    private javax.swing.JButton jBtPesqDatas;
    private javax.swing.JButton jBtPesqLocalArmazenamento;
    private javax.swing.JButton jBtPesqProdutoInve;
    public static javax.swing.JButton jBtResultadoInventario;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarItem;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JFormattedTextField jCodigoBarra;
    public static javax.swing.JComboBox<String> jComboBoxLocalArmazenamento;
    public static javax.swing.JComboBox jComboBoxTipoInventario;
    private javax.swing.JComboBox<String> jComboBoxTipoProduto;
    public static javax.swing.JComboBox jComboBoxUnidProduto;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    private com.toedter.calendar.JDateChooser jDataInicio;
    public static com.toedter.calendar.JDateChooser jDataTermino;
    public static com.toedter.calendar.JDateChooser jDataVctoLote;
    public static javax.swing.JTextField jDescricaoProduto;
    private javax.swing.JTextField jHorarioInicio;
    public static javax.swing.JTextField jHorarioTermino;
    public static javax.swing.JTextField jIDPesq;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jLocalArmazenamentoItem;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    public static javax.swing.JTextField jQtd;
    public static javax.swing.JRadioButton jRBtArmas;
    public static javax.swing.JRadioButton jRBtEPIs;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaInventarioEstoque;
    public static javax.swing.JTable jTabelaItensProdutoInvent;
    private javax.swing.JTextField jUsuarioResponsavel;
    public static javax.swing.JFormattedTextField jValorCusto;
    private javax.swing.JLabel jtotalItens;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {

        jCodigoBarra.setDocument(new LimiteDigitosNum(13));
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jComboBoxTipoInventario.setBackground(Color.white);
//        jIdLocal.setBackground(Color.white);
        jComboBoxLocalArmazenamento.setBackground(Color.white);
        jUsuarioResponsavel.setBackground(Color.white);
        jDataInicio.setBackground(Color.white);
        jDataTermino.setBackground(Color.white);
        jHorarioInicio.setBackground(Color.white);
        jHorarioTermino.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
    }

    public void corCamposItens() {
        jIdProduto.setBackground(Color.white);
        jDescricaoProduto.setBackground(Color.white);
        jCodigoBarra.setBackground(Color.white);
        jComboBoxUnidProduto.setBackground(Color.white);
        jQtd.setBackground(Color.white);
        jValorCusto.setBackground(Color.white);
        jLocalArmazenamentoItem.setBackground(Color.white);
        jDataVctoLote.setBackground(Color.white);
    }

    public void Novo() {
        // Limpar campos
        jIdLanc.setText("");
        jStatusLanc.setText("CONTANDO");
        jComboBoxTipoInventario.setSelectedItem("Selecione...");
        jDataInicio.setCalendar(Calendar.getInstance());
        jHorarioInicio.setText(jHoraSistema.getText());
//        jIdLocal.setText("");
        jComboBoxLocalArmazenamento.setSelectedItem("Selecione...");
        jUsuarioResponsavel.setText(nameUser);
        //  jDataInicio.setDate(null);
        jDataTermino.setDate(null);
        //    jHorarioInicio.setText("");
        jHorarioTermino.setText("");
        jObservacao.setText("");
        //Habilitar/Desabilitar campos
        jComboBoxTipoProduto.setEnabled(true);
        jComboBoxTipoInventario.setEnabled(true);
        jComboBoxLocalArmazenamento.setEnabled(true);
        jBtPesqLocalArmazenamento.setEnabled(true);
        jObservacao.setEnabled(true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtEfetivar.setEnabled(!true);
        jBtAuditoriaInventario.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //Habilitar/Desabilitar botões dos Itens do inventário
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtPesqProdutoInve.setEnabled(!true);
    }

    public void Alterar() {
        //Habilitar/Desabilitar campos
        jComboBoxTipoProduto.setEnabled(true);
        jComboBoxTipoInventario.setEnabled(true);
        jComboBoxLocalArmazenamento.setEnabled(true);
        jBtPesqLocalArmazenamento.setEnabled(true);
        jObservacao.setEnabled(true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtEfetivar.setEnabled(!true);
        jBtAuditoriaInventario.setEnabled(!true);
        //Habilitar/Desabilitar botões dos Itens do inventário
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtPesqProdutoInve.setEnabled(!true);
    }

    public void Excluir() {
        // Limpar campos     
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jComboBoxTipoInventario.setSelectedItem("Selecione...");
        jDataInicio.setCalendar(Calendar.getInstance());
        jHorarioInicio.setText(jHoraSistema.getText());
//        jIdLocal.setText("");
        jComboBoxLocalArmazenamento.setSelectedItem("Selecione...");
        jUsuarioResponsavel.setText(nameUser);
        jDataInicio.setDate(null);
        jDataTermino.setDate(null);
        jHorarioInicio.setText("");
        jHorarioTermino.setText("");
        jObservacao.setText("");
        //Habilitar/Desabilitar campos
        jComboBoxTipoProduto.setEnabled(!true);
        jComboBoxTipoInventario.setEnabled(!true);
        jBtPesqLocalArmazenamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtEfetivar.setEnabled(!true);
        jBtAuditoriaInventario.setEnabled(!true);
        //Habilitar/Desabilitar botões dos Itens do inventário
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtPesqProdutoInve.setEnabled(!true);
    }

    public void Salvar() {
        //Habilitar/Desabilitar campos
        jComboBoxTipoProduto.setEnabled(!true);
        jComboBoxLocalArmazenamento.setEnabled(!true);
        jComboBoxTipoInventario.setEnabled(!true);
        jBtPesqLocalArmazenamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtEfetivar.setEnabled(true);
        jBtAuditoriaInventario.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            // Limpar campos
            jIdLanc.setText("");
            jStatusLanc.setText("");
            jComboBoxTipoInventario.setSelectedItem(null);
            jDataInicio.setDate(null);
            jHorarioInicio.setText("");
//            jIdLocal.setText("");
            jComboBoxLocalArmazenamento.setSelectedItem("Selecione...");
            jUsuarioResponsavel.setText("");
            jDataInicio.setDate(null);
            jDataTermino.setDate(null);
            jHorarioInicio.setText("");
            jHorarioTermino.setText("");
            jObservacao.setText("");
            //
            jComboBoxTipoProduto.setEnabled(!true);
            jComboBoxTipoInventario.setEnabled(!true);
            jBtPesqLocalArmazenamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            // Habilitar/Desabilitar botões
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtEfetivar.setEnabled(!true);
            jBtAuditoriaInventario.setEnabled(!true);
        } else {
            //Habilitar/Desabilitar campos
            jComboBoxTipoProduto.setEnabled(!true);
            jComboBoxTipoInventario.setEnabled(!true);
            jBtPesqLocalArmazenamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            // Habilitar/Desabilitar botões
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtEfetivar.setEnabled(true);
            jBtAuditoriaInventario.setEnabled(true);
        }
    }

    public void PREENCHER_COMBO_local() {
        CONTROLE.MOSTRA_local(objInventEstoque);
    }

    public void NovoItem() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jCodigoBarra.setText("");
        jComboBoxUnidProduto.setSelectedItem(null);
        jQtd.setText("");
        jValorCusto.setText("");
        jLocalArmazenamentoItem.setText("");
        jDataVctoLote.setDate(null);
        //
        if (jComboBoxTipoProduto.getSelectedItem().equals("Todos os Produtos")) {
            jRBtArmas.setEnabled(true);
            jRBtEPIs.setEnabled(true);
        } else {
            jRBtArmas.setEnabled(!true);
            jRBtEPIs.setEnabled(!true);
        }
        jBtPesqProdutoInve.setEnabled(true);
        jComboBoxUnidProduto.setEnabled(true);
        jCodigoBarra.setEnabled(true);
        jQtd.setEnabled(true);
        jValorCusto.setEnabled(true);
        jLocalArmazenamentoItem.setEnabled(!true);
        jDataVctoLote.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtEfetivar.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
        jBtImpressaoItens.setEnabled(!true);
        jBtBuscarProduto.setEnabled(!true);
    }

    public void AlterarItem() {
        if (jComboBoxTipoProduto.getSelectedItem().equals("Todos os Produtos")) {
            jRBtArmas.setEnabled(true);
            jRBtEPIs.setEnabled(true);
        } else {
            jRBtArmas.setEnabled(!true);
            jRBtEPIs.setEnabled(!true);
        }
        //
        jBtPesqProdutoInve.setEnabled(true);
        jComboBoxUnidProduto.setEnabled(true);
        jCodigoBarra.setEnabled(true);
        jQtd.setEnabled(true);
        jValorCusto.setEnabled(true);
        jLocalArmazenamentoItem.setEnabled(!true);
        jDataVctoLote.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtEfetivar.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
        jBtImpressaoItens.setEnabled(!true);
        jBtBuscarProduto.setEnabled(!true);
    }

    public void ExcluirItem() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jCodigoBarra.setText("");
        jComboBoxUnidProduto.setSelectedItem(null);
        jQtd.setText("");
        jValorCusto.setText("");
        jLocalArmazenamentoItem.setText("");
        jDataVctoLote.setDate(null);
        //
        jBtPesqProdutoInve.setEnabled(!true);
        jComboBoxUnidProduto.setEnabled(!true);
        jCodigoBarra.setEnabled(!true);
        jQtd.setEnabled(!true);
        jValorCusto.setEnabled(!true);
        jLocalArmazenamentoItem.setEnabled(!true);
        jDataVctoLote.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtEfetivar.setEnabled(true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtImpressaoItens.setEnabled(!true);
        jBtBuscarProduto.setEnabled(true);
    }

    public void SalvarItem() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jCodigoBarra.setText("");
        jComboBoxUnidProduto.setSelectedItem(null);
        jQtd.setText("");
        jValorCusto.setText("");
        jLocalArmazenamentoItem.setText("");
        jDataVctoLote.setDate(null);
        //
        jBtPesqProdutoInve.setEnabled(!true);
        jCodigoBarra.setEnabled(!true);
        jQtd.setEnabled(!true);
        jValorCusto.setEnabled(!true);
        jComboBoxUnidProduto.setEnabled(!true);
        jLocalArmazenamentoItem.setEnabled(!true);
        jDataVctoLote.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtEfetivar.setEnabled(true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtImpressaoItens.setEnabled(true);
        jBtBuscarProduto.setEnabled(true);
    }

    public void CancelarItem() {
        //
        jBtPesqProdutoInve.setEnabled(!true);
        jCodigoBarra.setEnabled(!true);
        jComboBoxUnidProduto.setEnabled(!true);
        jQtd.setEnabled(!true);
        jValorCusto.setEnabled(!true);
        jLocalArmazenamentoItem.setEnabled(!true);
        jDataVctoLote.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtEfetivar.setEnabled(true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscarProduto.setEnabled(true);
    }

    public void pBUSCAR_codigo() {
        CONTROL.pPESQUISAR_CODIGO_invent(objInventEstoque);
    }

    public void verificarTipoInventario() {
        CONTROL.PESQUISA_inventario(objInventEstoque);
        tipoInventario = objInventEstoque.getTipoInventario();
        codLocal = String.valueOf(objInventEstoque.getIdLocal());
    }

    public void verificarItemCadastrado() {
        CONTROL.PESQUISAR_codigo(objInventEstoque);
        codigoProduto = String.valueOf(objInventEstoque.getIdProduto());
        codigoInventario = String.valueOf(objInventEstoque.getIdLanc());
    }

    public void pPREENCHER_TABELA_codigo() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaInventarioEstoque.getModel();
        try {
            for (InventarioArmaEPI pp : CONTROL.pPESQUISAR_INVENTARIO_codigo()) {
                dataEntrada = String.valueOf(pp.getDataInicio());
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(pTOTAL_inve)); // Converter inteiro em string para exibir na tela
                dadosOrigem.addRow(new Object[]{pp.getIdLanc(), dataEntrada, pp.getStatusLanc(), pp.getObservacao()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaInventarioEstoque.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaInventarioEstoque.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaInventarioEstoque.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            }
            if (pTOTAL_inve == 0) {
                JOptionPane.showMessageDialog(null, "Não existem dados da serem exibidos...");
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaInventarioArmasEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void pPREENCHER_TABELA_data() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaInventarioEstoque.getModel();
        try {
            for (InventarioArmaEPI pp : CONTROL.pPESQUISAR_INVENTARIO_data()) {
                dataEntrada = String.valueOf(pp.getDataInicio());
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(pTOTAL_inve)); // Converter inteiro em string para exibir na tela
                dadosOrigem.addRow(new Object[]{pp.getIdLanc(), dataEntrada, pp.getStatusLanc(), pp.getObservacao()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaInventarioEstoque.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaInventarioEstoque.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaInventarioEstoque.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            }
            if (pTOTAL_inve == 0) {
                JOptionPane.showMessageDialog(null, "Não existem dados da serem exibidos...");
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaInventarioArmasEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void limparTabela() {
        // LIMPAR TABELA DE PRODUTOS SELECIONADOS PARA BAIXA
        while (jTabelaInventarioEstoque.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaInventarioEstoque.getModel()).removeRow(0);
        }
        // LIMPAR O TOTALIZADOR DA TABELA PRODUTOS SELECIONADOS PARA BAIXA
        jtotalRegistros.setText("");
    }

    public void preencherTabelaItensInventario() {
        CONTROLE.VERIFICAR_TIPO_produto(objInventEstoque);
        pTIPO_ARMA_epi = objInventEstoque.getTipoArmaEPI();
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaItensProdutoInvent.getModel();
        if (pTIPO_ARMA_epi == 0 || pTIPO_ARMA_epi == 1) {
            try {
                for (InventarioArmaEPI gg : CONTROLE.ITENS_ARMAS_registro()) {
                    jtotalRegistros.setText(Integer.toString(pTOTAL_epi)); // Converter inteiro em string para exibir na tela
                    dadosOrigem.addRow(new Object[]{gg.getIdItem(), gg.getIdProduto(), gg.getIdLanc(), gg.getNomeProduto(), gg.getUnidade(), gg.getQtdItem(), gg.getNomeLocalArmazenamento(), gg.getDataLote()});
                    // BARRA DE ROLAGEM HORIZONTAL
                    jTabelaItensProdutoInvent.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    // ALINHAR TEXTO DA TABELA CENTRALIZADO
                    DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                    centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                    //
                    jTabelaItensProdutoInvent.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                    jTabelaItensProdutoInvent.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                    jTabelaItensProdutoInvent.getColumnModel().getColumn(5).setCellRenderer(centralizado);
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
            }
            //ITENS EPI, QUANDO TIVER
            try {
                for (InventarioArmaEPI gg : CONTROLE.ITENS_EPI_registro()) {
                    jtotalRegistros.setText(Integer.toString(pTOTAL_epi)); // Converter inteiro em string para exibir na tela
                    dadosOrigem.addRow(new Object[]{gg.getIdItem(), gg.getIdProduto(), gg.getIdLanc(), gg.getNomeProduto(), gg.getUnidade(), gg.getQtdItem(), gg.getNomeLocalArmazenamento(), gg.getDataLote()});
                    // BARRA DE ROLAGEM HORIZONTAL
                    jTabelaItensProdutoInvent.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    // ALINHAR TEXTO DA TABELA CENTRALIZADO
                    DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                    centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                    //
                    jTabelaItensProdutoInvent.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                    jTabelaItensProdutoInvent.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                    jTabelaItensProdutoInvent.getColumnModel().getColumn(5).setCellRenderer(centralizado);
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaEquipamentosEPI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void limparProdutosInventario() {
        // LIMPAR TABELA DE PRODUTOS SELECIONADOS PARA BAIXA
        while (jTabelaItensProdutoInvent.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaItensProdutoInvent.getModel()).removeRow(0);
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
