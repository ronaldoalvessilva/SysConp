/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleGerarPopulacao;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleMovInternos;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.GerarPopNominal;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */ 
public class TelaGerarPopulacaoNominalCrc extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ControleGerarPopulacao control = new ControleGerarPopulacao();
    GerarPopNominal objPopNom = new GerarPopNominal();
    ControleMovInternos controlMov = new ControleMovInternos();  // HISTÓRICO DE MOVIMENTAÇÃO DE SAIDA NO CRC
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "CRC:Lançar População Nominal de Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag;
    int acao;
    //         
    String dataGeracao, dataPopulacao;
    Date dataBanco;
    // String beneficio = "SAIDA TEMPORARIA";
    String situacaoEnt = "ENTRADA NA UNIDADE";
    String situacaoRet = "RETORNO A UNIDADE";
    String situacaoTmp = "SAIDA TEMPORARIA";
    String situacaoLimpa = "";
    //
    String nrDocumentoRetorno = ""; //Número documeto vazio para gerar o aviso de evasão
    String evadido = "";
    int count = 0;

    /**
     * Creates new form TelaGerarValeTransporte
     */
    public TelaGerarPopulacaoNominalCrc() {
        initComponents();
        jDataLancamento.setCalendar(Calendar.getInstance());
        corCampos();
        jProgressBar1.setVisible(!true);
        setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE); //Impedir que a janela seja fechada pelo X  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaPopulacaoAtual = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaPrevisaoPopulacaoInternos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxBuscarTodos = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jDataLancamento = new com.toedter.calendar.JDateChooser();
        jBtSair = new javax.swing.JButton();
        jBtEnviarTodos = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        lblCarregando = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jtotalRegistros2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Gerar População Nominal de Internos Por Data :::...");

        jBtSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSalvar.setForeground(new java.awt.Color(0, 204, 51));
        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "População Atual", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jTabelaPopulacaoAtual.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPopulacaoAtual.setForeground(new java.awt.Color(0, 0, 255));
        jTabelaPopulacaoAtual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Código", "Nome do Interno"
            }
        ));
        jTabelaPopulacaoAtual.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTabelaPopulacaoAtual);
        if (jTabelaPopulacaoAtual.getColumnModel().getColumnCount() > 0) {
            jTabelaPopulacaoAtual.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaPopulacaoAtual.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaPopulacaoAtual.getColumnModel().getColumn(1).setMinWidth(320);
            jTabelaPopulacaoAtual.getColumnModel().getColumn(1).setMaxWidth(320);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Internos na Unidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jTabelaPrevisaoPopulacaoInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPrevisaoPopulacaoInternos.setForeground(new java.awt.Color(255, 0, 0));
        jTabelaPrevisaoPopulacaoInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Código", "Nome Interno"
            }
        ));
        jScrollPane1.setViewportView(jTabelaPrevisaoPopulacaoInternos);
        if (jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Polução dos Internos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jCheckBoxBuscarTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxBuscarTodos.setText("Buscar Internos");
        jCheckBoxBuscarTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxBuscarTodosItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Lançamento:");

        jDataLancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLancamento.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxBuscarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxBuscarTodos)
                    .addComponent(jLabel3)
                    .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jBtSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSair.setForeground(new java.awt.Color(255, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtEnviarTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtEnviarTodos.setForeground(new java.awt.Color(255, 0, 0));
        jBtEnviarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7854_16x16.png"))); // NOI18N
        jBtEnviarTodos.setText("Selecionar Internos");
        jBtEnviarTodos.setEnabled(false);
        jBtEnviarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarTodosActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Essa tarefa só poderá ser executada uma vez por data. Caso seja executado mais de uma vez na mesma data, irá truncar a ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("população. Dúvidas, solicite apoio do Administrador do Sistema.");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("ATENÇÃO: ");

        jProgressBar1.setStringPainted(true);

        lblCarregando.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCarregando.setForeground(new java.awt.Color(204, 0, 0));
        lblCarregando.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Total de Registros--->:");

        jtotalRegistros.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistros.setForeground(new java.awt.Color(255, 0, 0));
        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addComponent(jtotalRegistros)
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jtotalRegistros});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtotalRegistros2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistros2.setForeground(new java.awt.Color(0, 0, 255));
        jtotalRegistros2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Total Registros Atual--->:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtotalRegistros2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jtotalRegistros2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCarregando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBtEnviarTodos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtSalvar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtSair)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtSair, jBtSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtSalvar)
                        .addComponent(jBtSair))
                    .addComponent(jBtEnviarTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCarregando, javax.swing.GroupLayout.DEFAULT_SIZE, 4, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtSair, jBtSalvar});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel1, jPanel3});

        setBounds(250, 10, 812, 475);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtEnviarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarTodosActionPerformed
        // TODO add your handling code here  
        jTabelaPopulacaoAtual.setModel(jTabelaPrevisaoPopulacaoInternos.getModel());
        String[] Colunas = new String[]{"Código", "Nome do Interno"};
        //
        jTabelaPopulacaoAtual.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPopulacaoAtual.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPopulacaoAtual.getColumnModel().getColumn(1).setPreferredWidth(320);
        jTabelaPopulacaoAtual.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPopulacaoAtual.getTableHeader().setReorderingAllowed(false);
        jTabelaPopulacaoAtual.setAutoResizeMode(jTabelaPopulacaoAtual.AUTO_RESIZE_OFF);
        jTabelaPopulacaoAtual.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAtual();
        // Limpa a tabela caso selecione todos os registros 
        jTabelaPrevisaoPopulacaoInternos.setVisible(!true);
        jBtSalvar.setEnabled(true);
        jDataLancamento.setEnabled(true);
        jtotalRegistros2.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela               
        jtotalRegistros.setText("");
    }//GEN-LAST:event_jBtEnviarTodosActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        verificarPopulacao(); // Verificar se a população já foi gerada pelo usuário.
        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
        dataGeracao = formatoAmerica.format(jDataLancamento.getDate().getTime());
        if (dataBanco != null) {
            dataPopulacao = formatoAmerica.format(dataBanco);
        }
        if (dataPopulacao != null && dataGeracao.compareTo(dataPopulacao) <= 0) {
            JOptionPane.showMessageDialog(rootPane, "População já foi cadastrada.");
        } else {
            if (jDataLancamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data da População.");
                jDataLancamento.requestFocus();
                jDataLancamento.setBackground(Color.red);
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Antes de realizar essa tarefa, faça todas as entradas e saidas dos internos.\nTem certeza que deseja gerar a população diária dos internos?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    jProgressBar1.setVisible(true);
                    jBtEnviarTodos.setEnabled(!true);
                    jBtSalvar.setEnabled(!true);
                    jBtSair.setEnabled(!true);
                    jCheckBoxBuscarTodos.setEnabled(!true);
                    jDataLancamento.setEnabled(!true);
                    new Thread() {
                        public void run() {
                            try {
                                sleep(100);
                            } catch (InterruptedException ex) {
                            }
                            for (int i = 0; i < jTabelaPopulacaoAtual.getRowCount(); i++) {
                                jProgressBar1.setValue(i);
                                objPopNom.setDataLanc(jDataLancamento.getDate());
                                objPopNom.setIdInternoCrc((int) jTabelaPopulacaoAtual.getValueAt(i, 0));
                                control.incluirPopulacaoNominal(objPopNom);
                                if (jProgressBar1.getValue() <= 15) {
                                    lblCarregando.setText("Carregando registros, Aguarde...");
                                } else if (jProgressBar1.getValue() <= 40) {
                                    lblCarregando.setText("Iniciando transferência de registros, Aguarde...");
                                } else if (jProgressBar1.getValue() == 100 && count == jTabelaPopulacaoAtual.getRowCount()) {
                                    lblCarregando.setText("População gerado com sucesso !!!");
                                    jBtSair.setEnabled(true);
                                }
                            }
                        }
                    }.start();
                }
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jCheckBoxBuscarTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxBuscarTodosItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaPrevisaoPopulacaoInternos.setVisible(true);
            this.preencherTabelaPrevisaoPopulacaoInternos("SELECT * FROM PRONTUARIOSCRC WHERE SituacaoCrc='" + situacaoEnt + "'OR SituacaoCrc='" + situacaoRet + "'OR SituacaoCrc='" + situacaoTmp + "'");
            jDataLancamento.setEnabled(true);
            jBtEnviarTodos.setEnabled(true);
        } else {
            jtotalRegistros.setText("");
            limparTabela();
            jDataLancamento.setEnabled(!true);
            jBtEnviarTodos.setEnabled(!true);
        }
    }//GEN-LAST:event_jCheckBoxBuscarTodosItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtEnviarTodos;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JCheckBox jCheckBoxBuscarTodos;
    public static com.toedter.calendar.JDateChooser jDataLancamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jTabelaPopulacaoAtual;
    private javax.swing.JTable jTabelaPrevisaoPopulacaoInternos;
    private javax.swing.JLabel jtotalRegistros;
    private javax.swing.JLabel jtotalRegistros2;
    private javax.swing.JLabel lblCarregando;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jDataLancamento.setBackground(Color.white);
    }

    public void preencherTabelaPrevisaoPopulacaoInternos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPrevisaoPopulacaoInternos.setModel(modelo);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(1).setPreferredWidth(310);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPrevisaoPopulacaoInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPrevisaoPopulacaoInternos.setAutoResizeMode(jTabelaPrevisaoPopulacaoInternos.AUTO_RESIZE_OFF);
        jTabelaPrevisaoPopulacaoInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaPrevisao();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPrevisaoPopulacaoInternos.setModel(modelo);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(1).setPreferredWidth(310);
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPrevisaoPopulacaoInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPrevisaoPopulacaoInternos.setAutoResizeMode(jTabelaPrevisaoPopulacaoInternos.AUTO_RESIZE_OFF);
        jTabelaPrevisaoPopulacaoInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void alinharCamposTabelaPrevisao() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPrevisaoPopulacaoInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void alinharCamposTabelaAtual() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPopulacaoAtual.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void verificarPopulacao() {
        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
        dataGeracao = formatoAmerica.format(jDataLancamento.getDate().getTime());
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM POPULACAOINTERNOS_CRC WHERE DataPop='" + dataGeracao + "'");
            conecta.rs.first();
            dataBanco = conecta.rs.getDate("DataPop");
        } catch (Exception e) {
        }
    }
}
