/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAtestadoMedicoPsiquiatrico;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleMovAtestadoMedicoPsiquiatrico;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.AdmissaoMedica;
import gestor.Modelo.AtestadoMedicoPsiquiatrico;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaAdmissaoMedica.jIdAdm;
import static gestor.Visao.TelaAdmissaoMedica.jIdInternoAdm;
import static gestor.Visao.TelaAdmissaoMedica.jIdPrescricaoMedica;
import static gestor.Visao.TelaAdmissaoMedica.jNomeInternoAdm;
import static gestor.Visao.TelaAdmissaoMedica.jStatusLanc;
import static gestor.Visao.TelaAdmissaoMedica.jTabelaAtestado;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloEnfermaria.codAbrirENF;
import static gestor.Visao.TelaModuloEnfermaria.codAlterarENF;
import static gestor.Visao.TelaModuloEnfermaria.codConsultarENF;
import static gestor.Visao.TelaModuloEnfermaria.codExcluirENF;
import static gestor.Visao.TelaModuloEnfermaria.codGravarENF;
import static gestor.Visao.TelaModuloEnfermaria.codIncluirENF;
import static gestor.Visao.TelaModuloEnfermaria.codUserAcessoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserGroupENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeTelaENF;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ronal
 */
public class TelaAtestadoMedicoPsiquiatrico extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AdmissaoMedica objAdmMedico = new AdmissaoMedica();
    // 
    AtestadoMedicoPsiquiatrico objAtestado = new AtestadoMedicoPsiquiatrico();
    ControleAtestadoMedicoPsiquiatrico controleAtestado = new ControleAtestadoMedicoPsiquiatrico();
    ControleMovAtestadoMedicoPsiquiatrico controleMovAtestado = new ControleMovAtestadoMedicoPsiquiatrico();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    //
    String nomeModuloTela5 = "Movimentação:Admissão Médica de Internos:Atestado Médico/Psiquiatrico";
    int flag = 0;
    int acao = 0;
    int count = 0;
    String statusMov;
    String horaMov;
    String dataModFinal;
    String nomeUserRegistro;
    String deptoTecnico = "ENFERMARIA";
    int tipoModelo;
    String descricaoModelo;
    int idItemAtestado;
    String modeloAtestadoA, modeloAtestadoB, modeloAtestadoC, modeloAtestadoAleatorio;
    String dataAtestado;

    /**
     * Creates new form TelaAtestadoMedicoPsiquiatrico
     */
    public static TelaAdmissaoMedica telaAdmissaoMedica;

    public TelaAtestadoMedicoPsiquiatrico(TelaAdmissaoMedica parent, boolean modal) {
        this.telaAdmissaoMedica = parent;
        this.setModal(modal);
        setLocationRelativeTo(telaAdmissaoMedica);
        initComponents();
        formatarCampos();
        preencherTabelaAtestadoMedicaPsiquiatrico("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotoesModelo = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTabelaAtestadoMedico = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jBtNovoAtestado = new javax.swing.JButton();
        jBtAlterarAtestado = new javax.swing.JButton();
        jBtExcluirAtestado = new javax.swing.JButton();
        jBtSalvarAtestado = new javax.swing.JButton();
        jBtCancelarAtestado = new javax.swing.JButton();
        jBtImprimirAtestado = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jIdAtestado = new javax.swing.JTextField();
        jNomeInternoAtestado = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jDataAtestado = new com.toedter.calendar.JDateChooser();
        jLabel30 = new javax.swing.JLabel();
        jRadioBtModeloAleatorio = new javax.swing.JRadioButton();
        jRadioBtModeloA = new javax.swing.JRadioButton();
        jRadioBtModeloB = new javax.swing.JRadioButton();
        jRadioBtModeloC = new javax.swing.JRadioButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextoAtestado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...:: Atestado Médico - Clinico/Psiquiatrico :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTabelaAtestadoMedico.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAtestadoMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Modelo"
            }
        ));
        jTabelaAtestadoMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAtestadoMedicoMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(jTabelaAtestadoMedico);
        if (jTabelaAtestadoMedico.getColumnModel().getColumnCount() > 0) {
            jTabelaAtestadoMedico.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTabelaAtestadoMedico.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTabelaAtestadoMedico.getColumnModel().getColumn(2).setPreferredWidth(400);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovoAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoAtestado.setToolTipText("Novo");
        jBtNovoAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoAtestadoActionPerformed(evt);
            }
        });

        jBtAlterarAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarAtestado.setToolTipText("Alterar");
        jBtAlterarAtestado.setEnabled(false);
        jBtAlterarAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarAtestadoActionPerformed(evt);
            }
        });

        jBtExcluirAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirAtestado.setToolTipText("Excluir");
        jBtExcluirAtestado.setEnabled(false);
        jBtExcluirAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirAtestadoActionPerformed(evt);
            }
        });

        jBtSalvarAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarAtestado.setToolTipText("Gravar");
        jBtSalvarAtestado.setEnabled(false);
        jBtSalvarAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarAtestadoActionPerformed(evt);
            }
        });

        jBtCancelarAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarAtestado.setToolTipText("Cancelar");
        jBtCancelarAtestado.setEnabled(false);
        jBtCancelarAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarAtestadoActionPerformed(evt);
            }
        });

        jBtImprimirAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimirAtestado.setToolTipText("Imprimir");
        jBtImprimirAtestado.setEnabled(false);
        jBtImprimirAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirAtestadoActionPerformed(evt);
            }
        });

        jBtSair.setForeground(new java.awt.Color(204, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovoAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(jBtImprimirAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtSair)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarAtestado, jBtCancelarAtestado, jBtExcluirAtestado, jBtImprimirAtestado, jBtNovoAtestado, jBtSalvarAtestado});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtSair)
                    .addComponent(jBtImprimirAtestado)
                    .addComponent(jBtCancelarAtestado)
                    .addComponent(jBtSalvarAtestado)
                    .addComponent(jBtExcluirAtestado)
                    .addComponent(jBtAlterarAtestado)
                    .addComponent(jBtNovoAtestado))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarAtestado, jBtCancelarAtestado, jBtExcluirAtestado, jBtImprimirAtestado, jBtNovoAtestado, jBtSalvarAtestado});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Nr. Atestado");

        jIdAtestado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdAtestado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdAtestado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jIdAtestado.setEnabled(false);

        jNomeInternoAtestado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoAtestado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jNomeInternoAtestado.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Nome Completo do Interno");

        jDataAtestado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAtestado.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Data");

        grupoBotoesModelo.add(jRadioBtModeloAleatorio);
        jRadioBtModeloAleatorio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtModeloAleatorio.setForeground(new java.awt.Color(153, 0, 102));
        jRadioBtModeloAleatorio.setSelected(true);
        jRadioBtModeloAleatorio.setText("Modelo Aleatório");
        jRadioBtModeloAleatorio.setEnabled(false);
        jRadioBtModeloAleatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioBtModeloAleatorioMouseClicked(evt);
            }
        });

        grupoBotoesModelo.add(jRadioBtModeloA);
        jRadioBtModeloA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtModeloA.setForeground(new java.awt.Color(255, 0, 0));
        jRadioBtModeloA.setText("Modelo A");
        jRadioBtModeloA.setEnabled(false);
        jRadioBtModeloA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioBtModeloAMouseClicked(evt);
            }
        });

        grupoBotoesModelo.add(jRadioBtModeloB);
        jRadioBtModeloB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtModeloB.setForeground(new java.awt.Color(0, 0, 255));
        jRadioBtModeloB.setText("Modelo B");
        jRadioBtModeloB.setEnabled(false);
        jRadioBtModeloB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioBtModeloBMouseClicked(evt);
            }
        });

        grupoBotoesModelo.add(jRadioBtModeloC);
        jRadioBtModeloC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtModeloC.setForeground(new java.awt.Color(0, 153, 0));
        jRadioBtModeloC.setText("Modelo C");
        jRadioBtModeloC.setEnabled(false);
        jRadioBtModeloC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioBtModeloCMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jIdAtestado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNomeInternoAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jDataAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jRadioBtModeloA)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioBtModeloB)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioBtModeloC)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioBtModeloAleatorio)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jDataAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel30)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jLabel26))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jNomeInternoAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRadioBtModeloA)
                    .addComponent(jRadioBtModeloB)
                    .addComponent(jRadioBtModeloC)
                    .addComponent(jRadioBtModeloAleatorio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextoAtestado.setColumns(20);
        jTextoAtestado.setRows(5);
        jTextoAtestado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoAtestado.setEnabled(false);
        jScrollPane9.setViewportView(jTextoAtestado);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabelaAtestadoMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAtestadoMedicoMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idItem = "" + jTabelaAtestadoMedico.getValueAt(jTabelaAtestadoMedico.getSelectedRow(), 0);
            // Habilitar os botões
            jBtNovoAtestado.setEnabled(!true);
            jBtAlterarAtestado.setEnabled(true);
            jBtExcluirAtestado.setEnabled(true);
            jBtSalvarAtestado.setEnabled(!true);
            jBtCancelarAtestado.setEnabled(true);
            jBtImprimirAtestado.setEnabled(true);
            jRadioBtModeloA.setEnabled(!true);
            jRadioBtModeloB.setEnabled(!true);
            jRadioBtModeloC.setEnabled(!true);
            jRadioBtModeloAleatorio.setEnabled(!true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                        + "WHERE IdLanc='" + jIdAdm.getText() + "'AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIdAtestado.setText(conecta.rs.getString("IdItem")); //Coluna 0
                idItemAtestado = conecta.rs.getInt("IdItem"); // Coluna 2
                jNomeInternoAtestado.setText(jNomeInternoAdm.getText());
                jDataAtestado.setDate(conecta.rs.getDate("DataAtesta"));
                tipoModelo = conecta.rs.getInt("ModeloAtestado");
                if (tipoModelo == 0) {
                    jRadioBtModeloA.setSelected(true);
                } else if (tipoModelo == 1) {
                    jRadioBtModeloB.setSelected(true);
                } else if (tipoModelo == 2) {
                    jRadioBtModeloC.setSelected(true);
                } else if (tipoModelo == 3) {
                    jRadioBtModeloAleatorio.setSelected(true);
                }
                jTextoAtestado.setText(conecta.rs.getString("TextoAtestado"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaAtestadoMedicoMouseClicked

    private void jBtNovoAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoAtestadoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioAtestado();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela5) && codIncluirENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 9;
            NovoAtestado();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir prontuário médico.");
        }
    }//GEN-LAST:event_jBtNovoAtestadoActionPerformed

    private void jBtCancelarAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarAtestadoActionPerformed
        // TODO add your handling code here:
        CancelarAtestado();
    }//GEN-LAST:event_jBtCancelarAtestadoActionPerformed

    private void jBtSalvarAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarAtestadoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioAtestado();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela5) && codGravarENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            if (jDataAtestado.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do Atestado.");
            } else if (jTextoAtestado.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe um texto para o Atestado.");
            } else {
                objAtestado.setDataAtesta(jDataAtestado.getDate());
                if (jRadioBtModeloA.isSelected()) {
                    tipoModelo = 0;
                } else if (jRadioBtModeloB.isSelected()) {
                    tipoModelo = 1;
                } else if (jRadioBtModeloC.isSelected()) {
                    tipoModelo = 2;
                } else if (jRadioBtModeloAleatorio.isSelected()) {
                    tipoModelo = 3;
                }
                objAtestado.setModeloAtestado(tipoModelo);
                objAtestado.setTextoAtestado(jTextoAtestado.getText());
                objAtestado.setStatusLanc(jStatusLanc.getText());
                if (acao == 9) {
                    objAtestado.setUsuarioInsert(nameUser);
                    objAtestado.setDataInsert(dataModFinal);
                    objAtestado.setHorarioInsert(horaMov);
                    objAtestado.setIdLanc(Integer.valueOf(jIdAdm.getText()));
                    objAtestado.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    controleAtestado.incluirAtestadoMedicoPsiquiatrico(objAtestado);
                    buscarAtestado();
                    objAtestado.setDeptoMedico(deptoTecnico);
                    objAtestado.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    objAtestado.setIdLanc(Integer.valueOf(jIdAtestado.getText()));
                    controleMovAtestado.incluirMovTecAtestado(objAtestado); // Histórico de Movimento Técnico
                    //
                    objLog5();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarAtestado();
                    preencherTabelaAtestadoMedicaPsiquiatrico("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    preencherTabelaAtestadoMedica("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 10) {
                    objAtestado.setUsuarioUp(nameUser);
                    objAtestado.setDataUp(dataModFinal);
                    objAtestado.setHorarioUp(horaMov);
                    objAtestado.setIdLanc(Integer.valueOf(jIdAdm.getText()));
                    objAtestado.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    objAtestado.setIdItem(idItemAtestado);
                    controleAtestado.alterarAtestadoMedicoPsiquiatrico(objAtestado);
                    //
                    objAtestado.setDeptoMedico(deptoTecnico);
                    objAtestado.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    objAtestado.setIdLanc(Integer.valueOf(jIdAtestado.getText()));
                    controleMovAtestado.alterarMovTecAtestado(objAtestado);
                    //
                    objLog5();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarAtestado();
                    preencherTabelaAtestadoMedicaPsiquiatrico("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    preencherTabelaAtestadoMedica("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar prontuário médico.");
        }
    }//GEN-LAST:event_jBtSalvarAtestadoActionPerformed

    private void jBtAlterarAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarAtestadoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioAtestado();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela5) && codAlterarENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                        + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                conecta.rs.first();
                nomeUserRegistro = conecta.rs.getString("UsuarioInsert");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
            }
            if (nomeUserRegistro == null ? nameUser == null : nomeUserRegistro.equals(nameUser)) {
                acao = 10;
                AlterarAtestado();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserRegistro + " só esse usuário poderá modificar.");
                conecta.desconecta();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a alterar prontuário médico.");
        }
    }//GEN-LAST:event_jBtAlterarAtestadoActionPerformed

    private void jBtExcluirAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirAtestadoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioAtestado();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela5) && codExcluirENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                        + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                conecta.rs.first();
                nomeUserRegistro = conecta.rs.getString("UsuarioInsert");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
            }
            if (nomeUserRegistro == null ? nameUser == null : nomeUserRegistro.equals(nameUser)) {
                objAdmMedico.setStatusLanc(jStatusLanc.getText());
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir a prescrição selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objAtestado.setIdItem(Integer.parseInt(jIdPrescricaoMedica.getText()));
                    objAtestado.setIdLanc(Integer.parseInt(jIdAdm.getText()));
                    controleAtestado.excluirAtestadoMedicoPsiquiatrico(objAtestado);
                    //
                    objAtestado.setIdLanc(Integer.parseInt(jIdAdm.getText()));
                    objAtestado.setIdItem(Integer.parseInt(jIdPrescricaoMedica.getText()));
                    objAtestado.setDeptoMedico(deptoTecnico);
                    controleMovAtestado.excluirMovTecAtestado(objAtestado); // Excluir movimento histórico.
                    objLog5();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    ExcluirAtestado();
                    preencherTabelaAtestadoMedicaPsiquiatrico("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    preencherTabelaAtestadoMedica("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserRegistro + " só esse usuário poderá modificar.");
                conecta.desconecta();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a excluir prontuário médico.");
        }
    }//GEN-LAST:event_jBtExcluirAtestadoActionPerformed

    private void jBtImprimirAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirAtestadoActionPerformed
        // TODO add your handling code here:
        if (jIdAtestado.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível imprimir atestado médico.");
        } else {
            try {
                //PARA MOSTRAR O RELATÓRIO NA FRENTE DO JDIALOG.
                JDialog viewer = new JDialog(new javax.swing.JFrame(), "Visualização do Relatório", true);
                viewer.setSize(800, 600);
                viewer.setLocationRelativeTo(null);
                conecta.abrirConexao();
                String path = "reports/RelatorioAtestadoMedico.jasper";
                conecta.executaSQL("SELECT * FROM ADMISSAOMEDICA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ADMISSAOMEDICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ATESTADO_MEDICO_PSIQUIATRICO "
                        + "ON ADMISSAOMEDICA.IdLanc=ATESTADO_MEDICO_PSIQUIATRICO.IdLanc "
                        + "WHERE ATESTADO_MEDICO_PSIQUIATRICO.IdLanc='" + jIdAdm.getText() + "' "
                        + "AND ATESTADO_MEDICO_PSIQUIATRICO.IdItem='" + jIdAtestado.getText() + "'");
                HashMap parametros = new HashMap();
                parametros.put("codigoAdm", jIdAdm.getText());
                parametros.put("codigoAtestado", jIdAtestado.getText());
                parametros.put("nomeUsuario", nameUser);
                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio
                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao
                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
                jv.setTitle("Atestado Médico/Psiquiatrico");
                viewer.getContentPane().add(jv.getContentPane());
                viewer.setVisible(true);
                jv.toFront(); // Traz o relatorio para frente da aplicação
                conecta.desconecta();
            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
            }
        }
    }//GEN-LAST:event_jBtImprimirAtestadoActionPerformed

    private void jRadioBtModeloAleatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioBtModeloAleatorioMouseClicked
        // TODO add your handling code here:
        if (!jIdAtestado.getText().equals("") && tipoModelo == 3 && jIdAtestado.getText().equals(tipoModelo)) {
            jTextoAtestado.setText(modeloAtestadoAleatorio);
        } else if (acao == 9) {
            jTextoAtestado.setText(modeloAtestadoAleatorio);
        }
    }//GEN-LAST:event_jRadioBtModeloAleatorioMouseClicked

    private void jRadioBtModeloAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioBtModeloAMouseClicked
        // TODO add your handling code here:
        if (!jIdAtestado.getText().equals("") && tipoModelo == 0 && jIdAtestado.getText().equals(tipoModelo)) {
            jTextoAtestado.setText(modeloAtestadoA);
        } else if (acao == 9) {
            jTextoAtestado.setText(modeloAtestadoA);
        }
    }//GEN-LAST:event_jRadioBtModeloAMouseClicked

    private void jRadioBtModeloBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioBtModeloBMouseClicked
        // TODO add your handling code here:
        if (!jIdAtestado.getText().equals("") && tipoModelo == 1 && jIdAtestado.getText().equals(tipoModelo) && acao == 10) {
            jTextoAtestado.setText(modeloAtestadoB);
        } else if (acao == 9) {
            jTextoAtestado.setText(modeloAtestadoB);
        }
    }//GEN-LAST:event_jRadioBtModeloBMouseClicked

    private void jRadioBtModeloCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioBtModeloCMouseClicked
        // TODO add your handling code here:
        if (!jIdAtestado.getText().equals("") && tipoModelo == 2 && jIdAtestado.getText().equals(tipoModelo)) {
            jTextoAtestado.setText(modeloAtestadoC);
        } else if (acao == 9) {
            jTextoAtestado.setText(modeloAtestadoC);
        }
    }//GEN-LAST:event_jRadioBtModeloCMouseClicked

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAtestadoMedicoPsiquiatrico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAtestadoMedicoPsiquiatrico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAtestadoMedicoPsiquiatrico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAtestadoMedicoPsiquiatrico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaAtestadoMedicoPsiquiatrico dialog = new TelaAtestadoMedicoPsiquiatrico(telaAdmissaoMedica, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoesModelo;
    private javax.swing.JButton jBtAlterarAtestado;
    private javax.swing.JButton jBtCancelarAtestado;
    private javax.swing.JButton jBtExcluirAtestado;
    private javax.swing.JButton jBtImprimirAtestado;
    private javax.swing.JButton jBtNovoAtestado;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvarAtestado;
    private com.toedter.calendar.JDateChooser jDataAtestado;
    public static javax.swing.JTextField jIdAtestado;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JTextField jNomeInternoAtestado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioBtModeloA;
    private javax.swing.JRadioButton jRadioBtModeloAleatorio;
    private javax.swing.JRadioButton jRadioBtModeloB;
    private javax.swing.JRadioButton jRadioBtModeloC;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaAtestadoMedico;
    private javax.swing.JTextArea jTextoAtestado;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        //
        modeloAtestadoA = "            ATESTADO MÉDICO \n\n\n "
                + "Declaro para os devidos fins que o Sr. (nome), (nacionalidade), (estado civil), "
                + "(profissão), inscrito no CPF sob o nº (informar) e no RG nº (informar), paciente sob "
                + "meus cuidados, não se encontra em condições para o trabalho, devendo se "
                + "afastar de suas atividades profissionais e permanecer em repouso de (data de "
                + "início) à (data de liberação). "
                + "\n\n(localidade), (dia) de (mês) de (ano).";
        modeloAtestadoB = "            ATESTADO MÉDICO \n\n\n\n "
                + "Atesto para os devidos fins a pedido do interessado que o Sr. FULAO DE TAL, portador de "
                + "RG XXXXXXXXX foi submetido a consulta médica nesta data, no horário das 15:00 hs, sendo "
                + "portador de afecção CID XXXXX. "
                + "Salvador, 18 de Dezembro de 2015 "
                + "___________________________ \n"
                + "AUTORIZAÇÃO "
                + "Eu FULANO DE TAL autorizo o Dr. FULANO DE TAL, a regstrar o diagnóstico CID "
                + "neste atestado médico\n\n\n "
                + "________________________________";
        modeloAtestadoC = "             ATESTADO MÉDICO \n\n\n "
                + "Atesto que o(a) Sr.(a) FULANO DE TAL portador(a)da Carteira de Identidade nº XXXXX, "
                + "encontra-se em boas condições de saúde, estando apto  para  realizar  o "
                + "exame  de  aptidão  física  previsto  no  Edital  nº  55/2014  –  DGP/DPF,"
                + "de  25  de setembro  de  2014,  do  concurso  público  para  provimento  de "
                + "vagas  no  cargo  de  Agente Penitenciario";
        modeloAtestadoAleatorio = "     ATESTADO MÉDICO \n\n\n ";
        jTextoAtestado.setLineWrap(true);
        jTextoAtestado.setWrapStyleWord(true);
        //
        jIdAtestado.setBackground(Color.white);
        jNomeInternoAtestado.setBackground(Color.white);
        jDataAtestado.setBackground(Color.white);
        jTextoAtestado.setBackground(Color.white);
    }

    public void NovoAtestado() {
        jIdAtestado.setText("");
        jNomeInternoAtestado.setText(jNomeInternoAdm.getText());
        jDataAtestado.setCalendar(Calendar.getInstance());
        jTextoAtestado.setText("");
        //
        jDataAtestado.setEnabled(!true);
        jRadioBtModeloA.setEnabled(true);
        jRadioBtModeloB.setEnabled(true);
        jRadioBtModeloC.setEnabled(true);
        jRadioBtModeloAleatorio.setEnabled(true);
        jTextoAtestado.setEnabled(true);
        //
        jBtNovoAtestado.setEnabled(!true);
        jBtAlterarAtestado.setEnabled(!true);
        jBtExcluirAtestado.setEnabled(!true);
        jBtSalvarAtestado.setEnabled(true);
        jBtCancelarAtestado.setEnabled(true);
        jBtImprimirAtestado.setEnabled(!true);
    }

    public void AlterarAtestado() {
        //
        jDataAtestado.setEnabled(!true);
        jRadioBtModeloA.setEnabled(true);
        jRadioBtModeloB.setEnabled(true);
        jRadioBtModeloC.setEnabled(true);
        jRadioBtModeloAleatorio.setEnabled(true);
        jTextoAtestado.setEnabled(true);
        //
        jBtNovoAtestado.setEnabled(!true);
        jBtAlterarAtestado.setEnabled(!true);
        jBtExcluirAtestado.setEnabled(!true);
        jBtSalvarAtestado.setEnabled(true);
        jBtCancelarAtestado.setEnabled(true);
        jBtImprimirAtestado.setEnabled(!true);
    }

    public void ExcluirAtestado() {
        jIdAtestado.setText("");
        jNomeInternoAtestado.setText("");
        jDataAtestado.setDate(null);
        jRadioBtModeloA.setSelected(true);
        jTextoAtestado.setText("");
        //
        jDataAtestado.setEnabled(!true);
        jRadioBtModeloA.setEnabled(!true);
        jRadioBtModeloB.setEnabled(!true);
        jRadioBtModeloC.setEnabled(!true);
        jRadioBtModeloAleatorio.setEnabled(!true);
        jTextoAtestado.setEnabled(!true);
        //
        jBtNovoAtestado.setEnabled(true);
        jBtAlterarAtestado.setEnabled(!true);
        jBtExcluirAtestado.setEnabled(!true);
        jBtSalvarAtestado.setEnabled(!true);
        jBtCancelarAtestado.setEnabled(!true);
        jBtImprimirAtestado.setEnabled(!true);
    }

    public void SalvarAtestado() {
        jDataAtestado.setEnabled(!true);
        jRadioBtModeloA.setEnabled(!true);
        jRadioBtModeloB.setEnabled(!true);
        jRadioBtModeloC.setEnabled(!true);
        jRadioBtModeloAleatorio.setEnabled(!true);
        jTextoAtestado.setEnabled(!true);
        //
        jBtNovoAtestado.setEnabled(true);
        jBtAlterarAtestado.setEnabled(true);
        jBtExcluirAtestado.setEnabled(true);
        jBtSalvarAtestado.setEnabled(!true);
        jBtCancelarAtestado.setEnabled(!true);
        jBtImprimirAtestado.setEnabled(true);
    }

    public void CancelarAtestado() {
        if (jIdAtestado.getText().equals("")) {
            jIdAtestado.setText("");
            jNomeInternoAtestado.setText("");
            jDataAtestado.setDate(null);
            jTextoAtestado.setText("");
            //
            jDataAtestado.setEnabled(!true);
            jRadioBtModeloA.setEnabled(!true);
            jRadioBtModeloB.setEnabled(!true);
            jRadioBtModeloC.setEnabled(!true);
            jRadioBtModeloAleatorio.setEnabled(!true);
            jTextoAtestado.setEnabled(!true);
            //
            jBtNovoAtestado.setEnabled(true);
            jBtAlterarAtestado.setEnabled(!true);
            jBtExcluirAtestado.setEnabled(!true);
            jBtSalvarAtestado.setEnabled(!true);
            jBtCancelarAtestado.setEnabled(!true);
            jBtImprimirAtestado.setEnabled(!true);
        } else {
            jDataAtestado.setEnabled(!true);
            jRadioBtModeloA.setEnabled(!true);
            jRadioBtModeloB.setEnabled(!true);
            jRadioBtModeloC.setEnabled(!true);
            jRadioBtModeloAleatorio.setEnabled(!true);
            jTextoAtestado.setEnabled(!true);
            //
            jBtNovoAtestado.setEnabled(true);
            jBtAlterarAtestado.setEnabled(true);
            jBtExcluirAtestado.setEnabled(true);
            jBtSalvarAtestado.setEnabled(!true);
            jBtCancelarAtestado.setEnabled(!true);
            jBtImprimirAtestado.setEnabled(true);
        }
    }

    public void buscarAtestado() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ATESTADO_MEDICO_PSIQUIATRICO");
            conecta.rs.last();
            jIdAtestado.setText(conecta.rs.getString("IdItem"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaAtestadoMedicaPsiquiatrico(String sql) {
        count = 0;
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Modelo"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                dataAtestado = conecta.rs.getString("DataAtesta");
                String diaat = dataAtestado.substring(8, 10);
                String mesat = dataAtestado.substring(5, 7);
                String anoat = dataAtestado.substring(0, 4);
                dataAtestado = diaat + "/" + mesat + "/" + anoat;
                tipoModelo = conecta.rs.getInt("ModeloAtestado");
                if (tipoModelo == 0) {
                    descricaoModelo = "Modelo A";
                } else if (tipoModelo == 1) {
                    descricaoModelo = "Modelo B";
                } else if (tipoModelo == 2) {
                    descricaoModelo = "Modelo C";
                } else if (tipoModelo == 3) {
                    descricaoModelo = "Modelo Aleatório";
                }
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), dataAtestado, descricaoModelo});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAtestadoMedico.setModel(modelo);
        jTabelaAtestadoMedico.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAtestadoMedico.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAtestadoMedico.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAtestadoMedico.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAtestadoMedico.getColumnModel().getColumn(2).setPreferredWidth(400);
        jTabelaAtestadoMedico.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAtestadoMedico.getTableHeader().setReorderingAllowed(false);
        jTabelaAtestadoMedico.setAutoResizeMode(jTabelaAtestadoMedico.AUTO_RESIZE_OFF);
        jTabelaAtestadoMedico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAtestadoMedico();
        conecta.desconecta();
    }

    public void alinharCamposTabelaAtestadoMedico() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAtestadoMedico.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAtestadoMedico.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void limparTabelaAtestadoMedica() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Modelo"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAtestadoMedico.setModel(modelo);
        jTabelaAtestadoMedico.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAtestadoMedico.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAtestadoMedico.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAtestadoMedico.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAtestadoMedico.getColumnModel().getColumn(2).setPreferredWidth(400);
        jTabelaAtestadoMedico.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAtestadoMedico.getTableHeader().setReorderingAllowed(false);
        jTabelaAtestadoMedico.setAutoResizeMode(jTabelaAtestadoMedico.AUTO_RESIZE_OFF);
        jTabelaAtestadoMedico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaAtestadoMedica(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Modelo"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dataAtestado = conecta.rs.getString("DataAtesta");
                String diaat = dataAtestado.substring(8, 10);
                String mesat = dataAtestado.substring(5, 7);
                String anoat = dataAtestado.substring(0, 4);
                dataAtestado = diaat + "/" + mesat + "/" + anoat;
                tipoModelo = conecta.rs.getInt("ModeloAtestado");
                if (tipoModelo == 0) {
                    descricaoModelo = "Modelo A";
                } else if (tipoModelo == 1) {
                    descricaoModelo = "Modelo B";
                } else if (tipoModelo == 2) {
                    descricaoModelo = "Modelo C";
                } else if (tipoModelo == 3) {
                    descricaoModelo = "Modelo Aleatório";
                }
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), dataAtestado, descricaoModelo});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAtestado.setModel(modelo);
        jTabelaAtestado.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAtestado.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAtestado.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAtestado.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAtestado.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaAtestado.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAtestado.getTableHeader().setReorderingAllowed(false);
        jTabelaAtestado.setAutoResizeMode(jTabelaAtestado.AUTO_RESIZE_OFF);
        jTabelaAtestado.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAtestadoMedico();
        conecta.desconecta();
    }

    public void buscarAcessoUsuarioAtestado() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserENF = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserENF + "'");
            conecta.rs.first();
            codigoUserGroupENF = conecta.rs.getInt("IdUsuario");
            codigoGrupoENF = conecta.rs.getInt("IdGrupo");
            nomeGrupoENF = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        //TELA DE PRESCRIÇÃO
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserENF + "' "
                    + "AND NomeTela='" + nomeModuloTela5 + "'");
            conecta.rs.first();
            codUserAcessoENF = conecta.rs.getInt("IdUsuario");
            codAbrirENF = conecta.rs.getInt("Abrir");
            codIncluirENF = conecta.rs.getInt("Incluir");
            codAlterarENF = conecta.rs.getInt("Alterar");
            codExcluirENF = conecta.rs.getInt("Excluir");
            codGravarENF = conecta.rs.getInt("Gravar");
            codConsultarENF = conecta.rs.getInt("Consultar");
            nomeTelaENF = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void objLog5() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela5);
        objLogSys.setIdLancMov(Integer.valueOf(jIdAdm.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
