/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleInternosMatriculado;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleMatriculaEscolar;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.ItensInternosMatriculado;
import gestor.Modelo.LogSistema;
import gestor.Modelo.MatriculaEscolar;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPedagogia.codAbrirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codAlterarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codConsultarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codExcluirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codGravarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codIncluirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codUserAcessoPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoGrupoPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoUserGroupPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoUserPEDA;
import static gestor.Visao.TelaModuloPedagogia.nomeGrupoPEDA;
import static gestor.Visao.TelaModuloPedagogia.nomeTelaPEDA;
import static gestor.Visao.TelaModuloPedagogia.telaControleMatriculaInte_PEDA;
import static gestor.Visao.TelaModuloPedagogia.telaControleMatriculaManu_PEDA;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaMatriculaPedagogica extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    MatriculaEscolar objMatEscolar = new MatriculaEscolar();
    ItensInternosMatriculado objItensMat = new ItensInternosMatriculado();
    ControleMatriculaEscolar control = new ControleMatriculaEscolar();
    ControleInternosMatriculado controle = new ControleInternosMatriculado();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Pedagogia:Maticula de Internos:Manutenção";
    String nomeModuloTela2 = "Pedagogia:InternosMatricula:Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int acao, flag;
    String dataInicial, dataFinal, dataCadastro, dataConDes;
    String codMatricula, caminho;
    public static int idItem;
    String bloqueio = "Não";
    String codInternoFreq, codInternoBaixa;
    int count = 0;
    //
    public static int codigoMatricula;

    /**
     * Creates new form TelaMatriculaPedagogica
     */
    public TelaMatriculaPedagogica() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPesqNomeInterno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel24 = new javax.swing.JLabel();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jBtDataLanc = new javax.swing.JButton();
        jBtNomeInterno = new javax.swing.JButton();
        jIDPesqLan = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jBtIdLanc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaMatriculas = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdMat = new javax.swing.JTextField();
        jDataMat = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jNomeInstituicao = new javax.swing.JTextField();
        jBtPesqInstituicao = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jBtPesqTempoFormativo = new javax.swing.JButton();
        jDescricaoTempoFormativo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jCargaHoraria = new javax.swing.JTextField();
        jBtPesqCargaHoraria = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jBtPesqSala = new javax.swing.JButton();
        jDescricaoTurno = new javax.swing.JTextField();
        jDescricaoSala = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jStatusMat = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jEixo = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jBtNovoInterno = new javax.swing.JButton();
        jBtAlterarInterno = new javax.swing.JButton();
        jBtExcluirInterno = new javax.swing.JButton();
        jBtSalvarInterno = new javax.swing.JButton();
        jBtCancelarInterno = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoriaInterno = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaInternosMatricula = new javax.swing.JTable();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jIdInternoCrc = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jNomeInternoCrc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDataNascimento = new com.toedter.calendar.JDateChooser();
        jMatriculaPenal = new javax.swing.JTextField();
        jBtPesqInterno = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxStatusAluno = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxSituacaoAluno = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jDataConclusaoDesistencia = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        FotoInternoPedagogia = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Controle de Matricula :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Nome do Interno:");

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Data Final:");

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtDataLanc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtDataLanc.setContentAreaFilled(false);
        jBtDataLanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDataLancActionPerformed(evt);
            }
        });

        jBtNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtNomeInterno.setContentAreaFilled(false);
        jBtNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNomeInternoActionPerformed(evt);
            }
        });

        jIDPesqLan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Código:");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jBtIdLanc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIdLanc.setContentAreaFilled(false);
        jBtIdLanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIdLancActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIDPesqLan, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel24)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtIdLanc)
                    .addComponent(jIDPesqLan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jBtDataLanc)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jBtNomeInterno))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaMatriculas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaMatriculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Nome da Instituição", "Tempo Formativo"
            }
        ));
        jTabelaMatriculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaMatriculasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaMatriculas);
        if (jTabelaMatriculas.getColumnModel().getColumnCount() > 0) {
            jTabelaMatriculas.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaMatriculas.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaMatriculas.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaMatriculas.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaMatriculas.getColumnModel().getColumn(2).setMinWidth(300);
            jTabelaMatriculas.getColumnModel().getColumn(2).setMaxWidth(300);
            jTabelaMatriculas.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaMatriculas.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Matricula", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Cadastro");

        jIdMat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdMat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdMat.setEnabled(false);

        jDataMat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataMat.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome da Instituição");

        jNomeInstituicao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInstituicao.setEnabled(false);

        jBtPesqInstituicao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInstituicao.setToolTipText("Pesquisar Instituição");
        jBtPesqInstituicao.setContentAreaFilled(false);
        jBtPesqInstituicao.setEnabled(false);
        jBtPesqInstituicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInstituicaoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Tempo Formativo");

        jBtPesqTempoFormativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqTempoFormativo.setToolTipText("Pesquisar Turno Formativo");
        jBtPesqTempoFormativo.setContentAreaFilled(false);
        jBtPesqTempoFormativo.setEnabled(false);
        jBtPesqTempoFormativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqTempoFormativoActionPerformed(evt);
            }
        });

        jDescricaoTempoFormativo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoTempoFormativo.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Turno");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Carga horária");

        jCargaHoraria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCargaHoraria.setEnabled(false);

        jBtPesqCargaHoraria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCargaHoraria.setToolTipText("Pesquisar Carga Horária");
        jBtPesqCargaHoraria.setContentAreaFilled(false);
        jBtPesqCargaHoraria.setEnabled(false);
        jBtPesqCargaHoraria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCargaHorariaActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Sala de Aula");

        jBtPesqSala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqSala.setToolTipText("Pesquisar Sala");
        jBtPesqSala.setContentAreaFilled(false);
        jBtPesqSala.setEnabled(false);
        jBtPesqSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqSalaActionPerformed(evt);
            }
        });

        jDescricaoTurno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoTurno.setEnabled(false);

        jDescricaoSala.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoSala.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Status");

        jStatusMat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusMat.setForeground(new java.awt.Color(255, 0, 0));
        jStatusMat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusMat.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Eixo");
        jLabel19.setToolTipText("");

        jEixo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jEixo.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdMat, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDataMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jStatusMat)))
                    .addComponent(jDescricaoTurno)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtPesqCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel12)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jNomeInstituicao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDescricaoSala)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDescricaoTempoFormativo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jEixo))))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtPesqTempoFormativo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jBtPesqSala, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataMat, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoTempoFormativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqTempoFormativo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqSala, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCargaHoraria, jDescricaoTempoFormativo});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDescricaoSala, jDescricaoTurno});

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoInterno.setText("Novo");
        jBtNovoInterno.setEnabled(false);
        jBtNovoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoInternoActionPerformed(evt);
            }
        });

        jBtAlterarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarInterno.setText("Alterar");
        jBtAlterarInterno.setEnabled(false);
        jBtAlterarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarInternoActionPerformed(evt);
            }
        });

        jBtExcluirInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirInterno.setText("Excluir");
        jBtExcluirInterno.setEnabled(false);
        jBtExcluirInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirInternoActionPerformed(evt);
            }
        });

        jBtSalvarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarInterno.setText("Gravar");
        jBtSalvarInterno.setEnabled(false);
        jBtSalvarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarInternoActionPerformed(evt);
            }
        });

        jBtCancelarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarInterno.setText("Cancelar");
        jBtCancelarInterno.setEnabled(false);
        jBtCancelarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarInternoActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoriaInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaInterno.setToolTipText("Auditoria");
        jBtAuditoriaInterno.setContentAreaFilled(false);
        jBtAuditoriaInterno.setEnabled(false);
        jBtAuditoriaInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaInternoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jBtExcluirInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBtAlterarInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBtNovoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jBtSalvarInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jBtCancelarInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(119, 119, 119))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jBtSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jBtAuditoriaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarInterno, jBtCancelarInterno, jBtExcluirInterno, jBtNovoInterno, jBtSair, jBtSalvarInterno});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovoInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarInterno)
                .addGap(37, 37, 37)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaInterno)
                .addContainerGap())
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarInterno, jBtCancelarInterno, jBtExcluirInterno, jBtSalvarInterno});

        jTabelaInternosMatricula.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaInternosMatricula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Código", "Nome do Interno", "Status Aluno", "Situação Aluno", "Data Con/Des"
            }
        ));
        jTabelaInternosMatricula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaInternosMatriculaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaInternosMatricula);
        if (jTabelaInternosMatricula.getColumnModel().getColumnCount() > 0) {
            jTabelaInternosMatricula.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaInternosMatricula.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaInternosMatricula.getColumnModel().getColumn(1).setMinWidth(60);
            jTabelaInternosMatricula.getColumnModel().getColumn(1).setMaxWidth(60);
            jTabelaInternosMatricula.getColumnModel().getColumn(2).setMinWidth(280);
            jTabelaInternosMatricula.getColumnModel().getColumn(2).setMaxWidth(280);
            jTabelaInternosMatricula.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaInternosMatricula.getColumnModel().getColumn(3).setMaxWidth(100);
            jTabelaInternosMatricula.getColumnModel().getColumn(4).setMinWidth(100);
            jTabelaInternosMatricula.getColumnModel().getColumn(4).setMaxWidth(100);
            jTabelaInternosMatricula.getColumnModel().getColumn(5).setMinWidth(80);
            jTabelaInternosMatricula.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jIdInternoCrc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrc.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nome do Interno");

        jNomeInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoCrc.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Dt. Nascimento");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Matricula Penal");

        jDataNascimento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataNascimento.setEnabled(false);

        jMatriculaPenal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jMatriculaPenal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMatriculaPenal.setEnabled(false);

        jBtPesqInterno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtPesqInterno.setForeground(new java.awt.Color(0, 153, 0));
        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setToolTipText("Pesquisar");
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Código");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Status do Aluno");

        jComboBoxStatusAluno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatusAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Matriculado", "Cursando", "Concluído", "Desistente", "Não Concluído" }));
        jComboBoxStatusAluno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatusAluno.setEnabled(false);
        jComboBoxStatusAluno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxStatusAlunoItemStateChanged(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Situação do Aluno");

        jComboBoxSituacaoAluno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxSituacaoAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Aprovado", "Reprovado", "Desistente", "Em Andamento" }));
        jComboBoxSituacaoAluno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxSituacaoAluno.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Data Con/Des");

        jDataConclusaoDesistencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataConclusaoDesistencia.setToolTipText("Data de Conclusão/Desistência");
        jDataConclusaoDesistencia.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInternoCrc)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxStatusAluno, 0, 137, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jComboBoxSituacaoAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataConclusaoDesistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel17))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jMatriculaPenal)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(jDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMatriculaPenal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(4, 4, 4)
                .addComponent(jNomeInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel17))
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxStatusAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSituacaoAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataConclusaoDesistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoInternoPedagogia, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoInternoPedagogia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Dados do Interno", jPanel8);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setEnabled(false);
        jScrollPane3.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Observação", jPanel10);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtFinalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jTabbedPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtAuditoria)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtNovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(300, 20, 727, 578);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtDataLancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDataLancActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                        preencherTodasMatriculas("SELECT * FROM MATRICULAESCOLAR "
                                + "INNER JOIN INSTITUICAOESCOLAR "
                                + "ON MATRICULAESCOLAR.IdCod =INSTITUICAOESCOLAR.IdCod "
                                + "INNER JOIN TEMPOFORMATIVO "
                                + "ON MATRICULAESCOLAR.IdTempo=TEMPOFORMATIVO.IdTempo "
                                + "INNER JOIN CARGAHORARIA "
                                + "ON MATRICULAESCOLAR.IdCarga=CARGAHORARIA.IdCarga "
                                + "INNER JOIN SALAS "
                                + "ON MATRICULAESCOLAR.IdSala=SALAS.IdSala "
                                + "WHERE DataMat BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                        preencherTodasMatriculas("SELECT * FROM MATRICULAESCOLAR "
                                + "INNER JOIN INSTITUICAOESCOLAR "
                                + "ON MATRICULAESCOLAR.IdCod =INSTITUICAOESCOLAR.IdCod "
                                + "INNER JOIN TEMPOFORMATIVO "
                                + "ON MATRICULAESCOLAR.IdTempo=TEMPOFORMATIVO.IdTempo "
                                + "INNER JOIN CARGAHORARIA "
                                + "ON MATRICULAESCOLAR.IdCarga=CARGAHORARIA.IdCarga "
                                + "INNER JOIN SALAS "
                                + "ON MATRICULAESCOLAR.IdSala=SALAS.IdSala "
                                + "WHERE DataMat BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtDataLancActionPerformed

    private void jBtNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquuisa.");
        } else {
            preencherTodasMatriculasNomes("SELECT * FROM MATRICULAESCOLAR "
                    + "INNER JOIN INSTITUICAOESCOLAR "
                    + "ON MATRICULAESCOLAR.IdCod=INSTITUICAOESCOLAR.IdCod "
                    + "INNER JOIN TEMPOFORMATIVO "
                    + "ON MATRICULAESCOLAR.IdTempo=TEMPOFORMATIVO.IdTempo "
                    + "INNER JOIN CARGAHORARIA "
                    + "ON MATRICULAESCOLAR.IdCarga=CARGAHORARIA.IdCarga "
                    + "INNER JOIN SALAS "
                    + "ON MATRICULAESCOLAR.IdSala=SALAS.IdSala "
                    + "INNER JOIN ITENSMATRICULA "
                    + "ON MATRICULAESCOLAR.IdMat=ITENSMATRICULA.IdMat "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSMATRICULA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaMatriculas.setVisible(true);
            this.preencherTodasMatriculas("SELECT * FROM MATRICULAESCOLAR "
                    + "INNER JOIN INSTITUICAOESCOLAR "
                    + "ON MATRICULAESCOLAR.IdCod =INSTITUICAOESCOLAR.IdCod "
                    + "INNER JOIN TEMPOFORMATIVO "
                    + "ON MATRICULAESCOLAR.IdTempo=TEMPOFORMATIVO.IdTempo "
                    + "INNER JOIN CARGAHORARIA "
                    + "ON MATRICULAESCOLAR.IdCarga=CARGAHORARIA.IdCarga "
                    + "INNER JOIN SALAS "
                    + "ON MATRICULAESCOLAR.IdSala=SALAS.IdSala");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtIdLancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIdLancActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jIDPesqLan.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            preencherTodasMatriculas("SELECT * FROM MATRICULAESCOLAR "
                    + "INNER JOIN INSTITUICAOESCOLAR "
                    + "ON MATRICULAESCOLAR.IdCod =INSTITUICAOESCOLAR.IdCod "
                    + "INNER JOIN TEMPOFORMATIVO "
                    + "ON MATRICULAESCOLAR.IdTempo=TEMPOFORMATIVO.IdTempo "
                    + "INNER JOIN CARGAHORARIA "
                    + "ON MATRICULAESCOLAR.IdCarga=CARGAHORARIA.IdCarga "
                    + "INNER JOIN SALAS "
                    + "ON MATRICULAESCOLAR.IdSala=SALAS.IdSala WHERE IdMat='" + jIDPesqLan.getText() + "'");
        }
    }//GEN-LAST:event_jBtIdLancActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaManu_PEDA) && codIncluirPEDA == 1) {
            acao = 1;
            Novo();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            limparTabelaInternos();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaManu_PEDA) && codAlterarPEDA == 1) {
            objMatEscolar.setStatusMatricula(jStatusMat.getText());
            if (jStatusMat.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa matricula de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampos();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaManu_PEDA) && codExcluirPEDA == 1) {
            objMatEscolar.setStatusMatricula(jStatusMat.getText());
            if (jStatusMat.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa matricula de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                statusMov = "Excluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM ITENSMATRICULA WHERE IdMat='" + jIdMat.getText() + "'");
                    conecta.rs.first();
                    codMatricula = conecta.rs.getString("IdMat");
                    if (jIdMat.getText().equals(codMatricula)) {
                        JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
                    }
                    conecta.desconecta();
                } catch (SQLException ex) {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objMatEscolar.setIdMat(Integer.parseInt(jIdMat.getText()));
                        control.excluirMatriculaEscolar(objMatEscolar);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        Excluir();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaManu_PEDA) && codGravarPEDA == 1) {
            if (jDataMat.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de matricula.");
                jDataMat.requestFocus();
                jDataMat.setBackground(Color.red);
            } else {
                if (jNomeInstituicao.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe qual é a instituição do aluno.");
                } else {
                    if (jDescricaoTempoFormativo.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Informe qual é o Tempo formativo do aluno.");
                    } else {
                        if (jCargaHoraria.getText().equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Informe qual é a carga horária do aluno.");
                        } else {
                            if (jDescricaoSala.getText().equals("")) {
                                JOptionPane.showMessageDialog(rootPane, "Informe qual a sala do aluno.");
                            } else {
                                objMatEscolar.setStatusMatricula(jStatusMat.getText());
                                objMatEscolar.setDataMat(jDataMat.getDate());
                                objMatEscolar.setNomeIstituicao(jNomeInstituicao.getText());
                                // objMatEscolar.setIdMat(codigoMatricula);
                                objMatEscolar.setIdTempo(codigoMatricula);
                                objMatEscolar.setDescricaoTempoFormativo(jDescricaoTempoFormativo.getText());
                                objMatEscolar.setDescricaoCargaHoraria(jCargaHoraria.getText());
                                objMatEscolar.setDescricaoSala(jDescricaoSala.getText());
                                if (acao == 1) {
                                    objMatEscolar.setUsuarioInsert(nameUser);
                                    objMatEscolar.setDataInsert(dataModFinal);
                                    objMatEscolar.setHorarioInsert(horaMov);
                                    //
                                    control.incluirMatriculaEscolar(objMatEscolar);
                                    buscarCod();
                                    objLog();
                                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    Salvar();
                                }
                                if (acao == 2) {
                                    objMatEscolar.setUsuarioUp(nameUser);
                                    objMatEscolar.setDataUp(dataModFinal);
                                    objMatEscolar.setHorarioUp(horaMov);
                                    objMatEscolar.setNomeIstituicao(jNomeInstituicao.getText());
                                    objMatEscolar.setIdMat(Integer.valueOf(jIdMat.getText()));
                                    objMatEscolar.setDescricaoTempoFormativo(jDescricaoTempoFormativo.getText());
                                    objMatEscolar.setDescricaoCargaHoraria(jCargaHoraria.getText());
                                    objMatEscolar.setDescricaoSala(jDescricaoSala.getText());
                                    control.alterarMatriculaEscolar(objMatEscolar);
                                    objLog();
                                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    Salvar();
                                }
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaContMatricula objAudConMat = new TelaAuditoriaContMatricula();
        TelaModuloPedagogia.jPainelPedagogia.add(objAudConMat);
        objAudConMat.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtNovoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoInternoActionPerformed
        // TODO add your handling code here: 
        buscarAcessoUsuario(telaControleMatriculaInte_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaInte_PEDA) && codIncluirPEDA == 1) {
            objMatEscolar.setStatusMatricula(jStatusMat.getText());
            if (jStatusMat.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa matricula de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoInterno();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoInternoActionPerformed

    private void jBtAlterarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaInte_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaInte_PEDA) && codAlterarPEDA == 1) {
            verificarMatriculaFrequenciaInterno();
            objMatEscolar.setStatusMatricula(jStatusMat.getText());
            if (jStatusMat.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa matricula de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                if (jIdInternoCrc.getText().equals(codInternoFreq)) {
                    JOptionPane.showMessageDialog(rootPane, "Essa matricula de interno não pode ser alterada, pois, está\nsendo utilizada na lista de frequência de internos.");
                } else {
                    acao = 4;
                    AlterarInterno();
                    statusMov = "Alterou";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarInternoActionPerformed

    private void jBtExcluirInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaInte_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaInte_PEDA) && codExcluirPEDA == 1) {
            verificarMatriculaFrequenciaInterno(); // Verificar se o interno costa na lista de frequência.
            verificarBaixaInternos(); // Verificar se o interno consta na lista de baixa.
            objMatEscolar.setStatusMatricula(jStatusMat.getText());
            if (jStatusMat.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa matricula de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                if (jIdInternoCrc.getText().equals(codInternoFreq)) {
                    JOptionPane.showMessageDialog(rootPane, "Essa matricula de interno não pode ser excluída, pois, está\nsendo utilizada na lista de frequência de internos.");
                } else {
                    if (jIdInternoCrc.getText().equals(codInternoBaixa)) {
                        JOptionPane.showMessageDialog(rootPane, "Essa matricula de interno não pode ser excluída,pois, está\nsendo utilizada na lista de baixa de internos.");
                    } else {
                        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir a matricula selecionado?", "Confirmação",
                                JOptionPane.YES_NO_OPTION);
                        if (resposta == JOptionPane.YES_OPTION) {
                            objItensMat.setIdItem(Integer.valueOf(idItem));
                            controle.excluirInternosMatricula(objItensMat);
                            objLog2();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação                        
                            ExcluirInterno();
                            preencherTabelaInternosMatricula("SELECT * FROM ITENSMATRICULA "
                                    + "INNER JOIN PRONTUARIOSCRC "
                                    + "ON ITENSMATRICULA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                    + "WHERE IdMat='" + jIdMat.getText() + "'");
                            JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirInternoActionPerformed

    private void jBtSalvarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaControleMatriculaInte_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaControleMatriculaInte_PEDA) && codGravarPEDA == 1) {
            if (jNomeInternoCrc.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno a ser matriculado.");
            } else {
                if (acao == 3) {
                    objItensMat.setUsuarioInsert(nameUser);
                    objItensMat.setDataInsert(dataModFinal);
                    objItensMat.setHorarioInsert(horaMov);
                    objItensMat.setBloqueio(bloqueio);
                    objItensMat.setIdMat(Integer.valueOf(jIdMat.getText()));
                    objItensMat.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                    objItensMat.setNomeInternoCrc(jNomeInternoCrc.getText());
                    objItensMat.setStatusAluno((String) jComboBoxStatusAluno.getSelectedItem());
                    objItensMat.setSituacaoAluno((String) jComboBoxSituacaoAluno.getSelectedItem());
                    objItensMat.setDataConclusaoDesistencia(jDataConclusaoDesistencia.getDate());
                    objItensMat.setObservacao(jObservacao.getText());
                    controle.incluirInternosMatricula(objItensMat);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação                
                    preencherTabelaInternosMatricula("SELECT * FROM ITENSMATRICULA "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ITENSMATRICULA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE IdMat='" + jIdMat.getText() + "'");
                    SalvarInterno();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objItensMat.setUsuarioUp(nameUser);
                    objItensMat.setDataUp(dataModFinal);
                    objItensMat.setHorarioUp(horaMov);
                    objItensMat.setBloqueio(bloqueio);
                    objItensMat.setIdMat(Integer.valueOf(jIdMat.getText()));
                    objItensMat.setIdInternoCrc(Integer.valueOf(jIdInternoCrc.getText()));
                    objItensMat.setNomeInternoCrc(jNomeInternoCrc.getText());
                    objItensMat.setStatusAluno((String) jComboBoxStatusAluno.getSelectedItem());
                    objItensMat.setSituacaoAluno((String) jComboBoxSituacaoAluno.getSelectedItem());
                    objItensMat.setDataConclusaoDesistencia(jDataConclusaoDesistencia.getDate());
                    objItensMat.setObservacao(jObservacao.getText());
                    objItensMat.setIdItem(idItem);
                    controle.alterarInternosMatricula(objItensMat);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação                
                    preencherTabelaInternosMatricula("SELECT * FROM ITENSMATRICULA "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ITENSMATRICULA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE IdMat='" + jIdMat.getText() + "'");
                    SalvarInterno();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarInternoActionPerformed

    private void jBtCancelarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarInternoActionPerformed
        // TODO add your handling code here:
        CancelarInterno();
    }//GEN-LAST:event_jBtCancelarInternoActionPerformed

    private void jBtAuditoriaInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaInternoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensConMat objAudItensMat = new TelaAuditoriaItensConMat();
        TelaModuloPedagogia.jPainelPedagogia.add(objAudItensMat);
        objAudItensMat.show();
    }//GEN-LAST:event_jBtAuditoriaInternoActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqInstituicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInstituicaoActionPerformed
        // TODO add your handling code here:
        TelaPesqInstituicaoMat objPesqInst = new TelaPesqInstituicaoMat();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesqInst);
        objPesqInst.show();
    }//GEN-LAST:event_jBtPesqInstituicaoActionPerformed

    private void jBtPesqTempoFormativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqTempoFormativoActionPerformed
        // TODO add your handling code here:
        TelaPesqTempoFormativo objTempoFor = new TelaPesqTempoFormativo();
        TelaModuloPedagogia.jPainelPedagogia.add(objTempoFor);
        objTempoFor.show();
    }//GEN-LAST:event_jBtPesqTempoFormativoActionPerformed

    private void jBtPesqCargaHorariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCargaHorariaActionPerformed
        // TODO add your handling code here:
        TelaPesqCargaHorariaMat objCargaMat = new TelaPesqCargaHorariaMat();
        TelaModuloPedagogia.jPainelPedagogia.add(objCargaMat);
        objCargaMat.show();
    }//GEN-LAST:event_jBtPesqCargaHorariaActionPerformed

    private void jBtPesqSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqSalaActionPerformed
        // TODO add your handling code here:
        TelaPesqSalaAulaMat objPesqSala = new TelaPesqSalaAulaMat();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesqSala);
        objPesqSala.show();
    }//GEN-LAST:event_jBtPesqSalaActionPerformed

    private void jTabelaMatriculasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaMatriculasMouseClicked
        // TODO add your handling code here:
        //  flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaMatriculas.getValueAt(jTabelaMatriculas.getSelectedRow(), 0);
            jIDPesqLan.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtNovoInterno.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM MATRICULAESCOLAR "
                        + "INNER JOIN INSTITUICAOESCOLAR "
                        + "ON MATRICULAESCOLAR.IdCod =INSTITUICAOESCOLAR.IdCod "
                        + "INNER JOIN TEMPOFORMATIVO "
                        + "ON MATRICULAESCOLAR.IdTempo=TEMPOFORMATIVO.IdTempo "
                        + "INNER JOIN CARGAHORARIA "
                        + "ON MATRICULAESCOLAR.IdCarga=CARGAHORARIA.IdCarga "
                        + "INNER JOIN SALAS "
                        + "ON MATRICULAESCOLAR.IdSala=SALAS.IdSala INNER JOIN TURNOSAULA "
                        + "ON TEMPOFORMATIVO.IdTurno=TURNOSAULA.IdTurno WHERE IdMat='" + IdLanc + "'");
                conecta.rs.first();
                jIdMat.setText(String.valueOf(conecta.rs.getInt("IdMat")));
                jStatusMat.setText(conecta.rs.getString("StatusMat"));
                jNomeInstituicao.setText(conecta.rs.getString("NomeInstituicao"));
                jDataMat.setDate(conecta.rs.getDate("DataMat"));
                jDescricaoTurno.setText(conecta.rs.getString("DescricaoTurno"));
                jDescricaoTempoFormativo.setText(conecta.rs.getString("DescricaoTempo"));
                jEixo.setText(conecta.rs.getString("Eixo"));
                jCargaHoraria.setText(conecta.rs.getString("DescricaoCarga"));
                jDescricaoSala.setText(conecta.rs.getString("Descricao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            preencherTabelaInternosMatricula("SELECT * FROM ITENSMATRICULA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSMATRICULA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdMat='" + IdLanc + "'");
        }
        conecta.desconecta();
    }//GEN-LAST:event_jTabelaMatriculasMouseClicked

    private void jTabelaInternosMatriculaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaInternosMatriculaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String iditem = "" + jTabelaInternosMatricula.getValueAt(jTabelaInternosMatricula.getSelectedRow(), 0);
            String nomeInterno = "" + jTabelaInternosMatricula.getValueAt(jTabelaInternosMatricula.getSelectedRow(), 2);
            jNomeInternoCrc.setText(nomeInterno);
            //
            jBtNovoInterno.setEnabled(true);
            jBtAlterarInterno.setEnabled(true);
            jBtExcluirInterno.setEnabled(true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(true);
            jBtAuditoriaInterno.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSMATRICULA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSMATRICULA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE NomeInternoCrc='" + nomeInterno + "' "
                        + "AND IdItem='" + iditem + "'");
                conecta.rs.first();
                idItem = conecta.rs.getInt("IdItem");
                jIdInternoCrc.setText(String.valueOf(conecta.rs.getInt("IdInternoCrc")));
                jNomeInternoCrc.setText(conecta.rs.getString("NomeInternoCrc"));
                jDataNascimento.setDate(conecta.rs.getDate("DataNasciCrc"));
                jMatriculaPenal.setText(conecta.rs.getString("MatriculaCrc"));
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                if (caminho != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                    FotoInternoPedagogia.setIcon(i);
                    FotoInternoPedagogia.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoInternoPedagogia.getWidth(), FotoInternoPedagogia.getHeight(), Image.SCALE_DEFAULT)));
                }
                jComboBoxStatusAluno.setSelectedItem(conecta.rs.getString("StatusAluno"));
                jComboBoxSituacaoAluno.setSelectedItem(conecta.rs.getString("SituacaoAluno"));
                jDataConclusaoDesistencia.setDate(conecta.rs.getDate("DataConDes"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
        }
    }//GEN-LAST:event_jTabelaInternosMatriculaMouseClicked

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM MATRICULAESCOLAR WHERE IdMat='" + jIdMat.getText() + "'");
            conecta.rs.first();
            jStatusMat.setText(conecta.rs.getString("StatusMat"));
            if (jStatusMat.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jComboBoxStatusAlunoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxStatusAlunoItemStateChanged
        // TODO add your handling code here:
        if (acao == 3 || acao == 4) {
            if (jComboBoxStatusAluno.getSelectedItem().equals("Cursando")) {
                jComboBoxSituacaoAluno.setSelectedItem("Em Andamento");
                jComboBoxSituacaoAluno.setEnabled(!true);
                jDataConclusaoDesistencia.setDate(null);
                jDataConclusaoDesistencia.setEnabled(!true);
            } else if (jComboBoxStatusAluno.getSelectedItem().equals("Concluído")) {
                jComboBoxSituacaoAluno.setSelectedItem("Aprovado");
                jComboBoxSituacaoAluno.setEnabled(!true);
                jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
                jDataConclusaoDesistencia.setEnabled(true);
            } else if (jComboBoxStatusAluno.getSelectedItem().equals("Desistente")) {
                jComboBoxSituacaoAluno.setSelectedItem("Reprovado");
                jComboBoxSituacaoAluno.setEnabled(!true);
                jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
                jDataConclusaoDesistencia.setEnabled(true);
            } else if (jComboBoxStatusAluno.getSelectedItem().equals("Não Concluído")) {
                jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
                jComboBoxSituacaoAluno.setEnabled(true);
                jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
                jDataConclusaoDesistencia.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jComboBoxStatusAlunoItemStateChanged

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaPesqInternosControleMatricula objPesqInternos = new TelaPesqInternosControleMatricula();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesqInternos);
        objPesqInternos.show();
    }//GEN-LAST:event_jBtPesqInternoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoInternoPedagogia;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarInterno;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaInterno;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarInterno;
    private javax.swing.JButton jBtDataLanc;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirInterno;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtIdLanc;
    private javax.swing.JButton jBtNomeInterno;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoInterno;
    private javax.swing.JButton jBtPesqCargaHoraria;
    private javax.swing.JButton jBtPesqInstituicao;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtPesqSala;
    private javax.swing.JButton jBtPesqTempoFormativo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarInterno;
    public static javax.swing.JTextField jCargaHoraria;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBoxSituacaoAluno;
    private javax.swing.JComboBox<String> jComboBoxStatusAluno;
    private com.toedter.calendar.JDateChooser jDataConclusaoDesistencia;
    private com.toedter.calendar.JDateChooser jDataMat;
    public static com.toedter.calendar.JDateChooser jDataNascimento;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jDescricaoSala;
    public static javax.swing.JTextField jDescricaoTempoFormativo;
    public static javax.swing.JTextField jDescricaoTurno;
    public static javax.swing.JTextField jEixo;
    private javax.swing.JTextField jIDPesqLan;
    public static javax.swing.JTextField jIdInternoCrc;
    public static javax.swing.JTextField jIdMat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMatriculaPenal;
    public static javax.swing.JTextField jNomeInstituicao;
    public static javax.swing.JTextField jNomeInternoCrc;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jStatusMat;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaInternosMatricula;
    private javax.swing.JTable jTabelaMatriculas;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {

    }

    public void verificarMatriculaFrequenciaInterno() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSFREQUENCIA WHERE IdInternoCrc='" + jIdInternoCrc.getText() + "'");
            conecta.rs.first();
            codInternoFreq = conecta.rs.getString("IdInternoCrc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void verificarBaixaInternos() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSBAIXAINTERNOS WHERE IdInternoCrc='" + jIdInternoCrc.getText() + "'");
            conecta.rs.first();
            codInternoBaixa = conecta.rs.getString("IdInternoCrc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void corCampos() {
        jIdMat.setBackground(Color.white);
        jStatusMat.setBackground(Color.white);
        jDataMat.setBackground(Color.white);
        jNomeInstituicao.setBackground(Color.white);
        jDescricaoTempoFormativo.setBackground(Color.white);
        jEixo.setBackground(Color.white);
        jDescricaoTurno.setBackground(Color.white);
        jCargaHoraria.setBackground(Color.white);
        jDescricaoSala.setBackground(Color.white);
        //
        jIdInternoCrc.setBackground(Color.white);
        jNomeInternoCrc.setBackground(Color.white);
        jDataNascimento.setBackground(Color.white);
        jMatriculaPenal.setBackground(Color.white);
    }

    public void Novo() {
        // Limpara os campos
        jIdMat.setText("");
        jStatusMat.setText("ABERTO");
        jDataMat.setCalendar(Calendar.getInstance());
        jNomeInstituicao.setText("");
        jDescricaoTempoFormativo.setText("");
        jDescricaoTurno.setText("");
        jCargaHoraria.setText("");
        jDescricaoSala.setText("");
        jEixo.setText("");
        //
        jDataMat.setEnabled(true);
        //
        jBtPesqInstituicao.setEnabled(true);
        jBtPesqTempoFormativo.setEnabled(true);
        jBtPesqCargaHoraria.setEnabled(true);
        jBtPesqSala.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jIdInternoCrc.setText("");
        jNomeInternoCrc.setText("");
        FotoInternoPedagogia.setIcon(null);
        jDataNascimento.setDate(null);
        jMatriculaPenal.setText("");
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void Alterar() {
        //
        jDataMat.setEnabled(true);
        //
        jBtPesqInstituicao.setEnabled(true);
        jBtPesqTempoFormativo.setEnabled(true);
        jBtPesqCargaHoraria.setEnabled(true);
        jBtPesqSala.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void Excluir() {
        // Limpara os campos
        jIdMat.setText("");
        jStatusMat.setText("");
        jDataMat.setDate(null);
        jNomeInstituicao.setText("");
        jDescricaoTempoFormativo.setText("");
        jDescricaoTurno.setText("");
        jCargaHoraria.setText("");
        jDescricaoSala.setText("");
        jEixo.setText("");
        //
        jDataMat.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTempoFormativo.setEnabled(!true);
        jBtPesqCargaHoraria.setEnabled(!true);
        jBtPesqSala.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void Salvar() {
        //
        jDataMat.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTempoFormativo.setEnabled(!true);
        jBtPesqCargaHoraria.setEnabled(!true);
        jBtPesqSala.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIdMat.getText().equals("")) {
            // Limpara os campos
            jIdMat.setText("");
            jStatusMat.setText("");
            jDataMat.setDate(null);
            jNomeInstituicao.setText("");
            jDescricaoTempoFormativo.setText("");
            jDescricaoTurno.setText("");
            jCargaHoraria.setText("");
            jDescricaoSala.setText("");
            jEixo.setText("");
            //
            jDataMat.setEnabled(!true);
            //
            jBtPesqInstituicao.setEnabled(!true);
            jBtPesqTempoFormativo.setEnabled(!true);
            jBtPesqCargaHoraria.setEnabled(!true);
            jBtPesqSala.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jBtNovoInterno.setEnabled(!true);
            jBtAlterarInterno.setEnabled(!true);
            jBtExcluirInterno.setEnabled(!true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(!true);
            jBtAuditoriaInterno.setEnabled(!true);
        } else {
            //
            jDataMat.setEnabled(!true);
            //
            jBtPesqInstituicao.setEnabled(!true);
            jBtPesqTempoFormativo.setEnabled(!true);
            jBtPesqCargaHoraria.setEnabled(!true);
            jBtPesqSala.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovoInterno.setEnabled(true);
            jBtAlterarInterno.setEnabled(!true);
            jBtExcluirInterno.setEnabled(!true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(!true);
            jBtAuditoriaInterno.setEnabled(!true);
        }
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se essa matricula de internos for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objMatEscolar.setStatusMatricula(statusEntrada);
            objMatEscolar.setIdMat(Integer.parseInt(jIdMat.getText()));
            control.finalizarEntradaLote(objMatEscolar);
            jStatusMat.setText(statusEntrada);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jDataMat.setEnabled(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtNovoInterno.setEnabled(!true);
        }
    }

    public void buscarCod() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM MATRICULAESCOLAR");
            conecta.rs.last();
            jIdMat.setText(conecta.rs.getString("IdMat"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
        conecta.desconecta();
    }

    public void NovoInterno() {
        //
        jIdInternoCrc.setText("");
        jNomeInternoCrc.setText("");
        FotoInternoPedagogia.setIcon(null);
        jDataNascimento.setDate(null);
        jMatriculaPenal.setText("");
        jComboBoxStatusAluno.setSelectedItem("Selecione...");
        jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
        jDataConclusaoDesistencia.setDate(null);
        jObservacao.setText("");
        //
        jComboBoxStatusAluno.setEnabled(true);
        jObservacao.setEnabled(true);
        if (jComboBoxStatusAluno.getSelectedItem().equals("Cursando")) {
            jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
            jComboBoxSituacaoAluno.setEnabled(!true);
            jDataConclusaoDesistencia.setDate(null);
            jDataConclusaoDesistencia.setEnabled(!true);
        } else if (jComboBoxStatusAluno.getSelectedItem().equals("Concluído")) {
            jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
            jComboBoxSituacaoAluno.setEnabled(true);
            jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
            jDataConclusaoDesistencia.setEnabled(true);
        } else if (jComboBoxStatusAluno.getSelectedItem().equals("Desistente")) {
            jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
            jComboBoxSituacaoAluno.setEnabled(!true);
            jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
            jDataConclusaoDesistencia.setEnabled(true);
        }
        //
        jBtPesqInterno.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaInterno.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        // Bloiqueia os campos e os botões de pesquisa.         
        jDataMat.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTempoFormativo.setEnabled(!true);
        jBtPesqCargaHoraria.setEnabled(!true);
        jBtPesqSala.setEnabled(!true);
        //
    }

    public void AlterarInterno() {
        //
        jBtPesqInterno.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaInterno.setEnabled(!true);
        //
        jComboBoxStatusAluno.setEnabled(true);
        jObservacao.setEnabled(true);
//        if (jComboBoxStatusAluno.getSelectedItem().equals("Cursando")) {
//            jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
//            jComboBoxSituacaoAluno.setEnabled(!true);
//            jDataConclusaoDesistencia.setDate(null);
//            jDataConclusaoDesistencia.setEnabled(!true);
//        } else if (jComboBoxStatusAluno.getSelectedItem().equals("Concluído")) {
//            jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
//            jComboBoxSituacaoAluno.setEnabled(true);
//            jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
//            jDataConclusaoDesistencia.setEnabled(true);
//        } else if (jComboBoxStatusAluno.getSelectedItem().equals("Desistente")) {
//            jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
//            jComboBoxSituacaoAluno.setEnabled(!true);
//            jDataConclusaoDesistencia.setCalendar(Calendar.getInstance());
//            jDataConclusaoDesistencia.setEnabled(true);
//        }
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        // Bloiqueia os campos e os botões de pesquisa.         
        jDataMat.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTempoFormativo.setEnabled(!true);
        jBtPesqCargaHoraria.setEnabled(!true);
        jBtPesqSala.setEnabled(!true);
        //
    }

    public void ExcluirInterno() {
        //
        jIdInternoCrc.setText("");
        jNomeInternoCrc.setText("");
        FotoInternoPedagogia.setIcon(null);
        jDataNascimento.setDate(null);
        jMatriculaPenal.setText("");
        jObservacao.setText("");
        //
        jComboBoxStatusAluno.setSelectedItem("Selecione...");
        jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
        jDataConclusaoDesistencia.setDate(null);
        //
        jComboBoxStatusAluno.setEnabled(!true);
        jComboBoxSituacaoAluno.setEnabled(!true);
        jDataConclusaoDesistencia.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtPesqInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // Bloiqueia os campos e os botões de pesquisa.         
        jDataMat.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTempoFormativo.setEnabled(!true);
        jBtPesqCargaHoraria.setEnabled(!true);
        jBtPesqSala.setEnabled(!true);
        //
    }

    public void SalvarInterno() {
        //
        jIdInternoCrc.setText("");
        jNomeInternoCrc.setText("");
        FotoInternoPedagogia.setIcon(null);
        jDataNascimento.setDate(null);
        jMatriculaPenal.setText("");
        jComboBoxStatusAluno.setSelectedItem("Selecione...");
        jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
        jDataConclusaoDesistencia.setDate(null);
        jObservacao.setText("");
        //
        jComboBoxStatusAluno.setEnabled(!true);
        jComboBoxSituacaoAluno.setEnabled(!true);
        jDataConclusaoDesistencia.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtPesqInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
        // Bloiqueia os campos e os botões de pesquisa.         
        jDataMat.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTempoFormativo.setEnabled(!true);
        jBtPesqCargaHoraria.setEnabled(!true);
        jBtPesqSala.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        acao = 0;
    }

    public void CancelarInterno() {
        //
        jIdInternoCrc.setText("");
        jNomeInternoCrc.setText("");
        FotoInternoPedagogia.setIcon(null);
        jDataNascimento.setDate(null);
        jMatriculaPenal.setText("");
        jComboBoxStatusAluno.setSelectedItem("Selecione...");
        jComboBoxSituacaoAluno.setSelectedItem("Selecione...");
        jDataConclusaoDesistencia.setDate(null);
        jObservacao.setText("");
        //
        jComboBoxStatusAluno.setEnabled(!true);
        jComboBoxSituacaoAluno.setEnabled(!true);
        jDataConclusaoDesistencia.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtPesqInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        acao = 0;
    }

    public void preencherTodasMatriculas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código ", "Data", "Nome Instituição", "Tempo Formativo"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataCadastro = conecta.rs.getString("DataMat");
                String dia = dataCadastro.substring(8, 10);
                String mes = dataCadastro.substring(5, 7);
                String ano = dataCadastro.substring(0, 4);
                dataCadastro = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdMat"), dataCadastro, conecta.rs.getString("NomeInstituicao"), conecta.rs.getString("DescricaoTempo")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaMatriculas.setModel(modelo);
        jTabelaMatriculas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaMatriculas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaMatriculas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaMatriculas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(3).setPreferredWidth(220);
        jTabelaMatriculas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaMatriculas.getTableHeader().setReorderingAllowed(false);
        jTabelaMatriculas.setAutoResizeMode(jTabelaMatriculas.AUTO_RESIZE_OFF);
        jTabelaMatriculas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaMatriculas();
        conecta.desconecta();
    }

    public void preencherTodasMatriculasNomes(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código ", "Data ", "Nome Instituição", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataCadastro = conecta.rs.getString("DataMat");
                String dia = dataCadastro.substring(8, 10);
                String mes = dataCadastro.substring(5, 7);
                String ano = dataCadastro.substring(0, 4);
                dataCadastro = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdMat"), dataCadastro, conecta.rs.getString("NomeInstituicao"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaMatriculas.setModel(modelo);
        jTabelaMatriculas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaMatriculas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaMatriculas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaMatriculas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaMatriculas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaMatriculas.getTableHeader().setReorderingAllowed(false);
        jTabelaMatriculas.setAutoResizeMode(jTabelaMatriculas.AUTO_RESIZE_OFF);
        jTabelaMatriculas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaMatriculas();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código ", "Data", "Nome Instituição", "Tempo Formativo"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaMatriculas.setModel(modelo);
        jTabelaMatriculas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaMatriculas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaMatriculas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaMatriculas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaMatriculas.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaMatriculas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaMatriculas.getTableHeader().setReorderingAllowed(false);
        jTabelaMatriculas.setAutoResizeMode(jTabelaMatriculas.AUTO_RESIZE_OFF);
        jTabelaMatriculas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaMatriculas() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaMatriculas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaMatriculas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void preencherTabelaInternosMatricula(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Status Aluno", "Situação Aluno", "Data Con/Des"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dataConDes = conecta.rs.getString("DataConDes");
                if (dataConDes != null) {
                    String pDia = dataConDes.substring(8, 10);
                    String pMes = dataConDes.substring(5, 7);
                    String pAno = dataConDes.substring(0, 4);
                    dataConDes = pDia + "/" + pMes + "/" + pAno;
                }
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("StatusAluno"), conecta.rs.getString("SituacaoAluno"), dataConDes});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternosMatricula.setModel(modelo);
        jTabelaInternosMatricula.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInternosMatricula.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaInternosMatricula.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaInternosMatricula.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaInternosMatricula.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTabelaInternosMatricula.getColumnModel().getColumn(4).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTabelaInternosMatricula.getColumnModel().getColumn(5).setResizable(false);
        jTabelaInternosMatricula.getTableHeader().setReorderingAllowed(false);
        jTabelaInternosMatricula.setAutoResizeMode(jTabelaInternosMatricula.AUTO_RESIZE_OFF);
        jTabelaInternosMatricula.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaInternos();
        conecta.desconecta();
    }

    public void limparTabelaInternos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Status Aluno", "Situação Aluno", "Data Con/Des"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternosMatricula.setModel(modelo);
        jTabelaInternosMatricula.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInternosMatricula.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaInternosMatricula.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaInternosMatricula.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaInternosMatricula.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTabelaInternosMatricula.getColumnModel().getColumn(4).setResizable(false);
        jTabelaInternosMatricula.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTabelaInternosMatricula.getColumnModel().getColumn(5).setResizable(false);
        jTabelaInternosMatricula.getTableHeader().setReorderingAllowed(false);
        jTabelaInternosMatricula.setAutoResizeMode(jTabelaInternosMatricula.AUTO_RESIZE_OFF);
        jTabelaInternosMatricula.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaInternos() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaInternosMatricula.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaInternosMatricula.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaInternosMatricula.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaInternosMatricula.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdMat.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdMat.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserPEDA = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserPEDA + "'");
            conecta.rs.first();
            codigoUserGroupPEDA = conecta.rs.getInt("IdUsuario");
            codigoGrupoPEDA = conecta.rs.getInt("IdGrupo");
            nomeGrupoPEDA = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserPEDA + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoPEDA = conecta.rs.getInt("IdUsuario");
            codAbrirPEDA = conecta.rs.getInt("Abrir");
            codIncluirPEDA = conecta.rs.getInt("Incluir");
            codAlterarPEDA = conecta.rs.getInt("Alterar");
            codExcluirPEDA = conecta.rs.getInt("Excluir");
            codGravarPEDA = conecta.rs.getInt("Gravar");
            codConsultarPEDA = conecta.rs.getInt("Consultar");
            nomeTelaPEDA = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
