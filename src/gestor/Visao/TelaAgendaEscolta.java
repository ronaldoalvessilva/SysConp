/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAgendaEscolta;
import gestor.Controle.ControleItensAgendaEscolta;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.AgendaEscolta;
import gestor.Modelo.ItensAgendaEscolta;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ronaldo
 */
public class TelaAgendaEscolta extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AgendaEscolta objAgenda = new AgendaEscolta();
    ItensAgendaEscolta objItensAgenda = new ItensAgendaEscolta();
    ControleAgendaEscolta control = new ControleAgendaEscolta();
    ControleItensAgendaEscolta controle = new ControleItensAgendaEscolta();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "CRC:Agenda de Escolta:Manutenção";
    String nomeModuloTela2 = "CRC:Agenda de Escolta:Agendamentos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String dataAgenda;
    String idItem;
    String codAgenda;
    String dataInicial;
    String dataFinal;
    String statusEscolta = "ABERTO";
    String caminho;
    int count = 0;
    String utilizaAgenda = "Não";
    String respostaSaida;

    /**
     * Creates new form TelaAgendaEscolta
     */
    public TelaAgendaEscolta() {
        initComponents();
        corCampo();
        formatarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPesqId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDatas = new javax.swing.JButton();
        jBtPesqID = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaPesquisaAgenda = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIDInterno = new javax.swing.JTextField();
        jNomeInterno = new javax.swing.JTextField();
        jBtPesqInterno = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        FotoIngernoEscolta = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDataAgendamento = new com.toedter.calendar.JDateChooser();
        jHora = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jOficio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLocalDestino = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaItensAgendamento = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jBtNovoAg = new javax.swing.JButton();
        jBtAlterarAg = new javax.swing.JButton();
        jBtExcluirAg = new javax.swing.JButton();
        jBtSalvarAg = new javax.swing.JButton();
        jBtCancelarAg = new javax.swing.JButton();
        jBtSairAg = new javax.swing.JButton();
        jBtAuditoriaEscoltasInternos = new javax.swing.JButton();
        jBtImprimir = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIDAgenda = new javax.swing.JTextField();
        jStatusEscolta = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDataAgenda = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jObs = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Agendamento de Escolta/Médico :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 0, 255)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("ID Agenda:");

        jPesqId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPesqId.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Data Inicial:");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data Final:");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDatas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDatas.setContentAreaFilled(false);
        jBtPesqDatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDatasActionPerformed(evt);
            }
        });

        jBtPesqID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqID.setContentAreaFilled(false);
        jBtPesqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIDActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Nome Interno:");

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPesqId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesqID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPesqNomeInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBtPesqDatas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtPesqDatas, jBtPesqID});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(jPesqId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqID)
                    .addComponent(jLabel11)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDatas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBox1)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtPesqDatas, jBtPesqID});

        jTabelaPesquisaAgenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPesquisaAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome do Interno", "Observação"
            }
        ));
        jTabelaPesquisaAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaPesquisaAgendaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaPesquisaAgenda);
        if (jTabelaPesquisaAgenda.getColumnModel().getColumnCount() > 0) {
            jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setMinWidth(350);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(4).setMinWidth(250);
            jTabelaPesquisaAgenda.getColumnModel().getColumn(4).setMaxWidth(250);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoria.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtAuditoria)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome Completo do Interno");

        jIDInterno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDInterno.setEnabled(false);

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInterno.setEnabled(false);

        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoIngernoEscolta, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoIngernoEscolta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Data Agenda");

        jDataAgendamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAgendamento.setEnabled(false);

        jHora.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHora.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHora.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Horário");

        jOficio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jOficio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jOficio.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Número Oficio");

        jLocalDestino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLocalDestino.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Local de Destino");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jIDInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel7)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLocalDestino, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jHora, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(0, 92, Short.MAX_VALUE))
                                    .addComponent(jOficio))))
                        .addGap(10, 10, 10)))
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jOficio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLocalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabelaItensAgendamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Nome do Interno", "Data", "Horário", "Local Agendado"
            }
        ));
        jTabelaItensAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaItensAgendamento);
        if (jTabelaItensAgendamento.getColumnModel().getColumnCount() > 0) {
            jTabelaItensAgendamento.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaItensAgendamento.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaItensAgendamento.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaItensAgendamento.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaItensAgendamento.getColumnModel().getColumn(2).setMinWidth(280);
            jTabelaItensAgendamento.getColumnModel().getColumn(2).setMaxWidth(280);
            jTabelaItensAgendamento.getColumnModel().getColumn(3).setMinWidth(70);
            jTabelaItensAgendamento.getColumnModel().getColumn(3).setMaxWidth(70);
            jTabelaItensAgendamento.getColumnModel().getColumn(4).setMinWidth(70);
            jTabelaItensAgendamento.getColumnModel().getColumn(4).setMaxWidth(70);
            jTabelaItensAgendamento.getColumnModel().getColumn(5).setMinWidth(250);
            jTabelaItensAgendamento.getColumnModel().getColumn(5).setMaxWidth(250);
        }

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 255, 0))); // NOI18N

        jBtNovoAg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoAg.setText("Novo");
        jBtNovoAg.setEnabled(false);
        jBtNovoAg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoAgActionPerformed(evt);
            }
        });

        jBtAlterarAg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarAg.setText("Alterar");
        jBtAlterarAg.setEnabled(false);
        jBtAlterarAg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarAgActionPerformed(evt);
            }
        });

        jBtExcluirAg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirAg.setText("Excluir");
        jBtExcluirAg.setEnabled(false);
        jBtExcluirAg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirAgActionPerformed(evt);
            }
        });

        jBtSalvarAg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarAg.setText("Gravar");
        jBtSalvarAg.setEnabled(false);
        jBtSalvarAg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarAgActionPerformed(evt);
            }
        });

        jBtCancelarAg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarAg.setText("Cancelar");
        jBtCancelarAg.setEnabled(false);
        jBtCancelarAg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarAgActionPerformed(evt);
            }
        });

        jBtSairAg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairAg.setText("Sair");
        jBtSairAg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairAgActionPerformed(evt);
            }
        });

        jBtAuditoriaEscoltasInternos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaEscoltasInternos.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaEscoltasInternos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaEscoltasInternos.setToolTipText("Auditoria");
        jBtAuditoriaEscoltasInternos.setContentAreaFilled(false);
        jBtAuditoriaEscoltasInternos.setEnabled(false);

        jBtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimir.setText("Imprimir");
        jBtImprimir.setEnabled(false);
        jBtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jBtAuditoriaEscoltasInternos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtImprimir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jBtSairAg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtNovoAg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtAlterarAg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtExcluirAg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtSalvarAg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtCancelarAg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(48, 48, 48))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovoAg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarAg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirAg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jBtSalvarAg)
                        .addGap(31, 31, 31))
                    .addComponent(jBtCancelarAg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairAg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaEscoltasInternos)
                .addContainerGap())
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarAg, jBtAuditoriaEscoltasInternos, jBtCancelarAg, jBtExcluirAg, jBtNovoAg, jBtSairAg, jBtSalvarAg});

        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 255));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jIDAgenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDAgenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDAgenda.setEnabled(false);

        jStatusEscolta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEscolta.setForeground(new java.awt.Color(255, 0, 51));
        jStatusEscolta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEscolta.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Status");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data");

        jDataAgenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAgenda.setEnabled(false);

        jObs.setColumns(20);
        jObs.setRows(5);
        jObs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObs.setEnabled(false);
        jScrollPane3.setViewportView(jObs);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 30, Short.MAX_VALUE))
                            .addComponent(jIDAgenda))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jStatusEscolta, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusEscolta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Documento", jPanel9);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accessories-editor-text-icone-8886-96.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("Documento");

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, Short.MAX_VALUE)
        );

        setBounds(200, 20, 706, 556);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        corCampo();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        acao = 2;
        objAgenda.setStatusAgenda(jStatusEscolta.getText());
        if (jStatusEscolta.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse Agendamento de escolta não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            Alterar();
            corCampo();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        objAgenda.setStatusAgenda(jStatusEscolta.getText());
        if (jStatusEscolta.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse agendamento de escolta não poderá ser excluido, o mesmo encontra-se FINALIZADO");
        } else {
            verificarItens();
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (jDataAgenda.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data da Agenda.");
            jDataAgenda.requestFocus();
            jDataAgenda.setBackground(Color.red);
        } else {
            objAgenda.setDataAgenda(jDataAgenda.getDate());
            objAgenda.setStatusAgenda(statusEscolta);
            objAgenda.setObsAgenda(jObs.getText());
            // log de usuario
            objAgenda.setUsuarioInsert(nameUser);
            objAgenda.setDataInsert(dataModFinal);
            objAgenda.setHoraInsert(horaMov);
            if (acao == 1) {
                control.incluirAgendaEscolta(objAgenda);
                buscarCodAgenda();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                Salvar();
            }
            if (acao == 2) {
                // log de usuario
                objAgenda.setUsuarioUp(nameUser);
                objAgenda.setDataUp(dataModFinal);
                objAgenda.setHoraUp(horaMov);
                objAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
                control.alterarAgendaEscolta(objAgenda);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                Salvar();
            }
        }

    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtNovoAgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoAgActionPerformed
        // TODO add your handling code here:
        acao = 3;
        objAgenda.setStatusAgenda(jStatusEscolta.getText());
        if (jStatusEscolta.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse Agendamento de escolta não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            NovoAg();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtNovoAgActionPerformed

    private void jBtAlterarAgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarAgActionPerformed
        // TODO add your handling code here:  
        verificarSaidaInterno();
        objAgenda.setStatusAgenda(jStatusEscolta.getText());
        if (jStatusEscolta.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else if (respostaSaida.equals("Sim")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro, o interno já saiu da unidade.");
        } else {
            AlterarAg();
            acao = 4;
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtAlterarAgActionPerformed

    private void jBtExcluirAgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirAgActionPerformed
        // TODO add your handling code here:
        verificarSaidaInterno();
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        objAgenda.setStatusAgenda(jStatusEscolta.getText());
        if (jStatusEscolta.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
        } else if (respostaSaida.equals("Sim")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível excluir esse registro, o interno já saiu da unidade.");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o INTERNO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objItensAgenda.setIdItem(Integer.valueOf(idItem));
                controle.excluirItensAgenda(objItensAgenda);
                objItensAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
                objLog2();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                ExcluirAg();
                preencherTabelaItens("SELECT * FROM ITENSAGENDA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE IdAgenda='" + jIDAgenda.getText() + "'");
            }
        }
    }//GEN-LAST:event_jBtExcluirAgActionPerformed

    private void jBtSalvarAgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarAgActionPerformed
        // TODO add your handling code here:
        verificarSaidaInterno();
        if (jNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe qual é o interno a ser agfendado.");
            jNomeInterno.setBackground(Color.red);
        } else {
            if (jDataAgendamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do agendamento do interno");
                jDataAgendamento.requestFocus();
                jDataAgendamento.setBackground(Color.red);
            } else {
                if (jHora.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Por favor informe a hora para o agendameno.");
                    jHora.requestFocus();
                    jHora.setBackground(Color.red);
                } else {
                    if (jLocalDestino.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Informe o local do agendamento.");
                        jLocalDestino.requestFocus();
                        jLocalDestino.setBackground(Color.red);
                    } else {
                        objItensAgenda.setDataAgendamento(jDataAgendamento.getDate());
                        objItensAgenda.setHorarioAgenda(jHora.getText());
                        objItensAgenda.setLocalAgenda(jLocalDestino.getText());
                        objItensAgenda.setOficioAgenda(jOficio.getText());
                        objItensAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
                        objItensAgenda.setIdInternoCrc(Integer.valueOf(jIDInterno.getText()));
                        objItensAgenda.setNomeInterno(jNomeInterno.getText());
                        objItensAgenda.setUtilizaAgenda(utilizaAgenda);
                        if (acao == 3) {
                            objItensAgenda.setUsuarioInsert(nameUser);
                            objItensAgenda.setDataInsert(dataModFinal);
                            objItensAgenda.setHoraInsert(horaMov);
                            //
                            controle.incluirItensAgenda(objItensAgenda);
                            objLog2();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            SalvarAg();
                            preencherTabelaItens("SELECT * FROM ITENSAGENDA "
                                    + "INNER JOIN PRONTUARIOSCRC "
                                    + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                    + "WHERE IdAgenda='" + jIDAgenda.getText() + "'");
                            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        }
                        if (acao == 4) {
                            if (respostaSaida.equals("Sim")) {
                                JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro, o interno já saiu da unidade.");
                            } else {
                                //
                                objItensAgenda.setUsuarioUp(nameUser);
                                objItensAgenda.setDataUp(dataModFinal);
                                objItensAgenda.setHoraUp(horaMov);
                                //
                                objItensAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText())); // Id da Agenda
                                objItensAgenda.setIdInternoCrc(Integer.valueOf(jIDInterno.getText())); // Id do Interno
                                objItensAgenda.setNomeInterno(jNomeInterno.getText()); // Nome do interno
                                objItensAgenda.setIdItem(Integer.valueOf(idItem));// Id do item
                                controle.alterarItensAgenda(objItensAgenda);
                                objLog2();
                                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                SalvarAg();
                                preencherTabelaItens("SELECT * FROM ITENSAGENDA "
                                        + "INNER JOIN PRONTUARIOSCRC "
                                        + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                        + "WHERE IdAgenda='" + jIDAgenda.getText() + "'");
                                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtSalvarAgActionPerformed

    private void jBtCancelarAgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarAgActionPerformed
        // TODO add your handling code here:
        CancelarAg();
    }//GEN-LAST:event_jBtCancelarAgActionPerformed

    private void jBtSairAgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairAgActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairAgActionPerformed

    private void jTabelaPesquisaAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaPesquisaAgendaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idAgenda = "" + jTabelaPesquisaAgenda.getValueAt(jTabelaPesquisaAgenda.getSelectedRow(), 0);
            jPesqId.setText(idAgenda);
            //
            jDataAgenda.setDate(jDataAgenda.getDate());
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtNovoAg.setEnabled(true);
            jBtImprimir.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM AGENDAESCOLTA WHERE IdAgenda ='" + idAgenda + "'");
                conecta.rs.first();
                jIDAgenda.setText(String.valueOf(conecta.rs.getInt("IdAgenda")));
                jStatusEscolta.setText(conecta.rs.getString("StatusAgenda"));
                jDataAgenda.setDate(conecta.rs.getDate("DataAgenda"));
                jObs.setText(conecta.rs.getString("ObsAgenda"));
            } catch (SQLException e) {
                // JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            preencherTabelaItens("SELECT * FROM ITENSAGENDA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE ITENSAGENDA.IdAgenda='" + idAgenda + "'");
        }
        conecta.desconecta();
    }//GEN-LAST:event_jTabelaPesquisaAgendaMouseClicked

    private void jTabelaItensAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensAgendamentoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeInterno = "" + jTabelaItensAgendamento.getValueAt(jTabelaItensAgendamento.getSelectedRow(), 2);
            jNomeInterno.setText(nomeInterno);
            idItem = "" + jTabelaItensAgendamento.getValueAt(jTabelaItensAgendamento.getSelectedRow(), 0);
            // Habilitar os botões
            jBtNovoAg.setEnabled(!true);
            jBtAlterarAg.setEnabled(true);
            jBtExcluirAg.setEnabled(true);
            jBtSalvarAg.setEnabled(!true);
            jBtCancelarAg.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSAGENDA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE NomeInternoCrc='" + jNomeInterno.getText() + "' "
                        + "AND IdAgenda='" + jIDAgenda.getText() + "'AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIDInterno.setText(conecta.rs.getString("IdInternoCrc")); //Coluna 0
                jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc")); // Coluna 1
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                FotoIngernoEscolta.setIcon(i);
                FotoIngernoEscolta.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoIngernoEscolta.getWidth(), FotoIngernoEscolta.getHeight(), Image.SCALE_DEFAULT)));
                //
                idItem = conecta.rs.getString("IdItem"); // Coluna 2                
                jDataAgendamento.setDate(conecta.rs.getDate("DataAgenda"));
                jHora.setText(conecta.rs.getString("HorarioAgenda"));
                jLocalDestino.setText(conecta.rs.getString("LocalAgenda"));
                jOficio.setText(conecta.rs.getString("OficioAgenda"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaItensAgendamentoMouseClicked

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaPesqInternoAgenda objInterAgenda = new TelaPesqInternoAgenda();
        TelaModuloCRC.jPainelCRC.add(objInterAgenda);
        objInterAgenda.show();

    }//GEN-LAST:event_jBtPesqInternoActionPerformed

    private void jBtPesqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIDActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqId.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código da agenda para pesquisa.");
            jPesqId.requestFocus();
        } else {
            preencherTabelaTodos("SELECT * FROM AGENDAESCOLTA "
                    + "WHERE AGENDAESCOLTA.IdAgenda='" + jPesqId.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIDActionPerformed

    private void jBtPesqDatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDatasActionPerformed
        // TODO add your handling code here:        
        count = 0;
        flag = 1;
        if (jDataInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataInicial.requestFocus();
        } else {
            if (jDataFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataFinal.requestFocus();
            } else {
                if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                    preencherTabelaTodos("SELECT * FROM AGENDAESCOLTA "
                            + "WHERE AGENDAESCOLTA.DataAgenda BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDatasActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEscolta = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse agendamento for finalizado,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o AGENDAMENTO selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objAgenda.setStatusAgenda(statusEscolta);
            objAgenda.setIdAgenda(Integer.parseInt(jIDAgenda.getText()));
            control.finalizarAgendaEscolta(objAgenda);
            objAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jDataAgenda.setEnabled(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtNovoAg.setEnabled(!true);
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaTodos("SELECT DISTINCT * FROM AGENDAESCOLTA ");
        } else {
            jtotalRegistros.setText("");
            limparTabelaAgenda();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome ou parte do nome do interno para pesquisa.");
        } else {
            preencherTodasAgendas("SELECT * FROM AGENDAESCOLTA "
                    + "INNER JOIN ITENSAGENDA "
                    + "ON AGENDAESCOLTA.IdAgenda=ITENSAGENDA.IdAgenda "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jBtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirActionPerformed
        // TODO add your handling code here:
        try {
            conecta.abrirConexao();
            String path = "reports/RelatorioAgendaEscolta.jasper";
            conecta.executaSQL("SELECT * FROM ITENSAGENDA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSAGENDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdAgenda='" + jIDAgenda.getText() + "' "
                    + "ORDER BY DataAgenda,HorarioAgenda");
            HashMap parametros = new HashMap();
            parametros.put("codAgenda", jIDAgenda.getText());
            parametros.put("nomeUsuario", nameUser);
            JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
            JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
            JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao
            jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
            jv.setTitle("Relatório de Agendamento de Escolta");
            jv.setVisible(true); // Chama o relatorio para ser visualizado             
            jv.toFront(); // Traz o relatorio para frente da aplicação            
            conecta.desconecta();
        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
        }
    }//GEN-LAST:event_jBtImprimirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoIngernoEscolta;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarAg;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaEscoltasInternos;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarAg;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirAg;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImprimir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoAg;
    private javax.swing.JButton jBtPesqDatas;
    private javax.swing.JButton jBtPesqID;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtSairAg;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarAg;
    private javax.swing.JCheckBox jCheckBox1;
    private com.toedter.calendar.JDateChooser jDataAgenda;
    private com.toedter.calendar.JDateChooser jDataAgendamento;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    private javax.swing.JFormattedTextField jHora;
    public static javax.swing.JTextField jIDAgenda;
    public static javax.swing.JTextField jIDInterno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLocalDestino;
    public static javax.swing.JTextField jNomeInterno;
    private javax.swing.JTextArea jObs;
    private javax.swing.JTextField jOficio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqId;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTextField jStatusEscolta;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaItensAgendamento;
    private javax.swing.JTable jTabelaPesquisaAgenda;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        try {
            MaskFormatter hora = new MaskFormatter("##:##");
            jHora.setFormatterFactory(new DefaultFormatterFactory(hora));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar o campo Horário\nERRO: " + e);
        }
        jLocalDestino.setDocument(new LimiteDigitosAlfa(55));
    }

    public void corCampo() {
        // Cor branca dos campos
        jIDAgenda.setBackground(Color.white);
        jStatusEscolta.setBackground(Color.white);
        jDataAgenda.setBackground(Color.white);
        jObs.setBackground(Color.white);
        jIDInterno.setBackground(Color.white);
        jNomeInterno.setBackground(Color.white);
        jDataAgendamento.setBackground(Color.white);
        jHora.setBackground(Color.white);
        jLocalDestino.setBackground(Color.white);
        jOficio.setBackground(Color.white);
    }

    public void Novo() {
        if (!jIDAgenda.getText().equals("")) {
            // Limpar os campos da tela internos
            jIDAgenda.setText("");
            jStatusEscolta.setText("ABERTO");
            jDataAgenda.setCalendar(Calendar.getInstance());
            jObs.setText("");
            jIDInterno.setText("");
            jNomeInterno.setText("");
            FotoIngernoEscolta.setIcon(null);
            jDataAgendamento.setDate(null);
            jHora.setText("");
            jLocalDestino.setText("");
            jOficio.setText("");
            jBtAuditoria.setEnabled(!true);
            // Habilita/Desabilita campos
            jDataAgenda.setEnabled(true);
            jObs.setEnabled(true);
            // Botões de manutenção
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            limparItensAgenda();
        } else {
            // Limpar campos da tela manutenção
            jIDAgenda.setText("");
            jStatusEscolta.setText("ABERTO");
            jDataAgenda.setCalendar(Calendar.getInstance());
            jObs.setText("");
            // Limpar os campos da tela internos
            jIDInterno.setText("");
            jNomeInterno.setText("");
            FotoIngernoEscolta.setIcon(null);
            jDataAgendamento.setDate(null);
            jHora.setText("");
            jLocalDestino.setText("");
            jOficio.setText("");
            // Habilita/Desabilita campos
            jDataAgenda.setEnabled(true);
            jObs.setEnabled(true);
            // Botões de manutenção
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            limparItensAgenda();
        }
    }

    public void Alterar() {

        jBtNovoAg.setEnabled(!true);
        jDataAgenda.setEnabled(true);
        jObs.setEnabled(true);
        // Botões de manutenção
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoAg.setEnabled(!true);
    }

    public void Excluir() {

        // Limpar campos da tela manutenção
        jIDAgenda.setText("");
        jStatusEscolta.setText("");
        jDataAgenda.setDate(null);
        jObs.setText("");
        // Habilita/Desabiliar campos
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //Habilita/Desabiliar botões
        jBtNovoAg.setEnabled(!true);
        jBtAlterarAg.setEnabled(!true);
        jBtExcluirAg.setEnabled(!true);
        jBtSalvarAg.setEnabled(!true);
        jBtCancelarAg.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Salvar() {

        jBtNovoAg.setEnabled(true);
        jDataAgenda.setEnabled(!true);
        jObs.setEnabled(!true);
        //
        // Botões de manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtPesqInterno.setEnabled(true);
    }

    public void Cancelar() {
        if (jIDAgenda.getText().equals("")) {
            // Limpar os campos da tela internos
            jIDAgenda.setText("");
            jDataAgenda.setDate(null);
            jObs.setText("");
            jIDInterno.setText("");
            jNomeInterno.setText("");
            FotoIngernoEscolta.setIcon(null);
            jDataAgendamento.setDate(null);
            jHora.setText("");
            jLocalDestino.setText("");
            jOficio.setText("");
            //
            jDataAgenda.setEnabled(!true);
            jObs.setEnabled(!true);
            //
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            limparItensAgenda();
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //Habilita/Desabiliar botões
            jBtNovoAg.setEnabled(!true);
            jBtAlterarAg.setEnabled(!true);
            jBtExcluirAg.setEnabled(!true);
            jBtSalvarAg.setEnabled(!true);
            jBtCancelarAg.setEnabled(!true);
        } else {
            //
            jDataAgenda.setEnabled(!true);
            jObs.setEnabled(!true);
            // Habilita/Desabiliar campos
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            //Habilita/Desabiliar botões
            jBtNovoAg.setEnabled(!true);
            jBtAlterarAg.setEnabled(!true);
            jBtExcluirAg.setEnabled(!true);
            jBtSalvarAg.setEnabled(!true);
            jBtCancelarAg.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
        }
    }

    public void NovoAg() {
        // Limpar campos do interno
        jIDInterno.setText("");
        jNomeInterno.setText("");
        FotoIngernoEscolta.setIcon(null);
        jDataAgendamento.setDate(null);
        jHora.setText("");
        jLocalDestino.setText("");
        jOficio.setText("");
        // Botões de manutenção
        jBtNovoAg.setEnabled(!true);
        jBtAlterarAg.setEnabled(!true);
        jBtExcluirAg.setEnabled(!true);
        jBtSalvarAg.setEnabled(true);
        jBtCancelarAg.setEnabled(true);
        jBtImprimir.setEnabled(!true);
        // Botão para pesquisa interno
        jBtPesqInterno.setEnabled(true);
        //
        jDataAgendamento.setEnabled(true);
        jHora.setEnabled(true);
        jLocalDestino.setEnabled(true);
        jOficio.setEnabled(true);
    }

    public void AlterarAg() {

        jDataAgendamento.setEnabled(true);
        jHora.setEnabled(true);
        jLocalDestino.setEnabled(true);
        jOficio.setEnabled(true);
        // Botão para pesquisa interno
        jBtPesqInterno.setEnabled(true);
        // Botões de manutenção
        jBtNovoAg.setEnabled(!true);
        jBtAlterarAg.setEnabled(!true);
        jBtExcluirAg.setEnabled(!true);
        jBtSalvarAg.setEnabled(true);
        jBtCancelarAg.setEnabled(true);
        jBtImprimir.setEnabled(!true);
    }

    public void ExcluirAg() {
        // Limpar campos do interno
        jIDInterno.setText("");
        jNomeInterno.setText("");
        FotoIngernoEscolta.setIcon(null);
        jDataAgendamento.setDate(null);
        jHora.setText("");
        jLocalDestino.setText("");
        jOficio.setText("");
        //Habilita/Desabilitar campos
        jDataAgendamento.setEnabled(!true);
        jHora.setEnabled(!true);
        jLocalDestino.setEnabled(!true);
        jOficio.setEnabled(!true);
        // Botão para pesquisa interno
        jBtPesqInterno.setEnabled(!true);
        // Botões de manutenção
        jBtNovoAg.setEnabled(true);
        jBtAlterarAg.setEnabled(!true);
        jBtExcluirAg.setEnabled(!true);
        jBtSalvarAg.setEnabled(!true);
        jBtCancelarAg.setEnabled(!true);
        jBtImprimir.setEnabled(!true);
    }

    public void SalvarAg() {
        jIDInterno.setText("");
        jNomeInterno.setText("");
        FotoIngernoEscolta.setIcon(null);
        jDataAgendamento.setDate(null);
        jHora.setText("");
        jLocalDestino.setText("");
        jOficio.setText("");
        //Habilita/Desabilitar campos
        jDataAgendamento.setEnabled(!true);
        jHora.setEnabled(!true);
        jLocalDestino.setEnabled(!true);
        jOficio.setEnabled(!true);
        // Botão para pesquisa interno
        jBtPesqInterno.setEnabled(!true);
        // Botões de manutenção
        jBtNovoAg.setEnabled(true);
        jBtAlterarAg.setEnabled(!true);
        jBtExcluirAg.setEnabled(!true);
        jBtSalvarAg.setEnabled(!true);
        jBtCancelarAg.setEnabled(!true);
        jBtImprimir.setEnabled(true);
    }

    public void CancelarAg() {
        // Limpar campos do interno
        jIDInterno.setText("");
        jNomeInterno.setText("");
        FotoIngernoEscolta.setIcon(null);
        jDataAgendamento.setDate(null);
        jHora.setText("");
        jLocalDestino.setText("");
        jOficio.setText("");
        //Habilita/Desabilitar campos
        jDataAgendamento.setEnabled(!true);
        jHora.setEnabled(!true);
        jLocalDestino.setEnabled(!true);
        jOficio.setEnabled(!true);
        // Botão para pesquisa interno
        jBtPesqInterno.setEnabled(!true);
        // Botões de manutenção
        jBtNovoAg.setEnabled(true);
        jBtAlterarAg.setEnabled(!true);
        jBtExcluirAg.setEnabled(!true);
        jBtSalvarAg.setEnabled(!true);
        jBtCancelarAg.setEnabled(!true);
        jBtImprimir.setEnabled(true);
    }

    //Buscar código de entrada
    public void buscarCodAgenda() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM AGENDAESCOLTA");
            conecta.rs.last();
            jIDAgenda.setText(String.valueOf(conecta.rs.getInt("IdAgenda")));
            conecta.desconecta();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel encontrar ID da Agenda \nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void verificarSaidaInterno() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSAGENDA "
                    + "WHERE IdInternoCrc='" + jIDInterno.getText() + "' "
                    + "AND IdItem='" + idItem + "'");
            conecta.rs.first();
            respostaSaida = conecta.rs.getString("UtilizaAgenda");
            conecta.desconecta();
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaTodos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataAgenda = conecta.rs.getString("DataAgenda");
                String dia = dataAgenda.substring(8, 10);
                String mes = dataAgenda.substring(5, 7);
                String ano = dataAgenda.substring(0, 4);
                dataAgenda = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdAgenda"), dataAgenda, conecta.rs.getString("StatusAgenda"), conecta.rs.getString("ObsAgenda")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaAgenda.setModel(modelo);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setPreferredWidth(450);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaAgenda.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaAgenda.setAutoResizeMode(jTabelaPesquisaAgenda.AUTO_RESIZE_OFF);
        jTabelaPesquisaAgenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgenda();
        conecta.desconecta();
    }

    public void preencherTodasAgendas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataAgenda = conecta.rs.getString("DataAgenda");
                String dia = dataAgenda.substring(8, 10);
                String mes = dataAgenda.substring(5, 7);
                String ano = dataAgenda.substring(0, 4);
                dataAgenda = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdAgenda"), dataAgenda, conecta.rs.getString("StatusAgenda"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("ObsAgenda")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaAgenda.setModel(modelo);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(4).setPreferredWidth(250);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(4).setResizable(false);
        jTabelaPesquisaAgenda.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaAgenda.setAutoResizeMode(jTabelaPesquisaAgenda.AUTO_RESIZE_OFF);
        jTabelaPesquisaAgenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgenda();
        conecta.desconecta();
    }

    public void alinharTabelaAgenda() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Data", "Horário", "Local Agendado"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data no formato Brasil
                dataAgenda = conecta.rs.getString("DataAgenda");
                String dia = dataAgenda.substring(8, 10);
                String mes = dataAgenda.substring(5, 7);
                String ano = dataAgenda.substring(0, 4);
                dataAgenda = dia + "/" + mes + "/" + ano;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), dataAgenda, conecta.rs.getString("HorarioAgenda"), conecta.rs.getString("LocalAgenda")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensAgendamento.setModel(modelo);
        jTabelaItensAgendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaItensAgendamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensAgendamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaItensAgendamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaItensAgendamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(4).setPreferredWidth(70);
        jTabelaItensAgendamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(5).setPreferredWidth(250);
        jTabelaItensAgendamento.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensAgendamento.getTableHeader().setReorderingAllowed(false);
        jTabelaItensAgendamento.setAutoResizeMode(jTabelaItensAgendamento.AUTO_RESIZE_OFF);
        jTabelaItensAgendamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCamposTabelaItens();
        conecta.desconecta();
    }

    public void alinhaCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensAgendamento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensAgendamento.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaItensAgendamento.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaItensAgendamento.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }

    public void limparItensAgenda() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Data", "Horário", "Local Agendado"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensAgendamento.setModel(modelo);
        jTabelaItensAgendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaItensAgendamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensAgendamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaItensAgendamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaItensAgendamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(4).setPreferredWidth(70);
        jTabelaItensAgendamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensAgendamento.getColumnModel().getColumn(5).setPreferredWidth(250);
        jTabelaItensAgendamento.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensAgendamento.getTableHeader().setReorderingAllowed(false);
        jTabelaItensAgendamento.setAutoResizeMode(jTabelaItensAgendamento.AUTO_RESIZE_OFF);
        jTabelaItensAgendamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void limparTabelaAgenda() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaAgenda.setModel(modelo);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setPreferredWidth(450);
        jTabelaPesquisaAgenda.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaAgenda.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaAgenda.setAutoResizeMode(jTabelaPesquisaAgenda.AUTO_RESIZE_OFF);
        jTabelaPesquisaAgenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSAGENDA WHERE IdAgenda='" + jIDAgenda.getText() + "'");
            conecta.rs.first();
            codAgenda = conecta.rs.getString("IdAgenda");
            if (jIDAgenda.getText().equals(codAgenda)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o AGENDAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objAgenda.setIdAgenda(Integer.parseInt(jIDAgenda.getText()));
                control.excluirAgendaEscolta(objAgenda);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Não foi possivel EXCLUIR Lançamento...\nERRO :" + ex);
            }
        }
    }

    public void objLog() {

        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDAgenda.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);

    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDAgenda.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
