/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAssistenciaEducativa;
import gestor.Controle.ControleInternosEducacional;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.listarInternosEE;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.AssistenciaEducativa;
import gestor.Modelo.CursosDiversos;
import gestor.Modelo.InternosSaidaEducacional;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPedagogia.codAbrirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codAlterarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codConsultarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codExcluirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codGravarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codIncluirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codUserAcessoPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoGrupoPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoUserGroupPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoUserPEDA;
import static gestor.Visao.TelaModuloPedagogia.nomeGrupoPEDA;
import static gestor.Visao.TelaModuloPedagogia.nomeTelaPEDA;
import static gestor.Visao.TelaModuloPedagogia.telaAssistenciaEducaInte_PEDA;
import static gestor.Visao.TelaModuloPedagogia.telaAssistenciaEducaManu_PEDA;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaAssistenciaEducacionalExterna extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AssistenciaEducativa objAssis = new AssistenciaEducativa();
    InternosSaidaEducacional objIntEduca = new InternosSaidaEducacional();
    ControleAssistenciaEducativa control = new ControleAssistenciaEducativa();
    ControleInternosEducacional controle = new ControleInternosEducacional();
    listarInternosEE listaDAO = new listarInternosEE();
    //   
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Pedagogia:Assistência Educacional Externa:Manutenção";
    String nomeModuloTela2 = "Pedagogia:Assistência Educacional Externa:Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String dataInicial, dataFinal;
    int count = 0;
    String dataCadastro;
    int tipoAcesso;
    public static String idItem;
    String caminho;
    String codEduca;
    String evadidoEducacao = ""; // VARIAVEL PARA QUANDO INTERNO EVADIR
    // DIAS E HORARIOS DA SEMANA PARA SAIDA DOS INTERNOS
    public static int DiaSeg;
    public static int DiaTer;
    public static int DiaQua;
    public static int DiaQui;
    public static int DiaSex;
    public static int DiaSab;
    public static int DiaDom;
    //
    public static int DiaSeg1;
    public static int DiaTer1;
    public static int DiaQua1;
    public static int DiaQui1;
    public static int DiaSex1;
    public static int DiaSab1;
    public static int DiaDom1;
    //
    public static int pCODIGO_CURSO = 0;

    /**
     * Creates new form TelaAssistenciaEducacionalExterna
     */
    public TelaAssistenciaEducacionalExterna() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtTipoAcessos = new javax.swing.ButtonGroup();
        btTipoAcessoInternos = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jIDPesqLan = new javax.swing.JTextField();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaAssistenciaEducaional = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jStatusLanc = new javax.swing.JTextField();
        jIdCod = new javax.swing.JTextField();
        jNomeInstituicao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jBtPesqInstituicao = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jIdTurno = new javax.swing.JTextField();
        jDescricaoTurno = new javax.swing.JTextField();
        jBtPesqTurno = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxCurso = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jCheckBoxSeg = new javax.swing.JCheckBox();
        jCheckBoxTer = new javax.swing.JCheckBox();
        jCheckBoxQua = new javax.swing.JCheckBox();
        jCheckBoxQui = new javax.swing.JCheckBox();
        jCheckBoxSex = new javax.swing.JCheckBox();
        jCheckBoxSab = new javax.swing.JCheckBox();
        jCheckBoxDom = new javax.swing.JCheckBox();
        jBtFinalizar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaInterno = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jBtNovoInterno = new javax.swing.JButton();
        jBtAlterarInterno = new javax.swing.JButton();
        jBtExcluirInterno = new javax.swing.JButton();
        jBtSalvarInterno = new javax.swing.JButton();
        jBtCancelarInterno = new javax.swing.JButton();
        jBtAuditoriaInterno = new javax.swing.JButton();
        jBtSair1 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jIdInternoAssis = new javax.swing.JTextField();
        jBtPesqInternoAssis = new javax.swing.JButton();
        jNomeInternoAssis = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jMatriculaPenalAssis = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jRadioButtonLiberado = new javax.swing.JRadioButton();
        jRadioButtonBloqueado = new javax.swing.JRadioButton();
        jRadioButtonConcluido = new javax.swing.JRadioButton();
        jRadioButtonEmEspera = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jCheckBoxSeg1 = new javax.swing.JCheckBox();
        jCheckBoxTer1 = new javax.swing.JCheckBox();
        jCheckBoxQua1 = new javax.swing.JCheckBox();
        jCheckBoxQui1 = new javax.swing.JCheckBox();
        jCheckBoxSex1 = new javax.swing.JCheckBox();
        jCheckBoxSab1 = new javax.swing.JCheckBox();
        jCheckBoxDom1 = new javax.swing.JCheckBox();
        jPanel18 = new javax.swing.JPanel();
        jHoraSeg = new javax.swing.JFormattedTextField();
        jHoraTer = new javax.swing.JFormattedTextField();
        jHoraQua = new javax.swing.JFormattedTextField();
        jHoraQui = new javax.swing.JFormattedTextField();
        jHoraSex = new javax.swing.JFormattedTextField();
        jHoraSab = new javax.swing.JFormattedTextField();
        jHoraDom = new javax.swing.JFormattedTextField();
        jPanel19 = new javax.swing.JPanel();
        jHoraSegEnt = new javax.swing.JFormattedTextField();
        jHoraTerEnt = new javax.swing.JFormattedTextField();
        jHoraQuaEnt = new javax.swing.JFormattedTextField();
        jHoraQuiEnt = new javax.swing.JFormattedTextField();
        jHoraSexEnt = new javax.swing.JFormattedTextField();
        jHoraSabEnt = new javax.swing.JFormattedTextField();
        jHoraDomEnt = new javax.swing.JFormattedTextField();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jMotivo = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        FotoInternoAssis = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...:::Tela Assistência Educacional Externa :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Código");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Data Inicial:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Data Final:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nome Interno:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jIDPesqLan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox2.setText("Todos");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jPesqNomeInterno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jIDPesqLan, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 240, Short.MAX_VALUE))))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox2)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(jIDPesqLan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel16)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaAssistenciaEducaional.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAssistenciaEducaional.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Observação"
            }
        ));
        jTabelaAssistenciaEducaional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAssistenciaEducaionalMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabelaAssistenciaEducaional);
        if (jTabelaAssistenciaEducaional.getColumnModel().getColumnCount() > 0) {
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(3).setMinWidth(280);
            jTabelaAssistenciaEducaional.getColumnModel().getColumn(3).setMaxWidth(280);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtotalRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome da Instituição");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(255, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setEnabled(false);

        jIdCod.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdCod.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdCod.setEnabled(false);

        jNomeInstituicao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInstituicao.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Código");

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jBtPesqInstituicao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInstituicao.setContentAreaFilled(false);
        jBtPesqInstituicao.setEnabled(false);
        jBtPesqInstituicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInstituicaoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Código");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Descrição do Turno");

        jIdTurno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdTurno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdTurno.setEnabled(false);

        jDescricaoTurno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoTurno.setEnabled(false);

        jBtPesqTurno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqTurno.setContentAreaFilled(false);
        jBtPesqTurno.setEnabled(false);
        jBtPesqTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqTurnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jIdTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jDescricaoTurno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jStatusLanc))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jIdCod, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeInstituicao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdCod, jIdLanc, jIdTurno});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInstituicao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqTurno)
                    .addComponent(jIdTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addGap(1, 1, 1)
                .addComponent(jBtAlterar)
                .addGap(1, 1, 1)
                .addComponent(jBtExcluir)
                .addGap(1, 1, 1)
                .addComponent(jBtSalvar)
                .addGap(1, 1, 1)
                .addComponent(jBtCancelar)
                .addGap(1, 1, 1)
                .addComponent(jBtSair)
                .addGap(18, 18, 18)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtAuditoria)
                .addComponent(jBtSair)
                .addComponent(jBtCancelar)
                .addComponent(jBtSalvar)
                .addComponent(jBtExcluir)
                .addComponent(jBtAlterar)
                .addComponent(jBtNovo))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Descrição do Curso");

        jComboBoxCurso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxCurso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxCurso.setEnabled(false);
        jComboBoxCurso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCursoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBoxCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Observação:");

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dias da Semana", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jCheckBoxSeg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSeg.setText("Seg");
        jCheckBoxSeg.setEnabled(false);
        jCheckBoxSeg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSeg.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jCheckBoxSeg.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jCheckBoxTer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTer.setText("Ter");
        jCheckBoxTer.setEnabled(false);
        jCheckBoxTer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxTer.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxTer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxQua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxQua.setText("Qua");
        jCheckBoxQua.setEnabled(false);
        jCheckBoxQua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxQua.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxQua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxQui.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxQui.setText("Qui");
        jCheckBoxQui.setEnabled(false);
        jCheckBoxQui.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxQui.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxQui.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxSex.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSex.setText("Sex");
        jCheckBoxSex.setEnabled(false);
        jCheckBoxSex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSex.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxSex.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxSab.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSab.setText("Sáb");
        jCheckBoxSab.setEnabled(false);
        jCheckBoxSab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSab.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxSab.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxDom.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDom.setText("Dom");
        jCheckBoxDom.setEnabled(false);
        jCheckBoxDom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxDom.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxDom.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jCheckBoxSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxTer, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxQua, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxQui, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDom)
                .addGap(28, 28, 28))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxSeg)
                    .addComponent(jCheckBoxTer)
                    .addComponent(jCheckBoxQua)
                    .addComponent(jCheckBoxQui)
                    .addComponent(jCheckBoxSex)
                    .addComponent(jCheckBoxSab)
                    .addComponent(jCheckBoxDom))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jBtFinalizar.setForeground(new java.awt.Color(0, 153, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jBtFinalizar)
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jTabelaInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaInterno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Código", "Nome do Interno", "Matricula Penal"
            }
        ));
        jTabelaInterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaInternoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaInterno);
        if (jTabelaInterno.getColumnModel().getColumnCount() > 0) {
            jTabelaInterno.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaInterno.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaInterno.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaInterno.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaInterno.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaInterno.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaInterno.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaInterno.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoInterno.setText("Novo");
        jBtNovoInterno.setContentAreaFilled(false);
        jBtNovoInterno.setEnabled(false);
        jBtNovoInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoInternoActionPerformed(evt);
            }
        });

        jBtAlterarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarInterno.setText("Alterar");
        jBtAlterarInterno.setContentAreaFilled(false);
        jBtAlterarInterno.setEnabled(false);
        jBtAlterarInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarInternoActionPerformed(evt);
            }
        });

        jBtExcluirInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirInterno.setText("Excluir");
        jBtExcluirInterno.setContentAreaFilled(false);
        jBtExcluirInterno.setEnabled(false);
        jBtExcluirInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirInternoActionPerformed(evt);
            }
        });

        jBtSalvarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarInterno.setText("Gravar");
        jBtSalvarInterno.setContentAreaFilled(false);
        jBtSalvarInterno.setEnabled(false);
        jBtSalvarInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarInternoActionPerformed(evt);
            }
        });

        jBtCancelarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarInterno.setText("Cancelar");
        jBtCancelarInterno.setContentAreaFilled(false);
        jBtCancelarInterno.setEnabled(false);
        jBtCancelarInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarInternoActionPerformed(evt);
            }
        });

        jBtAuditoriaInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaInterno.setContentAreaFilled(false);
        jBtAuditoriaInterno.setEnabled(false);
        jBtAuditoriaInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaInternoActionPerformed(evt);
            }
        });

        jBtSair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair1.setText("Sair");
        jBtSair1.setContentAreaFilled(false);
        jBtSair1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSair1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jBtNovoInterno)
                .addGap(1, 1, 1)
                .addComponent(jBtAlterarInterno)
                .addGap(1, 1, 1)
                .addComponent(jBtExcluirInterno)
                .addGap(1, 1, 1)
                .addComponent(jBtSalvarInterno)
                .addGap(1, 1, 1)
                .addComponent(jBtCancelarInterno)
                .addGap(1, 1, 1)
                .addComponent(jBtSair1)
                .addGap(18, 18, 18)
                .addComponent(jBtAuditoriaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtNovoInterno)
                .addComponent(jBtAlterarInterno)
                .addComponent(jBtExcluirInterno)
                .addComponent(jBtSalvarInterno)
                .addComponent(jBtCancelarInterno)
                .addComponent(jBtSair1)
                .addComponent(jBtAuditoriaInterno))
        );

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jIdInternoAssis.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoAssis.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoAssis.setEnabled(false);

        jBtPesqInternoAssis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInternoAssis.setContentAreaFilled(false);
        jBtPesqInternoAssis.setEnabled(false);
        jBtPesqInternoAssis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoAssisActionPerformed(evt);
            }
        });

        jNomeInternoAssis.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoAssis.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome Completo do Interno");

        jMatriculaPenalAssis.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMatriculaPenalAssis.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Matricula Penal");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Tipo Acesso:");

        BtTipoAcessos.add(jRadioButtonLiberado);
        jRadioButtonLiberado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonLiberado.setText("Liberado");
        jRadioButtonLiberado.setEnabled(false);

        BtTipoAcessos.add(jRadioButtonBloqueado);
        jRadioButtonBloqueado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonBloqueado.setSelected(true);
        jRadioButtonBloqueado.setText("Bloqueado");
        jRadioButtonBloqueado.setEnabled(false);

        BtTipoAcessos.add(jRadioButtonConcluido);
        jRadioButtonConcluido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonConcluido.setText("Concluído");
        jRadioButtonConcluido.setEnabled(false);

        BtTipoAcessos.add(jRadioButtonEmEspera);
        jRadioButtonEmEspera.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonEmEspera.setText("Em Espera");
        jRadioButtonEmEspera.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Regime");

        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField1.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jNomeInternoAssis)
                        .addContainerGap())
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jIdInternoAssis, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtPesqInternoAssis, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jMatriculaPenalAssis, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jRadioButtonLiberado)
                                        .addGap(31, 31, 31)
                                        .addComponent(jRadioButtonConcluido))
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jRadioButtonBloqueado)
                                        .addGap(21, 21, 21)
                                        .addComponent(jRadioButtonEmEspera)))))
                        .addGap(0, 121, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel13)))
                .addGap(3, 3, 3)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMatriculaPenalAssis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInternoAssis)
                    .addComponent(jIdInternoAssis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoAssis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(jRadioButtonLiberado)
                    .addComponent(jRadioButtonConcluido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonBloqueado)
                    .addComponent(jRadioButtonEmEspera))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados do Interno", jPanel14);

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dias da Semana", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jCheckBoxSeg1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSeg1.setText("Seg");
        jCheckBoxSeg1.setEnabled(false);
        jCheckBoxSeg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSeg1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jCheckBoxSeg1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jCheckBoxTer1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTer1.setText("Ter");
        jCheckBoxTer1.setEnabled(false);
        jCheckBoxTer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxTer1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxTer1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxQua1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxQua1.setText("Qua");
        jCheckBoxQua1.setEnabled(false);
        jCheckBoxQua1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxQua1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxQua1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxQui1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxQui1.setText("Qui");
        jCheckBoxQui1.setEnabled(false);
        jCheckBoxQui1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxQui1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxQui1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxSex1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSex1.setText("Sex");
        jCheckBoxSex1.setEnabled(false);
        jCheckBoxSex1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSex1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxSex1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxSab1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSab1.setText("Sáb");
        jCheckBoxSab1.setEnabled(false);
        jCheckBoxSab1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSab1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxSab1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxDom1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDom1.setText("Dom");
        jCheckBoxDom1.setEnabled(false);
        jCheckBoxDom1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxDom1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxDom1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jCheckBoxSeg1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxTer1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxQua1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxQui1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSex1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSab1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDom1)
                .addGap(28, 28, 28))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxSeg1)
                    .addComponent(jCheckBoxTer1)
                    .addComponent(jCheckBoxQua1)
                    .addComponent(jCheckBoxQui1)
                    .addComponent(jCheckBoxSex1)
                    .addComponent(jCheckBoxSab1)
                    .addComponent(jCheckBoxDom1))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Horários de Saída", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jHoraSeg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSeg.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSeg.setEnabled(false);

        jHoraTer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraTer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraTer.setEnabled(false);

        jHoraQua.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQua.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQua.setEnabled(false);

        jHoraQui.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQui.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQui.setEnabled(false);

        jHoraSex.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSex.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSex.setEnabled(false);

        jHoraSab.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSab.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSab.setEnabled(false);

        jHoraDom.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraDom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraDom.setEnabled(false);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jHoraSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraTer, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraQua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraQui, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSex, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSab, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jPanel18Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHoraDom, jHoraQua, jHoraQui, jHoraSab, jHoraSeg, jHoraSex, jHoraTer});

        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraSab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jHoraQui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraTer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraQua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        jPanel18Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jHoraDom, jHoraQua, jHoraQui, jHoraSab, jHoraSeg, jHoraSex, jHoraTer});

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Horários de Entrada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jHoraSegEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSegEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSegEnt.setEnabled(false);

        jHoraTerEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraTerEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraTerEnt.setEnabled(false);

        jHoraQuaEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQuaEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQuaEnt.setEnabled(false);

        jHoraQuiEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQuiEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQuiEnt.setEnabled(false);

        jHoraSexEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSexEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSexEnt.setEnabled(false);

        jHoraSabEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSabEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSabEnt.setEnabled(false);

        jHoraDomEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraDomEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraDomEnt.setEnabled(false);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jHoraSegEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraTerEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraQuaEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraQuiEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSexEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSabEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraDomEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel19Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHoraDomEnt, jHoraQuaEnt, jHoraQuiEnt, jHoraSabEnt, jHoraSegEnt, jHoraSexEnt, jHoraTerEnt});

        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSexEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraSabEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraDomEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jHoraQuiEnt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSegEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraTerEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraQuaEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 408, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Dias e Horários", jPanel15);

        jMotivo.setColumns(20);
        jMotivo.setRows(5);
        jMotivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane3.setViewportView(jMotivo);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Observação", jPanel16);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Internos Estudando", jPanel7);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoInternoAssis, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoInternoAssis, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBounds(300, 20, 640, 474);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                        preencherTabelaCumprimentoAlvara("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA "
                                + "INNER JOIN INSTITUICAOESCOLAR "
                                + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdICod=INSTITUICAOESCOLAR.IdICod "
                                + "INNER JOIN TURNOSAULA "
                                + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdTurno=TURNOSAULA.IdTurno "
                                + "WHERE DataLancaMov BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                        preencherTabelaCumprimentoAlvara("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA "
                                + "INNER JOIN INSTITUICAOESCOLAR "
                                + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdICod=INSTITUICAOESCOLAR.IdICod "
                                + "INNER JOIN TURNOSAULA "
                                + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdTurno=TURNOSAULA.IdTurno "
                                + "WHERE DataLancaMov BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jIDPesqLan.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            jTabelaAssistenciaEducaional.setVisible(true);
            preencherTabelaCumprimentoAlvara("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA "
                    + "INNER JOIN INSTITUICAOESCOLAR "
                    + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdCod=INSTITUICAOESCOLAR.IdCod "
                    + "INNER JOIN TURNOSAULA "
                    + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdTurno=TURNOSAULA.IdTurno "
                    + "WHERE IdEduca='" + jIDPesqLan.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquisa.");
        } else {
            preencherTabelaCumprimentoAlvara("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA "
                    + "INNER JOIN INSTITUICAOESCOLAR "
                    + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdICod=INSTITUICAOESCOLAR.IdICod "
                    + "INNER JOIN TURNOSAULA "
                    + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdTurno=TURNOSAULA.IdTurno "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaCumprimentoAlvara("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA "
                    + "INNER JOIN INSTITUICAOESCOLAR "
                    + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdCod=INSTITUICAOESCOLAR.IdCod "
                    + "INNER JOIN TURNOSAULA "
                    + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdTurno=TURNOSAULA.IdTurno ");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox2ItemStateChanged

    private void jTabelaAssistenciaEducaionalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAssistenciaEducaionalMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaAssistenciaEducaional.getValueAt(jTabelaAssistenciaEducaional.getSelectedRow(), 0);
            jIDPesqLan.setText(IdLanc);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtNovoInterno.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA "
                        + "INNER JOIN INSTITUICAOESCOLAR "
                        + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdCod=INSTITUICAOESCOLAR.IdCod "
                        + "INNER JOIN TURNOSAULA "
                        + "ON ASSISTENCIA_EDUCACAO_EXTERNA.IdTurno=TURNOSAULA.IdTurno "
                        + "WHERE IdEduca='" + IdLanc + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdEduca")));
                jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                jIdCod.setText(conecta.rs.getString("IdCod"));
                jNomeInstituicao.setText(conecta.rs.getString("NomeInstituicao"));
                jIdTurno.setText(conecta.rs.getString("IdTurno"));
                jDescricaoTurno.setText(conecta.rs.getString("DescricaoTurno"));
                pCODIGO_CURSO = conecta.rs.getInt("IdCurso");
                jObservacao.setText(conecta.rs.getString("Observacao"));
                //
                jComboBoxCurso.removeAllItems();
                try {
                    for (AssistenciaEducativa i : listaDAO.read()) {
                        jComboBoxCurso.addItem(i);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(TelaAssistenciaEducacionalExterna.class.getName()).log(Level.SEVERE, null, ex);
                }
                AssistenciaEducativa cursosDiversos = (AssistenciaEducativa) jComboBoxCurso.getSelectedItem();
                cursosDiversos.getIdCurso();
                cursosDiversos.getDescricaoCurso();
                objAssis.setIdCurso(cursosDiversos.getIdCurso());
                //
                DiaSeg = conecta.rs.getInt("DiaSeg");
                if (DiaSeg == 1) {
                    jCheckBoxSeg.setSelected(true);
                } else if (DiaSeg == 0) {
                    jCheckBoxSeg.setSelected(!true);
                }
                DiaTer = conecta.rs.getInt("DiaTer");
                if (DiaTer == 1) {
                    jCheckBoxTer.setSelected(true);
                } else if (DiaTer == 0) {
                    jCheckBoxTer.setSelected(!true);
                }
                DiaQua = conecta.rs.getInt("DiaQua");
                if (DiaQua == 1) {
                    jCheckBoxQua.setSelected(true);
                } else if (DiaQua == 0) {
                    jCheckBoxQua.setSelected(!true);
                }
                DiaQui = conecta.rs.getInt("DiaQui");
                if (DiaQui == 1) {
                    jCheckBoxQui.setSelected(true);
                } else if (DiaQui == 0) {
                    jCheckBoxQui.setSelected(!true);
                }
                DiaSex = conecta.rs.getInt("DiaSex");
                if (DiaSex == 1) {
                    jCheckBoxSex.setSelected(true);
                } else if (DiaSex == 0) {
                    jCheckBoxSex.setSelected(!true);
                }
                DiaSab = conecta.rs.getInt("DiaSab");
                if (DiaSab == 1) {
                    jCheckBoxSab.setSelected(true);
                } else if (DiaSab == 0) {
                    jCheckBoxSab.setSelected(!true);
                }
                DiaDom = conecta.rs.getInt("DiaDom");
                if (DiaDom == 1) {
                    jCheckBoxDom.setSelected(true);
                } else if (DiaDom == 0) {
                    jCheckBoxDom.setSelected(!true);
                }
                //
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados." + e);
            }
            preencherTabelaInternos("SELECT * FROM INTERNOS_SAIDA_EDUCACIONAL "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON INTERNOS_SAIDA_EDUCACIONAL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN ASSISTENCIA_EDUCACAO_EXTERNA "
                    + "ON INTERNOS_SAIDA_EDUCACIONAL.IdEduca=ASSISTENCIA_EDUCACAO_EXTERNA.IdEduca "
                    + "WHERE INTERNOS_SAIDA_EDUCACIONAL.IdEduca='" + IdLanc + "'");
        }
    }//GEN-LAST:event_jTabelaAssistenciaEducaionalMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codIncluirPEDA == 1) {
            jPanel1.setVisible(false);
            acao = 1;
            Novo();
            corCampos();
            listarCursos();
            limparTabelaItens();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codAlterarPEDA == 1) {
            objAssis.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codExcluirPEDA == 1) {
            verificarInterno();
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAssis.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                if (jIdLanc.getText().equals(codEduca)) {
                    JOptionPane.showMessageDialog(rootPane, "Não é possível excluir esse registro, exclua primeiro\nos internos relacionados a esse registro.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objAssis.setIdEduca(Integer.valueOf(jIdLanc.getText()));
                        control.excluirAssistenciaEducativa(objAssis);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        Excluir();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codGravarPEDA == 1) {
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do registro.");
            } else if (jIdCod.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a instituição de ensino do interno.");
            } else if (jIdTurno.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o turno de ensino do interno.");
            } else {
                objAssis.setStatusLanc(jStatusLanc.getText());
                objAssis.setDataLanc(jDataLanc.getDate());
                objAssis.setDescricaoInstituicao(jNomeInstituicao.getText());
                objAssis.setDescricaoTurno(jDescricaoTurno.getText());
                objAssis.setObservacao(jObservacao.getText());
                // DIAS DA SEMANA
                if (jCheckBoxSeg.isSelected()) {
                    DiaSeg = 1;
                } else if (!jCheckBoxSeg.isSelected()) {
                    DiaSeg = 0;
                }
                objAssis.setDiaSeg(DiaSeg);
                if (jCheckBoxTer.isSelected()) {
                    DiaTer = 1;
                } else if (!jCheckBoxTer.isSelected()) {
                    DiaTer = 0;
                }
                objAssis.setDiaTer(DiaTer);
                if (jCheckBoxQua.isSelected()) {
                    DiaQua = 1;
                } else if (!jCheckBoxQua.isSelected()) {
                    DiaQua = 0;
                }
                objAssis.setDiaQua(DiaQua);
                if (jCheckBoxQui.isSelected()) {
                    DiaQui = 1;
                } else if (!jCheckBoxQui.isSelected()) {
                    DiaQui = 0;
                }
                objAssis.setDiaQui(DiaQui);
                if (jCheckBoxSex.isSelected()) {
                    DiaSex = 1;
                } else if (!jCheckBoxSex.isSelected()) {
                    DiaSex = 0;
                }
                objAssis.setDiaSex(DiaSex);
                if (jCheckBoxSab.isSelected()) {
                    DiaSab = 1;
                } else if (!jCheckBoxSab.isSelected()) {
                    DiaSab = 0;
                }
                objAssis.setDiaSab(DiaSab);
                if (jCheckBoxDom.isSelected()) {
                    DiaDom = 1;
                } else if (!jCheckBoxDom.isSelected()) {
                    DiaDom = 0;
                }
                objAssis.setDiaDom(DiaDom);
                if (acao == 1) {
                    objAssis.setUsuarioInsert(nameUser);
                    objAssis.setDataInsert(dataModFinal);
                    objAssis.setHorarioInsert(horaMov);
                    //
                    control.incluirAssistenciaEducativa(objAssis);
                    buscarCod();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    objAssis.setUsuarioUp(nameUser);
                    objAssis.setDataUp(dataModFinal);
                    objAssis.setHorarioUp(horaMov);
                    //
                    objAssis.setIdEduca(Integer.valueOf(jIdLanc.getText()));
                    control.alterarAssistenciaEducativa(objAssis);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqInstituicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInstituicaoActionPerformed
        // TODO add your handling code here:
        TelaPesqInstituicaoEscolarAssistencia objPesqInst = new TelaPesqInstituicaoEscolarAssistencia();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesqInst);
        objPesqInst.show();
    }//GEN-LAST:event_jBtPesqInstituicaoActionPerformed

    private void jBtPesqTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqTurnoActionPerformed
        // TODO add your handling code here:
        TelaPesqTurnoAssistenciaEducacional objPesqTurno = new TelaPesqTurnoAssistenciaEducacional();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesqTurno);
        objPesqTurno.show();
    }//GEN-LAST:event_jBtPesqTurnoActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA WHERE IdEduca='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaAssistenciaEduca objAudiEduca = new TelaAuditoriaAssistenciaEduca();
        TelaModuloPedagogia.jPainelPedagogia.add(objAudiEduca);
        objAudiEduca.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtPesqInternoAssisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoAssisActionPerformed
        // TODO add your handling code here:
        TelaPesqInternosAssistenciaEducacional objPesqIntAssisEdu = new TelaPesqInternosAssistenciaEducacional();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesqIntAssisEdu);
        objPesqIntAssisEdu.show();
    }//GEN-LAST:event_jBtPesqInternoAssisActionPerformed

    private void jBtNovoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codIncluirPEDA == 1) {
            objAssis.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoInterno();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoInternoActionPerformed

    private void jBtAlterarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codAlterarPEDA == 1) {
            objAssis.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else if (!evadidoEducacao.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Esse interno encontra-se EVADIDO, não pode ser alterado.");
            } else {
                acao = 4;
                AlterarInterno();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarInternoActionPerformed

    private void jBtExcluirInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaManu_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaManu_PEDA) && codExcluirPEDA == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAssis.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  interno não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else if (!evadidoEducacao.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Esse interno encontra-se EVADIDO, não pode ser excluído.");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o INTERNO selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objIntEduca.setIdItem(Integer.valueOf(idItem));
                    controle.excluirAssistenciaEducativa(objIntEduca);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirInterno();
                    preencherTabelaInternos("SELECT * FROM INTERNOS_SAIDA_EDUCACIONAL "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON INTERNOS_SAIDA_EDUCACIONAL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN ASSISTENCIA_EDUCACAO_EXTERNA "
                            + "ON INTERNOS_SAIDA_EDUCACIONAL.IdEduca=ASSISTENCIA_EDUCACAO_EXTERNA.IdEduca "
                            + "WHERE INTERNOS_SAIDA_EDUCACIONAL.IdEduca='" + jIdLanc.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirInternoActionPerformed

    private void jBtSalvarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAssistenciaEducaInte_PEDA);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES") || codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaAssistenciaEducaInte_PEDA) && codGravarPEDA == 1) {
            evadidoEducacao = "";
            if (jRadioButtonLiberado.isSelected()) {
                tipoAcesso = 0;
            } else if (jRadioButtonBloqueado.isSelected()) {
                tipoAcesso = 1;
            } else if (jRadioButtonEmEspera.isSelected()) {
                tipoAcesso = 2;
            } else if (jRadioButtonConcluido.isSelected()) {
                tipoAcesso = 3;
            }
            if (jIdInternoAssis.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno.");
            } else {
                objIntEduca.setIdEduca(Integer.valueOf(jIdLanc.getText()));
                objIntEduca.setNomeInternoCrc(jNomeInternoAssis.getText());
                objIntEduca.setMotivo(jMotivo.getText());
                objIntEduca.setTipoAcesso(tipoAcesso);
                objIntEduca.setEvadidoEducacao(evadidoEducacao);
                // DIAS DA SEMANA
                if (jCheckBoxSeg.isSelected()) {
                    DiaSeg = 1;
                } else if (!jCheckBoxSeg.isSelected()) {
                    DiaSeg = 0;
                }
                objIntEduca.setDiaSeg(DiaSeg);
                if (jCheckBoxTer.isSelected()) {
                    DiaTer = 1;
                } else if (!jCheckBoxTer.isSelected()) {
                    DiaTer = 0;
                }
                objIntEduca.setDiaTer(DiaTer);
                if (jCheckBoxQua.isSelected()) {
                    DiaQua = 1;
                } else if (!jCheckBoxQua.isSelected()) {
                    DiaQua = 0;
                }
                objIntEduca.setDiaQua(DiaQua);
                if (jCheckBoxQui.isSelected()) {
                    DiaQui = 1;
                } else if (!jCheckBoxQui.isSelected()) {
                    DiaQui = 0;
                }
                objIntEduca.setDiaQui(DiaQui);
                if (jCheckBoxSex.isSelected()) {
                    DiaSex = 1;
                } else if (!jCheckBoxSex.isSelected()) {
                    DiaSex = 0;
                }
                objIntEduca.setDiaSex(DiaSex);
                if (jCheckBoxSab.isSelected()) {
                    DiaSab = 1;
                } else if (!jCheckBoxSab.isSelected()) {
                    DiaSab = 0;
                }
                objIntEduca.setDiaSab(DiaSab);
                if (jCheckBoxDom.isSelected()) {
                    DiaDom = 1;
                } else if (!jCheckBoxDom.isSelected()) {
                    DiaDom = 0;
                }
                objIntEduca.setDiaDom(DiaDom);
                // HORAS DE SAÍDA DO DIA DA SEMANA
                objIntEduca.setHoraSeg(jHoraSeg.getText());
                objIntEduca.setHoraTer(jHoraTer.getText());
                objIntEduca.setHoraQua(jHoraQua.getText());
                objIntEduca.setHoraQui(jHoraQui.getText());
                objIntEduca.setHoraSex(jHoraSex.getText());
                objIntEduca.setHoraSab(jHoraSab.getText());
                objIntEduca.setHoraDom(jHoraDom.getText());
                // HORÁRIO DE ENTRADA NA UNIDADE
                objIntEduca.setHoraSegEnt(jHoraSegEnt.getText());
                objIntEduca.setHoraTerEnt(jHoraTerEnt.getText());
                objIntEduca.setHoraQuaEnt(jHoraQuaEnt.getText());
                objIntEduca.setHoraQuiEnt(jHoraQuiEnt.getText());
                objIntEduca.setHoraSexEnt(jHoraSexEnt.getText());
                objIntEduca.setHoraSabEnt(jHoraSabEnt.getText());
                objIntEduca.setHoraDomEnt(jHoraDomEnt.getText());
                if (acao == 3) {
                    objIntEduca.setUsuarioInsert(nameUser);
                    objIntEduca.setDataInsert(dataModFinal);
                    objIntEduca.setHorarioInsert(horaMov);
                    //
                    controle.incluirAssistenciaEducativa(objIntEduca);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaInternos("SELECT * FROM INTERNOS_SAIDA_EDUCACIONAL "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON INTERNOS_SAIDA_EDUCACIONAL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN ASSISTENCIA_EDUCACAO_EXTERNA "
                            + "ON INTERNOS_SAIDA_EDUCACIONAL.IdEduca=ASSISTENCIA_EDUCACAO_EXTERNA.IdEduca "
                            + "WHERE INTERNOS_SAIDA_EDUCACIONAL.IdEduca='" + jIdLanc.getText() + "'");
                    SalvarInterno();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objIntEduca.setUsuarioUp(nameUser);
                    objIntEduca.setDataUp(dataModFinal);
                    objIntEduca.setHorarioUp(horaMov);
                    //
                    objIntEduca.setIdItem(Integer.valueOf(idItem));
                    controle.alterarAssistenciaEducativa(objIntEduca);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaInternos("SELECT * FROM INTERNOS_SAIDA_EDUCACIONAL "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON INTERNOS_SAIDA_EDUCACIONAL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN ASSISTENCIA_EDUCACAO_EXTERNA "
                            + "ON INTERNOS_SAIDA_EDUCACIONAL.IdEduca=ASSISTENCIA_EDUCACAO_EXTERNA.IdEduca "
                            + "WHERE INTERNOS_SAIDA_EDUCACIONAL.IdEduca='" + jIdLanc.getText() + "'");
                    SalvarInterno();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarInternoActionPerformed

    private void jBtCancelarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarInternoActionPerformed
        // TODO add your handling code here:
        CancelarInterno();
    }//GEN-LAST:event_jBtCancelarInternoActionPerformed

    private void jBtAuditoriaInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaInternoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaInternosEducacao objAudiInterEduca = new TelaAuditoriaInternosEducacao();
        TelaModuloPedagogia.jPainelPedagogia.add(objAudiInterEduca);
        objAudiInterEduca.show();
    }//GEN-LAST:event_jBtAuditoriaInternoActionPerformed

    private void jTabelaInternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaInternoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeInterno = "" + jTabelaInterno.getValueAt(jTabelaInterno.getSelectedRow(), 2);
            jNomeInternoAssis.setText(nomeInterno);
            String codInterno = "" + jTabelaInterno.getValueAt(jTabelaInterno.getSelectedRow(), 1);
            jIdInternoAssis.setText(codInterno);
            idItem = "" + jTabelaInterno.getValueAt(jTabelaInterno.getSelectedRow(), 0);
            // Habilitar os botões
            jBtNovoInterno.setEnabled(!true);
            jBtAlterarInterno.setEnabled(true);
            jBtExcluirInterno.setEnabled(true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(true);
            jBtAuditoriaInterno.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM INTERNOS_SAIDA_EDUCACIONAL "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON INTERNOS_SAIDA_EDUCACIONAL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ASSISTENCIA_EDUCACAO_EXTERNA "
                        + "ON INTERNOS_SAIDA_EDUCACIONAL.IdEduca=ASSISTENCIA_EDUCACAO_EXTERNA.IdEduca "
                        + "WHERE NomeInternoCrc='" + jNomeInternoAssis.getText() + "' AND INTERNOS_SAIDA_EDUCACIONAL.IdEduca='" + jIdLanc.getText() + "'AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIdInternoAssis.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInternoAssis.setText(conecta.rs.getString("NomeInternoCrc"));
                idItem = conecta.rs.getString("IdItem");
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon v = new javax.swing.ImageIcon(caminho);
                FotoInternoAssis.setIcon(v);
                FotoInternoAssis.setIcon(new ImageIcon(v.getImage().getScaledInstance(FotoInternoAssis.getWidth(), FotoInternoAssis.getHeight(), Image.SCALE_DEFAULT)));
                jMatriculaPenalAssis.setText(conecta.rs.getString("MatriculaCrc"));
                tipoAcesso = conecta.rs.getInt("TipoAcesso");
                if (tipoAcesso == 0) {
                    jRadioButtonLiberado.setSelected(true);
                } else if (tipoAcesso == 1) {
                    jRadioButtonBloqueado.setSelected(true);
                } else if (tipoAcesso == 2) {
                    jRadioButtonEmEspera.setSelected(true);
                } else if (tipoAcesso == 3) {
                    jRadioButtonConcluido.setSelected(true);
                }
                jMotivo.setText(conecta.rs.getString("Motivo"));
                evadidoEducacao = conecta.rs.getString("Evadido");
                //
                DiaSeg = conecta.rs.getInt("DiaSeg");
                if (DiaSeg1 == 1) {
                    jCheckBoxSeg1.setSelected(true);
                } else if (DiaSeg1 == 0) {
                    jCheckBoxSeg1.setSelected(!true);
                }
                DiaTer = conecta.rs.getInt("DiaTer");
                if (DiaTer1 == 1) {
                    jCheckBoxTer1.setSelected(true);
                } else if (DiaTer1 == 0) {
                    jCheckBoxTer1.setSelected(!true);
                }
                DiaQua1 = conecta.rs.getInt("DiaQua");
                if (DiaQua1 == 1) {
                    jCheckBoxQua1.setSelected(true);
                } else if (DiaQua1 == 0) {
                    jCheckBoxQua1.setSelected(!true);
                }
                DiaQui1 = conecta.rs.getInt("DiaQui");
                if (DiaQui1 == 1) {
                    jCheckBoxQui1.setSelected(true);
                } else if (DiaQui1 == 0) {
                    jCheckBoxQui1.setSelected(!true);
                }
                DiaSex1 = conecta.rs.getInt("DiaSex");
                if (DiaSex1 == 1) {
                    jCheckBoxSex1.setSelected(true);
                } else if (DiaSex1 == 0) {
                    jCheckBoxSex1.setSelected(!true);
                }
                DiaSab1 = conecta.rs.getInt("DiaSab");
                if (DiaSab1 == 1) {
                    jCheckBoxSab1.setSelected(true);
                } else if (DiaSab1 == 0) {
                    jCheckBoxSab1.setSelected(!true);
                }
                DiaDom1 = conecta.rs.getInt("DiaDom");
                if (DiaDom == 1) {
                    jCheckBoxDom1.setSelected(true);
                } else if (DiaDom1 == 0) {
                    jCheckBoxDom.setSelected(!true);
                }
                // HORÁRIO DE SAÍDA
                jHoraSeg.setText(conecta.rs.getString("HoraSeg"));
                jHoraTer.setText(conecta.rs.getString("HoraTer"));
                jHoraQua.setText(conecta.rs.getString("HoraQua"));
                jHoraQui.setText(conecta.rs.getString("HoraQui"));
                jHoraSex.setText(conecta.rs.getString("HoraSex"));
                jHoraSab.setText(conecta.rs.getString("HoraSab"));
                jHoraDom.setText(conecta.rs.getString("HoraDom"));
                // HORÁRIO DE ENTRADA
                jHoraSegEnt.setText(conecta.rs.getString("HoraSegEnt"));
                jHoraTerEnt.setText(conecta.rs.getString("HoraTerEnt"));
                jHoraQuaEnt.setText(conecta.rs.getString("HoraQuaEnt"));
                jHoraQuiEnt.setText(conecta.rs.getString("HoraQuiEnt"));
                jHoraSexEnt.setText(conecta.rs.getString("HoraSexEnt"));
                jHoraSabEnt.setText(conecta.rs.getString("HoraSabEnt"));
                jHoraDomEnt.setText(conecta.rs.getString("HoraDomEnt"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaInternoMouseClicked

    private void jBtSair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSair1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSair1ActionPerformed

    private void jComboBoxCursoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCursoItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED && acao == 1 || evt.getStateChange() == evt.SELECTED && acao == 2) {
            listarCursos();
        }
    }//GEN-LAST:event_jComboBoxCursoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BtTipoAcessos;
    public static javax.swing.JLabel FotoInternoAssis;
    private javax.swing.ButtonGroup btTipoAcessoInternos;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarInterno;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaInterno;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarInterno;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirInterno;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoInterno;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqInstituicao;
    private javax.swing.JButton jBtPesqInternoAssis;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesqTurno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSair1;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarInterno;
    private javax.swing.JCheckBox jCheckBox2;
    public static javax.swing.JCheckBox jCheckBoxDom;
    public static javax.swing.JCheckBox jCheckBoxDom1;
    public static javax.swing.JCheckBox jCheckBoxQua;
    public static javax.swing.JCheckBox jCheckBoxQua1;
    public static javax.swing.JCheckBox jCheckBoxQui;
    public static javax.swing.JCheckBox jCheckBoxQui1;
    public static javax.swing.JCheckBox jCheckBoxSab;
    public static javax.swing.JCheckBox jCheckBoxSab1;
    public static javax.swing.JCheckBox jCheckBoxSeg;
    public static javax.swing.JCheckBox jCheckBoxSeg1;
    public static javax.swing.JCheckBox jCheckBoxSex;
    public static javax.swing.JCheckBox jCheckBoxSex1;
    public static javax.swing.JCheckBox jCheckBoxTer;
    public static javax.swing.JCheckBox jCheckBoxTer1;
    private javax.swing.JComboBox<Object> jComboBoxCurso;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jDescricaoTurno;
    public static javax.swing.JFormattedTextField jHoraDom;
    public static javax.swing.JFormattedTextField jHoraDomEnt;
    public static javax.swing.JFormattedTextField jHoraQua;
    public static javax.swing.JFormattedTextField jHoraQuaEnt;
    public static javax.swing.JFormattedTextField jHoraQui;
    public static javax.swing.JFormattedTextField jHoraQuiEnt;
    public static javax.swing.JFormattedTextField jHoraSab;
    public static javax.swing.JFormattedTextField jHoraSabEnt;
    public static javax.swing.JFormattedTextField jHoraSeg;
    public static javax.swing.JFormattedTextField jHoraSegEnt;
    public static javax.swing.JFormattedTextField jHoraSex;
    public static javax.swing.JFormattedTextField jHoraSexEnt;
    public static javax.swing.JFormattedTextField jHoraTer;
    public static javax.swing.JFormattedTextField jHoraTerEnt;
    private javax.swing.JTextField jIDPesqLan;
    public static javax.swing.JTextField jIdCod;
    public static javax.swing.JTextField jIdInternoAssis;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdTurno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMatriculaPenalAssis;
    private javax.swing.JTextArea jMotivo;
    public static javax.swing.JTextField jNomeInstituicao;
    public static javax.swing.JTextField jNomeInternoAssis;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JRadioButton jRadioButtonBloqueado;
    private javax.swing.JRadioButton jRadioButtonConcluido;
    private javax.swing.JRadioButton jRadioButtonEmEspera;
    private javax.swing.JRadioButton jRadioButtonLiberado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaAssistenciaEducaional;
    private javax.swing.JTable jTabelaInterno;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jIdCod.setBackground(Color.white);
        jNomeInstituicao.setBackground(Color.white);
        jIdTurno.setBackground(Color.white);
        jDescricaoTurno.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdInternoAssis.setBackground(Color.white);
        jMatriculaPenalAssis.setBackground(Color.white);
        jNomeInternoAssis.setBackground(Color.white);
        FotoInternoAssis.setBackground(Color.white);
        jMotivo.setBackground(Color.white);
    }

    public void Novo() {
        jIdLanc.setText("");
        jStatusLanc.setText("ABERTO");
        jDataLanc.setCalendar(Calendar.getInstance());
        jIdCod.setText("");
        jNomeInstituicao.setText("");
        jIdTurno.setText("");
        jDescricaoTurno.setText("");
        jComboBoxCurso.removeAllItems();
        jObservacao.setText("");
        //
        jDataLanc.setEnabled(true);
        jBtPesqInstituicao.setEnabled(true);
        jBtPesqTurno.setEnabled(true);
        jComboBoxCurso.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jCheckBoxSeg.setEnabled(true);
        jCheckBoxTer.setEnabled(true);
        jCheckBoxQua.setEnabled(true);
        jCheckBoxQui.setEnabled(true);
        jCheckBoxSex.setEnabled(true);
        jCheckBoxSab.setEnabled(true);
        jCheckBoxDom.setEnabled(true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        // HORÁRIO DOS INTERNOS        
        jCheckBoxSeg1.setEnabled(!true);
        jCheckBoxTer1.setEnabled(!true);
        jCheckBoxQua1.setEnabled(!true);
        jCheckBoxQui1.setEnabled(!true);
        jCheckBoxSex1.setEnabled(!true);
        jCheckBoxSab1.setEnabled(!true);
        jCheckBoxDom1.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void Alterar() {
        //
        jDataLanc.setEnabled(true);
        jBtPesqInstituicao.setEnabled(true);
        jBtPesqTurno.setEnabled(true);
        jComboBoxCurso.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
        //
        jCheckBoxSeg.setEnabled(true);
        jCheckBoxTer.setEnabled(true);
        jCheckBoxQua.setEnabled(true);
        jCheckBoxQui.setEnabled(true);
        jCheckBoxSex.setEnabled(true);
        jCheckBoxSab.setEnabled(true);
        jCheckBoxDom.setEnabled(true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        // HORÁRIO DOS INTERNOS        
        jCheckBoxSeg1.setEnabled(!true);
        jCheckBoxTer1.setEnabled(!true);
        jCheckBoxQua1.setEnabled(!true);
        jCheckBoxQui1.setEnabled(!true);
        jCheckBoxSex1.setEnabled(!true);
        jCheckBoxSab1.setEnabled(!true);
        jCheckBoxDom1.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
    }

    public void Excluir() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jDataLanc.setDate(null);
        jIdCod.setText("");
        jNomeInstituicao.setText("");
        jIdTurno.setText("");
        jDescricaoTurno.setText("");
        jComboBoxCurso.removeAllItems();
        jObservacao.setText("");
        //
        jDataLanc.setEnabled(!true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTurno.setEnabled(!true);
        jComboBoxCurso.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jCheckBoxSeg.setEnabled(!true);
        jCheckBoxTer.setEnabled(!true);
        jCheckBoxQua.setEnabled(!true);
        jCheckBoxQui.setEnabled(!true);
        jCheckBoxSex.setEnabled(!true);
        jCheckBoxSab.setEnabled(!true);
        jCheckBoxDom.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        // HORÁRIO DOS INTERNOS        
        jCheckBoxSeg1.setEnabled(!true);
        jCheckBoxTer1.setEnabled(!true);
        jCheckBoxQua1.setEnabled(!true);
        jCheckBoxQui1.setEnabled(!true);
        jCheckBoxSex1.setEnabled(!true);
        jCheckBoxSab1.setEnabled(!true);
        jCheckBoxDom1.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void Salvar() {
        //
        jDataLanc.setEnabled(!true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTurno.setEnabled(!true);
        jComboBoxCurso.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jCheckBoxSeg.setEnabled(!true);
        jCheckBoxTer.setEnabled(!true);
        jCheckBoxQua.setEnabled(!true);
        jCheckBoxQui.setEnabled(!true);
        jCheckBoxSex.setEnabled(!true);
        jCheckBoxSab.setEnabled(!true);
        jCheckBoxDom.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(true);
        jBtExcluirInterno.setEnabled(true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            jStatusLanc.setText("");
            jDataLanc.setDate(null);
            jIdCod.setText("");
            jNomeInstituicao.setText("");
            jIdTurno.setText("");
            jDescricaoTurno.setText("");
            jComboBoxCurso.removeAllItems();
            jObservacao.setText("");
            //
            jCheckBoxSeg.setEnabled(!true);
            jCheckBoxTer.setEnabled(!true);
            jCheckBoxQua.setEnabled(!true);
            jCheckBoxQui.setEnabled(!true);
            jCheckBoxSex.setEnabled(!true);
            jCheckBoxSab.setEnabled(!true);
            jCheckBoxDom.setEnabled(!true);
            //
            jDataLanc.setEnabled(!true);
            jBtPesqInstituicao.setEnabled(!true);
            jBtPesqTurno.setEnabled(!true);
            jComboBoxCurso.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jIdInternoAssis.setText("");
            jMatriculaPenalAssis.setText("");
            jNomeInternoAssis.setText("");
            FotoInternoAssis.setIcon(null);
            jMotivo.setText("");
            //
            jBtNovoInterno.setEnabled(true);
            jBtAlterarInterno.setEnabled(!true);
            jBtExcluirInterno.setEnabled(!true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(!true);
            jBtAuditoriaInterno.setEnabled(!true);
        } else {
            jDataLanc.setEnabled(!true);
            jBtPesqInstituicao.setEnabled(!true);
            jBtPesqTurno.setEnabled(!true);
            jComboBoxCurso.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jCheckBoxSeg.setEnabled(!true);
            jCheckBoxTer.setEnabled(!true);
            jCheckBoxQua.setEnabled(!true);
            jCheckBoxQui.setEnabled(!true);
            jCheckBoxSex.setEnabled(!true);
            jCheckBoxSab.setEnabled(!true);
            jCheckBoxDom.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jIdInternoAssis.setText("");
            jMatriculaPenalAssis.setText("");
            jNomeInternoAssis.setText("");
            FotoInternoAssis.setIcon(null);
            jMotivo.setText("");
            //
            jBtNovoInterno.setEnabled(true);
            jBtAlterarInterno.setEnabled(!true);
            jBtExcluirInterno.setEnabled(!true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(!true);
            jBtAuditoriaInterno.setEnabled(!true);
        }
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse registro de internos for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objAssis.setStatusLanc(statusEntrada);
            objAssis.setIdEduca(Integer.valueOf(jIdLanc.getText()));
            control.finalizarAssistenciaEducativa(objAssis);
            jStatusLanc.setText(statusEntrada);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtNovoInterno.setEnabled(!true);
        }
    }

    public void buscarCod() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ASSISTENCIA_EDUCACAO_EXTERNA");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdEduca"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do regitro.\nERRO:" + e);
        }
    }

    public void listarCursos() {
        jComboBoxCurso.removeAllItems();
        try {
            for (CursosDiversos p : control.read()) {
                jComboBoxCurso.addItem(p);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaAssistenciaEducacionalExterna.class.getName()).log(Level.SEVERE, null, ex);
        }
        CursosDiversos cursosDiversos = (CursosDiversos) jComboBoxCurso.getSelectedItem();
        cursosDiversos.getIdCurso();
        cursosDiversos.getDescricaoCurso();
        objAssis.setIdCurso(cursosDiversos.getIdCurso());
    }

    public void verificarInterno() {

        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM INTERNOS_SAIDA_EDUCACIONAL "
                    + "WHERE IdEduca='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codEduca = conecta.rs.getString("IdEduca");
        } catch (Exception e) {
        }
    }

    public void NovoInterno() {
        //
        jDataLanc.setEnabled(!true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTurno.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtPesqInternoAssis.setEnabled(true);
        jRadioButtonLiberado.setEnabled(true);
        jRadioButtonBloqueado.setEnabled(true);
        jRadioButtonEmEspera.setEnabled(true);
        jRadioButtonConcluido.setEnabled(true);
        jMotivo.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void AlterarInterno() {
        jDataLanc.setEnabled(!true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTurno.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtPesqInternoAssis.setEnabled(true);
        jRadioButtonLiberado.setEnabled(true);
        jRadioButtonBloqueado.setEnabled(true);
        jRadioButtonEmEspera.setEnabled(true);
        jRadioButtonConcluido.setEnabled(true);
        jMotivo.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void ExcluirInterno() {
        //
        jDataLanc.setEnabled(!true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtPesqTurno.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtPesqInternoAssis.setEnabled(!true);
        jRadioButtonLiberado.setEnabled(!true);
        jRadioButtonBloqueado.setEnabled(!true);
        jRadioButtonEmEspera.setEnabled(!true);
        jRadioButtonConcluido.setEnabled(!true);
        jMotivo.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(true);
        jBtExcluirInterno.setEnabled(true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void SalvarInterno() {
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtPesqInternoAssis.setEnabled(!true);
        jRadioButtonLiberado.setEnabled(!true);
        jRadioButtonBloqueado.setEnabled(!true);
        jRadioButtonEmEspera.setEnabled(!true);
        jRadioButtonConcluido.setEnabled(!true);
        jMotivo.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void CancelarInterno() {
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdInternoAssis.setText("");
        jMatriculaPenalAssis.setText("");
        jNomeInternoAssis.setText("");
        FotoInternoAssis.setIcon(null);
        jMotivo.setText("");
        //
        jBtPesqInternoAssis.setEnabled(!true);
        jRadioButtonLiberado.setEnabled(!true);
        jRadioButtonBloqueado.setEnabled(!true);
        jRadioButtonEmEspera.setEnabled(!true);
        jRadioButtonConcluido.setEnabled(!true);
        jMotivo.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void preencherTabelaCumprimentoAlvara(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Fortmatar data de Cadastro          
                dataCadastro = conecta.rs.getString("DataLanc");
                String day = dataCadastro.substring(8, 10);
                String mesc = dataCadastro.substring(5, 7);
                String anoc = dataCadastro.substring(0, 4);
                dataCadastro = day + "/" + mesc + "/" + anoc;
                //
                jtotalRegistros.setText(Integer.toString(count));
                dados.add(new Object[]{conecta.rs.getInt("IdEduca"), dataCadastro, conecta.rs.getString("StatusLanc"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAssistenciaEducaional.setModel(modelo);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(3).setPreferredWidth(280);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAssistenciaEducaional.getTableHeader().setReorderingAllowed(false);
        jTabelaAssistenciaEducaional.setAutoResizeMode(jTabelaAssistenciaEducaional.AUTO_RESIZE_OFF);
        jTabelaAssistenciaEducaional.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAssistenciaEducaional();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAssistenciaEducaional.setModel(modelo);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(3).setPreferredWidth(280);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAssistenciaEducaional.getTableHeader().setReorderingAllowed(false);
        jTabelaAssistenciaEducaional.setAutoResizeMode(jTabelaAssistenciaEducaional.AUTO_RESIZE_OFF);
        jTabelaAssistenciaEducaional.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaAssistenciaEducaional() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaAssistenciaEducaional.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaInternos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Matricula Penal"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getString("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("MatriculaCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInterno.setModel(modelo);
        jTabelaInterno.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInterno.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInterno.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInterno.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaInterno.setAutoResizeMode(jTabelaInterno.AUTO_RESIZE_OFF);
        jTabelaInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaInternos();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Matricula Penal"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInterno.setModel(modelo);
        jTabelaInterno.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInterno.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInterno.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInterno.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaInterno.setAutoResizeMode(jTabelaInterno.AUTO_RESIZE_OFF);
        jTabelaInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaInternos() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaInterno.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaInterno.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaInterno.getColumnModel().getColumn(3).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserPEDA = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserPEDA + "'");
            conecta.rs.first();
            codigoUserGroupPEDA = conecta.rs.getInt("IdUsuario");
            codigoGrupoPEDA = conecta.rs.getInt("IdGrupo");
            nomeGrupoPEDA = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserPEDA + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoPEDA = conecta.rs.getInt("IdUsuario");
            codAbrirPEDA = conecta.rs.getInt("Abrir");
            codIncluirPEDA = conecta.rs.getInt("Incluir");
            codAlterarPEDA = conecta.rs.getInt("Alterar");
            codExcluirPEDA = conecta.rs.getInt("Excluir");
            codGravarPEDA = conecta.rs.getInt("Gravar");
            codConsultarPEDA = conecta.rs.getInt("Consultar");
            nomeTelaPEDA = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
