/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAprazamentoMedicacoes;
import gestor.Controle.ControleItensAprazamentoMedicacoes;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.AprazamentoMedicamentos;
import gestor.Modelo.ItensAprazamentoMedicamento;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloEnfermaria.codAlterarENF;
import static gestor.Visao.TelaModuloEnfermaria.codExcluirENF;
import static gestor.Visao.TelaModuloEnfermaria.codGravarENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeTelaENF;
import static gestor.Visao.TelaModuloEnfermaria.telaAprazaMedItensENF;
import static gestor.Visao.TelaModuloEnfermaria.telaAprazaMedManuENF;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.HashMap;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import static gestor.Visao.TelaModuloEnfermaria.codConsultarENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserENF;
import static gestor.Visao.TelaModuloEnfermaria.codUserAcessoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserGroupENF;
import static gestor.Visao.TelaModuloEnfermaria.codAbrirENF;
import static gestor.Visao.TelaModuloEnfermaria.codIncluirENF;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;

/**
 *
 * @author user
 */
public class TelaAprazamentoMedicacoes extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AprazamentoMedicamentos objApraza = new AprazamentoMedicamentos();
    ControleAprazamentoMedicacoes control = new ControleAprazamentoMedicacoes();
    //     
    ItensAprazamentoMedicamento objItensApraza = new ItensAprazamentoMedicamento();
    ControleItensAprazamentoMedicacoes controle = new ControleItensAprazamentoMedicacoes();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Enfermaria:Aprazamento de Medicamentos:Manutenção";
    String nomeModuloTela2 = "Enfermaria:Aprazamento de Medicamentos:Itens";
    //
    int acao, flag;
    String dataInicial, dataFinal, dataInicioMed, dataFinalMed, dataEntrada;
    String statusProd = "Ativo";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String codItensAprazaMed;
    int count = 0;
    int idPrescricao;
    public static int tipoA;
    public static String idItem;
    public static int qtdItem = 0;
    public static int qtdItemAnterior = 0; // SALDO ANTERIOR A SER CALCULADO SE FOR ALTERADO PELO USUARIO
    public static int novoSaldoAtual = 0; //SALDO CALCULADO APOS ALTERAR A QUANTIDADE DO ITEM
    public static int codItem; // CÓDIGO DO ITEM PARA SER ALTERADO.
    String qtdItemTab;
    int codProd;
    int codEstoque;
    int saldoEstoque;
    String loteEstoque;
    int estoqueAtual = 0;
    String estornoProduto = "Não";
    int qtdDose = 0;
    String statusReqAndamento = "Em Andamento";
    int totalDoseAplicada;
    String modulo = "F";
    String statusRequisicao = "FINALIZADO"; // VERIFICAR SE A REQUISIÇÃO AVULSA ESTÁ FINALIZADA
    String statusReqAtend = "Não Atendido"; // VERIFICAR SE A REQUISIÇÃO AVULSA ESTA EM ANDAMENTO OU CONCLUÍDA
    String statusFinaliza; // VERIFICAR SE A REQUISIÇÃO AVULSA ESTA FINALIZADA
    String statusAtendimento; // VERIFICAR SE A REQUISIÇÃO AVULSA ESTÁ EM ANDAMENTO OU CONCLUÍDA
    int tipoRequisicao; // TIPO DE REQUISIÇÃO. SE FOR 0 = INTERNO SE FOR 1 = COLABORADOR

    /**
     * Creates new form TelaAprazamentoMedicacoes
     */
    public TelaAprazamentoMedicacoes() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btGroupMedicoPsiquiatrico = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaAprazamentoRemedio = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jPesqNomeInternoOdonto = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jIDPesqEM = new javax.swing.JTextField();
        jBtIdPesqEM = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDataEM = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jStatusLanc = new javax.swing.JTextField();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jIdInternoAbra = new javax.swing.JTextField();
        jNomeInternoAbra = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jFotoInternoAbra = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPavilhao = new javax.swing.JTextField();
        jCela = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jIdReq = new javax.swing.JTextField();
        jBtPesquisarRequisicaoInterno = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jComboBoxTipoAprazamento = new javax.swing.JComboBox();
        jBtPesqInternoReqAvulsa = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jRadioBtMedico = new javax.swing.JRadioButton();
        jRadioBtPsiquiatrico = new javax.swing.JRadioButton();
        jBtPesquisarPrescricao = new javax.swing.JButton();
        jRadioBtOdontologia = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoriaAprazamento = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextoPrescricaoMedica = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jDataPM = new com.toedter.calendar.JDateChooser();
        jIdCodigoPM = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextoObservacaoAprazamento = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jIdProduto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jQuantidade = new javax.swing.JTextField();
        jComboBoxFrequencia = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jDiasUso = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jComboBoxPeridoHorario = new javax.swing.JComboBox();
        jDataInicio = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        jDataAplicacao = new com.toedter.calendar.JDateChooser();
        jDoseEmbalagemProduto = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextoObservacaoMedicamentos = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jHorarioAprazametoFinal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxUnidade = new javax.swing.JComboBox();
        jHorarioAprazametoInicial = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jQtdDosesAplicada = new javax.swing.JTextField();
        jBtPesqProdutos = new javax.swing.JButton();
        jDescricaoProduto = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jDoseRequisitada = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaItensMedicacao = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jBtNovoMedicamento = new javax.swing.JButton();
        jBtAlterarMedicamento = new javax.swing.JButton();
        jBtExcluirMedicamento = new javax.swing.JButton();
        jBtSalvarMedicamento = new javax.swing.JButton();
        jBtCancelarMedicamento = new javax.swing.JButton();
        jBtSairMedicamento = new javax.swing.JButton();
        jBtAuditoriaMedicamento = new javax.swing.JButton();
        jBtBuscarMedicamento = new javax.swing.JButton();
        jBtImprimirAprazamento = new javax.swing.JButton();

        jLabel8.setText("jLabel8");

        jLabel15.setText("jLabel15");

        jLabel19.setText("jLabel19");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Aprazamento de Medicações {DM} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTabelaAprazamentoRemedio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAprazamentoRemedio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome Completo do Interno", "Observação"
            }
        ));
        jTabelaAprazamentoRemedio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAprazamentoRemedioMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaAprazamentoRemedio);
        if (jTabelaAprazamentoRemedio.getColumnModel().getColumnCount() > 0) {
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(3).setMaxWidth(300);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(4).setMinWidth(330);
            jTabelaAprazamentoRemedio.getColumnModel().getColumn(4).setMaxWidth(330);
        }

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("Nome do Interno:");

        jPesqNomeInternoOdonto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("Código:");

        jIDPesqEM.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqEM.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtIdPesqEM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIdPesqEM.setContentAreaFilled(false);
        jBtIdPesqEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIdPesqEMActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setText("Data Inicial:");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel49.setText("Data Final:");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDataEM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDataEM.setContentAreaFilled(false);
        jBtPesqDataEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataEMActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInternoOdonto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jIDPesqEM, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtIdPesqEM, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqDataEM, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)))
                .addGap(21, 21, 21))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtIdPesqEM)
                    .addComponent(jIDPesqEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqDataEM)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jPesqNomeInternoOdonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data:");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(204, 0, 153));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setDisabledTextColor(new java.awt.Color(204, 0, 153));
        jStatusLanc.setEnabled(false);

        jDataLanc.setBackground(new java.awt.Color(255, 255, 255));
        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jStatusLanc)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome Completo do Interno");

        jIdInternoAbra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoAbra.setToolTipText("Código do Interno");
        jIdInternoAbra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoAbra.setEnabled(false);

        jNomeInternoAbra.setToolTipText("Nome do Interno");
        jNomeInternoAbra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoAbra.setEnabled(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoAbra, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoAbra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Pavilhão");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Cela");

        jPavilhao.setToolTipText("Descrição do Pavilhão");
        jPavilhao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPavilhao.setEnabled(false);

        jCela.setToolTipText("Descrição da Cela");
        jCela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCela.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(153, 0, 51));
        jLabel24.setText("ID Req.");

        jIdReq.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jIdReq.setForeground(new java.awt.Color(204, 0, 102));
        jIdReq.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdReq.setToolTipText("Requisição de Medicamentos");
        jIdReq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdReq.setDisabledTextColor(new java.awt.Color(204, 0, 102));
        jIdReq.setEnabled(false);

        jBtPesquisarRequisicaoInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarRequisicaoInterno.setToolTipText("Requisição Medicamentos Internos");
        jBtPesquisarRequisicaoInterno.setContentAreaFilled(false);
        jBtPesquisarRequisicaoInterno.setEnabled(false);
        jBtPesquisarRequisicaoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarRequisicaoInternoActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Tipo Aprazamento:");

        jComboBoxTipoAprazamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoAprazamento.setForeground(new java.awt.Color(204, 0, 102));
        jComboBoxTipoAprazamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Prescrição Médica/Psiquiatrica para Interno", "Avulso para Interno", "Prescrição Odontologica" }));
        jComboBoxTipoAprazamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoAprazamento.setEnabled(false);
        jComboBoxTipoAprazamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxTipoAprazamentoMouseClicked(evt);
            }
        });
        jComboBoxTipoAprazamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoAprazamentoItemStateChanged(evt);
            }
        });

        jBtPesqInternoReqAvulsa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInternoReqAvulsa.setToolTipText("Pesquisar Interno");
        jBtPesqInternoReqAvulsa.setContentAreaFilled(false);
        jBtPesqInternoReqAvulsa.setEnabled(false);
        jBtPesqInternoReqAvulsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoReqAvulsaActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btGroupMedicoPsiquiatrico.add(jRadioBtMedico);
        jRadioBtMedico.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtMedico.setForeground(new java.awt.Color(255, 0, 0));
        jRadioBtMedico.setSelected(true);
        jRadioBtMedico.setText("P.Médica");
        jRadioBtMedico.setEnabled(false);

        btGroupMedicoPsiquiatrico.add(jRadioBtPsiquiatrico);
        jRadioBtPsiquiatrico.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtPsiquiatrico.setForeground(new java.awt.Color(0, 51, 255));
        jRadioBtPsiquiatrico.setText("P.Psi");
        jRadioBtPsiquiatrico.setEnabled(false);

        jBtPesquisarPrescricao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarPrescricao.setContentAreaFilled(false);
        jBtPesquisarPrescricao.setEnabled(false);
        jBtPesquisarPrescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarPrescricaoActionPerformed(evt);
            }
        });

        btGroupMedicoPsiquiatrico.add(jRadioBtOdontologia);
        jRadioBtOdontologia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtOdontologia.setForeground(new java.awt.Color(51, 153, 0));
        jRadioBtOdontologia.setText("P.Odon.");
        jRadioBtOdontologia.setEnabled(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioBtMedico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioBtPsiquiatrico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioBtOdontologia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtPesquisarPrescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jRadioBtMedico)
                .addComponent(jRadioBtPsiquiatrico)
                .addComponent(jBtPesquisarPrescricao)
                .addComponent(jRadioBtOdontologia))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxTipoAprazamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jCela))))
                        .addGap(17, 17, 17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jIdInternoAbra, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqInternoReqAvulsa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jIdReq)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesquisarRequisicaoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jNomeInternoAbra)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jComboBoxTipoAprazamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesquisarRequisicaoInterno)
                            .addComponent(jIdReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqInternoReqAvulsa)
                            .addComponent(jIdInternoAbra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeInternoAbra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCela, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Alterar Registro");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir Registro");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Gravar Registro");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair da Tela");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoriaAprazamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaAprazamento.setContentAreaFilled(false);
        jBtAuditoriaAprazamento.setEnabled(false);
        jBtAuditoriaAprazamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaAprazamentoActionPerformed(evt);
            }
        });

        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar Registro");
        jBtFinalizar.setContentAreaFilled(false);
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtFinalizar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtFinalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addGap(4, 4, 4)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addGap(18, 18, 18)
                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaAprazamento, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtNovo)
                .addComponent(jBtAlterar)
                .addComponent(jBtExcluir)
                .addComponent(jBtSalvar)
                .addComponent(jBtCancelar)
                .addComponent(jBtSair)
                .addComponent(jBtFinalizar)
                .addComponent(jBtAuditoriaAprazamento))
        );

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTextoPrescricaoMedica.setColumns(20);
        jTextoPrescricaoMedica.setRows(5);
        jTextoPrescricaoMedica.setToolTipText("Prescrição Médica/Psiquiatrica");
        jTextoPrescricaoMedica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoPrescricaoMedica.setEnabled(false);
        jScrollPane7.setViewportView(jTextoPrescricaoMedica);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Data:");

        jDataPM.setBackground(new java.awt.Color(255, 255, 255));
        jDataPM.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataPM.setToolTipText("Data da Prescrição");
        jDataPM.setEnabled(false);

        jIdCodigoPM.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdCodigoPM.setToolTipText("Código da Prescrição");
        jIdCodigoPM.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdCodigoPM.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIdCodigoPM, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 304, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17)
                    .addComponent(jIdCodigoPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jDataPM, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Prescrição Médica", jPanel14);

        jTextoObservacaoAprazamento.setColumns(20);
        jTextoObservacaoAprazamento.setRows(5);
        jTextoObservacaoAprazamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoObservacaoAprazamento.setEnabled(false);
        jScrollPane5.setViewportView(jTextoObservacaoAprazamento);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Observação", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jIdProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdProduto.setToolTipText("Código Produto");
        jIdProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdProduto.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Código");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Descrição do Medicamento");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Dose");

        jQuantidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jQuantidade.setForeground(new java.awt.Color(255, 0, 0));
        jQuantidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQuantidade.setToolTipText("Qtd. Dose a ser aplicada");
        jQuantidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQuantidade.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jQuantidade.setEnabled(false);

        jComboBoxFrequencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxFrequencia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Dose Única", "Diariamente" }));
        jComboBoxFrequencia.setToolTipText("Dose Única ou Diária");
        jComboBoxFrequencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxFrequencia.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Frequência");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Dias Uso");

        jDiasUso.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDiasUso.setToolTipText("Dias de Uso");
        jDiasUso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDiasUso.setEnabled(false);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Início");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Período Aprazamento");

        jComboBoxPeridoHorario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxPeridoHorario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Após o almoço", "Manhã", "Tarde", "Noite", "Esporádico" }));
        jComboBoxPeridoHorario.setToolTipText("Período Inicial de Aprazamento");
        jComboBoxPeridoHorario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxPeridoHorario.setEnabled(false);

        jDataInicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInicio.setToolTipText("Data Inicial");
        jDataInicio.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Dt. Aplicação");

        jDataAplicacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAplicacao.setToolTipText("Data Aplicação");
        jDataAplicacao.setEnabled(false);

        jDoseEmbalagemProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDoseEmbalagemProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDoseEmbalagemProduto.setToolTipText("Quantidade de Dose Total");
        jDoseEmbalagemProduto.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jDoseEmbalagemProduto.setEnabled(false);
        jDoseEmbalagemProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Dose Emb.");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 255));
        jLabel20.setText("Doses Aplicada");

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jTextoObservacaoMedicamentos.setColumns(20);
        jTextoObservacaoMedicamentos.setRows(5);
        jTextoObservacaoMedicamentos.setToolTipText("Observação do Item");
        jTextoObservacaoMedicamentos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoObservacaoMedicamentos.setEnabled(false);
        jScrollPane6.setViewportView(jTextoObservacaoMedicamentos);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("H. Final");

        jHorarioAprazametoFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioAprazametoFinal.setToolTipText("Horário Final");
        jHorarioAprazametoFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioAprazametoFinal.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("UN");

        jComboBoxUnidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "UN", "Caixa", "Pacote", "Ml", "Kg", "Litro", "Peça", "Amp", "Kit", "PR", "Un" }));
        jComboBoxUnidade.setToolTipText("Unidade Produto");
        jComboBoxUnidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidade.setEnabled(false);

        jHorarioAprazametoInicial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioAprazametoInicial.setToolTipText("Horário Inicial");
        jHorarioAprazametoInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioAprazametoInicial.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("H. Inicial");

        jQtdDosesAplicada.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jQtdDosesAplicada.setForeground(new java.awt.Color(0, 0, 255));
        jQtdDosesAplicada.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQtdDosesAplicada.setToolTipText("Qtd Dose Aplicada");
        jQtdDosesAplicada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQtdDosesAplicada.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        jQtdDosesAplicada.setEnabled(false);

        jBtPesqProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqProdutos.setContentAreaFilled(false);
        jBtPesqProdutos.setEnabled(false);
        jBtPesqProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqProdutosActionPerformed(evt);
            }
        });

        jDescricaoProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoProduto.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 0));
        jLabel16.setText("Qtd. Req.");

        jDoseRequisitada.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jDoseRequisitada.setForeground(new java.awt.Color(0, 153, 0));
        jDoseRequisitada.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDoseRequisitada.setToolTipText("Quantidade Requistada");
        jDoseRequisitada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDoseRequisitada.setDisabledTextColor(new java.awt.Color(0, 153, 0));
        jDoseRequisitada.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jDataAplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel28)
                                    .addComponent(jComboBoxPeridoHorario, 0, 135, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jHorarioAprazametoInicial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jHorarioAprazametoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDiasUso))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel26)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel20)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxFrequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25)))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jDoseEmbalagemProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jDoseRequisitada, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jQtdDosesAplicada, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(63, 63, 63))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jIdProduto)
                                        .addGap(10, 10, 10)))
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtPesqProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel11))))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqProdutos))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel20))
                    .addComponent(jLabel13)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDoseEmbalagemProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDoseRequisitada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQtdDosesAplicada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxFrequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(jLabel28))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel12)
                        .addComponent(jLabel26)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDiasUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioAprazametoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioAprazametoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPeridoHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataAplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxPeridoHorario, jDataAplicacao, jDataInicio});

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxFrequencia, jDiasUso, jDoseEmbalagemProduto, jQuantidade});

        jTabelaItensMedicacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensMedicacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Descrição Produto", "Data Inicio", "Dt. Aplicação", "Dose", "H.Inicio", "H.Final", "D.Uso"
            }
        ));
        jTabelaItensMedicacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensMedicacaoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaItensMedicacao);
        if (jTabelaItensMedicacao.getColumnModel().getColumnCount() > 0) {
            jTabelaItensMedicacao.getColumnModel().getColumn(0).setMinWidth(40);
            jTabelaItensMedicacao.getColumnModel().getColumn(0).setMaxWidth(40);
            jTabelaItensMedicacao.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(2).setMinWidth(220);
            jTabelaItensMedicacao.getColumnModel().getColumn(2).setMaxWidth(220);
            jTabelaItensMedicacao.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaItensMedicacao.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaItensMedicacao.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaItensMedicacao.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaItensMedicacao.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(5).setMaxWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(6).setMinWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(6).setMaxWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(7).setMinWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(7).setMaxWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(8).setMinWidth(50);
            jTabelaItensMedicacao.getColumnModel().getColumn(8).setMaxWidth(50);
        }

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoMedicamento.setText("Novo");
        jBtNovoMedicamento.setToolTipText("Novo Registro");
        jBtNovoMedicamento.setContentAreaFilled(false);
        jBtNovoMedicamento.setEnabled(false);
        jBtNovoMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoMedicamento.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoMedicamentoActionPerformed(evt);
            }
        });

        jBtAlterarMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarMedicamento.setText("Alterar");
        jBtAlterarMedicamento.setToolTipText("Alterar Registro");
        jBtAlterarMedicamento.setContentAreaFilled(false);
        jBtAlterarMedicamento.setEnabled(false);
        jBtAlterarMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarMedicamento.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarMedicamentoActionPerformed(evt);
            }
        });

        jBtExcluirMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirMedicamento.setText("Excluir");
        jBtExcluirMedicamento.setToolTipText("Excluir Registro");
        jBtExcluirMedicamento.setContentAreaFilled(false);
        jBtExcluirMedicamento.setEnabled(false);
        jBtExcluirMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirMedicamento.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirMedicamentoActionPerformed(evt);
            }
        });

        jBtSalvarMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarMedicamento.setText("Gravar");
        jBtSalvarMedicamento.setToolTipText("Gravar Registro");
        jBtSalvarMedicamento.setContentAreaFilled(false);
        jBtSalvarMedicamento.setEnabled(false);
        jBtSalvarMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarMedicamento.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarMedicamentoActionPerformed(evt);
            }
        });

        jBtCancelarMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarMedicamento.setText("Cancelar");
        jBtCancelarMedicamento.setToolTipText("Cancelar Operação");
        jBtCancelarMedicamento.setContentAreaFilled(false);
        jBtCancelarMedicamento.setEnabled(false);
        jBtCancelarMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarMedicamento.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarMedicamentoActionPerformed(evt);
            }
        });

        jBtSairMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairMedicamento.setText("Sair");
        jBtSairMedicamento.setToolTipText("Sair da Tela");
        jBtSairMedicamento.setContentAreaFilled(false);
        jBtSairMedicamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSairMedicamento.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSairMedicamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSairMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairMedicamentoActionPerformed(evt);
            }
        });

        jBtAuditoriaMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaMedicamento.setContentAreaFilled(false);
        jBtAuditoriaMedicamento.setEnabled(false);
        jBtAuditoriaMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaMedicamentoActionPerformed(evt);
            }
        });

        jBtBuscarMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarMedicamento.setToolTipText("Buscar Aprazamento");
        jBtBuscarMedicamento.setContentAreaFilled(false);
        jBtBuscarMedicamento.setEnabled(false);
        jBtBuscarMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarMedicamentoActionPerformed(evt);
            }
        });

        jBtImprimirAprazamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimirAprazamento.setToolTipText("Imprimir Aprazamento");
        jBtImprimirAprazamento.setContentAreaFilled(false);
        jBtImprimirAprazamento.setEnabled(false);
        jBtImprimirAprazamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirAprazamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jBtNovoMedicamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarMedicamento)
                .addGap(4, 4, 4)
                .addComponent(jBtExcluirMedicamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarMedicamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarMedicamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairMedicamento)
                .addGap(18, 18, 18)
                .addComponent(jBtBuscarMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jBtImprimirAprazamento, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovoMedicamento)
                    .addComponent(jBtAlterarMedicamento)
                    .addComponent(jBtExcluirMedicamento)
                    .addComponent(jBtSalvarMedicamento)
                    .addComponent(jBtCancelarMedicamento)
                    .addComponent(jBtSairMedicamento)
                    .addComponent(jBtAuditoriaMedicamento)
                    .addComponent(jBtImprimirAprazamento))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtBuscarMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Medicações", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(300, 10, 614, 570);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        jTabelaAprazamentoRemedio.setVisible(true);
        preencherTabelaAprazamento("SELECT * FROM APRAZAMENTO_MEDICACAO "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE NomeInternoCrc LIKE'" + jPesqNomeInternoOdonto.getText() + "%'");
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jBtIdPesqEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIdPesqEMActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        jTabelaAprazamentoRemedio.setVisible(true);
        preencherTabelaAprazamento("SELECT * FROM APRAZAMENTO_MEDICACAO "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE IdLanc='" + jIDPesqEM.getText() + "'");
    }//GEN-LAST:event_jBtIdPesqEMActionPerformed

    private void jBtPesqDataEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataEMActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        jTabelaAprazamentoRemedio.setVisible(true);
                        preencherTabelaAprazamento("SELECT * FROM APRAZAMENTO_MEDICACAO "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataLanc BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        jTabelaAprazamentoRemedio.setVisible(true);
                        preencherTabelaAprazamento("SELECT * FROM APRAZAMENTO_MEDICACAO "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataLanc BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataEMActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaAprazamentoRemedio.setVisible(true);
            this.preencherTabelaAprazamento("SELECT * FROM APRAZAMENTO_MEDICACAO "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            count = 0;
            jtotalRegistros.setText("");
            limparTabelaAprazamento();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jTabelaAprazamentoRemedioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAprazamentoRemedioMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaAprazamentoRemedio.getValueAt(jTabelaAprazamentoRemedio.getSelectedRow(), 0);
            jIDPesqEM.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtNovoMedicamento.setEnabled(true);
            jBtAuditoriaAprazamento.setEnabled(true);
            jBtBuscarMedicamento.setEnabled(true);
            //
            jIdProduto.setText("");
            jDescricaoProduto.setText("");
            jDoseEmbalagemProduto.setText("");
            jDoseRequisitada.setText("");
            jQtdDosesAplicada.setText("");
            jQuantidade.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jComboBoxFrequencia.setSelectedItem(null);
            jDiasUso.setText("");
            jDataInicio.setDate(null);
            jDataAplicacao.setDate(null);
            jComboBoxPeridoHorario.setSelectedItem(null);
            jHorarioAprazametoFinal.setText("");
            //
            jBtImprimirAprazamento.setEnabled(true);
            // jComboBoxTipoAprazamento.removeAllItems();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM APRAZAMENTO_MEDICACAO "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE APRAZAMENTO_MEDICACAO.IdLanc='" + IdLanc + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                jComboBoxTipoAprazamento.setSelectedItem(conecta.rs.getString("TipoAprazamento"));
                // SE O APRAZAMENTO FOR MÉDICO/PSIQUIATRICO
                if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno") || jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Odontologica")) {
                    conecta.executaSQL("SELECT * FROM APRAZAMENTO_MEDICACAO "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN ITENSLOCACAOINTERNO "
                            + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                            + "INNER JOIN CELAS "
                            + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                            + "INNER JOIN PAVILHAO "
                            + "ON CELAS.IdPav=PAVILHAO.IdPav "
                            + "INNER JOIN PRESCRICAO_MEDICA_PSIQUIATRICA "
                            + "ON APRAZAMENTO_MEDICACAO.IdItem=PRESCRICAO_MEDICA_PSIQUIATRICA.IdItem "
                            + "WHERE APRAZAMENTO_MEDICACAO.IdLanc='" + IdLanc + "'");
                    conecta.rs.first();
                    jIdReq.setText(conecta.rs.getString("IdReq"));
                    idPrescricao = conecta.rs.getInt("IdPres");
                    if (idPrescricao == 0) {
                        jRadioBtMedico.setSelected(true);
                    } else if (idPrescricao == 1) {
                        jRadioBtPsiquiatrico.setSelected(true);
                    } else if (idPrescricao == 2) {
                        jRadioBtOdontologia.setSelected(true);
                    }
                    jIdInternoAbra.setText(conecta.rs.getString("IdInternoCrc"));
                    jNomeInternoAbra.setText(conecta.rs.getString("NomeInternoCrc"));
                    jPavilhao.setText(conecta.rs.getString("DescricaoPav"));
                    jCela.setText(conecta.rs.getString("EndCelaPav"));
                    jIdCodigoPM.setText(conecta.rs.getString("IdItem"));
                    jDataPM.setDate(conecta.rs.getDate("DataPres"));
                    jTextoPrescricaoMedica.setText(conecta.rs.getString("TextoPrescricao"));
                    // SE O APRAZAMENTO FOR AVULSO
                } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                    jIdReq.setText(conecta.rs.getString("IdReq"));
                    jIdInternoAbra.setText(conecta.rs.getString("IdInternoCrc"));
                    jNomeInternoAbra.setText(conecta.rs.getString("NomeInternoCrc"));
                    jPavilhao.setText(conecta.rs.getString("DescricaoPav"));
                    jCela.setText(conecta.rs.getString("EndCelaPav"));
                    //                
                    jIdCodigoPM.setText("");
                    jDataPM.setDate(null);
                    jTextoPrescricaoMedica.setText("");
                }
                jTextoObservacaoAprazamento.setText(conecta.rs.getString("Observacao"));
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível exibir registro.\nERRO: " + e);
            }
            count = 0;
            preencherTabelaItensMedico("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO "
                    + "INNER JOIN APRAZAMENTO_MEDICACAO "
                    + "ON ITENS_APRAZAMENTO_MEDICACAO.IdLanc=APRAZAMENTO_MEDICACAO.IdLanc "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE ITENS_APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaAprazamentoRemedioMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAprazaMedManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedManuENF) && codIncluirENF == 1) {
            acao = 1;
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            limparTabelaItensMedicamentos();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAprazaMedManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedManuENF) && codAlterarENF == 1) {
            objApraza.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:        
        buscarAcessoUsuario(telaAprazaMedManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedManuENF) && codExcluirENF == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objApraza.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItensRequisitados();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:     
        buscarAcessoUsuario(telaAprazaMedManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedManuENF) && codGravarENF == 1) {
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de lançamento.");
                jDataLanc.requestFocus();
                jDataLanc.setBackground(Color.red);
            } else if (jIdReq.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o número da requisição dos medicamentos.");
            } else if (jTextoPrescricaoMedica.getText().equals("") && jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
                JOptionPane.showMessageDialog(rootPane, "Selecione e pesquise o tipo de prescrição, Médica ou Psiquiatrica");
            } else {
                if (jRadioBtMedico.isSelected()) {
                    idPrescricao = 0;
                } else if (jRadioBtPsiquiatrico.isSelected()) {
                    idPrescricao = 1;
                } else if (jRadioBtOdontologia.isSelected()) {
                    idPrescricao = 2;
                }
                objApraza.setStatusLanc(jStatusLanc.getText());
                objApraza.setStatusReqAndamento(statusReqAndamento);
                objApraza.setDataLanc(jDataLanc.getDate());
                objApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
                    objApraza.setIdPres(idPrescricao);
                    objApraza.setIdItem(Integer.valueOf(jIdCodigoPM.getText()));
                } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Odontologica")) {
                    objApraza.setIdPres(idPrescricao);
                    objApraza.setIdItem(Integer.valueOf(jIdCodigoPM.getText()));
                }
                objApraza.setTipoAprazamento((String) jComboBoxTipoAprazamento.getSelectedItem());
                objApraza.setIdInternoCrc(Integer.valueOf(jIdInternoAbra.getText()));
                objApraza.setNomeInterno(jNomeInternoAbra.getText());
                objApraza.setObservacao(jTextoObservacaoAprazamento.getText());
                if (acao == 1) {
                    if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                        // VERIFICAR SE A REQUISIÇÃO AVULSA ESTÁ FINALIZADA E EM ANDAMENTO
                        verificarRequisicaoAvulsa();
                        if (statusFinaliza.equals("FINALIZADO") && statusAtendimento.equals("Não Atendido") && tipoRequisicao == 0) {
                            objApraza.setUsuarioInsert(nameUser);
                            objApraza.setDataInsert(dataModFinal);
                            objApraza.setHorarioInsert(horaMov);
                            control.incluirAprazamentoMedico(objApraza);
                            buscarCodigo();
                            // ATUALIZA O STATUS DA REQUISIÇÃO SOBRE O APRAZAMENTO COMO "Em Andamento"
                            control.atualizarRequisicaoMedicamentosInterno(objApraza);
                            //
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                            Salvar();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "A requisição informada não está finalizada ou já foi concluída, ou é para Colaborador.");
                        }
                    } else {
                        objApraza.setUsuarioInsert(nameUser);
                        objApraza.setDataInsert(dataModFinal);
                        objApraza.setHorarioInsert(horaMov);
                        control.incluirAprazamentoMedico(objApraza);
                        buscarCodigo();
                        // ATUALIZA O STATUS DA REQUISIÇÃO SOBRE O APRAZAMENTO COMO "Em Andamento"
                        control.atualizarRequisicaoMedicamentosInterno(objApraza);
                        //
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        Salvar();
                    }
                }
                if (acao == 2) {
                    if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                        // VERIFICAR SE A REQUISIÇÃO AVULSA ESTÁ FINALIZADA E EM ANDAMENTO
                        verificarRequisicaoAvulsa();
                        if (statusFinaliza.equals("FINALIZADO") && statusAtendimento.equals("Não Atendido") && tipoRequisicao == 0) {
                            objApraza.setUsuarioUp(nameUser);
                            objApraza.setDataUp(dataModFinal);
                            objApraza.setHorarioUp(horaMov);
                            objApraza.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                            control.alterarAprazamentoMedico(objApraza);
                            //
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                            Salvar();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "A requisição informada não está finalizada ou já foi concluída ou é para Colaborador.");
                        }
                    } else {
                        objApraza.setUsuarioUp(nameUser);
                        objApraza.setDataUp(dataModFinal);
                        objApraza.setHorarioUp(horaMov);
                        objApraza.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        control.alterarAprazamentoMedico(objApraza);
                        //
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        Salvar();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM APRAZAMENTO_MEDICACAO WHERE IdLanc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtAuditoriaAprazamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaAprazamentoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaAprazamentoMedicacoes objAudiApraza = new TelaAuditoriaAprazamentoMedicacoes();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiApraza);
        objAudiApraza.show();
    }//GEN-LAST:event_jBtAuditoriaAprazamentoActionPerformed

    private void jTabelaItensMedicacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensMedicacaoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeProduto = "" + jTabelaItensMedicacao.getValueAt(jTabelaItensMedicacao.getSelectedRow(), 2);
            jDescricaoProduto.setText(nomeProduto);
            String idProduto = "" + jTabelaItensMedicacao.getValueAt(jTabelaItensMedicacao.getSelectedRow(), 1);
            jIdProduto.setText(idProduto);
            idItem = "" + jTabelaItensMedicacao.getValueAt(jTabelaItensMedicacao.getSelectedRow(), 0);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoriaAprazamento.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoMedicamento.setEnabled(true);
            jBtAlterarMedicamento.setEnabled(true);
            jBtExcluirMedicamento.setEnabled(true);
            jBtSalvarMedicamento.setEnabled(!true);
            jBtCancelarMedicamento.setEnabled(true);
            jBtAuditoriaMedicamento.setEnabled(true);
            //
            jDescricaoProduto.setEnabled(!true);
            jQuantidade.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jComboBoxFrequencia.setEnabled(!true);
            jDiasUso.setEnabled(!true);
            jDataInicio.setEnabled(!true);
            jDataAplicacao.setEnabled(!true);
            jComboBoxPeridoHorario.setEnabled(!true);
            jHorarioAprazametoInicial.setEnabled(!true);
            jHorarioAprazametoFinal.setEnabled(!true);
            jTextoObservacaoMedicamentos.setEnabled(!true);
            //         
            conecta.abrirConexao();
            try {
                if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
                    conecta.executaSQL("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO "
                            + "INNER JOIN APRAZAMENTO_MEDICACAO "
                            + "ON ITENS_APRAZAMENTO_MEDICACAO.IdLanc=APRAZAMENTO_MEDICACAO.IdLanc "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                            + "INNER JOIN LOTE_PRODUTOS_ENF "
                            + "ON PRODUTOS_AC.IdProd=LOTE_PRODUTOS_ENF.IdProd "
                            + "INNER JOIN ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF "
                            + "ON PRODUTOS_AC.IdProd=ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF.IdProd "
                            + "WHERE ITENS_APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'AND ITENS_APRAZAMENTO_MEDICACAO.IdItem='" + idItem + "'AND ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF.IdReq='" + jIdReq.getText() + "'");
                    conecta.rs.first();
                    jIdProduto.setText(conecta.rs.getString("IdProd"));
                    jDescricaoProduto.setText(conecta.rs.getString("DescricaoProd"));
                    idItem = conecta.rs.getString("IdItem");
                    //
                    jDoseEmbalagemProduto.setText(conecta.rs.getString("QtdDoses"));        // PRODUTOS
                    jDoseRequisitada.setText(String.valueOf(conecta.rs.getInt("QtdItem"))); // ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF
                    jQtdDosesAplicada.setText(conecta.rs.getString("QtdDosesAT"));          // ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF                
                    jQuantidade.setText(conecta.rs.getString("QtdItemAP"));                 // ITENS_APRAZAMENTO_MEDICACAO
                    // PEGA QUANTIDADE PARA CALCULAR SE O USUARIO ALTERAR A QUANTIDADE.
                    qtdItemAnterior = conecta.rs.getInt("QtdItemAP");                       // ITENS_APRAZAMENTO_MEDICACAO
                    jComboBoxUnidade.setSelectedItem(conecta.rs.getString("Unidade"));
                    jComboBoxFrequencia.setSelectedItem(conecta.rs.getString("Frequencia"));
                    jDataInicio.setDate(conecta.rs.getDate("DataInicio"));
                    jDataAplicacao.setDate(conecta.rs.getDate("DataTermino"));
                    jComboBoxPeridoHorario.setSelectedItem(conecta.rs.getString("PeriodoHoras"));
                    jHorarioAprazametoInicial.setText(conecta.rs.getString("HorarioInicial"));
                    jHorarioAprazametoFinal.setText(conecta.rs.getString("HorarioFinal"));
                    jDiasUso.setText(conecta.rs.getString("DiasUso"));
                    jTextoObservacaoMedicamentos.setText(conecta.rs.getString("TextoObservacao"));
                    //
                } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                    conecta.executaSQL("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO "
                            + "INNER JOIN APRAZAMENTO_MEDICACAO "
                            + "ON ITENS_APRAZAMENTO_MEDICACAO.IdLanc=APRAZAMENTO_MEDICACAO.IdLanc "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                            + "INNER JOIN LOTE_PRODUTOS_ENF "
                            + "ON PRODUTOS_AC.IdProd=LOTE_PRODUTOS_ENF.IdProd "
                            + "INNER JOIN ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF "
                            + "ON PRODUTOS_AC.IdProd=ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF.IdProd "
                            + "WHERE ITENS_APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'AND ITENS_APRAZAMENTO_MEDICACAO.IdItem='" + idItem + "'AND ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF.IdReq='" + jIdReq.getText() + "'");
                    conecta.rs.first();
                    jIdProduto.setText(conecta.rs.getString("IdProd")); // PRODUTOS
                    jDescricaoProduto.setText(conecta.rs.getString("DescricaoProd")); // PRODUTOS
                    jDoseEmbalagemProduto.setText(conecta.rs.getString("QtdDoses")); // PRODUTOS
                    idItem = conecta.rs.getString("IdItem");
                    //
                    jDoseRequisitada.setText(String.valueOf(conecta.rs.getInt("QtdItem"))); // ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF
                    jQtdDosesAplicada.setText(conecta.rs.getString("QtdDosesAT"));          // ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF                
                    jQuantidade.setText(conecta.rs.getString("QtdItemAP"));                 // ITENS_APRAZAMENTO_MEDICACAO
                    // PEGA QUANTIDADE PARA CALCULAR SE O USUARIO ALTERAR A QUANTIDADE.
                    qtdItemAnterior = conecta.rs.getInt("QtdItemAP");                       // ITENS_APRAZAMENTO_MEDICACAO
                    jComboBoxUnidade.setSelectedItem(conecta.rs.getString("Unidade"));
                    jComboBoxFrequencia.setSelectedItem(conecta.rs.getString("Frequencia"));
                    jDataInicio.setDate(conecta.rs.getDate("DataInicio"));
                    jDataAplicacao.setDate(conecta.rs.getDate("DataTermino"));
                    jComboBoxPeridoHorario.setSelectedItem(conecta.rs.getString("PeriodoHoras"));
                    jHorarioAprazametoInicial.setText(conecta.rs.getString("HorarioInicial"));
                    jHorarioAprazametoFinal.setText(conecta.rs.getString("HorarioFinal"));
                    jDiasUso.setText(conecta.rs.getString("DiasUso"));
                    jTextoObservacaoMedicamentos.setText(conecta.rs.getString("TextoObservacao"));
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível selecionar o registro.\nERRO: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaItensMedicacaoMouseClicked

    private void jBtNovoMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoMedicamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAprazaMedItensENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedItensENF) && codIncluirENF == 1) {
            objApraza.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse atendimento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                acao = 3;
                NovoMedicamento();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoMedicamentoActionPerformed

    private void jBtAlterarMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarMedicamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAprazaMedItensENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedItensENF) && codAlterarENF == 1) {
            objApraza.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse atendimento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                acao = 4;
                AlterarMedicamento();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarMedicamentoActionPerformed

    private void jBtExcluirMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirMedicamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAprazaMedItensENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedItensENF) && codExcluirENF == 1) {
            objApraza.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                statusMov = "Excluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensApraza.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                    objItensApraza.setIdProd(Integer.valueOf(jIdProduto.getText()));
                    objItensApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                    pegarSaldoDoses(objItensApraza.getIdProd(), objItensApraza.getIdReq());
                    objItensApraza.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensAprazamentoMedico(objItensApraza);
                    // CALCULA O NOVO SALDO DE ESTOQUE
                    estoqueAtual = (saldoEstoque - objItensApraza.getQtdItem());
                    //
                    objItensApraza.setIdProd(Integer.valueOf(jIdProduto.getText()));
                    objItensApraza.setQtdItem(estoqueAtual);
                    controle.alterarEstoqueDosesMedicacao(objItensApraza); // TABELA DE ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF 
                    //            
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaItensMedico("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO "
                            + "INNER JOIN APRAZAMENTO_MEDICACAO "
                            + "ON ITENS_APRAZAMENTO_MEDICACAO.IdLanc=APRAZAMENTO_MEDICACAO.IdLanc "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE ITENS_APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'");
                    ExcluirMedicamento();
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirMedicamentoActionPerformed

    private void jBtSalvarMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarMedicamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAprazaMedItensENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaAprazaMedItensENF) && codGravarENF == 1) {
            DecimalFormat qtdReal = new DecimalFormat("#,###.00");
            qtdReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jQuantidade.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a dose do medicamento.");
            } else if (jComboBoxFrequencia.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a frequência do medicamento.");
            } else if (jDataInicio.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial.");
            } else if (jDataAplicacao.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data Final.");
            } else if (jComboBoxPeridoHorario.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o período inicial de aprazamento.");
            } else if (jHorarioAprazametoInicial.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o horário de inicio da medicação.");
            } else if (jHorarioAprazametoFinal.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o horário final da medicação.");
            } else if (jDiasUso.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a quantidade de dias para aprazamento.");
            } else if (jDoseEmbalagemProduto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Selecione corretamente o medicamento para fazer o aprazamento.");
            } else {
                objItensApraza.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                objItensApraza.setIdProd(Integer.valueOf(jIdProduto.getText()));
                objItensApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                objItensApraza.setIdInternoCrc(Integer.valueOf(jIdInternoAbra.getText()));
                //
                objItensApraza.setQuantidadeRequisitada(Integer.valueOf(jDoseRequisitada.getText()));
                objItensApraza.setQtdDosesAplicada(Integer.valueOf(jQtdDosesAplicada.getText()));
                objItensApraza.setQtdDoseAtend(Integer.valueOf(jDoseEmbalagemProduto.getText()));
                objItensApraza.setQtdItem(Integer.valueOf(jQuantidade.getText()));
                //
                objItensApraza.setUnidade((String) jComboBoxUnidade.getSelectedItem());
                objItensApraza.setFrequencia((String) jComboBoxFrequencia.getSelectedItem());
                objItensApraza.setDataInicio(jDataInicio.getDate());
                objItensApraza.setDataTermino(jDataAplicacao.getDate());
                objItensApraza.setPeriodoHoras((String) jComboBoxPeridoHorario.getSelectedItem());
                objItensApraza.setHorarioInicial(jHorarioAprazametoInicial.getText());
                objItensApraza.setHorarioFinal(jHorarioAprazametoFinal.getText());
                objItensApraza.setDiasUso(Integer.valueOf(jDiasUso.getText()));
                objItensApraza.setTextoObservacao(jTextoObservacaoMedicamentos.getText());
                if (acao == 3) {
                    objItensApraza.setUsuarioInsert(nameUser);
                    objItensApraza.setDataInsert(dataModFinal);
                    objItensApraza.setHorarioInsert(horaMov);
                    // CALCULAR A QUANTIDADE TOTAL DOS PRODUTOS SEM DOSE ESPECIFICADA PARA NÃO ULTRAPASSAR A QUANTIDADE REQUISITADA.
                    totalDoseAplicada = objItensApraza.getQtdItem() + objItensApraza.getQtdDosesAplicada();
                    // VERIFICA SE A DOSE INFORMADA É MAIOR QUE A INFORMADA NA EMBALAGEM DO MEDICAMENTO - (NEGA)
                    if (objItensApraza.getQtdItem() > objItensApraza.getQtdDoseAtend() && objItensApraza.getQtdDoseAtend() != 0) {
                        JOptionPane.showMessageDialog(rootPane, "Quantidade DOSE informada é insuficiente para atender esse item.(1)");
                        // SE DOSE EMBALAGEM FOR ZERO E QUANTIDADE REQUISITADA FOR MENOR QUE QUANTIDADE APRAZADA - (NEGA)
                    } else if (objItensApraza.getQtdDoseAtend() == 0 && objItensApraza.getQtdItem() > objItensApraza.getQuantidadeRequisitada()) {
                        JOptionPane.showMessageDialog(rootPane, "Quantidade APRAZADA é MAIOR que a REQUISITADA, não sendo possível atender.(2)");
                        // SE DOSE EMBALAGEM FOR ZERO E QUANTIDADE APRAZADA FOR MAIOR QUE A JÁ APLICADA (USADA) - (NEGA)
                    } else if (objItensApraza.getQtdDoseAtend() == 0 && objItensApraza.getQtdItem() > objItensApraza.getQtdDosesAplicada() && objItensApraza.getQuantidadeRequisitada() < objItensApraza.getQtdItem()) {
                        JOptionPane.showMessageDialog(rootPane, "Quantidade APRAZADA é MAIOR que a quantidade APLICADA, não sendo possível atender.(3)");
                        // SE DOSE EMBALAGEM FOR ZERO E A QUANTIDADE TOTAL APLICADA FOR MAIOR QUE A QUANTIDADE REQUISITADA
                    } else if (objItensApraza.getQtdDoseAtend() == 0 && totalDoseAplicada > objItensApraza.getQuantidadeRequisitada()) {
                        JOptionPane.showMessageDialog(rootPane, "Quantidade TOTAL APRAZADA é MAIOR que a quantidade REQUISITADA, não sendo possível atender.(4)");
                    } else {
                        if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
                            // BUSCAR O SALDO ANTERIOR DA REQUISIÇÃO PARA CALCULAR
                            pegarSaldoDoses(objItensApraza.getIdProd(), objItensApraza.getIdReq());
                            //CALCULAR A QUANTIDADE ATENDIDA
                            estoqueAtual = saldoEstoque + objItensApraza.getQtdItem();
                            objItensApraza.setIdProd(Integer.valueOf(jIdProduto.getText()));
                            objItensApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                            objItensApraza.setQtdItem(estoqueAtual);
                            controle.alterarEstoqueDosesMedicacao(objItensApraza); // TABELA DE ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF  
                        } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                            // BUSCAR O SALDO ANTERIOR DA REQUISIÇÃO PARA CALCULAR                        
                            pegarSaldoDosesAvulsas(objItensApraza.getIdProd(), objItensApraza.getIdReq());
                            // CALCULAR A QUANTIDADE ATENDIDA
                            estoqueAtual = saldoEstoque + objItensApraza.getQtdItem();
                            //
                            objItensApraza.setIdProd(Integer.valueOf(jIdProduto.getText()));
                            objItensApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                            objItensApraza.setQtdItem(estoqueAtual);
                            controle.alterarEstoqueDosesMedicacaoAvulsa(objItensApraza); // TABELA DE ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF  
                        }
                        //INSERIR OS DADOS NA TABELA ITENS_APRAZAMENTO_MEDICACAO
                        objItensApraza.setQtdItem(Integer.valueOf(jQuantidade.getText()));
                        objItensApraza.setDescricaoProduto(jDescricaoProduto.getText());
                        controle.incluirItensAprazamentoMedico(objItensApraza);
                        //
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        preencherTabelaItensMedico("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO "
                                + "INNER JOIN APRAZAMENTO_MEDICACAO "
                                + "ON ITENS_APRAZAMENTO_MEDICACAO.IdLanc=APRAZAMENTO_MEDICACAO.IdLanc "
                                + "INNER JOIN PRODUTOS_AC "
                                + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                                + "WHERE ITENS_APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'");
                        SalvarMedicamento();
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                }
                if (acao == 4) {
                    objItensApraza.setUsuarioUp(nameUser);
                    objItensApraza.setDataUp(dataModFinal);
                    objItensApraza.setHorarioUp(horaMov);
                    // VERIFICA SE A DOSE INFORMADA É MAIOR QUE A INFORMADA NA EMBALAGEM DO MEDICAMENTO
                    if (objItensApraza.getQtdItem() > objItensApraza.getQtdDoseAtend() && objItensApraza.getQtdDoseAtend() != 0) {
                        JOptionPane.showMessageDialog(rootPane, "Quantidade informada é insuficiente para atender esse item.");
                    } else {
                        // PEGA PRODUTO PARA CALCULAR A QUANTIDADE DAS DOSES
                        pegarSaldoDoses(objItensApraza.getIdProd(), objItensApraza.getIdReq());
                        // DEDUZ A QUANTIDADES DAS DOSES
                        novoSaldoAtual = saldoEstoque - qtdItemAnterior;
                        // GRAVA O NOVO SALDO DAS DOSES A SEREM APLCIADAS                
                        estoqueAtual = novoSaldoAtual + objItensApraza.getQtdItem();
                        // TABELA DE ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF                 
                        objItensApraza.setIdProd(Integer.valueOf(jIdProduto.getText()));
                        objItensApraza.setQtdItem(estoqueAtual);
                        controle.alterarEstoqueDosesMedicacao(objItensApraza);
                        // ALTERAR OS DADOS NA TABELA DE ITENS_APRAZAMETO_MEDICACAO
                        objItensApraza.setDescricaoProduto(jDescricaoProduto.getText());
                        objItensApraza.setIdItem(Integer.valueOf(idItem));
                        objItensApraza.setQtdItem(Integer.valueOf(jQuantidade.getText()));
                        controle.alterarItensAprazamentoMedico(objItensApraza);
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        preencherTabelaItensMedico("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO "
                                + "INNER JOIN APRAZAMENTO_MEDICACAO "
                                + "ON ITENS_APRAZAMENTO_MEDICACAO.IdLanc=APRAZAMENTO_MEDICACAO.IdLanc "
                                + "INNER JOIN PRODUTOS_AC "
                                + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                                + "WHERE ITENS_APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'");
                        SalvarMedicamento();
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarMedicamentoActionPerformed

    private void jBtCancelarMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarMedicamentoActionPerformed
        // TODO add your handling code here:
        CancelarMedicamento();
    }//GEN-LAST:event_jBtCancelarMedicamentoActionPerformed

    private void jBtSairMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairMedicamentoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairMedicamentoActionPerformed

    private void jBtBuscarMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarMedicamentoActionPerformed
        // TODO add your handling code here:
        TelaPesqItensAprazamentoMedicacoes objBuscarAprazaMed = new TelaPesqItensAprazamentoMedicacoes();
        TelaModuloEnfermaria.jPainelMedico.add(objBuscarAprazaMed);
        objBuscarAprazaMed.show();
    }//GEN-LAST:event_jBtBuscarMedicamentoActionPerformed

    private void jBtAuditoriaMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaMedicamentoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensAprazamentoMedicacoes objAudiItensApraza = new TelaAuditoriaItensAprazamentoMedicacoes();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiItensApraza);
        objAudiItensApraza.show();
    }//GEN-LAST:event_jBtAuditoriaMedicamentoActionPerformed

    private void jBtPesquisarRequisicaoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarRequisicaoInternoActionPerformed
        // TODO add your handling code here:
        TelaPesqRequisicaoAprazaMed objPesqLocalMed = new TelaPesqRequisicaoAprazaMed();
        TelaModuloEnfermaria.jPainelMedico.add(objPesqLocalMed);
        objPesqLocalMed.show();
    }//GEN-LAST:event_jBtPesquisarRequisicaoInternoActionPerformed

    private void jBtPesquisarPrescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarPrescricaoActionPerformed
        // TODO add your handling code here:
        if (jRadioBtMedico.isSelected()) {
            tipoA = 0;
            TelaPesqPrescricaoMedicaPsiquiatrica objPesPrescricao = new TelaPesqPrescricaoMedicaPsiquiatrica();
            TelaModuloEnfermaria.jPainelMedico.add(objPesPrescricao);
            objPesPrescricao.show();
        } else if (jRadioBtPsiquiatrico.isSelected()) {
            tipoA = 1;
            TelaPesqPrescricaoMedicaPsiquiatrica objPesPrescricao = new TelaPesqPrescricaoMedicaPsiquiatrica();
            TelaModuloEnfermaria.jPainelMedico.add(objPesPrescricao);
            objPesPrescricao.show();
        } else if (jRadioBtOdontologia.isSelected()) {
            tipoA = 2;
            TelaPesqPrescricaoMedicaPsiquiatrica objPesPrescricaoReq = new TelaPesqPrescricaoMedicaPsiquiatrica();
            TelaModuloEnfermaria.jPainelMedico.add(objPesPrescricaoReq);
            objPesPrescricaoReq.show();
        } else if (!jRadioBtMedico.isSelected() || !jRadioBtPsiquiatrico.isSelected()) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um tipo de prescrição, médica ou psiquiatrica");
        }
    }//GEN-LAST:event_jBtPesquisarPrescricaoActionPerformed

    private void jBtPesqProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqProdutosActionPerformed
        // TODO add your handling code here:
        if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
            TelaPesqProdutoAprazamentoMedicamentos objPesqProdMed = new TelaPesqProdutoAprazamentoMedicamentos();
            TelaModuloEnfermaria.jPainelMedico.add(objPesqProdMed);
            objPesqProdMed.show();
        } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
            TelaPesqProdutoAprazamentoMedicamentosAvulso objPesProdMedAvulso = new TelaPesqProdutoAprazamentoMedicamentosAvulso();
            TelaModuloEnfermaria.jPainelMedico.add(objPesProdMedAvulso);
            objPesProdMedAvulso.show();
        } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Odontologica")) {
            TelaPesqProdutoAprazamentoMedicamentos objPesqProdMed = new TelaPesqProdutoAprazamentoMedicamentos();
            TelaModuloEnfermaria.jPainelMedico.add(objPesqProdMed);
            objPesqProdMed.show();
        }
    }//GEN-LAST:event_jBtPesqProdutosActionPerformed

    private void jBtPesqInternoReqAvulsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoReqAvulsaActionPerformed
        // TODO add your handling code here:
        TelaPesqInternoAprazamentoAvulso objPesqInternoAvulso = new TelaPesqInternoAprazamentoAvulso();
        TelaModuloEnfermaria.jPainelMedico.add(objPesqInternoAvulso);
        objPesqInternoAvulso.show();
    }//GEN-LAST:event_jBtPesqInternoReqAvulsaActionPerformed

    private void jComboBoxTipoAprazamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTipoAprazamentoMouseClicked
        // TODO add your handling code here:
        if (acao == 1 || acao == 2) {
            if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
                jBtPesqInternoReqAvulsa.setEnabled(!true);
                jBtPesquisarRequisicaoInterno.setEnabled(true);
                jRadioBtMedico.setEnabled(true);
                jRadioBtPsiquiatrico.setEnabled(true);
                jBtPesquisarPrescricao.setEnabled(true);
            } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                jBtPesqInternoReqAvulsa.setEnabled(true);
                jBtPesquisarRequisicaoInterno.setEnabled(!true);
                jRadioBtMedico.setEnabled(!true);
                jRadioBtPsiquiatrico.setEnabled(!true);
                jBtPesquisarPrescricao.setEnabled(!true);
            }
        }
    }//GEN-LAST:event_jComboBoxTipoAprazamentoMouseClicked

    private void jComboBoxTipoAprazamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoAprazamentoItemStateChanged
        // TODO add your handling code here:
        if (acao == 1 || acao == 2) {
            if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
                jBtPesqInternoReqAvulsa.setEnabled(!true);
                jBtPesquisarRequisicaoInterno.setEnabled(true);
                jRadioBtMedico.setEnabled(true);
                jRadioBtMedico.setSelected(true);
                jRadioBtPsiquiatrico.setEnabled(true);
                jBtPesquisarPrescricao.setEnabled(true);
                jRadioBtOdontologia.setEnabled(!true);
            } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                jBtPesqInternoReqAvulsa.setEnabled(true);
                jIdReq.setEnabled(true);
                jBtPesquisarRequisicaoInterno.setEnabled(!true);
                jRadioBtMedico.setEnabled(!true);
                jRadioBtPsiquiatrico.setEnabled(!true);
                jBtPesquisarPrescricao.setEnabled(!true);
                jIdCodigoPM.setText("");
                jDataPM.setDate(null);
                jTextoPrescricaoMedica.setText("");
            } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Odontologica")) {
                jBtPesqInternoReqAvulsa.setEnabled(!true);
                jBtPesquisarRequisicaoInterno.setEnabled(true);
                jRadioBtOdontologia.setEnabled(true);
                jRadioBtOdontologia.setSelected(true);
                jRadioBtMedico.setEnabled(!true);
                jRadioBtPsiquiatrico.setEnabled(!true);
                jBtPesquisarPrescricao.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jComboBoxTipoAprazamentoItemStateChanged

    private void jBtImprimirAprazamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirAprazamentoActionPerformed
        // TODO add your handling code here:
        if (jIdLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código do aprazamento a ser impressa.");
        } else {
            try {
                conecta.abrirConexao();
                String path = "reports/Enfermaria/RelatorioAprazamentoMedicoIndividual.jasper";
                conecta.executaSQL("SELECT * FROM APRAZAMENTO_MEDICACAO "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON APRAZAMENTO_MEDICACAO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "INNER JOIN ITENS_APRAZAMENTO_MEDICACAO "
                        + "ON APRAZAMENTO_MEDICACAO.IdLanc=ITENS_APRAZAMENTO_MEDICACAO.IdLanc "
                        + "INNER JOIN PRODUTOS_AC "
                        + "ON ITENS_APRAZAMENTO_MEDICACAO.IdProd=PRODUTOS_AC.IdProd "
                        + "WHERE APRAZAMENTO_MEDICACAO.IdLanc='" + jIdLanc.getText() + "'ORDER BY PRODUTOS_AC.DescricaoProd");
                HashMap parametros = new HashMap();
                parametros.put("codRegistro", jIdLanc.getText());
                parametros.put("nomeUsuario", nameUser);
                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
                jv.setTitle("Aprazamento de Medicação de Interno");
                jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
                jv.toFront(); // Traz o relatorio para frente da aplicação            
                conecta.desconecta();
            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
            }
        }
    }//GEN-LAST:event_jBtImprimirAprazamentoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btGroupMedicoPsiquiatrico;
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarMedicamento;
    private javax.swing.JButton jBtAuditoriaAprazamento;
    public static javax.swing.JButton jBtAuditoriaMedicamento;
    public static javax.swing.JButton jBtBuscarMedicamento;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarMedicamento;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirMedicamento;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtIdPesqEM;
    private javax.swing.JButton jBtImprimirAprazamento;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoMedicamento;
    private javax.swing.JButton jBtPesqDataEM;
    private javax.swing.JButton jBtPesqInternoReqAvulsa;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesqProdutos;
    private javax.swing.JButton jBtPesquisarPrescricao;
    private javax.swing.JButton jBtPesquisarRequisicaoInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSairMedicamento;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarMedicamento;
    public static javax.swing.JTextField jCela;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JComboBox jComboBoxFrequencia;
    public static javax.swing.JComboBox jComboBoxPeridoHorario;
    private javax.swing.JComboBox jComboBoxTipoAprazamento;
    public static javax.swing.JComboBox jComboBoxUnidade;
    public static com.toedter.calendar.JDateChooser jDataAplicacao;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    public static com.toedter.calendar.JDateChooser jDataInicio;
    private com.toedter.calendar.JDateChooser jDataLanc;
    public static com.toedter.calendar.JDateChooser jDataPM;
    public static javax.swing.JTextField jDescricaoProduto;
    public static javax.swing.JTextField jDiasUso;
    public static javax.swing.JFormattedTextField jDoseEmbalagemProduto;
    public static javax.swing.JTextField jDoseRequisitada;
    private javax.swing.JLabel jFotoInternoAbra;
    public static javax.swing.JTextField jHorarioAprazametoFinal;
    public static javax.swing.JTextField jHorarioAprazametoInicial;
    private javax.swing.JTextField jIDPesqEM;
    public static javax.swing.JTextField jIdCodigoPM;
    public static javax.swing.JTextField jIdInternoAbra;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdProduto;
    public static javax.swing.JTextField jIdReq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInternoAbra;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JTextField jPavilhao;
    private javax.swing.JTextField jPesqNomeInternoOdonto;
    public static javax.swing.JTextField jQtdDosesAplicada;
    public static javax.swing.JTextField jQuantidade;
    public static javax.swing.JRadioButton jRadioBtMedico;
    private javax.swing.JRadioButton jRadioBtOdontologia;
    public static javax.swing.JRadioButton jRadioBtPsiquiatrico;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaAprazamentoRemedio;
    private javax.swing.JTable jTabelaItensMedicacao;
    private javax.swing.JTextArea jTextoObservacaoAprazamento;
    public static javax.swing.JTextArea jTextoObservacaoMedicamentos;
    public static javax.swing.JTextArea jTextoPrescricaoMedica;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {

        jTextoPrescricaoMedica.setLineWrap(true);
        jTextoPrescricaoMedica.setWrapStyleWord(true);
        jTextoObservacaoAprazamento.setLineWrap(true);
        jTextoObservacaoAprazamento.setWrapStyleWord(true);
        jTextoObservacaoMedicamentos.setLineWrap(true);
        jTextoObservacaoMedicamentos.setWrapStyleWord(true);

    }

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jIdInternoAbra.setBackground(Color.white);
        jIdReq.setBackground(Color.white);
        jNomeInternoAbra.setBackground(Color.white);
        jPavilhao.setBackground(Color.white);
        jCela.setBackground(Color.white);
        jIdCodigoPM.setBackground(Color.white);
        jDataPM.setBackground(Color.white);
        jTextoPrescricaoMedica.setBackground(Color.white);
        jTextoObservacaoAprazamento.setBackground(Color.white);
        //
        jIdProduto.setBackground(Color.white);
        jDescricaoProduto.setBackground(Color.white);
        jDoseEmbalagemProduto.setBackground(Color.white);
        jDoseRequisitada.setBackground(Color.white);
        jQtdDosesAplicada.setBackground(Color.white);
        jQuantidade.setBackground(Color.white);
        jComboBoxUnidade.setBackground(Color.white);
        jComboBoxFrequencia.setBackground(Color.white);
        jDiasUso.setBackground(Color.white);
        jDataInicio.setBackground(Color.white);
        jDataAplicacao.setBackground(Color.white);
        jComboBoxPeridoHorario.setBackground(Color.white);
        jHorarioAprazametoInicial.setBackground(Color.white);
        jHorarioAprazametoFinal.setBackground(Color.white);
        jTextoObservacaoMedicamentos.setBackground(Color.white);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
    }

    public void Novo() {
        jIdLanc.setText("");
        jStatusLanc.setText("ABERTO");
        jDataLanc.setCalendar(Calendar.getInstance());
        jIdInternoAbra.setText("");
        jIdReq.setText("");
        jComboBoxPeridoHorario.setSelectedItem("Prescrição Médica/Psiquiatrica p/ Interno");
        jNomeInternoAbra.setText("");
        jPavilhao.setText("");
        jCela.setText("");
        jIdCodigoPM.setText("");
        jDataPM.setDate(null);
        jTextoPrescricaoMedica.setText("");
        jTextoObservacaoAprazamento.setText("");
        //
        jDataLanc.setEnabled(true);
        jBtPesquisarRequisicaoInterno.setEnabled(true);
        jComboBoxTipoAprazamento.setEnabled(true);
        if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
            jBtPesqInternoReqAvulsa.setEnabled(!true);
            jBtPesquisarRequisicaoInterno.setEnabled(true);
            jRadioBtMedico.setEnabled(true);
            jRadioBtPsiquiatrico.setEnabled(true);
            jBtPesquisarPrescricao.setEnabled(true);
            jRadioBtOdontologia.setEnabled(!true);
        } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
            jBtPesqInternoReqAvulsa.setEnabled(true);
            jIdReq.setEnabled(true);
            jBtPesquisarRequisicaoInterno.setEnabled(!true);
            jRadioBtMedico.setEnabled(!true);
            jRadioBtPsiquiatrico.setEnabled(!true);
            jRadioBtOdontologia.setEnabled(!true);
            jBtPesquisarPrescricao.setEnabled(!true);
        } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Odontologica")) {
            jBtPesqInternoReqAvulsa.setEnabled(!true);
            jIdReq.setEnabled(true);
            jBtPesquisarRequisicaoInterno.setEnabled(!true);
            jRadioBtMedico.setEnabled(!true);
            jRadioBtPsiquiatrico.setEnabled(!true);
            jRadioBtOdontologia.setEnabled(true);
            jBtPesquisarPrescricao.setEnabled(true);
        }
        jTextoObservacaoAprazamento.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoriaAprazamento.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        // TELA DE MEDICAMENTOS
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setDate(null);
        jDataAplicacao.setDate(null);
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoInicial.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(!true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
    }

    public void Alterar() {
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoriaAprazamento.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //       
        jDataLanc.setEnabled(true);
        jBtPesquisarRequisicaoInterno.setEnabled(true);
        jComboBoxTipoAprazamento.setEnabled(true);
        if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno")) {
            jBtPesqInternoReqAvulsa.setEnabled(!true);
            jBtPesquisarRequisicaoInterno.setEnabled(true);
            jRadioBtMedico.setEnabled(true);
            jRadioBtPsiquiatrico.setEnabled(true);
            jBtPesquisarPrescricao.setEnabled(true);
        } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
            jBtPesqInternoReqAvulsa.setEnabled(true);
            jIdReq.setEnabled(true);
            jBtPesquisarRequisicaoInterno.setEnabled(!true);
            jRadioBtMedico.setEnabled(!true);
            jRadioBtPsiquiatrico.setEnabled(!true);
            jBtPesquisarPrescricao.setEnabled(!true);
        }
        jTextoObservacaoAprazamento.setEnabled(true);
        // TELA DE MEDICAMENTOS
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setDate(null);
        jDataAplicacao.setDate(null);
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoInicial.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(!true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
    }

    public void Excluir() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jDataLanc.setDate(null);
        jIdInternoAbra.setText("");
        jIdReq.setText("");
        jNomeInternoAbra.setText("");
        jPavilhao.setText("");
        jCela.setText("");
        jIdCodigoPM.setText("");
        jDataPM.setDate(null);
        jTextoPrescricaoMedica.setText("");
        jTextoObservacaoAprazamento.setText("");
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        // TELA DE MEDICAMENTOS
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setDate(null);
        jDataAplicacao.setDate(null);
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoInicial.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(!true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
    }

    public void Salvar() {
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jIdReq.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        // TELA DE MEDICAMENTOS   
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            jStatusLanc.setText("");
            jDataLanc.setDate(null);
            jIdInternoAbra.setText("");
            jIdReq.setText("");
            jNomeInternoAbra.setText("");
            jPavilhao.setText("");
            jCela.setText("");
            jIdCodigoPM.setText("");
            jDataPM.setDate(null);
            jTextoPrescricaoMedica.setText("");
            jTextoObservacaoAprazamento.setText("");
            //       
            jDataLanc.setEnabled(!true);
            jBtPesquisarRequisicaoInterno.setEnabled(!true);
            jIdReq.setEnabled(!true);
            jRadioBtMedico.setEnabled(!true);
            jRadioBtPsiquiatrico.setEnabled(!true);
            jBtPesquisarPrescricao.setEnabled(!true);
            jIdCodigoPM.setEnabled(!true);
            jDataPM.setEnabled(!true);
            jTextoPrescricaoMedica.setEnabled(!true);
            jTextoObservacaoAprazamento.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoriaAprazamento.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            // TELA DE MEDICAMENTOS
            jIdProduto.setText("");
            jDescricaoProduto.setText("");
            jDoseEmbalagemProduto.setText("");
            jDoseRequisitada.setText("");
            jQtdDosesAplicada.setText("");
            jQuantidade.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jComboBoxFrequencia.setSelectedItem(null);
            jDiasUso.setText("");
            jDataInicio.setDate(null);
            jDataAplicacao.setDate(null);
            jComboBoxPeridoHorario.setSelectedItem(null);
            jHorarioAprazametoInicial.setText("00:00");
            jHorarioAprazametoFinal.setText("00:00");
            jTextoObservacaoMedicamentos.setText("");
            //      
            jBtPesqProdutos.setEnabled(!true);
            jDescricaoProduto.setEnabled(!true);
            jQuantidade.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jComboBoxFrequencia.setEnabled(!true);
            jDiasUso.setEnabled(!true);
            jDataInicio.setEnabled(!true);
            jDataAplicacao.setEnabled(!true);
            jComboBoxPeridoHorario.setEnabled(!true);
            jHorarioAprazametoInicial.setEnabled(!true);
            jHorarioAprazametoFinal.setEnabled(!true);
            jTextoObservacaoMedicamentos.setEnabled(!true);
            //
            jBtNovoMedicamento.setEnabled(!true);
            jBtAlterarMedicamento.setEnabled(!true);
            jBtExcluirMedicamento.setEnabled(!true);
            jBtSalvarMedicamento.setEnabled(!true);
            jBtCancelarMedicamento.setEnabled(!true);
            jBtAuditoriaMedicamento.setEnabled(!true);
            jBtBuscarMedicamento.setEnabled(!true);
            jBtAuditoriaMedicamento.setEnabled(!true);
        } else {
            //       
            jDataLanc.setEnabled(!true);
            jBtPesquisarRequisicaoInterno.setEnabled(!true);
            jRadioBtMedico.setEnabled(!true);
            jRadioBtPsiquiatrico.setEnabled(!true);
            jBtPesquisarPrescricao.setEnabled(!true);
            jTextoObservacaoAprazamento.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoriaAprazamento.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtPesquisarPrescricao.setEnabled(!true);
            // TELA DE MEDICAMENTOS
            jIdProduto.setText("");
            jDescricaoProduto.setText("");
            jDoseEmbalagemProduto.setText("");
            jDoseRequisitada.setText("");
            jQtdDosesAplicada.setText("");
            jQuantidade.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jComboBoxFrequencia.setSelectedItem(null);
            jDiasUso.setText("");
            jDataInicio.setDate(null);
            jDataAplicacao.setDate(null);
            jComboBoxPeridoHorario.setSelectedItem(null);
            jHorarioAprazametoInicial.setText("00:00");
            jHorarioAprazametoFinal.setText("00:00");
            jTextoObservacaoMedicamentos.setText("");
            //      
            jBtPesqProdutos.setEnabled(!true);
            jDescricaoProduto.setEnabled(!true);
            jQuantidade.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jComboBoxFrequencia.setEnabled(!true);
            jDiasUso.setEnabled(!true);
            jDataInicio.setEnabled(!true);
            jDataAplicacao.setEnabled(!true);
            jComboBoxPeridoHorario.setEnabled(!true);
            jHorarioAprazametoInicial.setEnabled(!true);
            jHorarioAprazametoFinal.setEnabled(!true);
            jTextoObservacaoMedicamentos.setEnabled(!true);
            //
            jBtNovoMedicamento.setEnabled(true);
            jBtAlterarMedicamento.setEnabled(!true);
            jBtExcluirMedicamento.setEnabled(!true);
            jBtSalvarMedicamento.setEnabled(!true);
            jBtCancelarMedicamento.setEnabled(!true);
            jBtAuditoriaMedicamento.setEnabled(!true);
            jBtBuscarMedicamento.setEnabled(!true);
            jBtAuditoriaMedicamento.setEnabled(!true);
        }
    }

    public void Finalizar() {
        statusReqAndamento = "Concluído";
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusAtend = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse aprazamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZA o APRAZAMENTO selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objApraza.setStatusLanc(statusAtend);
            objApraza.setIdLanc(Integer.parseInt(jIdLanc.getText()));
            control.finalizarAprazamentoMedico(objApraza);
            if (jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Médica/Psiquiatrica para Interno") || jComboBoxTipoAprazamento.getSelectedItem().equals("Prescrição Odontologica")) {
                // ATUALIZA O STATUS DA REQUISIÇÃO SOBRE O APRAZAMENTO COMO "Concluído"
                objApraza.setStatusReqAndamento(statusReqAndamento);
                objApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                control.atualizarRequisicaoMedicamentosInterno(objApraza);
                jStatusLanc.setText(statusAtend);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            } else if (jComboBoxTipoAprazamento.getSelectedItem().equals("Avulso para Interno")) {
                // ATUALIZA O STATUS DA REQUISIÇÃO PRODUTOS AVULSA SOBRE O APRAZAMENTO COMO "Concluido"
                objApraza.setStatusReqAndamento(statusReqAndamento);
                objApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                control.atualizarRequisicaoMedicamentosAvulsa(objApraza);
                jStatusLanc.setText(statusAtend);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            }
            //
            jDataLanc.setEnabled(!true);
            jBtPesquisarRequisicaoInterno.setEnabled(!true);
            jRadioBtMedico.setEnabled(!true);
            jRadioBtPsiquiatrico.setEnabled(!true);
            jBtPesquisarPrescricao.setEnabled(!true);
            jTextoObservacaoAprazamento.setEnabled(!true);
            //
            jDescricaoProduto.setEnabled(!true);
            jQuantidade.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jComboBoxFrequencia.setEnabled(!true);
            jDataInicio.setEnabled(!true);
            jDataAplicacao.setEnabled(!true);
            jComboBoxPeridoHorario.setEnabled(!true);
            jHorarioAprazametoInicial.setEnabled(!true);
            jHorarioAprazametoFinal.setEnabled(!true);
            jDiasUso.setEnabled(!true);
            jTextoObservacaoMedicamentos.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoMedicamento.setEnabled(true);
            jBtAlterarMedicamento.setEnabled(!true);
            jBtExcluirMedicamento.setEnabled(!true);
            jBtSalvarMedicamento.setEnabled(!true);
            jBtCancelarMedicamento.setEnabled(!true);
            jBtBuscarMedicamento.setEnabled(!true);
            jBtAuditoriaMedicamento.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM APRAZAMENTO_MEDICACAO");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdLanc"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
    }

    public void NovoMedicamento() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setCalendar(Calendar.getInstance());
        jDataAplicacao.setCalendar(Calendar.getInstance());
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(true);
        jDescricaoProduto.setEnabled(true);
        jQuantidade.setEnabled(true);
        jComboBoxUnidade.setEnabled(true);
        jComboBoxFrequencia.setEnabled(true);
        jDiasUso.setEnabled(true);
        jDataInicio.setEnabled(true);
        jDataAplicacao.setEnabled(true);
        jComboBoxPeridoHorario.setEnabled(true);
        jHorarioAprazametoInicial.setEnabled(true);
        jHorarioAprazametoFinal.setEnabled(true);
        jTextoObservacaoMedicamentos.setEnabled(true);
        //
        jBtNovoMedicamento.setEnabled(!true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(true);
        jBtCancelarMedicamento.setEnabled(true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
    }

    public void AlterarMedicamento() {
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(true);
        jComboBoxFrequencia.setEnabled(true);
        jDiasUso.setEnabled(true);
        jDataInicio.setEnabled(true);
        jDataAplicacao.setEnabled(true);
        jComboBoxPeridoHorario.setEnabled(true);
        jHorarioAprazametoInicial.setEnabled(true);
        jHorarioAprazametoFinal.setEnabled(true);
        jTextoObservacaoMedicamentos.setEnabled(true);
        //
        jBtNovoMedicamento.setEnabled(!true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(true);
        jBtCancelarMedicamento.setEnabled(true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
    }

    public void ExcluirMedicamento() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setDate(null);
        jDataAplicacao.setDate(null);
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoInicial.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtPesquisarPrescricao.setEnabled(!true);
    }

    public void SalvarMedicamento() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setDate(null);
        jDataAplicacao.setDate(null);
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoInicial.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtPesquisarPrescricao.setEnabled(!true);
    }

    public void CancelarMedicamento() {
        jIdProduto.setText("");
        jDescricaoProduto.setText("");
        jDoseEmbalagemProduto.setText("");
        jDoseRequisitada.setText("");
        jQtdDosesAplicada.setText("");
        jQuantidade.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jComboBoxFrequencia.setSelectedItem(null);
        jDiasUso.setText("");
        jDataInicio.setDate(null);
        jDataAplicacao.setDate(null);
        jComboBoxPeridoHorario.setSelectedItem(null);
        jHorarioAprazametoInicial.setText("00:00");
        jHorarioAprazametoFinal.setText("00:00");
        jTextoObservacaoMedicamentos.setText("");
        //      
        jBtPesqProdutos.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jComboBoxFrequencia.setEnabled(!true);
        jDiasUso.setEnabled(!true);
        jDataInicio.setEnabled(!true);
        jDataAplicacao.setEnabled(!true);
        jComboBoxPeridoHorario.setEnabled(!true);
        jHorarioAprazametoInicial.setEnabled(!true);
        jHorarioAprazametoFinal.setEnabled(!true);
        jTextoObservacaoMedicamentos.setEnabled(!true);
        //
        jBtNovoMedicamento.setEnabled(true);
        jBtAlterarMedicamento.setEnabled(!true);
        jBtExcluirMedicamento.setEnabled(!true);
        jBtSalvarMedicamento.setEnabled(!true);
        jBtCancelarMedicamento.setEnabled(!true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        jBtBuscarMedicamento.setEnabled(true);
        jBtAuditoriaMedicamento.setEnabled(!true);
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarRequisicaoInterno.setEnabled(!true);
        jRadioBtMedico.setEnabled(!true);
        jRadioBtPsiquiatrico.setEnabled(!true);
        jBtPesquisarPrescricao.setEnabled(!true);
        jTextoObservacaoAprazamento.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaAprazamento.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtPesquisarPrescricao.setEnabled(!true);
    }

    // VERIFICAR SE A REQUISIÇÃO AVULSA FOI FINALIZADA E EM ADAMENTO OU CONCLUÍDA
    public void verificarRequisicaoAvulsa() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM REQUISICAO_AVULSA_PRODUTOS_ENF WHERE IdReq='" + jIdReq.getText() + "'");
            conecta.rs.first();
            statusFinaliza = conecta.rs.getString("StatusReq");
            statusAtendimento = conecta.rs.getString("StatusReqAtend");
            tipoRequisicao = conecta.rs.getInt("TipoReq");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void verificarItensRequisitados() {
        statusReqAndamento = "Não Atendido";
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_APRAZAMENTO_MEDICACAO WHERE IdLanc='" + objApraza.getIdLanc() + "'");
            conecta.rs.first();
            codItensAprazaMed = conecta.rs.getString("IdLanc");
            if (jIdLanc.getText().equals(codItensAprazaMed)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os itens relacionados a esse registro.");
            }
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objApraza.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                control.excluirAprazamentoMedico(objApraza);
                // ATUALIZA O STATUS DA REQUISIÇÃO SOBRE O APRAZAMENTO COMO "Em Andamento"
                objApraza.setStatusReqAndamento(statusReqAndamento);
                objApraza.setIdReq(Integer.valueOf(jIdReq.getText()));
                control.atualizarRequisicaoMedicamentosInterno(objApraza);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void pegarSaldoDoses(int idProd, int reqMed) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF WHERE IdProd='" + idProd + "'AND IdReq='" + reqMed + "'");
            conecta.rs.first();
            codItem = conecta.rs.getInt("IdItem");
            codProd = conecta.rs.getInt("IdProd");
            saldoEstoque = conecta.rs.getInt("QtdDosesAT");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void pegarSaldoDosesAvulsas(int idProd, int reqMed) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_REQUISICAO_AVULSA_PRODUTOS_ENF WHERE IdProd='" + idProd + "'AND IdReq='" + reqMed + "'");
            conecta.rs.first();
            codItem = conecta.rs.getInt("IdItem");
            codProd = conecta.rs.getInt("IdProd");
            saldoEstoque = conecta.rs.getInt("QtdDosesAT");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    //PESQUISAR PRODUTOS DIGITANDO A DESCRIÇÃO.
    public void preencherComboBoxProdutoNovo() {
        conecta.abrirConexao();
        //  jDescricaoProduto.removeAllItems();
        try {
            conecta.executaSQL("SELECT * FROM PRODUTOS_AC "
                    + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
                    + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                    + "INNER JOIN ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF "
                    + "ON PRODUTOS_AC.IdProd=ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF.IdProd "
                    + "WHERE ITENS_REQUISICAO_PRODUTOS_INTERNOS_ENF.IdReq='" + jIdReq.getText() + "'AND PRODUTOS_AC.Modulo='" + modulo + "'ORDER BY PRODUTOS_AC.DescricaoProd");
            conecta.rs.first();
            do {
                //        jDescricaoProduto.addItem(conecta.rs.getString("DescricaoProd"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void preencherTabelaAprazamento(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome Completo do Interno", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                //
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAprazamentoRemedio.setModel(modelo);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(4).setPreferredWidth(330);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAprazamentoRemedio.getTableHeader().setReorderingAllowed(false);
        jTabelaAprazamentoRemedio.setAutoResizeMode(jTabelaAprazamentoRemedio.AUTO_RESIZE_OFF);
        jTabelaAprazamentoRemedio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAprazamento();
        conecta.desconecta();
    }

    public void alinharCamposTabelaAprazamento() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItensMedico(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Descrição Produto", "Data Inicio", "Dt. Aplicação", "Dose", "H.Inicio", "H.Final", "D.Uso"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataInicioMed = conecta.rs.getString("DataInicio");
                String diai = dataInicioMed.substring(8, 10);
                String mesi = dataInicioMed.substring(5, 7);
                String anoi = dataInicioMed.substring(0, 4);
                dataInicioMed = diai + "/" + mesi + "/" + anoi;
                //
                dataFinalMed = conecta.rs.getString("DataTermino");
                String diat = dataFinalMed.substring(8, 10);
                String mest = dataFinalMed.substring(5, 7);
                String anot = dataFinalMed.substring(0, 4);
                dataFinalMed = diat + "/" + mest + "/" + anot;
                //
//                jtotalItens.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela 
                //
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdProd"), conecta.rs.getString("DescricaoProd"), dataInicioMed, dataFinalMed, conecta.rs.getInt("QtdItemAP"), conecta.rs.getString("HorarioInicial"), conecta.rs.getString("HorarioFinal"), conecta.rs.getString("DiasUso")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensMedicacao.setModel(modelo);
        jTabelaItensMedicacao.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaItensMedicacao.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaItensMedicacao.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensMedicacao.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaItensMedicacao.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(6).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(6).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(7).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(7).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(8).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(8).setResizable(false);
        jTabelaItensMedicacao.getTableHeader().setReorderingAllowed(false);
        jTabelaItensMedicacao.setAutoResizeMode(jTabelaItensMedicacao.AUTO_RESIZE_OFF);
        jTabelaItensMedicacao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItensMiedicacao();
        conecta.desconecta();
    }

    public void alinharCamposTabelaItensMiedicacao() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensMedicacao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(5).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(6).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(7).setCellRenderer(centralizado);
        jTabelaItensMedicacao.getColumnModel().getColumn(8).setCellRenderer(centralizado);
    }

    public void limparTabelaAprazamento() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome Completo do Interno", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAprazamentoRemedio.setModel(modelo);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(4).setPreferredWidth(330);
        jTabelaAprazamentoRemedio.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAprazamentoRemedio.getTableHeader().setReorderingAllowed(false);
        jTabelaAprazamentoRemedio.setAutoResizeMode(jTabelaAprazamentoRemedio.AUTO_RESIZE_OFF);
        jTabelaAprazamentoRemedio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void limparTabelaItensMedicamentos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Descrição Produto", "Data Inicio", "Dt. Aplicação", "Dose", "H.Inicio", "H.Final", "D.Uso"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensMedicacao.setModel(modelo);
        jTabelaItensMedicacao.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaItensMedicacao.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaItensMedicacao.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensMedicacao.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaItensMedicacao.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(6).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(6).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(7).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(7).setResizable(false);
        jTabelaItensMedicacao.getColumnModel().getColumn(8).setPreferredWidth(50);
        jTabelaItensMedicacao.getColumnModel().getColumn(8).setResizable(false);
        jTabelaItensMedicacao.getTableHeader().setReorderingAllowed(false);
        jTabelaItensMedicacao.setAutoResizeMode(jTabelaItensMedicacao.AUTO_RESIZE_OFF);
        jTabelaItensMedicacao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserENF = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserENF + "'");
            conecta.rs.first();
            codigoUserGroupENF = conecta.rs.getInt("IdUsuario");
            codigoGrupoENF = conecta.rs.getInt("IdGrupo");
            nomeGrupoENF = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserENF + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoENF = conecta.rs.getInt("IdUsuario");
            codAbrirENF = conecta.rs.getInt("Abrir");
            codIncluirENF = conecta.rs.getInt("Incluir");
            codAlterarENF = conecta.rs.getInt("Alterar");
            codExcluirENF = conecta.rs.getInt("Excluir");
            codGravarENF = conecta.rs.getInt("Gravar");
            codConsultarENF = conecta.rs.getInt("Consultar");
            nomeTelaENF = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
