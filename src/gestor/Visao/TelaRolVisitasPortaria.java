/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleItensListaInternos;
import gestor.Controle.ControleItensRolVisitas;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleRolVisitas;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.LimiteDigitosAlfa;
import Utilitarios.ModeloTabela;
import gestor.Modelo.ItensListaInternos;
import gestor.Modelo.ItensRolVisitas;
import gestor.Modelo.LogSistema;
import gestor.Modelo.RolVisitas;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaRolVisitasPortaria extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    RolVisitas objRol = new RolVisitas();
    ControleRolVisitas control = new ControleRolVisitas();
    ItensRolVisitas objItenRol = new ItensRolVisitas();
    ControleItensRolVisitas controle = new ControleItensRolVisitas();
    //
    ItensListaInternos objItensLista = new ItensListaInternos();
    ControleItensListaInternos controleLista = new ControleItensListaInternos();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Serviço Social:Rol de Visitas:Manutenção";
    String nomeModuloTela2 = "Serviço Social:Rol de Visitas:Visitas";
    String nomeModuloTela3 = "Serviço Social:Rol de Visitas:Internas";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    public static String idItem; // item do Rol
    String dataRol;
    String caminho; // Caminho da foto do interno
    String camFotoVisita; // Caminho da foto da visita
    String dataInicio; // Data formatada (dd/MM/yyyy) - Brasil na Tabela
    String codRol; // Usado para Verificar o Rol antes de excluir
    String dataInicial;
    String dataFinal;
    String statusRol = "ABERTO";
    String codInternoCrc; // Código do interno para verificar se já foi cadastrado.
    String dataValidade;
    int count = 0;
    //
    String nomePavilhao = null; // IRÁ MOSTRAR O INTERNO MESMO QUE NÃO ESTEJA NO LOCAL
    String codigoInternoLocal;
    String idRol;

    /**
     * Creates new form RolVisitas
     */
    public TelaRolVisitasPortaria() {
        initComponents();
        formatarCampos();
        corCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel30 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jIDPesqRol = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel21 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jBtPesqIDRol = new javax.swing.JButton();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        jNomeVisitaInterna = new javax.swing.JTextField();
        jBtPesqNomeVisitaInterna = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaPesquisaRol = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jIDRol = new javax.swing.JTextField();
        jDataRol = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jStatusRol = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jIDInterno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jNomeInterno = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jMaeInterno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPaiInterno = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jDataNascInterno = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jDataEntradaInterno = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPavilhao = new javax.swing.JTextField();
        jCela = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jRegime = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jSituacao = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jObservacaoPortaria = new javax.swing.JTextArea();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObsRol = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jIDVisita = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jNomeVisita = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jParentescoVisita = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jDataCadaVisita = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jDataInicio = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jDataValiAntecedente = new com.toedter.calendar.JDateChooser();
        jDataNascVisita = new com.toedter.calendar.JDateChooser();
        jCombBoxStatusVisita = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaVisita = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jIdInternoLista = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jNomeInterna = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jSituacaoInternoLista = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jComboBoxStatusInterno = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jDataValidade = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaItensInternas = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jFotoInterno = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        FotoVisita = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jFotoInternoLista = new javax.swing.JLabel();

        jLabel30.setText("jLabel30");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Rol de Visitas Internos/Internas :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("ID Rol:");

        jIDPesqRol.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqRol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDPesqRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIDPesqRolActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jBtPesqIDRol.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqIDRol.setContentAreaFilled(false);
        jBtPesqIDRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIDRolActionPerformed(evt);
            }
        });

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome Interno:");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Nome Visita Int:");

        jNomeVisitaInterna.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeVisitaInterna.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeVisitaInterna.setContentAreaFilled(false);
        jBtPesqNomeVisitaInterna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeVisitaInternaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jIDPesqRol, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqIDRol, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jNomeVisitaInterna, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqNomeVisitaInterna, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtPesqData, jBtPesqNomeInterno});

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jNomeVisitaInterna, jPesqNomeInterno});

        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqIDRol)
                    .addComponent(jIDPesqRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqData)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqNomeVisitaInterna)
                    .addComponent(jNomeVisitaInterna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtPesqData, jBtPesqNomeInterno});

        jTabelaPesquisaRol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPesquisaRol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Nome do Interno", "Observação"
            }
        ));
        jTabelaPesquisaRol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaPesquisaRolMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaPesquisaRol);
        if (jTabelaPesquisaRol.getColumnModel().getColumnCount() > 0) {
            jTabelaPesquisaRol.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaPesquisaRol.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaPesquisaRol.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaPesquisaRol.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaPesquisaRol.getColumnModel().getColumn(2).setMinWidth(220);
            jTabelaPesquisaRol.getColumnModel().getColumn(2).setMaxWidth(220);
            jTabelaPesquisaRol.getColumnModel().getColumn(3).setMinWidth(220);
            jTabelaPesquisaRol.getColumnModel().getColumn(3).setMaxWidth(220);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Rol", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("ID Rol:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Rol:");

        jIDRol.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDRol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDRol.setEnabled(false);

        jDataRol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataRol.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Status:");

        jStatusRol.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusRol.setForeground(new java.awt.Color(255, 0, 51));
        jStatusRol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusRol.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jIDRol, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jStatusRol, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataRol, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jIDRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel12)
                    .addComponent(jStatusRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jIDInterno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDInterno.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome Completo do Interno");

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInterno.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Mãe:");

        jMaeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMaeInterno.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Pai:");

        jPaiInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPaiInterno.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Dt. Nasc:");

        jDataNascInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataNascInterno.setToolTipText("Data Nascimento");
        jDataNascInterno.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("D.E.:");
        jLabel9.setToolTipText("Data Entrada");

        jDataEntradaInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntradaInterno.setToolTipText("Data Entrada");
        jDataEntradaInterno.setEnabled(false);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Pavilhão:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Cela:");

        jPavilhao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPavilhao.setEnabled(false);

        jCela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCela.setEnabled(false);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Regime:");

        jRegime.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRegime.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Situação:");

        jSituacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSituacao.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jIDInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32)
                            .addComponent(jLabel28))))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPaiInterno)
                    .addComponent(jNomeInterno)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jMaeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jDataNascInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataEntradaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRegime))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCela))
                    .addComponent(jSituacao))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jMaeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jPaiInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRegime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(jDataEntradaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jDataNascInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(jCela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.setForeground(new java.awt.Color(255, 0, 0));
        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jObservacaoPortaria.setColumns(20);
        jObservacaoPortaria.setRows(5);
        jObservacaoPortaria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacaoPortaria.setEnabled(false);
        jScrollPane5.setViewportView(jObservacaoPortaria);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Portaria", jPanel18);

        jObsRol.setColumns(20);
        jObsRol.setRows(5);
        jObsRol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObsRol.setEnabled(false);
        jScrollPane1.setViewportView(jObsRol);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );

        jTabbedPane2.addTab("Serviço Social", jPanel19);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Visita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Código");

        jIDVisita.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDVisita.setToolTipText("");
        jIDVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDVisita.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nome Completo do Visita");

        jNomeVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisita.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Parentesco:");

        jParentescoVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jParentescoVisita.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Status:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Dt Nasc.");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Data Cadastro:");

        jDataCadaVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataCadaVisita.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Data Inicio:");

        jDataInicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInicio.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Validade Ant:");

        jDataValiAntecedente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValiAntecedente.setEnabled(false);

        jDataNascVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataNascVisita.setEnabled(false);

        jCombBoxStatusVisita.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCombBoxStatusVisita.setForeground(new java.awt.Color(255, 0, 0));
        jCombBoxStatusVisita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jCombBoxStatusVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCombBoxStatusVisita.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel11)
                        .addGap(143, 143, 143))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDataNascVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(72, 72, 72)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDataValiAntecedente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDataCadaVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jParentescoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCombBoxStatusVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jIDVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCombBoxStatusVisita, jDataCadaVisita, jDataValiAntecedente});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIDVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13)
                    .addComponent(jParentescoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jCombBoxStatusVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(jDataNascVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jDataCadaVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18)
                    .addComponent(jDataValiAntecedente, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCombBoxStatusVisita, jDataCadaVisita, jDataValiAntecedente});

        jTabelaVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVisita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome da Visita", "Data Inicio", "Parentesco", "Status"
            }
        ));
        jTabelaVisita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVisitaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaVisita);
        if (jTabelaVisita.getColumnModel().getColumnCount() > 0) {
            jTabelaVisita.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaVisita.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaVisita.getColumnModel().getColumn(1).setMinWidth(210);
            jTabelaVisita.getColumnModel().getColumn(1).setMaxWidth(210);
            jTabelaVisita.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaVisita.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaVisita.getColumnModel().getColumn(3).setMinWidth(120);
            jTabelaVisita.getColumnModel().getColumn(3).setMaxWidth(120);
            jTabelaVisita.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaVisita.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Visitas", jPanel6);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Código");

        jIdInternoLista.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoLista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoLista.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Nome Completo da Interna");

        jNomeInterna.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInterna.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Situação");

        jSituacaoInternoLista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSituacaoInternoLista.setEnabled(false);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("Status");

        jComboBoxStatusInterno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatusInterno.setForeground(new java.awt.Color(204, 0, 102));
        jComboBoxStatusInterno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jComboBoxStatusInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatusInterno.setEnabled(false);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("Data Validade");

        jDataValidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValidade.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jIdInternoLista, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jComboBoxStatusInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSituacaoInternoLista)
                            .addComponent(jNomeInterna, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdInternoLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxStatusInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addGap(13, 13, 13)
                .addComponent(jNomeInterna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSituacaoInternoLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabelaItensInternas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensInternas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seq.", "Código", "Nome do Interno", "Data Validade", "Status"
            }
        ));
        jTabelaItensInternas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensInternasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabelaItensInternas);
        if (jTabelaItensInternas.getColumnModel().getColumnCount() > 0) {
            jTabelaItensInternas.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaItensInternas.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaItensInternas.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaItensInternas.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaItensInternas.getColumnModel().getColumn(2).setMinWidth(280);
            jTabelaItensInternas.getColumnModel().getColumn(2).setMaxWidth(280);
            jTabelaItensInternas.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaItensInternas.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaItensInternas.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaItensInternas.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Internos", jPanel11);

        jPanel17.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInterno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Visita Externa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FotoVisita, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoVisita, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Visita Interna", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jFotoInternoLista, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(350, 20, 653, 495);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqIDRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIDRolActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqRol.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
            jIDRol.requestFocus();
        } else {
            pesquisarLancCod("SELECT * FROM ROLVISITAS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdRol='" + jIDPesqRol.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIDRolActionPerformed

    private void jTabelaPesquisaRolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaPesquisaRolMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            idRol = "" + jTabelaPesquisaRol.getValueAt(jTabelaPesquisaRol.getSelectedRow(), 0);
            jIDPesqRol.setText(idRol);
            //
            jDataRol.setDate(jDataRol.getDate());
            //
            jIDVisita.setText("");
            jNomeVisita.setText("");
            jParentescoVisita.setText("");
            jCombBoxStatusVisita.setSelectedItem(null);
            jDataNascVisita.setDate(null);
            jDataCadaVisita.setDate(null);
            FotoVisita.setIcon(null);
            jDataInicio.setDate(null);
            jDataValiAntecedente.setDate(null);
            limparTabelaVisitas();
            jIdInternoLista.setText("");
            jComboBoxStatusInterno.setSelectedItem("Ativo");
            jNomeInterna.setText("");
            jSituacaoInternoLista.setText("");
            jFotoInternoLista.setIcon(null);
            jDataValidade.setDate(null);
            //  VERIFICAR SE O INTERNO AINDA TEM LOCALIZAÇÃO.
            verificarInternoLocalizacao();
            if (nomePavilhao != null) {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM ROLVISITAS "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN DADOSPENAISINTERNOS "
                            + "ON DADOSPENAISINTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN ITENSLOCACAOINTERNO "
                            + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                            + "INNER JOIN CELAS "
                            + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                            + "INNER JOIN PAVILHAO "
                            + "ON CELAS.IdPav=PAVILHAO.IdPav "
                            + "WHERE IdRol='" + idRol + "'");
                    conecta.rs.first();
                    jIDRol.setText(String.valueOf(conecta.rs.getInt("IdRol")));
                    jStatusRol.setText(conecta.rs.getString("StatusRol"));
                    jDataRol.setDate(conecta.rs.getDate("DataRol"));
                    jIDInterno.setText(conecta.rs.getString("IdInternoCrc"));
                    jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc"));
                    jMaeInterno.setText(conecta.rs.getString("MaeInternoCrc"));
                    jPaiInterno.setText(conecta.rs.getString("PaiInternoCrc"));
                    // Capturando foto
                    caminho = conecta.rs.getString("FotoInternoCrc");
                    if (caminho != null) {
                        javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                        jFotoInterno.setIcon(i);
                        jFotoInterno.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_DEFAULT)));
                    }
                    // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                    byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrente"));
                    if (imgBytes != null) {
                        ImageIcon pic = null;
                        pic = new ImageIcon(imgBytes);
                        Image scaled = pic.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(scaled);
                        jFotoInterno.setIcon(icon);
                    }
                    jDataNascInterno.setDate(conecta.rs.getDate("DataNasciCrc"));
                    jDataEntradaInterno.setDate(conecta.rs.getDate("DataEntrada"));
                    jObsRol.setText(conecta.rs.getString("ObsRol"));
                    jObservacaoPortaria.setText(conecta.rs.getString("ObsPortaria"));
                    jRegime.setText(conecta.rs.getString("Regime"));
                    jPavilhao.setText(conecta.rs.getString("DescricaoPav"));
                    jCela.setText(conecta.rs.getString("EndCelaPav"));
                    jSituacao.setText(conecta.rs.getString("SituacaoCrc"));
                    conecta.desconecta();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa por DATA " + e);
                }
                preencherTabelaItens("SELECT * FROM ITENSROL "
                        + "INNER JOIN VISITASINTERNO "
                        + "ON ITENSROL.IdVisita=VISITASINTERNO.IdVisita "
                        + "WHERE IdRol='" + idRol + "'");
                preencherTabelaInternas("SELECT * FROM ITENS_LISTA_ROL "
                        + "INNER JOIN ROLVISITAS "
                        + "ON ITENS_LISTA_ROL.IdRol=ROLVISITAS.IdRol "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_LISTA_ROL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE ITENS_LISTA_ROL.IdRol='" + jIDRol.getText() + "'");
            } else {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM ROLVISITAS "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN DADOSPENAISINTERNOS "
                            + "ON DADOSPENAISINTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE IdRol='" + idRol + "'");
                    conecta.rs.first();
                    jIDRol.setText(String.valueOf(conecta.rs.getInt("IdRol")));
                    jStatusRol.setText(conecta.rs.getString("StatusRol"));
                    jDataRol.setDate(conecta.rs.getDate("DataRol"));
                    jIDInterno.setText(conecta.rs.getString("IdInternoCrc"));
                    jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc"));
                    jMaeInterno.setText(conecta.rs.getString("MaeInternoCrc"));
                    jPaiInterno.setText(conecta.rs.getString("PaiInternoCrc"));
                    // Capturando foto
                    caminho = conecta.rs.getString("FotoInternoCrc");
                    if (caminho != null) {
                        javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                        jFotoInterno.setIcon(i);
                        jFotoInterno.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_DEFAULT)));
                    }
                    // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                    byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrente"));
                    if (imgBytes != null) {
                        ImageIcon pic = null;
                        pic = new ImageIcon(imgBytes);
                        Image scaled = pic.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(scaled);
                        jFotoInterno.setIcon(icon);
                    }
                    //
                    jDataNascInterno.setDate(conecta.rs.getDate("DataNasciCrc"));
                    jDataEntradaInterno.setDate(conecta.rs.getDate("DataEntrada"));
                    jObsRol.setText(conecta.rs.getString("ObsRol"));
                    jObservacaoPortaria.setText(conecta.rs.getString("ObsPortaria"));
                    jRegime.setText(conecta.rs.getString("Regime"));
                    jPavilhao.setText("");
                    jCela.setText("");
                    jSituacao.setText(conecta.rs.getString("SituacaoCrc"));
                    conecta.desconecta();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa por DATA " + e);
                }
                preencherTabelaItens("SELECT * FROM ITENSROL "
                        + "INNER JOIN VISITASINTERNO "
                        + "ON ITENSROL.IdVisita=VISITASINTERNO.IdVisita "
                        + "WHERE IdRol='" + idRol + "'");
                preencherTabelaInternas("SELECT * FROM ITENS_LISTA_ROL "
                        + "INNER JOIN ROLVISITAS "
                        + "ON ITENS_LISTA_ROL.IdRol=ROLVISITAS.IdRol "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_LISTA_ROL.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE ITENS_LISTA_ROL.IdRol='" + jIDRol.getText() + "'");
            }
        }
    }//GEN-LAST:event_jTabelaPesquisaRolMouseClicked

    private void jTabelaVisitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVisitaMouseClicked
        // TODO add your handling code here:      
        if (flag == 1) {
            String idVisita = "" + jTabelaVisita.getValueAt(jTabelaVisita.getSelectedRow(), 0);
            jIDVisita.setText(idVisita);
            String nomeVisita = "" + jTabelaVisita.getValueAt(jTabelaVisita.getSelectedRow(), 1);
            jNomeVisita.setText(nomeVisita);
            idItem = "" + jTabelaVisita.getValueAt(jTabelaVisita.getSelectedRow(), 2);
            // Habilitar os botões
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT "
                        + "ITENSROL.IdRol, "
                        + "ITENSROL.IdVisita, "
                        + "VISITASINTERNO.NomeVisita, "
                        + "ITENSROL.IdItemRol, "
                        + "ITENSROL.ParentescoVisita, "
                        + "VISITASINTERNO.StatusVisita, "
                        + "VISITASINTERNO.DataNasc, "
                        + "VISITASINTERNO.ImagemVisita, "
                        + "VISITASINTERNO.ImagemFrenteVI, "
                        + "VISITASINTERNO.DataCadVisita, "
                        + "ITENSROL.DataInicio, "
                        + "VISITASINTERNO.DataValiAnte "
                        + "FROM ITENSROL "
                        + "INNER JOIN VISITASINTERNO "
                        + "ON ITENSROL.IdVisita=VISITASINTERNO.IdVisita "
                        + "WHERE VISITASINTERNO.IdVisita='" + jIDVisita.getText() + "' "
                        + "AND IdRol='" + jIDRol.getText() + "'");
                conecta.rs.first();
                jIDVisita.setText(conecta.rs.getString("IdVisita")); // Coluna 0
                jNomeVisita.setText(conecta.rs.getString("NomeVisita")); // Coluna 1
                idItem = conecta.rs.getString("IdItemRol"); // Coluna 2
                jParentescoVisita.setText(conecta.rs.getString("ParentescoVisita"));
                jCombBoxStatusVisita.setSelectedItem(conecta.rs.getString("StatusVisita"));
                jDataNascVisita.setDate(conecta.rs.getDate("DataNasc"));
                // Capturando foto
                camFotoVisita = conecta.rs.getString("ImagemVisita");
                if (camFotoVisita != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(camFotoVisita);
                    FotoVisita.setIcon(i);
                    FotoVisita.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoVisita.getWidth(), FotoVisita.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVI"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(FotoVisita.getWidth(), FotoVisita.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    FotoVisita.setIcon(icon);
                }
                jDataCadaVisita.setDate(conecta.rs.getDate("DataCadVisita"));
                jDataInicio.setDate(conecta.rs.getDate("DataInicio"));
                jDataValiAntecedente.setDate(conecta.rs.getDate("DataValiAnte"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaVisitaMouseClicked

    private void jIDPesqRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIDPesqRolActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jIDPesqRolActionPerformed

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data incial.");
                jDataPesqInicial.requestFocus();
                jDataPesqInicial.setBackground(Color.red);
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final.");
                    jDataPesqFinal.requestFocus();
                    jDataPesqFinal.setBackground(Color.red);
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Final não pode ser menor que a data inicial.");
                        jDataPesqFinal.requestFocus();
                        jDataPesqFinal.setBackground(Color.red);
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        preencherRolsData("SELECT * FROM ROLVISITAS "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataRol BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data incial.");
                jDataPesqInicial.requestFocus();
                jDataPesqInicial.setBackground(Color.red);
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final.");
                    jDataPesqFinal.requestFocus();
                    jDataPesqFinal.setBackground(Color.red);
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Final não pode ser menor que a data inicial.");
                        jDataPesqFinal.requestFocus();
                        jDataPesqFinal.setBackground(Color.red);
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        preencherRolsData("SELECT * FROM ROLVISITAS "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataRol BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para pesquisa");
            jPesqNomeInterno.requestFocus();
        } else {
            preencherRolsData("SELECT * FROM ROLVISITAS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTodosRols("SELECT * FROM ROLVISITAS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            jtotalRegistros.setText("");
            limparTabelaRol();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jTabelaItensInternasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensInternasMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeInterno = "" + jTabelaItensInternas.getValueAt(jTabelaItensInternas.getSelectedRow(), 2);
            jNomeInterno.setText(nomeInterno);
            String codigoInterno = "" + jTabelaItensInternas.getValueAt(jTabelaItensInternas.getSelectedRow(), 1);
            jIdInternoLista.setText(codigoInterno);
            idItem = "" + jTabelaItensInternas.getValueAt(jTabelaItensInternas.getSelectedRow(), 0);
            // Habilitar os botões
//            jBtNovoItem.setEnabled(!true);
//            jBtAlterarItem.setEnabled(true);
//            jBtExcluirItem.setEnabled(true);
//            jBtSalvarItem.setEnabled(!true);
//            jBtCancelarItem.setEnabled(true);
//            jBtAuditoriaItens.setEnabled(true);
//            //
//            jBtNovo.setEnabled(!true);
//            jBtAlterar.setEnabled(!true);
//            jBtExcluir.setEnabled(!true);
//            jBtSalvar.setEnabled(!true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM PRONTUARIOSCRC "
                        + "INNER JOIN ITENS_LISTA_ROL "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENS_LISTA_ROL.IdInternoCrc "
                        + "WHERE NomeInternoCrc='" + jNomeInterno.getText() + "'AND IdRol='" + jIDRol.getText() + "'AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIdInternoLista.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInterna.setText(conecta.rs.getString("NomeInternoCrc"));
                idItem = conecta.rs.getString("IdItem");
                jComboBoxStatusInterno.setSelectedItem(conecta.rs.getString("StatusInterna"));
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoInternoLista.setIcon(i);
                jFotoInternoLista.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInternoLista.getWidth(), jFotoInternoLista.getHeight(), Image.SCALE_DEFAULT)));
                jSituacaoInternoLista.setText(conecta.rs.getString("SituacaoCrc"));
                jDataValidade.setDate(conecta.rs.getDate("DataValidade"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaItensInternasMouseClicked

    private void jBtPesqNomeVisitaInternaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeVisitaInternaActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jNomeVisitaInterna.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da visita para pesquisa");
            jNomeVisitaInterna.requestFocus();
        } else {
            preencherRolsData("SELECT * FROM ROLVISITAS "
                    + "INNER JOIN ITENSROL "
                    + "ON ROLVISITAS.IdRol=ITENSROL.IdRol "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN VISITASINTERNO "
                    + "ON ITENSROL.IdVisita=VISITASINTERNO.IdVisita "
                    + "WHERE VISITASINTERNO.NomeVisita LIKE'%" + jNomeVisitaInterna.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeVisitaInternaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoVisita;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqIDRol;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesqNomeVisitaInterna;
    private javax.swing.JTextField jCela;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jCombBoxStatusVisita;
    private javax.swing.JComboBox jComboBoxStatusInterno;
    public static com.toedter.calendar.JDateChooser jDataCadaVisita;
    public static com.toedter.calendar.JDateChooser jDataEntradaInterno;
    private com.toedter.calendar.JDateChooser jDataInicio;
    public static com.toedter.calendar.JDateChooser jDataNascInterno;
    public static com.toedter.calendar.JDateChooser jDataNascVisita;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    private com.toedter.calendar.JDateChooser jDataRol;
    public static com.toedter.calendar.JDateChooser jDataValiAntecedente;
    private com.toedter.calendar.JDateChooser jDataValidade;
    public static javax.swing.JLabel jFotoInterno;
    public static javax.swing.JLabel jFotoInternoLista;
    public static javax.swing.JTextField jIDInterno;
    private javax.swing.JTextField jIDPesqRol;
    public static javax.swing.JTextField jIDRol;
    public static javax.swing.JTextField jIDVisita;
    public static javax.swing.JTextField jIdInternoLista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMaeInterno;
    public static javax.swing.JTextField jNomeInterna;
    public static javax.swing.JTextField jNomeInterno;
    public static javax.swing.JTextField jNomeVisita;
    private javax.swing.JTextField jNomeVisitaInterna;
    private javax.swing.JTextArea jObsRol;
    private javax.swing.JTextArea jObservacaoPortaria;
    public static javax.swing.JTextField jPaiInterno;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JTextField jParentescoVisita;
    private javax.swing.JTextField jPavilhao;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JTextField jRegime;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jSituacao;
    public static javax.swing.JTextField jSituacaoInternoLista;
    public static javax.swing.JTextField jStatusRol;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaItensInternas;
    private javax.swing.JTable jTabelaPesquisaRol;
    private javax.swing.JTable jTabelaVisita;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObsRol.setLineWrap(true);
        jObsRol.setWrapStyleWord(true);
        jPesqNomeInterno.setDocument(new LimiteDigitosAlfa(33));
        jObservacaoPortaria.setLineWrap(true);
        jObservacaoPortaria.setWrapStyleWord(true);
    }

    public void corCampo() {
        // 
        jIDRol.setBackground(Color.white);
        jDataRol.setBackground(Color.white);
        jIDInterno.setBackground(Color.white);
        jNomeInterno.setBackground(Color.white);
        jFotoInterno.setBackground(Color.white);
        jMaeInterno.setBackground(Color.white);
        jPaiInterno.setBackground(Color.white);
        jDataNascInterno.setBackground(Color.white);
        jDataEntradaInterno.setBackground(Color.white);
        jObsRol.setBackground(Color.white);
        //
        jIDVisita.setBackground(Color.white);
        jNomeVisita.setBackground(Color.white);
        jParentescoVisita.setBackground(Color.white);
        jCombBoxStatusVisita.setBackground(Color.white);
        jDataNascVisita.setBackground(Color.white);
        jDataCadaVisita.setBackground(Color.white);
        jDataInicio.setBackground(Color.white);
        jDataValiAntecedente.setBackground(Color.white);
        //
        jIdInternoLista.setBackground(Color.white);
        jComboBoxStatusInterno.setBackground(Color.white);
        jNomeInterna.setBackground(Color.white);
        jSituacaoInternoLista.setBackground(Color.white);
        jFotoInternoLista.setBackground(Color.white);
        jDataValidade.setBackground(Color.white);
        //
        jPavilhao.setBackground(Color.white);
        jCela.setBackground(Color.white);
        jRegime.setBackground(Color.white);
        jSituacao.setBackground(Color.white);
    }

    public void verificarInternoLocalizacao() {
        nomePavilhao = null;
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ROLVISITAS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ROLVISITAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN DADOSPENAISINTERNOS "
                    + "ON DADOSPENAISINTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN ITENSLOCACAOINTERNO "
                    + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                    + "INNER JOIN CELAS "
                    + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                    + "INNER JOIN PAVILHAO "
                    + "ON CELAS.IdPav=PAVILHAO.IdPav "
                    + "WHERE IdRol='" + idRol + "'");
            conecta.rs.first();
            codigoInternoLocal = conecta.rs.getString("IdInternoCrc");
            //
            conecta.executaSQL("SELECT * FROM ITENSLOCACAOINTERNO "
                    + "INNER JOIN CELAS "
                    + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                    + "INNER JOIN PAVILHAO "
                    + "ON CELAS.IdPav=PAVILHAO.IdPav "
                    + "WHERE IdInternoCrc='" + codigoInternoLocal + "'");
            conecta.rs.first();
            nomePavilhao = conecta.rs.getString("DescricaoPav");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    // Preencher Tabela com as VISITAS
    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome da Visita", "Data Inicio", "Parentesco", "Status"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data no formato Brasil
                dataInicio = conecta.rs.getString("DataInicio");
                String dia = dataInicio.substring(8, 10);
                String mes = dataInicio.substring(5, 7);
                String ano = dataInicio.substring(0, 4);
                dataInicio = dia + "/" + mes + "/" + ano;
                dados.add(new Object[]{conecta.rs.getInt("IdVisita"), conecta.rs.getString("NomeVisita"), dataInicio, conecta.rs.getString("ParentescoVisita"), conecta.rs.getString("StatusVisita")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisita.setModel(modelo);
        jTabelaVisita.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVisita.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(1).setPreferredWidth(210);
        jTabelaVisita.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVisita.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTabelaVisita.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVisita.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVisita.getTableHeader().setReorderingAllowed(false);
        jTabelaVisita.setAutoResizeMode(jTabelaVisita.AUTO_RESIZE_OFF);
        jTabelaVisita.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItensVisita();
        conecta.desconecta();
    }

    public void alinharCamposTabelaItensVisita() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVisita.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVisita.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaVisita.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }

    public void limparTabelaVisitas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome da Visita", "Data Inicio", "Parentesco", "Status"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisita.setModel(modelo);
        jTabelaVisita.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVisita.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(1).setPreferredWidth(210);
        jTabelaVisita.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVisita.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTabelaVisita.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVisita.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVisita.getTableHeader().setReorderingAllowed(false);
        jTabelaVisita.setAutoResizeMode(jTabelaVisita.AUTO_RESIZE_OFF);
        jTabelaVisita.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaInternas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Seq.", "Código", "Nome do Interno ", "Data Validade ", "Status"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data no formato Brasil
                dataValidade = conecta.rs.getString("DataValidade");
                String dia = dataValidade.substring(8, 10);
                String mes = dataValidade.substring(5, 7);
                String ano = dataValidade.substring(0, 4);
                dataValidade = dia + "/" + mes + "/" + ano;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getString("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), dataValidade, conecta.rs.getString("StatusInterna")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInternas.setModel(modelo);
        jTabelaItensInternas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaItensInternas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensInternas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaItensInternas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensInternas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaItensInternas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInternas.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInternas.setAutoResizeMode(jTabelaItensInternas.AUTO_RESIZE_OFF);
        jTabelaItensInternas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposItensInternas();
        conecta.desconecta();
    }

    public void limparTabelaItensInternas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Seq.", "Código", "Nome do Interno ", "Data Validade ", "Status"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInternas.setModel(modelo);
        jTabelaItensInternas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaItensInternas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensInternas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaItensInternas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensInternas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInternas.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaItensInternas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInternas.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInternas.setAutoResizeMode(jTabelaItensInternas.AUTO_RESIZE_OFF);
        jTabelaItensInternas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposItensInternas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensInternas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensInternas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaItensInternas.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaItensInternas.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }

    public void preencherTodosRols(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Nome do Interno", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataRol = conecta.rs.getString("DataRol");
                String dia = dataRol.substring(8, 10);
                String mes = dataRol.substring(5, 7);
                String ano = dataRol.substring(0, 4);
                dataRol = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdRol"), dataRol, conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("ObsRol")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaRol.setModel(modelo);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaRol.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaRol.setAutoResizeMode(jTabelaPesquisaRol.AUTO_RESIZE_OFF);
        jTabelaPesquisaRol.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharColunasTabelaRol();
        conecta.desconecta();
    }

    public void preencherRolsData(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Nome do Interno", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataRol = conecta.rs.getString("DataRol");
                String dia = dataRol.substring(8, 10);
                String mes = dataRol.substring(5, 7);
                String ano = dataRol.substring(0, 4);
                dataRol = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdRol"), dataRol, conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("ObsRol")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaRol.setModel(modelo);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaRol.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaRol.setAutoResizeMode(jTabelaPesquisaRol.AUTO_RESIZE_OFF);
        jTabelaPesquisaRol.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharColunasTabelaRol();
        conecta.desconecta();
    }

    // Pesquisa de Lançamento por Código (ID)
    public void pesquisarLancCod(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Nome do Interno", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataRol = conecta.rs.getString("DataRol");
                String dia = dataRol.substring(8, 10);
                String mes = dataRol.substring(5, 7);
                String ano = dataRol.substring(0, 4);
                dataRol = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdRol"), dataRol, conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("ObsRol")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaRol.setModel(modelo);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaRol.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaRol.setAutoResizeMode(jTabelaPesquisaRol.AUTO_RESIZE_OFF);
        jTabelaPesquisaRol.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharColunasTabelaRol();
        conecta.desconecta();
    }

    public void limparTabelaRol() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Nome do Interno ", "Observação "};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesquisaRol.setModel(modelo);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setPreferredWidth(220);
        jTabelaPesquisaRol.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesquisaRol.getTableHeader().setReorderingAllowed(false);
        jTabelaPesquisaRol.setAutoResizeMode(jTabelaPesquisaRol.AUTO_RESIZE_OFF);
        jTabelaPesquisaRol.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharColunasTabelaRol() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPesquisaRol.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaPesquisaRol.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void verificarInterno() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ROLVISITAS WHERE IdInternoCrc='" + jIDInterno.getText() + "'");
            conecta.rs.first();
            codInternoCrc = conecta.rs.getString("IdInternoCrc");
        } catch (SQLException ex) {
        }
    }
}
