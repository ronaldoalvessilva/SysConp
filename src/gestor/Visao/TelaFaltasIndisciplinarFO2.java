/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleFaltasIndisciplinarFO2;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Modelo.FaltasIndisciplinarFO1;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaRegimentoInternoDisciplinar.jCodigoReg;
import static gestor.Visao.TelaRegimentoInternoDisciplinar.jCodigoInternoReg;
import static gestor.Visao.TelaRegimentoInternoDisciplinar.jNomeInternoReg;
import static gestor.Visao.TelaRegimentoInternoDisciplinar.jStatusReg;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import javax.swing.JOptionPane;

/**
 *
 * @author ronaldo
 */
public class TelaFaltasIndisciplinarFO2 extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    FaltasIndisciplinarFO1 objFaltas = new FaltasIndisciplinarFO1();
    ControleFaltasIndisciplinarFO2 control = new ControleFaltasIndisciplinarFO2();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Segurança:Registro de Eventos Indisciplinar Internos:Faltas";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int acao;
    int flag;
    int incitar, fugir, possuir, provocar, descumprir;
    int desobedecer, recusar, posse, praticarFato, realiza;
    int praticarAto, dificultar, circular, fabricar, fabricar2;
    int fisica, impedir, portar, dificultar1, improvisar, induzir;
    int simular, divulgar, recusar1, submeter, deixar;
    int codigoFaltaFO2;
    String codigoRegistro;
    /**
     * Creates new form TelaFaltasIndisciplinarFO1
     */
    public static TelaRegimentoInternoDisciplinar eventoRegeDisciplinar;

    public TelaFaltasIndisciplinarFO2(TelaRegimentoInternoDisciplinar parent, boolean modal) {
        eventoRegeDisciplinar = parent;
        this.setModal(modal);
        setLocationRelativeTo(eventoRegeDisciplinar);
        initComponents();
        buscarRegstro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jCheckBoxPosse = new javax.swing.JCheckBox();
        jCheckBoxPraticar = new javax.swing.JCheckBox();
        jCheckBoxIncitar = new javax.swing.JCheckBox();
        jCheckBoxFugir = new javax.swing.JCheckBox();
        jCheckBoxPossuir = new javax.swing.JCheckBox();
        jCheckBoxProvocar = new javax.swing.JCheckBox();
        jCheckBoxDescumprir = new javax.swing.JCheckBox();
        jCheckBoxDesobedecer = new javax.swing.JCheckBox();
        jCheckBoxRecusar = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxDificultar = new javax.swing.JCheckBox();
        jCheckBoxRealizar = new javax.swing.JCheckBox();
        jCheckBoxPraticar1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jCheckBoxImpedir = new javax.swing.JCheckBox();
        jCheckBoxPortar = new javax.swing.JCheckBox();
        jCheckBoxDificultar1 = new javax.swing.JCheckBox();
        jCheckBoxImprovisar = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jCheckBoxInduzir = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxSimular = new javax.swing.JCheckBox();
        jCheckBoxDivulgar = new javax.swing.JCheckBox();
        jCheckBoxRecusar1 = new javax.swing.JCheckBox();
        jCheckBoxSubmeter = new javax.swing.JCheckBox();
        jCheckBoxDeixar = new javax.swing.JCheckBox();
        jCheckBoxCircular = new javax.swing.JCheckBox();
        jCheckBoxFabricar = new javax.swing.JCheckBox();
        jCheckBoxFabricar1 = new javax.swing.JCheckBox();
        jCheckBoxFisica = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Ficha Individual de Ocorrência Disciplinar - FO.SGP.15 :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jCheckBoxPosse.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxPosse.setText("Ter em sua posse, utilizar ou fornecer aparelho telefônico, de rádio ou similar, que permita a comunicação com outros");
        jCheckBoxPosse.setEnabled(false);

        jCheckBoxPraticar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxPraticar.setText("Praticar fato previsto como crime doloso.");
        jCheckBoxPraticar.setEnabled(false);

        jCheckBoxIncitar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxIncitar.setText("Incitar ou participar de movimento para subverter a ordem ou a disciplina;");
        jCheckBoxIncitar.setEnabled(false);

        jCheckBoxFugir.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxFugir.setText("Fugir;");
        jCheckBoxFugir.setEnabled(false);

        jCheckBoxPossuir.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxPossuir.setText("Possuir, indevidamente, instrumento capaz de ofender a integridade física de outrem;");
        jCheckBoxPossuir.setEnabled(false);

        jCheckBoxProvocar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxProvocar.setText("Provocar acidente de trabalho;");
        jCheckBoxProvocar.setEnabled(false);

        jCheckBoxDescumprir.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxDescumprir.setText("Descumprir, no regime aberto, as condições impostas;");
        jCheckBoxDescumprir.setEnabled(false);

        jCheckBoxDesobedecer.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxDesobedecer.setText("Desobedecer ao servidor ou a qualquer pessoa com quem deva relacionar-se.");
        jCheckBoxDesobedecer.setEnabled(false);

        jCheckBoxRecusar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxRecusar.setText("Recusar em executar trabalho, tarefa ou ordem recebida.");
        jCheckBoxRecusar.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("  presos ou com o ambiente externo; ");
        jLabel4.setEnabled(false);

        jCheckBoxDificultar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxDificultar.setText("Dificultar os deslocamentos, com o fim de impedir ou embaraçar as rotinas diárias do estabelecimento; ");
        jCheckBoxDificultar.setEnabled(false);

        jCheckBoxRealizar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxRealizar.setText("Realizar compra e venda não autorizada pela direção do estabelecimento;");
        jCheckBoxRealizar.setEnabled(false);

        jCheckBoxPraticar1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxPraticar1.setText("Praticar atos que perturbem a ordem nas ocasiões de descanso, de trabalho ou de reuniões;");
        jCheckBoxPraticar1.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FALTA MÉDIA: (artigo 80, Decreto nº 12.247/10)");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("FALTA GRAVE: (artigo 81, decreto nº 12.247/10)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxPraticar)
                            .addComponent(jCheckBoxIncitar)
                            .addComponent(jCheckBoxFugir)
                            .addComponent(jCheckBoxPossuir)
                            .addComponent(jCheckBoxProvocar)
                            .addComponent(jCheckBoxDescumprir)
                            .addComponent(jCheckBoxDesobedecer)
                            .addComponent(jCheckBoxRecusar)
                            .addComponent(jCheckBoxDificultar)
                            .addComponent(jCheckBoxRealizar)
                            .addComponent(jCheckBoxPraticar1)
                            .addComponent(jLabel4))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxPosse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxIncitar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFugir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxPossuir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxProvocar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDescumprir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDesobedecer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxRecusar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxPosse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxPraticar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxRealizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxPraticar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDificultar)
                .addGap(88, 88, 88))
        );

        jTabbedPane1.addTab("Faltas", jPanel3);

        jCheckBoxImpedir.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxImpedir.setText("Impedir ou perturbar a jornada de trabalho ou a realização de tarefas de outro apenado;");
        jCheckBoxImpedir.setEnabled(false);

        jCheckBoxPortar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxPortar.setText("Portar ou manter em seu poder bens, títulos, cartões de crédito e valores cuja posse seja proibida em ato normativo");
        jCheckBoxPortar.setEnabled(false);

        jCheckBoxDificultar1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxDificultar1.setText("Dificultar a vigilância em qualquer dependência do estabelecimento penal;");
        jCheckBoxDificultar1.setEnabled(false);

        jCheckBoxImprovisar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxImprovisar.setText("Improvisar qualquer transformação não autorizada no alojamento ou cela que resulte em prejuízo à segurança; ");
        jCheckBoxImprovisar.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("da Superintendência de Assuntos Penais;");
        jLabel6.setEnabled(false);

        jCheckBoxInduzir.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxInduzir.setText("induzir ou instigar visitante a adentrar o estabelecimento com qualquer instrumento, material ou objetos não permitidos");
        jCheckBoxInduzir.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText(" pela Segurança da Unidade; ");
        jLabel7.setEnabled(false);

        jCheckBoxSimular.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxSimular.setText("Simular doença para eximir-se de dever legal ou regulamentar;");
        jCheckBoxSimular.setEnabled(false);

        jCheckBoxDivulgar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxDivulgar.setText("Divulgar notícia que possa perturbar a ordem e a disciplina;");
        jCheckBoxDivulgar.setEnabled(false);

        jCheckBoxRecusar1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxRecusar1.setText("Recusar-se a deixar a cela, quando determinado, mantendo-se em atitude de rebeldia;");
        jCheckBoxRecusar1.setEnabled(false);

        jCheckBoxSubmeter.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxSubmeter.setText("Não se submeter às requisições administrativas, judiciais e policiais;");
        jCheckBoxSubmeter.setEnabled(false);

        jCheckBoxDeixar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxDeixar.setText("Deixar de recolher-se à sua cela no horário determinado.");
        jCheckBoxDeixar.setEnabled(false);

        jCheckBoxCircular.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxCircular.setText("Circular por áreas do estabelecimento onde é vedada a presença do preso;");
        jCheckBoxCircular.setEnabled(false);

        jCheckBoxFabricar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxFabricar.setText("Fabricar, portar, usar, possuir ou fornecer instrumento que venha a facilitar o cometimento de ato considerado ilícito; ");
        jCheckBoxFabricar.setEnabled(false);

        jCheckBoxFabricar1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxFabricar1.setText("Fabricar, portar, possuir, comercializar, ingerir ou fornecer bebida alcoólica ou substância que cause dependência    ");
        jCheckBoxFabricar1.setEnabled(false);

        jCheckBoxFisica.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBoxFisica.setText("Física ou psíquica, bem como droga lícita sem prescrição médica, quando exigida;");
        jCheckBoxFisica.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxImpedir)
                    .addComponent(jCheckBoxSubmeter)
                    .addComponent(jCheckBoxPortar)
                    .addComponent(jCheckBoxDeixar)
                    .addComponent(jCheckBoxDificultar1)
                    .addComponent(jCheckBoxImprovisar)
                    .addComponent(jCheckBoxInduzir)
                    .addComponent(jLabel7)
                    .addComponent(jCheckBoxSimular)
                    .addComponent(jCheckBoxCircular)
                    .addComponent(jCheckBoxFabricar)
                    .addComponent(jCheckBoxFabricar1)
                    .addComponent(jCheckBoxDivulgar)
                    .addComponent(jCheckBoxRecusar1)
                    .addComponent(jCheckBoxFisica)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxCircular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFabricar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFabricar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFisica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxImpedir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxPortar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDificultar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxImprovisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxInduzir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSimular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDivulgar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxRecusar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSubmeter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDeixar)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Continuação...", jPanel4);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBtNovo)
                .addComponent(jBtAlterar)
                .addComponent(jBtExcluir)
                .addComponent(jBtSalvar)
                .addComponent(jBtCancelar))
            .addComponent(jBtSair)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        acao = 1;
        Novo();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        statusMov = "Alterou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        acao = 2;
        Alterar();
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objFaltas.setIdFaltaFO1(codigoFaltaFO2);
            control.excluirFaltasFO1(objFaltas);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação               
            Excluir();
            JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        verificarRegistro();
        if (jCheckBoxIncitar.isSelected()) {
            incitar = 1;
        } else if (!jCheckBoxIncitar.isSelected()) {
            incitar = 0;
        }
        objFaltas.setIncitar(incitar);
        if (jCheckBoxFugir.isSelected()) {
            fugir = 1;
        } else if (!jCheckBoxFugir.isSelected()) {
            fugir = 0;
        }
        objFaltas.setFugir(fugir);
        if (jCheckBoxPossuir.isSelected()) {
            possuir = 1;
        } else if (!jCheckBoxPossuir.isSelected()) {
            possuir = 0;
        }
        objFaltas.setPossuir(possuir);
        if (jCheckBoxProvocar.isSelected()) {
            provocar = 1;
        } else if (!jCheckBoxProvocar.isSelected()) {
            provocar = 0;
        }
        objFaltas.setProvocar(provocar);
        if (jCheckBoxDescumprir.isSelected()) {
            descumprir = 1;
        } else if (!jCheckBoxDescumprir.isSelected()) {
            descumprir = 0;
        }
        objFaltas.setDescumprir(descumprir);
        if (jCheckBoxDesobedecer.isSelected()) {
            desobedecer = 1;
        } else if (!jCheckBoxDesobedecer.isSelected()) {
            desobedecer = 0;
        }
        objFaltas.setDesobedecer(desobedecer);
        if (jCheckBoxRecusar.isSelected()) {
            recusar = 1;
        } else if (!jCheckBoxRecusar.isSelected()) {
            recusar = 0;
        }
        objFaltas.setRecusar(recusar);
        if (jCheckBoxPosse.isSelected()) {
            posse = 1;
        } else if (!jCheckBoxPosse.isSelected()) {
            posse = 0;
        }
        objFaltas.setPosse(posse);
        if (jCheckBoxPraticar.isSelected()) {
            praticarFato = 1;
        } else if (!jCheckBoxPosse.isSelected()) {
            praticarFato = 0;
        }
        objFaltas.setPraticarFato(praticarFato);
        if (jCheckBoxRealizar.isSelected()) {
            realiza = 1;
        } else if (!jCheckBoxRealizar.isSelected()) {
            realiza = 0;
        }
        objFaltas.setRealiza(realiza);
        if (jCheckBoxPraticar1.isSelected()) {
            praticarAto = 1;
        } else if (!jCheckBoxPraticar1.isSelected()) {
            praticarAto = 0;
        }
        objFaltas.setPraticarAto(praticarAto);
        if (jCheckBoxDificultar.isSelected()) {
            dificultar = 1;
        } else if (!jCheckBoxDificultar.isSelected()) {
            dificultar = 0;
        }
        objFaltas.setDificultar(dificultar);
        if (jCheckBoxCircular.isSelected()) {
            circular = 1;
        } else if (!jCheckBoxCircular.isSelected()) {
            circular = 0;
        }
        objFaltas.setCircular(circular);
        if (jCheckBoxFabricar.isSelected()) {
            fabricar = 1;
        } else if (!jCheckBoxFabricar.isSelected()) {
            fabricar = 0;
        }
        objFaltas.setFabricar(fabricar);
        if (jCheckBoxFabricar1.isSelected()) {
            fabricar2 = 1;
        } else if (!jCheckBoxFabricar1.isSelected()) {
            fabricar2 = 0;
        }
        objFaltas.setFabricar2(fabricar2);
        if (jCheckBoxFisica.isSelected()) {
            fisica = 1;
        } else if (!jCheckBoxFisica.isSelected()) {
            fisica = 0;
        }
        objFaltas.setFisica(fisica);
        if (jCheckBoxImpedir.isSelected()) {
            impedir = 1;
        } else if (!jCheckBoxImpedir.isSelected()) {
            impedir = 0;
        }
        objFaltas.setImpedir(impedir);
        if (jCheckBoxPortar.isSelected()) {
            portar = 1;
        } else if (!jCheckBoxPortar.isSelected()) {
            portar = 0;
        }
        objFaltas.setPortar(portar);
        if (jCheckBoxDificultar1.isSelected()) {
            dificultar1 = 1;
        } else if (!jCheckBoxDificultar1.isSelected()) {
            dificultar1 = 0;
        }
        objFaltas.setDificultar1(dificultar1);
        if (jCheckBoxImprovisar.isSelected()) {
            improvisar = 1;
        } else if (!jCheckBoxImprovisar.isSelected()) {
            improvisar = 0;
        }
        objFaltas.setImprovisar(improvisar);
        if (jCheckBoxInduzir.isSelected()) {
            induzir = 1;
        } else if (!jCheckBoxInduzir.isSelected()) {
            induzir = 0;
        }
        objFaltas.setInduzir(induzir);
        if (jCheckBoxSimular.isSelected()) {
            simular = 1;
        } else if (!jCheckBoxSimular.isSelected()) {
            simular = 0;
        }
        objFaltas.setSimular(simular);
        if (jCheckBoxDivulgar.isSelected()) {
            divulgar = 1;
        } else if (!jCheckBoxDivulgar.isSelected()) {
            divulgar = 0;
        }
        objFaltas.setDivulgar(divulgar);
        if (jCheckBoxRecusar1.isSelected()) {
            recusar1 = 1;
        } else if (!jCheckBoxRecusar1.isSelected()) {
            recusar1 = 0;
        }
        objFaltas.setRecusar1(recusar1);
        if (jCheckBoxSubmeter.isSelected()) {
            submeter = 1;
        } else if (!jCheckBoxSubmeter.isSelected()) {
            submeter = 0;
        }
        objFaltas.setSubmeter(submeter);
        if (jCheckBoxDeixar.isSelected()) {
            deixar = 1;
        } else if (!jCheckBoxDeixar.isSelected()) {
            deixar = 0;
        }
        objFaltas.setDeixar(deixar);
        objFaltas.setIdLanc(Integer.valueOf(jCodigoReg.getText()));
        objFaltas.setIdInternoCrc(Integer.valueOf(jCodigoInternoReg.getText()));
        objFaltas.setNomeInternoCrc(jNomeInternoReg.getText());
        if (acao == 1) {
            if (jCodigoReg.getText().equals(codigoRegistro)) {
                JOptionPane.showMessageDialog(rootPane, "Já existe um registro gravado para esse interno.");
            } else {
                objFaltas.setUsuarioInsert(nameUser);
                objFaltas.setDataInsert(dataModFinal);
                objFaltas.setHorarioInsert(horaMov);
                control.incluirFaltasFO1(objFaltas);
                buscarCodigo();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação               
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
        }
        if (acao == 2) {
            objFaltas.setUsuarioUp(nameUser);
            objFaltas.setDataUp(dataModFinal);
            objFaltas.setHorarioUp(horaMov);
            //
            objFaltas.setIdFaltaFO1(codigoFaltaFO2);
            control.alterarFaltasFO1(objFaltas);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação  
            Salvar();
            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFaltasIndisciplinarFO2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFaltasIndisciplinarFO2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFaltasIndisciplinarFO2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFaltasIndisciplinarFO2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaFaltasIndisciplinarFO2 dialog = new TelaFaltasIndisciplinarFO2(eventoRegeDisciplinar, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JCheckBox jCheckBoxCircular;
    private javax.swing.JCheckBox jCheckBoxDeixar;
    private javax.swing.JCheckBox jCheckBoxDescumprir;
    private javax.swing.JCheckBox jCheckBoxDesobedecer;
    private javax.swing.JCheckBox jCheckBoxDificultar;
    private javax.swing.JCheckBox jCheckBoxDificultar1;
    private javax.swing.JCheckBox jCheckBoxDivulgar;
    private javax.swing.JCheckBox jCheckBoxFabricar;
    private javax.swing.JCheckBox jCheckBoxFabricar1;
    private javax.swing.JCheckBox jCheckBoxFisica;
    private javax.swing.JCheckBox jCheckBoxFugir;
    private javax.swing.JCheckBox jCheckBoxImpedir;
    private javax.swing.JCheckBox jCheckBoxImprovisar;
    private javax.swing.JCheckBox jCheckBoxIncitar;
    private javax.swing.JCheckBox jCheckBoxInduzir;
    private javax.swing.JCheckBox jCheckBoxPortar;
    private javax.swing.JCheckBox jCheckBoxPosse;
    private javax.swing.JCheckBox jCheckBoxPossuir;
    private javax.swing.JCheckBox jCheckBoxPraticar;
    private javax.swing.JCheckBox jCheckBoxPraticar1;
    private javax.swing.JCheckBox jCheckBoxProvocar;
    private javax.swing.JCheckBox jCheckBoxRealizar;
    private javax.swing.JCheckBox jCheckBoxRecusar;
    private javax.swing.JCheckBox jCheckBoxRecusar1;
    private javax.swing.JCheckBox jCheckBoxSimular;
    private javax.swing.JCheckBox jCheckBoxSubmeter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    public void Novo() {
        codigoFaltaFO2 = 0;
        // FALTA GRAVE
        jCheckBoxIncitar.setSelected(!true);
        jCheckBoxFugir.setSelected(!true);
        jCheckBoxPossuir.setSelected(!true);
        jCheckBoxProvocar.setSelected(!true);
        jCheckBoxDescumprir.setSelected(!true);
        jCheckBoxDesobedecer.setSelected(!true);
        jCheckBoxRecusar.setSelected(!true);
        jCheckBoxPosse.setSelected(!true);
        jCheckBoxPraticar.setSelected(!true);
        // FALTA MÉDIA
        jCheckBoxRealizar.setSelected(!true);
        jCheckBoxPraticar1.setSelected(!true);
        jCheckBoxDificultar.setSelected(!true);
        jCheckBoxCircular.setSelected(!true);
        jCheckBoxFabricar.setSelected(!true);
        jCheckBoxFabricar1.setSelected(!true);
        jCheckBoxFisica.setSelected(!true);
        jCheckBoxImpedir.setSelected(!true);
        jCheckBoxPortar.setSelected(!true);
        jCheckBoxDificultar1.setSelected(!true);
        jCheckBoxImprovisar.setSelected(!true);
        jCheckBoxInduzir.setSelected(!true);
        jCheckBoxSimular.setSelected(!true);
        jCheckBoxDivulgar.setSelected(!true);
        jCheckBoxRecusar1.setSelected(!true);
        jCheckBoxSubmeter.setSelected(!true);
        jCheckBoxDeixar.setSelected(!true);
        // FALTA GRAVE
        jCheckBoxIncitar.setEnabled(true);
        jCheckBoxFugir.setEnabled(true);
        jCheckBoxPossuir.setEnabled(true);
        jCheckBoxProvocar.setEnabled(true);
        jCheckBoxDescumprir.setEnabled(true);
        jCheckBoxDesobedecer.setEnabled(true);
        jCheckBoxRecusar.setEnabled(true);
        jCheckBoxPosse.setEnabled(true);
        jCheckBoxPraticar.setEnabled(true);
        // FALTA MÉDIA
        jCheckBoxRealizar.setEnabled(true);
        jCheckBoxPraticar1.setEnabled(true);
        jCheckBoxDificultar.setEnabled(true);
        jCheckBoxCircular.setEnabled(true);
        jCheckBoxFabricar.setEnabled(true);
        jCheckBoxFabricar1.setEnabled(true);
        jCheckBoxFisica.setEnabled(true);
        jCheckBoxImpedir.setEnabled(true);
        jCheckBoxPortar.setEnabled(true);
        jCheckBoxDificultar1.setEnabled(true);
        jCheckBoxImprovisar.setEnabled(true);
        jCheckBoxInduzir.setEnabled(true);
        jCheckBoxSimular.setEnabled(true);
        jCheckBoxDivulgar.setEnabled(true);
        jCheckBoxRecusar1.setEnabled(true);
        jCheckBoxSubmeter.setEnabled(true);
        jCheckBoxDeixar.setEnabled(true);
        //
        jLabel4.setEnabled(true);
        jLabel6.setEnabled(true);
        jLabel7.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        // FALTA GRAVE
        jCheckBoxIncitar.setEnabled(true);
        jCheckBoxFugir.setEnabled(true);
        jCheckBoxPossuir.setEnabled(true);
        jCheckBoxProvocar.setEnabled(true);
        jCheckBoxDescumprir.setEnabled(true);
        jCheckBoxDesobedecer.setEnabled(true);
        jCheckBoxRecusar.setEnabled(true);
        jCheckBoxPosse.setEnabled(true);
        jCheckBoxPraticar.setEnabled(true);
        // FALTA MÉDIA
        jCheckBoxRealizar.setEnabled(true);
        jCheckBoxPraticar1.setEnabled(true);
        jCheckBoxDificultar.setEnabled(true);
        jCheckBoxCircular.setEnabled(true);
        jCheckBoxFabricar.setEnabled(true);
        jCheckBoxFabricar1.setEnabled(true);
        jCheckBoxFisica.setEnabled(true);
        jCheckBoxImpedir.setEnabled(true);
        jCheckBoxPortar.setEnabled(true);
        jCheckBoxDificultar1.setEnabled(true);
        jCheckBoxImprovisar.setEnabled(true);
        jCheckBoxInduzir.setEnabled(true);
        jCheckBoxSimular.setEnabled(true);
        jCheckBoxDivulgar.setEnabled(true);
        jCheckBoxRecusar1.setEnabled(true);
        jCheckBoxSubmeter.setEnabled(true);
        jCheckBoxDeixar.setEnabled(true);
        //
        jLabel4.setEnabled(true);
        jLabel6.setEnabled(true);
        jLabel7.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        // FALTA GRAVE
        jCheckBoxIncitar.setSelected(!true);
        jCheckBoxFugir.setSelected(!true);
        jCheckBoxPossuir.setSelected(!true);
        jCheckBoxProvocar.setSelected(!true);
        jCheckBoxDescumprir.setSelected(!true);
        jCheckBoxDesobedecer.setSelected(!true);
        jCheckBoxRecusar.setSelected(!true);
        jCheckBoxPosse.setSelected(!true);
        jCheckBoxPraticar.setSelected(!true);
        // FALTA MÉDIA
        jCheckBoxRealizar.setSelected(!true);
        jCheckBoxPraticar1.setSelected(!true);
        jCheckBoxDificultar.setSelected(!true);
        jCheckBoxCircular.setSelected(!true);
        jCheckBoxFabricar.setSelected(!true);
        jCheckBoxFabricar1.setSelected(!true);
        jCheckBoxFisica.setSelected(!true);
        jCheckBoxImpedir.setSelected(!true);
        jCheckBoxPortar.setSelected(!true);
        jCheckBoxDificultar1.setSelected(!true);
        jCheckBoxImprovisar.setSelected(!true);
        jCheckBoxInduzir.setSelected(!true);
        jCheckBoxSimular.setSelected(!true);
        jCheckBoxDivulgar.setSelected(!true);
        jCheckBoxRecusar1.setSelected(!true);
        jCheckBoxSubmeter.setSelected(!true);
        jCheckBoxDeixar.setSelected(!true);
        // FALTA GRAVE
        jCheckBoxIncitar.setEnabled(!true);
        jCheckBoxFugir.setEnabled(!true);
        jCheckBoxPossuir.setEnabled(!true);
        jCheckBoxProvocar.setEnabled(!true);
        jCheckBoxDescumprir.setEnabled(!true);
        jCheckBoxDesobedecer.setEnabled(!true);
        jCheckBoxRecusar.setEnabled(!true);
        jCheckBoxPosse.setEnabled(!true);
        jCheckBoxPraticar.setEnabled(!true);
        // FALTA MÉDIA
        jCheckBoxRealizar.setEnabled(!true);
        jCheckBoxPraticar1.setEnabled(!true);
        jCheckBoxDificultar.setEnabled(!true);
        jCheckBoxCircular.setEnabled(!true);
        jCheckBoxFabricar.setEnabled(!true);
        jCheckBoxFabricar1.setEnabled(!true);
        jCheckBoxFisica.setEnabled(!true);
        jCheckBoxImpedir.setEnabled(!true);
        jCheckBoxPortar.setEnabled(!true);
        jCheckBoxDificultar1.setEnabled(!true);
        jCheckBoxImprovisar.setEnabled(!true);
        jCheckBoxInduzir.setEnabled(!true);
        jCheckBoxSimular.setEnabled(!true);
        jCheckBoxDivulgar.setEnabled(!true);
        jCheckBoxRecusar1.setEnabled(!true);
        jCheckBoxSubmeter.setEnabled(!true);
        jCheckBoxDeixar.setEnabled(!true);
        //
        jLabel4.setEnabled(!true);
        jLabel6.setEnabled(!true);
        jLabel7.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Salvar() {
        // FALTA GRAVE
        jCheckBoxIncitar.setEnabled(!true);
        jCheckBoxFugir.setEnabled(!true);
        jCheckBoxPossuir.setEnabled(!true);
        jCheckBoxProvocar.setEnabled(!true);
        jCheckBoxDescumprir.setEnabled(!true);
        jCheckBoxDesobedecer.setEnabled(!true);
        jCheckBoxRecusar.setEnabled(!true);
        jCheckBoxPosse.setEnabled(!true);
        jCheckBoxPraticar.setEnabled(!true);
        // FALTA MÉDIA
        jCheckBoxRealizar.setEnabled(!true);
        jCheckBoxPraticar1.setEnabled(!true);
        jCheckBoxDificultar.setEnabled(!true);
        jCheckBoxCircular.setEnabled(!true);
        jCheckBoxFabricar.setEnabled(!true);
        jCheckBoxFabricar1.setEnabled(!true);
        jCheckBoxFisica.setEnabled(!true);
        jCheckBoxImpedir.setEnabled(!true);
        jCheckBoxPortar.setEnabled(!true);
        jCheckBoxDificultar1.setEnabled(!true);
        jCheckBoxImprovisar.setEnabled(!true);
        jCheckBoxInduzir.setEnabled(!true);
        jCheckBoxSimular.setEnabled(!true);
        jCheckBoxDivulgar.setEnabled(!true);
        jCheckBoxRecusar1.setEnabled(!true);
        jCheckBoxSubmeter.setEnabled(!true);
        jCheckBoxDeixar.setEnabled(!true);
        //
        jLabel4.setEnabled(!true);
        jLabel6.setEnabled(!true);
        jLabel7.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Cancelar() {
        if (codigoFaltaFO2 != 0) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM FALTAS_INDISCIPLINAR_INDIVIDUAL_INTERNOS "
                        + "WHERE IdReg='" + jCodigoReg.getText() + "' "
                        + "AND IdInternoCrc='" + jCodigoInternoReg.getText() + "'");
                conecta.rs.first();
                codigoFaltaFO2 = conecta.rs.getInt("IdFaltaFO2");
                incitar = conecta.rs.getInt("Incitar");
                if (incitar == 1) {
                    jCheckBoxIncitar.setSelected(true);
                } else if (incitar == 0) {
                    jCheckBoxIncitar.setSelected(!true);
                }
                fugir = conecta.rs.getInt("Fugir");
                if (fugir == 1) {
                    jCheckBoxFugir.setSelected(true);
                } else if (fugir == 0) {
                    jCheckBoxFugir.setSelected(!true);
                }
                possuir = conecta.rs.getInt("Possuir");
                if (possuir == 1) {
                    jCheckBoxPossuir.setSelected(true);
                } else if (possuir == 0) {
                    jCheckBoxPossuir.setSelected(!true);
                }
                provocar = conecta.rs.getInt("Provocar");
                if (provocar == 1) {
                    jCheckBoxProvocar.setSelected(true);
                } else if (provocar == 0) {
                    jCheckBoxProvocar.setSelected(!true);
                }
                descumprir = conecta.rs.getInt("Descumprir");
                if (descumprir == 1) {
                    jCheckBoxDescumprir.setSelected(true);
                } else if (descumprir == 0) {
                    jCheckBoxDescumprir.setSelected(!true);
                }
                desobedecer = conecta.rs.getInt("Desobedecer");
                if (desobedecer == 1) {
                    jCheckBoxDesobedecer.setSelected(true);
                } else if (desobedecer == 0) {
                    jCheckBoxDesobedecer.setSelected(!true);
                }
                recusar = conecta.rs.getInt("Recusar");
                if (recusar == 1) {
                    jCheckBoxRecusar.setSelected(true);
                } else if (recusar == 0) {
                    jCheckBoxRecusar.setSelected(!true);
                }
                posse = conecta.rs.getInt("Posse");
                if (posse == 1) {
                    jCheckBoxPosse.setSelected(true);
                } else if (posse == 0) {
                    jCheckBoxPosse.setSelected(!true);
                }
                praticarFato = conecta.rs.getInt("PraticarFato");
                if (praticarFato == 1) {
                    jCheckBoxPraticar.setSelected(true);
                } else if (praticarAto == 0) {
                    jCheckBoxPraticar.setSelected(!true);
                }
                // FALTA MÉDIA
                realiza = conecta.rs.getInt("Realiza");
                if (realiza == 1) {
                    jCheckBoxRealizar.setSelected(true);
                } else if (realiza == 0) {
                    jCheckBoxRealizar.setSelected(!true);
                }
                praticarAto = conecta.rs.getInt("PraticarAto");
                if (praticarAto == 1) {
                    jCheckBoxPraticar1.setSelected(true);
                } else if (praticarAto == 0) {
                    jCheckBoxPraticar1.setSelected(!true);
                }
                dificultar = conecta.rs.getInt("Dificultar");
                if (dificultar == 1) {
                    jCheckBoxDificultar.setSelected(true);
                } else if (dificultar == 0) {
                    jCheckBoxDificultar.setSelected(!true);
                }
                circular = conecta.rs.getInt("Circular");
                if (circular == 1) {
                    jCheckBoxCircular.setSelected(true);
                } else if (circular == 0) {
                    jCheckBoxCircular.setSelected(!true);
                }
                fabricar = conecta.rs.getInt("Fabricar");
                if (fabricar == 1) {
                    jCheckBoxFabricar.setSelected(true);
                } else if (fabricar == 0) {
                    jCheckBoxFabricar.setSelected(!true);
                }
                fabricar2 = conecta.rs.getInt("Fabricar2");
                if (fabricar2 == 1) {
                    jCheckBoxFabricar1.setSelected(true);
                } else if (fabricar2 == 0) {
                    jCheckBoxFabricar1.setSelected(!true);
                }
                fisica = conecta.rs.getInt("Fisica");
                if (fisica == 1) {
                    jCheckBoxFisica.setSelected(true);
                } else if (fisica == 0) {
                    jCheckBoxFisica.setSelected(!true);
                }
                impedir = conecta.rs.getInt("Impedir");
                if (impedir == 1) {
                    jCheckBoxImpedir.setSelected(true);
                } else if (impedir == 0) {
                    jCheckBoxImpedir.setSelected(!true);
                }
                portar = conecta.rs.getInt("Portar");
                if (portar == 1) {
                    jCheckBoxPortar.setSelected(true);
                } else if (portar == 0) {
                    jCheckBoxPortar.setSelected(!true);
                }
                dificultar1 = conecta.rs.getInt("Dificultar1");
                if (dificultar1 == 1) {
                    jCheckBoxDificultar1.setSelected(true);
                } else if (dificultar1 == 0) {
                    jCheckBoxDificultar1.setSelected(!true);
                }
                improvisar = conecta.rs.getInt("Improvisar");
                if (improvisar == 1) {
                    jCheckBoxImprovisar.setSelected(true);
                } else if (improvisar == 0) {
                    jCheckBoxImprovisar.setSelected(!true);
                }
                induzir = conecta.rs.getInt("Induzir");
                if (induzir == 1) {
                    jCheckBoxInduzir.setSelected(true);
                } else if (induzir == 0) {
                    jCheckBoxInduzir.setSelected(!true);
                }
                simular = conecta.rs.getInt("Simular");
                if (simular == 1) {
                    jCheckBoxSimular.setSelected(true);
                } else if (simular == 0) {
                    jCheckBoxSimular.setSelected(!true);
                }
                divulgar = conecta.rs.getInt("Divulgar");
                if (divulgar == 1) {
                    jCheckBoxDivulgar.setSelected(true);
                } else if (divulgar == 0) {
                    jCheckBoxDivulgar.setSelected(!true);
                }
                recusar1 = conecta.rs.getInt("Recusar1");
                if (recusar1 == 1) {
                    jCheckBoxRecusar1.setSelected(true);
                } else if (recusar1 == 0) {
                    jCheckBoxRecusar1.setSelected(!true);
                }
                submeter = conecta.rs.getInt("Submeter");
                if (submeter == 1) {
                    jCheckBoxSubmeter.setSelected(true);
                } else if (submeter == 0) {
                    jCheckBoxSubmeter.setSelected(!true);
                }
                deixar = conecta.rs.getInt("deixar");
                if (deixar == 1) {
                    jCheckBoxDeixar.setSelected(true);
                } else if (deixar == 0) {
                    jCheckBoxDeixar.setSelected(!true);
                }
            } catch (Exception e) {
            }
            conecta.desconecta();
            // FALTA GRAVE
            jCheckBoxIncitar.setEnabled(!true);
            jCheckBoxFugir.setEnabled(!true);
            jCheckBoxPossuir.setEnabled(!true);
            jCheckBoxProvocar.setEnabled(!true);
            jCheckBoxDescumprir.setEnabled(!true);
            jCheckBoxDesobedecer.setEnabled(!true);
            jCheckBoxRecusar.setEnabled(!true);
            jCheckBoxPosse.setEnabled(!true);
            jCheckBoxPraticar.setEnabled(!true);
            // FALTA MÉDIA
            jCheckBoxRealizar.setEnabled(!true);
            jCheckBoxPraticar1.setEnabled(!true);
            jCheckBoxDificultar.setEnabled(!true);
            jCheckBoxCircular.setEnabled(!true);
            jCheckBoxFabricar.setEnabled(!true);
            jCheckBoxFabricar1.setEnabled(!true);
            jCheckBoxFisica.setEnabled(!true);
            jCheckBoxImpedir.setEnabled(!true);
            jCheckBoxPortar.setEnabled(!true);
            jCheckBoxDificultar1.setEnabled(!true);
            jCheckBoxImprovisar.setEnabled(!true);
            jCheckBoxInduzir.setEnabled(!true);
            jCheckBoxSimular.setEnabled(!true);
            jCheckBoxDivulgar.setEnabled(!true);
            jCheckBoxRecusar1.setEnabled(!true);
            jCheckBoxSubmeter.setEnabled(!true);
            jCheckBoxDeixar.setEnabled(!true);
            //
            jLabel4.setEnabled(!true);
            jLabel6.setEnabled(!true);
            jLabel7.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
        } else {
            // FALTA GRAVE
            jCheckBoxIncitar.setSelected(!true);
            jCheckBoxFugir.setSelected(!true);
            jCheckBoxPossuir.setSelected(!true);
            jCheckBoxProvocar.setSelected(!true);
            jCheckBoxDescumprir.setSelected(!true);
            jCheckBoxDesobedecer.setSelected(!true);
            jCheckBoxRecusar.setSelected(!true);
            jCheckBoxPosse.setSelected(!true);
            jCheckBoxPraticar.setSelected(!true);
            // FALTA MÉDIA
            jCheckBoxRealizar.setSelected(!true);
            jCheckBoxPraticar1.setSelected(!true);
            jCheckBoxDificultar.setSelected(!true);
            jCheckBoxCircular.setSelected(!true);
            jCheckBoxFabricar.setSelected(!true);
            jCheckBoxFabricar1.setSelected(!true);
            jCheckBoxFisica.setSelected(!true);
            jCheckBoxImpedir.setSelected(!true);
            jCheckBoxPortar.setSelected(!true);
            jCheckBoxDificultar1.setSelected(!true);
            jCheckBoxImprovisar.setSelected(!true);
            jCheckBoxInduzir.setSelected(!true);
            jCheckBoxSimular.setSelected(!true);
            jCheckBoxDivulgar.setSelected(!true);
            jCheckBoxRecusar1.setSelected(!true);
            jCheckBoxSubmeter.setSelected(!true);
            jCheckBoxDeixar.setSelected(!true);
            // FALTA GRAVE
            jCheckBoxIncitar.setEnabled(!true);
            jCheckBoxFugir.setEnabled(!true);
            jCheckBoxPossuir.setEnabled(!true);
            jCheckBoxProvocar.setEnabled(!true);
            jCheckBoxDescumprir.setEnabled(!true);
            jCheckBoxDesobedecer.setEnabled(!true);
            jCheckBoxRecusar.setEnabled(!true);
            jCheckBoxPosse.setEnabled(!true);
            jCheckBoxPraticar.setEnabled(!true);
            // FALTA MÉDIA
            jCheckBoxRealizar.setEnabled(!true);
            jCheckBoxPraticar1.setEnabled(!true);
            jCheckBoxDificultar.setEnabled(!true);
            jCheckBoxCircular.setEnabled(!true);
            jCheckBoxFabricar.setEnabled(!true);
            jCheckBoxFabricar1.setEnabled(!true);
            jCheckBoxFisica.setEnabled(!true);
            jCheckBoxImpedir.setEnabled(!true);
            jCheckBoxPortar.setEnabled(!true);
            jCheckBoxDificultar1.setEnabled(!true);
            jCheckBoxImprovisar.setEnabled(!true);
            jCheckBoxInduzir.setEnabled(!true);
            jCheckBoxSimular.setEnabled(!true);
            jCheckBoxDivulgar.setEnabled(!true);
            jCheckBoxRecusar1.setEnabled(!true);
            jCheckBoxSubmeter.setEnabled(!true);
            jCheckBoxDeixar.setEnabled(!true);
            //
            jLabel4.setEnabled(!true);
            jLabel6.setEnabled(!true);
            jLabel7.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM FALTAS_INDISCIPLINAR_INDIVIDUAL_INTERNOS_01");
            conecta.rs.last();
            codigoFaltaFO2 = conecta.rs.getInt("IdFaltaFO2");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void buscarRegstro() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM FALTAS_INDISCIPLINAR_INDIVIDUAL_INTERNOS_01 "
                    + "WHERE IdReg='" + jCodigoReg.getText() + "' "
                    + "AND IdInternoCrc='" + jCodigoInternoReg.getText() + "'");
            conecta.rs.first();
            codigoFaltaFO2 = conecta.rs.getInt("IdFaltaFO2");
            incitar = conecta.rs.getInt("Incitar");
            if (incitar == 1) {
                jCheckBoxIncitar.setSelected(true);
            } else if (incitar == 0) {
                jCheckBoxIncitar.setSelected(!true);
            }
            fugir = conecta.rs.getInt("Fugir");
            if (fugir == 1) {
                jCheckBoxFugir.setSelected(true);
            } else if (fugir == 0) {
                jCheckBoxFugir.setSelected(!true);
            }
            possuir = conecta.rs.getInt("Possuir");
            if (possuir == 1) {
                jCheckBoxPossuir.setSelected(true);
            } else if (possuir == 0) {
                jCheckBoxPossuir.setSelected(!true);
            }
            provocar = conecta.rs.getInt("Provocar");
            if (provocar == 1) {
                jCheckBoxProvocar.setSelected(true);
            } else if (provocar == 0) {
                jCheckBoxProvocar.setSelected(!true);
            }
            descumprir = conecta.rs.getInt("Descumprir");
            if (descumprir == 1) {
                jCheckBoxDescumprir.setSelected(true);
            } else if (descumprir == 0) {
                jCheckBoxDescumprir.setSelected(!true);
            }
            desobedecer = conecta.rs.getInt("Desobedecer");
            if (desobedecer == 1) {
                jCheckBoxDesobedecer.setSelected(true);
            } else if (desobedecer == 0) {
                jCheckBoxDesobedecer.setSelected(!true);
            }
            recusar = conecta.rs.getInt("Recusar");
            if (recusar == 1) {
                jCheckBoxRecusar.setSelected(true);
            } else if (recusar == 0) {
                jCheckBoxRecusar.setSelected(!true);
            }
            posse = conecta.rs.getInt("Posse");
            if (posse == 1) {
                jCheckBoxPosse.setSelected(true);
            } else if (posse == 0) {
                jCheckBoxPosse.setSelected(!true);
            }
            praticarFato = conecta.rs.getInt("PraticarFato");
            if (praticarFato == 1) {
                jCheckBoxPraticar.setSelected(true);
            } else if (praticarAto == 0) {
                jCheckBoxPraticar.setSelected(!true);
            }
            // FALTA MÉDIA
            realiza = conecta.rs.getInt("Realiza");
            if (realiza == 1) {
                jCheckBoxRealizar.setSelected(true);
            } else if (realiza == 0) {
                jCheckBoxRealizar.setSelected(!true);
            }
            praticarAto = conecta.rs.getInt("PraticarAto");
            if (praticarAto == 1) {
                jCheckBoxPraticar1.setSelected(true);
            } else if (praticarAto == 0) {
                jCheckBoxPraticar1.setSelected(!true);
            }
            dificultar = conecta.rs.getInt("Dificultar");
            if (dificultar == 1) {
                jCheckBoxDificultar.setSelected(true);
            } else if (dificultar == 0) {
                jCheckBoxDificultar.setSelected(!true);
            }
            circular = conecta.rs.getInt("Circular");
            if (circular == 1) {
                jCheckBoxCircular.setSelected(true);
            } else if (circular == 0) {
                jCheckBoxCircular.setSelected(!true);
            }
            fabricar = conecta.rs.getInt("Fabricar");
            if (fabricar == 1) {
                jCheckBoxFabricar.setSelected(true);
            } else if (fabricar == 0) {
                jCheckBoxFabricar.setSelected(!true);
            }
            fabricar2 = conecta.rs.getInt("Fabricar2");
            if (fabricar2 == 1) {
                jCheckBoxFabricar1.setSelected(true);
            } else if (fabricar2 == 0) {
                jCheckBoxFabricar1.setSelected(!true);
            }
            fisica = conecta.rs.getInt("Fisica");
            if (fisica == 1) {
                jCheckBoxFisica.setSelected(true);
            } else if (fisica == 0) {
                jCheckBoxFisica.setSelected(!true);
            }
            impedir = conecta.rs.getInt("Impedir");
            if (impedir == 1) {
                jCheckBoxImpedir.setSelected(true);
            } else if (impedir == 0) {
                jCheckBoxImpedir.setSelected(!true);
            }
            portar = conecta.rs.getInt("Portar");
            if (portar == 1) {
                jCheckBoxPortar.setSelected(true);
            } else if (portar == 0) {
                jCheckBoxPortar.setSelected(!true);
            }
            dificultar1 = conecta.rs.getInt("Dificultar1");
            if (dificultar1 == 1) {
                jCheckBoxDificultar1.setSelected(true);
            } else if (dificultar1 == 0) {
                jCheckBoxDificultar1.setSelected(!true);
            }
            improvisar = conecta.rs.getInt("Improvisar");
            if (improvisar == 1) {
                jCheckBoxImprovisar.setSelected(true);
            } else if (improvisar == 0) {
                jCheckBoxImprovisar.setSelected(!true);
            }
            induzir = conecta.rs.getInt("Induzir");
            if (induzir == 1) {
                jCheckBoxInduzir.setSelected(true);
            } else if (induzir == 0) {
                jCheckBoxInduzir.setSelected(!true);
            }
            simular = conecta.rs.getInt("Simular");
            if (simular == 1) {
                jCheckBoxSimular.setSelected(true);
            } else if (simular == 0) {
                jCheckBoxSimular.setSelected(!true);
            }
            divulgar = conecta.rs.getInt("Divulgar");
            if (divulgar == 1) {
                jCheckBoxDivulgar.setSelected(true);
            } else if (divulgar == 0) {
                jCheckBoxDivulgar.setSelected(!true);
            }
            recusar1 = conecta.rs.getInt("Recusar1");
            if (recusar1 == 1) {
                jCheckBoxRecusar1.setSelected(true);
            } else if (recusar1 == 0) {
                jCheckBoxRecusar1.setSelected(!true);
            }
            submeter = conecta.rs.getInt("Submeter");
            if (submeter == 1) {
                jCheckBoxSubmeter.setSelected(true);
            } else if (submeter == 0) {
                jCheckBoxSubmeter.setSelected(!true);
            }
            deixar = conecta.rs.getInt("deixar");
            if (deixar == 1) {
                jCheckBoxDeixar.setSelected(true);
            } else if (deixar == 0) {
                jCheckBoxDeixar.setSelected(!true);
            }
        } catch (Exception e) {
        }
        conecta.desconecta();
        if (codigoFaltaFO2 != 0 && jStatusReg.getText().equals("ABERTO")) {
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
        } else if (codigoFaltaFO2 != 0 && jStatusReg.getText().equals("FINALIZADO")) {
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
        }
    }

    public void verificarRegistro() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM FALTAS_INDISCIPLINAR_INDIVIDUAL_INTERNOS_01 "
                    + "WHERE IdReg='" + jCodigoReg.getText() + "' "
                    + "AND IdInternoCrc='" + jCodigoInternoReg.getText() + "'");
            conecta.rs.first();
            codigoRegistro = conecta.rs.getString("IdReg");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(codigoFaltaFO2);
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
