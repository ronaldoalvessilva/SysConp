/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEfetivaLoteAC;
import gestor.Controle.ControleHistoricoMovimentacaoAC;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleProdutosAC;
import static gestor.Controle.ControleProdutosMedicamentos.codLocal;
import gestor.Controle.ControleSaldoProdutoAC;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.LimiteDigitosNum;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.HistoricoMovimentacaoEstoque;
import gestor.Modelo.LogSistema;
import gestor.Modelo.ProdutoMedicamento;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author user
 */
public class TelaProdutosAC extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ProdutoMedicamento objProdMed = new ProdutoMedicamento();
    ControleProdutosAC control = new ControleProdutosAC();
    ControleSaldoProdutoAC controlEst = new ControleSaldoProdutoAC();
    ControleEfetivaLoteAC controleLote = new ControleEfetivaLoteAC();
    // HISTÓRICO DE MOVIMENTAÇÃO DO ESTOQUE
    HistoricoMovimentacaoEstoque objHistMovAC = new HistoricoMovimentacaoEstoque();
    ControleHistoricoMovimentacaoAC controlHistMov = new ControleHistoricoMovimentacaoAC();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Almoxarifado:Cadastro de Produtos:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int flag, acao;
    String codProdutoLote, codProdutoSaldo;
    String loteProdutos = "";
    String dataVencto;
    String caminhoFoto;
    String caminhoFoto1;
    String tipoInventario = "I"; // PARA O ITEM CADASTRADO PELA PRIMEIRA VEZ.
    double valorCompra = 0;
    double qtdCompra = 0;
    double qtdSaida = 0;
    double aliquotaICMS = 0;
    double aliquotaIPI = 0;
    double estoqueMaximo = 0;
    double estoqueMinimo = 0;
    double pontoPedido = 0;
    double saldoAtual = 0;
    double qtdLote = 0;
    int count = 0;
    String dataDocumeto;
    double valorUnitCompra = 0;
    double qtdItemCompra = 0;
    String qtdItemComp;
    String valorUnitComp;
    String nomeProdutoAC; //VARIVALE PARA VERIFICAR SE O PRODUTO JÁ EXISTE.
    String modulo = "A";

    /**
     * Creates new form TelaMedicamentos
     */
    public TelaProdutosAC() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPesqDescricaoProd = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jCheckBoxPesqTodos = new javax.swing.JCheckBox();
        jBtPesqDescProd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPesqCodigo = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqReferencia = new javax.swing.JButton();
        jPesqReferencia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaProdutos = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        MenuBotoes = new javax.swing.JPanel();
        jBtSair = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel21 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jIdProduto = new javax.swing.JTextField();
        jCodigoBarra = new javax.swing.JFormattedTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jComboBoxStatusProduto = new javax.swing.JComboBox();
        jComboBoxUnidProduto = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jDescricaoProduto = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jIdGrupo = new javax.swing.JTextField();
        jDescricaoGrupo = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jIdFor = new javax.swing.JTextField();
        jNomeFornecedor = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jBtPesqGrupoMedicamentos = new javax.swing.JButton();
        jBtPesqFornecedor = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        jDataFabricacao = new com.toedter.calendar.JDateChooser();
        jReferencia = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jFotoProduto = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jFotoProduto1 = new javax.swing.JLabel();
        jBtExcluirFoto = new javax.swing.JButton();
        jBtNovaFoto = new javax.swing.JButton();
        jBtNovaFoto1 = new javax.swing.JButton();
        jBtExcluirFoto1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jValorCompraProduto = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jDataCompra = new com.toedter.calendar.JDateChooser();
        jDataValidadeProduto = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jQtdCompra = new javax.swing.JFormattedTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        jQtdSaida = new javax.swing.JFormattedTextField();
        jPanel13 = new javax.swing.JPanel();
        jLocalMaster = new javax.swing.JTextField();
        jBtPesqLocal = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jAliquotaIcms = new javax.swing.JFormattedTextField();
        jAliquotaIpi = new javax.swing.JFormattedTextField();
        jLabel29 = new javax.swing.JLabel();
        jClassificacao = new javax.swing.JFormattedTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jEstoqueMaximo = new javax.swing.JFormattedTextField();
        jEstoqueMinimo = new javax.swing.JFormattedTextField();
        jPontoPedido = new javax.swing.JFormattedTextField();
        jSaldoAtual = new javax.swing.JFormattedTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaLote = new javax.swing.JTable();
        MenuBotoes1 = new javax.swing.JPanel();
        jBtCancelar1 = new javax.swing.JButton();
        jBtSalvar1 = new javax.swing.JButton();
        jBtExcluir1 = new javax.swing.JButton();
        jBtAlterar1 = new javax.swing.JButton();
        jBtNovo1 = new javax.swing.JButton();
        jBtSair1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaHistoricoFornecedor = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPesqDescricaoFornecedor = new javax.swing.JTextField();
        jBtPesqFornecedorProduto = new javax.swing.JButton();
        jCheckBoxTodosFornecedoresProduto = new javax.swing.JCheckBox();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jtotalRegistrosProduto = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Produtos {AC} :::...");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listagem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jPesqDescricaoProd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Descrição:");

        jCheckBoxPesqTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxPesqTodos.setText("Todos");
        jCheckBoxPesqTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxPesqTodosItemStateChanged(evt);
            }
        });

        jBtPesqDescProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDescProd.setContentAreaFilled(false);
        jBtPesqDescProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDescProdActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Referência:");

        jPesqCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPesqCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqReferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqReferencia.setContentAreaFilled(false);
        jBtPesqReferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqReferenciaActionPerformed(evt);
            }
        });

        jPesqReferencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPesqReferencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPesqDescricaoProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesqDescProd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPesqReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxPesqTodos)
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addGap(4, 4, 4))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jLabel2)
                    .addComponent(jBtPesqReferencia)
                    .addComponent(jCheckBoxPesqTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(jPesqDescricaoProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDescProd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaProdutos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Status", "Código Barras", "Descrição", "Grupo"
            }
        ));
        jTabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaProdutos);
        if (jTabelaProdutos.getColumnModel().getColumnCount() > 0) {
            jTabelaProdutos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaProdutos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaProdutos.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaProdutos.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaProdutos.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaProdutos.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaProdutos.getColumnModel().getColumn(3).setMinWidth(280);
            jTabelaProdutos.getColumnModel().getColumn(3).setMaxWidth(280);
            jTabelaProdutos.getColumnModel().getColumn(4).setMinWidth(180);
            jTabelaProdutos.getColumnModel().getColumn(4).setMaxWidth(180);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane5.setViewportView(jObservacao);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Observação:");

        MenuBotoes.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuBotoesLayout = new javax.swing.GroupLayout(MenuBotoes);
        MenuBotoes.setLayout(MenuBotoesLayout);
        MenuBotoesLayout.setHorizontalGroup(
            MenuBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuBotoesLayout.setVerticalGroup(
            MenuBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovo)
            .addComponent(jBtAlterar)
            .addComponent(jBtExcluir)
            .addComponent(jBtSalvar)
            .addComponent(jBtCancelar)
            .addComponent(jBtSair)
        );

        jBtAuditoria.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoria.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jTabbedPane2.setForeground(new java.awt.Color(0, 153, 0));
        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setText("Código");

        jIdProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdProduto.setEnabled(false);

        jCodigoBarra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoBarra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoBarra.setEnabled(false);

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel38.setText("Código Barra");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setText("Status");

        jComboBoxStatusProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatusProduto.setForeground(new java.awt.Color(153, 0, 51));
        jComboBoxStatusProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jComboBoxStatusProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatusProduto.setEnabled(false);

        jComboBoxUnidProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UN", "Caixa", "Pacote", "Ml", "Kg", "Litro", "Peça", "Amp", "Kit", "PR" }));
        jComboBoxUnidProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidProduto.setEnabled(false);

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Unidade");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("Descrição do Produto");

        jDescricaoProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoProduto.setEnabled(false);

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("Código ");

        jIdGrupo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdGrupo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdGrupo.setEnabled(false);

        jDescricaoGrupo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoGrupo.setEnabled(false);

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("Descrição do Grupo");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel41.setText("Código");

        jIdFor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdFor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdFor.setEnabled(false);

        jNomeFornecedor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeFornecedor.setEnabled(false);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel39.setText("Nome do Fornecedor");

        jBtPesqGrupoMedicamentos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqGrupoMedicamentos.setContentAreaFilled(false);
        jBtPesqGrupoMedicamentos.setEnabled(false);
        jBtPesqGrupoMedicamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqGrupoMedicamentosActionPerformed(evt);
            }
        });

        jBtPesqFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqFornecedor.setContentAreaFilled(false);
        jBtPesqFornecedor.setEnabled(false);
        jBtPesqFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqFornecedorActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setText("Dt. Fabricação");

        jDataFabricacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataFabricacao.setEnabled(false);

        jReferencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jReferencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jReferencia.setEnabled(false);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setText("Referência");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDescricaoProduto)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jComboBoxStatusProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxUnidProduto, 0, 88, Short.MAX_VALUE)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43)
                                    .addComponent(jDataFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel42)))
                            .addComponent(jLabel34)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36)
                                    .addComponent(jIdGrupo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(jIdFor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                                    .addComponent(jLabel41))
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel21Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel39)
                                            .addComponent(jDescricaoGrupo, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)))
                                    .addGroup(jPanel21Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jNomeFornecedor)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBtPesqFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBtPesqGrupoMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel21Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdFor, jIdGrupo, jIdProduto});

        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(jLabel38))
                        .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxStatusProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUnidProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addGap(3, 3, 3)
                .addComponent(jDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqGrupoMedicamentos))
                .addGap(26, 26, 26)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdFor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel39))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jPanel21Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDescricaoGrupo, jNomeFornecedor});

        jTabbedPane2.addTab("Dados do Produto", jPanel21);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Foto2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoProduto1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoProduto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jBtExcluirFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirFoto.setContentAreaFilled(false);
        jBtExcluirFoto.setEnabled(false);
        jBtExcluirFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirFotoActionPerformed(evt);
            }
        });

        jBtNovaFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovaFoto.setContentAreaFilled(false);
        jBtNovaFoto.setEnabled(false);
        jBtNovaFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaFotoActionPerformed(evt);
            }
        });

        jBtNovaFoto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovaFoto1.setContentAreaFilled(false);
        jBtNovaFoto1.setEnabled(false);
        jBtNovaFoto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaFoto1ActionPerformed(evt);
            }
        });

        jBtExcluirFoto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirFoto1.setContentAreaFilled(false);
        jBtExcluirFoto1.setEnabled(false);
        jBtExcluirFoto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirFoto1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jBtExcluirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtNovaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jBtExcluirFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtNovaFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel22Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel19, jPanel20});

        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jBtNovaFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(jBtNovaFoto1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirFoto1))
                    .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Foto", jPanel22);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MenuBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTabbedPane2))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAuditoria))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MenuBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações de Compras", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Valor Compra R$");

        jValorCompraProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorCompraProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorCompraProduto.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Ult.Compra");

        jDataCompra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataCompra.setEnabled(false);

        jDataValidadeProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataValidadeProduto.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Data Validade");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Qtd. Compra");

        jQtdCompra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQtdCompra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQtdCompra.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jValorCompraProduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jDataValidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jQtdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel10))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataValidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jQtdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(7, 7, 7)
                        .addComponent(jValorCompraProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações Saída", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Ult. Saida");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Qtd.Saída");

        jQtdSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQtdSaida.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQtdSaida.setEnabled(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jQtdSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jQtdSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Local de Armazenamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jLocalMaster.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLocalMaster.setEnabled(false);

        jBtPesqLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqLocal.setContentAreaFilled(false);
        jBtPesqLocal.setEnabled(false);
        jBtPesqLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqLocalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLocalMaster)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLocalMaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jBtPesqLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Impostos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("ICMS %");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("IPI %");

        jAliquotaIcms.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jAliquotaIcms.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jAliquotaIcms.setEnabled(false);

        jAliquotaIpi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jAliquotaIpi.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jAliquotaIpi.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Class. Fiscal");

        jClassificacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jClassificacao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jClassificacao.setEnabled(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jAliquotaIcms, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel28))
                    .addComponent(jAliquotaIpi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addComponent(jClassificacao))
                .addContainerGap())
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jAliquotaIcms, jAliquotaIpi});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jAliquotaIpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAliquotaIcms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jAliquotaIcms, jAliquotaIpi});

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estoque", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Estoque Máximo:");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Estoque Minimo:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Ponto Pedido:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Saldo Atual:");

        jEstoqueMaximo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jEstoqueMaximo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jEstoqueMaximo.setEnabled(false);

        jEstoqueMinimo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jEstoqueMinimo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jEstoqueMinimo.setEnabled(false);

        jPontoPedido.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPontoPedido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPontoPedido.setEnabled(false);

        jSaldoAtual.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSaldoAtual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jSaldoAtual.setEnabled(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPontoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEstoqueMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSaldoAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jEstoqueMaximo, jEstoqueMinimo, jPontoPedido, jSaldoAtual});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel24)
                    .addComponent(jEstoqueMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel25)
                    .addComponent(jEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel26)
                    .addComponent(jPontoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel27)
                    .addComponent(jSaldoAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jEstoqueMaximo, jEstoqueMinimo, jPontoPedido, jSaldoAtual});

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Vencimento/Lote", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 51, 0))); // NOI18N

        jTabelaLote.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaLote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Data Vcto.", "Lote", "Quantidade"
            }
        ));
        jScrollPane4.setViewportView(jTabelaLote);
        if (jTabelaLote.getColumnModel().getColumnCount() > 0) {
            jTabelaLote.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaLote.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaLote.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaLote.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaLote.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaLote.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        MenuBotoes1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar1.setText("Cancelar");
        jBtCancelar1.setContentAreaFilled(false);
        jBtCancelar1.setEnabled(false);
        jBtCancelar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelar1ActionPerformed(evt);
            }
        });

        jBtSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar1.setText("Gravar");
        jBtSalvar1.setContentAreaFilled(false);
        jBtSalvar1.setEnabled(false);
        jBtSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvar1ActionPerformed(evt);
            }
        });

        jBtExcluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir1.setText("Excluir");
        jBtExcluir1.setContentAreaFilled(false);
        jBtExcluir1.setEnabled(false);
        jBtExcluir1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluir1ActionPerformed(evt);
            }
        });

        jBtAlterar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar1.setText("Alterar");
        jBtAlterar1.setContentAreaFilled(false);
        jBtAlterar1.setEnabled(false);
        jBtAlterar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterar1ActionPerformed(evt);
            }
        });

        jBtNovo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovo1.setText("Novo");
        jBtNovo1.setContentAreaFilled(false);
        jBtNovo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovo1ActionPerformed(evt);
            }
        });

        jBtSair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair1.setText("Sair");
        jBtSair1.setContentAreaFilled(false);
        jBtSair1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSair1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuBotoes1Layout = new javax.swing.GroupLayout(MenuBotoes1);
        MenuBotoes1.setLayout(MenuBotoes1Layout);
        MenuBotoes1Layout.setHorizontalGroup(
            MenuBotoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuBotoes1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAlterar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair1)
                .addGap(35, 35, 35))
        );
        MenuBotoes1Layout.setVerticalGroup(
            MenuBotoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovo1)
            .addComponent(jBtAlterar1)
            .addComponent(jBtExcluir1)
            .addComponent(jBtSalvar1)
            .addComponent(jBtCancelar1)
            .addComponent(jBtSair1)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(MenuBotoes1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MenuBotoes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel11, jPanel14});

        jTabbedPane1.addTab("Outras Informações", jPanel5);

        jTabelaHistoricoFornecedor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaHistoricoFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Data Compra", "Nr. Doc.", "Código", "Nome do Fornecedor", "Qtde.", "Vl. Unit."
            }
        ));
        jScrollPane2.setViewportView(jTabelaHistoricoFornecedor);
        if (jTabelaHistoricoFornecedor.getColumnModel().getColumnCount() > 0) {
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setMinWidth(80);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setMaxWidth(80);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setMinWidth(60);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setMaxWidth(60);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(3).setMinWidth(280);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(3).setMaxWidth(280);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setMinWidth(40);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setMaxWidth(40);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setMinWidth(70);
            jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Descrição:");

        jPesqDescricaoFornecedor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPesqDescricaoFornecedor.setEnabled(false);

        jBtPesqFornecedorProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqFornecedorProduto.setContentAreaFilled(false);
        jBtPesqFornecedorProduto.setEnabled(false);
        jBtPesqFornecedorProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqFornecedorProdutoActionPerformed(evt);
            }
        });

        jCheckBoxTodosFornecedoresProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodosFornecedoresProduto.setText("Todos");
        jCheckBoxTodosFornecedoresProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosFornecedoresProdutoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesqDescricaoFornecedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqFornecedorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxTodosFornecedoresProduto)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqDescricaoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqFornecedorProduto)
                    .addComponent(jCheckBoxTodosFornecedoresProduto)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistrosProduto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistrosProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistrosProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel64.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel64))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel64)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Histórico de Fornecedor", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 430));

        setBounds(300, 10, 475, 462);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        corCampos();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        acao = 2;
        Alterar();
        corCampos();
        statusMov = "Alterou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:    
        verificarProdutoLote(); // Verificar se o produto tem lote para impedir de excluir
        verificarProdutoSaldoEstoque(); // Verifiar se o produto tem saldo para impedir de excluir.
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (jIdProduto.getText().equals(codProdutoLote)) {
            JOptionPane.showMessageDialog(rootPane, "Esse produto não pode ser excluído, existe lote para o mesmo.");
        } else if (jIdProduto.getText().equals(codProdutoSaldo)) {
            JOptionPane.showMessageDialog(rootPane, "Esse produto não pode ser excluído, existe saldo de estoque ou já teve movimentação.");
        } else {
            if (resposta == JOptionPane.YES_OPTION) {
                objProdMed.setIdProd(Integer.parseInt(jIdProduto.getText()));
                control.excluirProdutoAC(objProdMed);
                controlEst.excluirEstoqueProduto(objProdMed);
                controlHistMov.excluirHistoricoProdutoAC(objHistMovAC);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        DecimalFormat valorReal = new DecimalFormat("###,##00.0");
        valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
        if (jComboBoxStatusProduto.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe se o produto está ativo ou inativo.");
            jComboBoxStatusProduto.requestFocus();
            jComboBoxStatusProduto.setBackground(Color.red);
        } else if (jDescricaoGrupo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a que grupo o produto pertence.");
        } else if (jDescricaoProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a descrição do produto.");
            jDescricaoProduto.requestFocus();
            jDescricaoProduto.setBackground(Color.red);
        } else if (jComboBoxUnidProduto.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a unidade de armazenamento do produto.");
            jComboBoxUnidProduto.requestFocus();
            jComboBoxUnidProduto.setBackground(Color.red);
        } else if (jLocalMaster.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a localidade de armazenamento do produto.");
        } else if (jNomeFornecedor.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do fornecedor para esse produto.");
        } else {
            objProdMed.setStatusProd((String) jComboBoxStatusProduto.getSelectedItem());
            objProdMed.setCodigoBarra(jCodigoBarra.getText());
            objProdMed.setDescricao(jDescricaoProduto.getText());
            objProdMed.setUnidade((String) jComboBoxUnidProduto.getSelectedItem());
            objProdMed.setReferencia(jReferencia.getText());
            objProdMed.setFotoProduto(caminhoFoto);
            objProdMed.setFotoProduto1(caminhoFoto1);
            objProdMed.setDataFabricacao(jDataFabricacao.getDate());
            objProdMed.setDataCompra(jDataCompra.getDate());
            objProdMed.setDataValidade(jDataValidadeProduto.getDate());
            objProdMed.setModulo(modulo);
            try {
                objProdMed.setValorCompra(valorReal.parse(jValorCompraProduto.getText()).floatValue());
                objProdMed.setQtdCompra(valorReal.parse(jQtdCompra.getText()).floatValue());
                objProdMed.setQtdSaida(valorReal.parse(jQtdSaida.getText()).floatValue());
                objProdMed.setAliquotaIcms(valorReal.parse(jAliquotaIcms.getText()).floatValue());
                objProdMed.setAliquotaIpi(valorReal.parse(jAliquotaIpi.getText()).floatValue());
                //
                objProdMed.setEstoqueMaximo(valorReal.parse(jEstoqueMaximo.getText()).floatValue());
                objProdMed.setEstoqueMinimo(valorReal.parse(jEstoqueMinimo.getText()).floatValue());
                objProdMed.setPontoPedido(valorReal.parse(jPontoPedido.getText()).floatValue());
                objProdMed.setSaldoAtual(valorReal.parse(jSaldoAtual.getText()).floatValue());                
            } catch (ParseException ex) {
            }
            objProdMed.setDataSaida(jDataSaida.getDate());
            objProdMed.setClassificaoFiscal(jClassificacao.getText());
            objProdMed.setObservacao(jObservacao.getText());
            objProdMed.setLote(loteProdutos);
            objProdMed.setQtdLote((float) qtdLote);
            objProdMed.setTipoInventario(tipoInventario);
            if (acao == 1) {
                // VERIFICAR SE O PRODUTO JÁ FOI CADASTRADO, CASO JÁ TENHA SIDO CADASTRADO BLOQUEIA
                verificarProdutoCadastrado();
                if (jDescricaoProduto.getText().trim().equals(nomeProdutoAC)) {
                    JOptionPane.showMessageDialog(rootPane, "Produto já foi cadastrado.");
                } else {
                    objProdMed.setUsuarioInsert(nameUser);
                    objProdMed.setDataInsert(dataModFinal);
                    objProdMed.setHorarioInsert(horaMov);
                    //
                    objProdMed.setNomeGrupo(jDescricaoGrupo.getText());
                    objProdMed.setDescricaoFornecedor(jNomeFornecedor.getText());
                    objProdMed.setNomeLocal(jLocalMaster.getText());
                    control.incluirProdutoAC(objProdMed);
                    buscarID();
                    objProdMed.setIdProd(Integer.valueOf(jIdProduto.getText()));
                    objProdMed.setIdLocal(codLocal);
                    controlEst.incluirEstoqueProduto(objProdMed);
                    // Incluir o produto na tabela de lotes (LOTEPRODUTOS)
                    // Somente inlui o produto, não altera, as alterações somente a quantidade no inventário.
                    controleLote.incluirLoteProdutoAC(objProdMed);
                    // CRIAR PRODUTO PARA CONSULTA NA TABELA HISTORICO_NOVIMENTACAO_ESTOQUE_FAR
                    objHistMovAC.setIdProd(Integer.valueOf(jIdProduto.getText()));
                    objHistMovAC.setIdLocal(codLocal);
                    objHistMovAC.setDescricaoLocal(jLocalMaster.getText());
                    objHistMovAC.setSaldoAtual((float) qtdLote);
                    controlHistMov.incluirHistoricoProdutoCadastroAC(objHistMovAC);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
            if (acao == 2) {
                objProdMed.setUsuarioUp(nameUser);
                objProdMed.setDataUp(dataModFinal);
                objProdMed.setHorarioUp(horaMov);
                //
                objProdMed.setNomeGrupo(jDescricaoGrupo.getText());
                objProdMed.setDescricaoFornecedor(jNomeFornecedor.getText());
                objProdMed.setNomeLocal(jLocalMaster.getText());
                objProdMed.setIdProd(Integer.valueOf(jIdProduto.getText()));
                control.alterarProdutoAC(objProdMed);
                controlEst.alterarEstoqueProduto(objProdMed);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqLocalActionPerformed
        // TODO add your handling code here:
        TelaPesqLocalArmProdutoAC objPesqLocalProdAC = new TelaPesqLocalArmProdutoAC();
        TelaModuloAlmoxarifado.jPainelAlmoxarifado.add(objPesqLocalProdAC);
        objPesqLocalProdAC.show();
    }//GEN-LAST:event_jBtPesqLocalActionPerformed

    private void jBtPesqDescProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDescProdActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqDescricaoProd.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe uma descrição para ser pesquisada.");
        } else {
            preencherTabelaProdutos("SELECT * FROM PRODUTOS_AC "
                    + "INNER JOIN GRUPO_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdGrupo=GRUPO_PRODUTOS_AC.IdGrupo "
                    + "INNER JOIN FORNECEDORES_AC "
                    + "ON PRODUTOS_AC.IdForn=FORNECEDORES_AC.IdForn "
                    + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
                    + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                    + "INNER JOIN LOTE_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdProd=LOTE_PRODUTOS_AC.IdProd "
                    + "INNER JOIN SALDO_ESTOQUE_AC "
                    + "ON PRODUTOS_AC.IdProd=SALDO_ESTOQUE_AC.IdProd "
                    + "WHERE DescricaoProd LIKE'%" + jPesqDescricaoProd.getText() + "%'AND PRODUTOS_AC.Modulo='" + modulo + "'");
        }
    }//GEN-LAST:event_jBtPesqDescProdActionPerformed

    private void jTabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaProdutosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String descricaoProduto = "" + jTabelaProdutos.getValueAt(jTabelaProdutos.getSelectedRow(), 3);
            jPesqDescricaoProd.setText(descricaoProduto);
            String idProd = "" + jTabelaProdutos.getValueAt(jTabelaProdutos.getSelectedRow(), 0);
            jPesqCodigo.setText(idProd);
            //
            jFotoProduto.setIcon(null);
            jIdProduto.setText(idProd);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovo1.setEnabled(true);
            jBtAlterar1.setEnabled(true);
            jBtExcluir1.setEnabled(true);
            jBtSalvar1.setEnabled(!true);
            jBtCancelar1.setEnabled(true);
            jBtPesqFornecedorProduto.setEnabled(true);
            jPesqDescricaoFornecedor.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM PRODUTOS_AC "
                        + "INNER JOIN GRUPO_PRODUTOS_AC "
                        + "ON PRODUTOS_AC.IdGrupo=GRUPO_PRODUTOS_AC.IdGrupo "
                        + "INNER JOIN FORNECEDORES_AC ON PRODUTOS_AC.IdForn=FORNECEDORES_AC.IdForn "
                        + "INNER JOIN LOCAL_ARMAZENAMENTO_AC ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                        + "INNER JOIN SALDO_ESTOQUE_AC ON PRODUTOS_AC.IdProd=SALDO_ESTOQUE_AC.IdProd "
                        + "WHERE DescricaoProd='" + jPesqDescricaoProd.getText() + "'AND PRODUTOS_AC.IdProd='" + idProd + "'");
                conecta.rs.first();
                jIdProduto.setText(String.valueOf(conecta.rs.getInt("IdProd")));
                jCodigoBarra.setText(conecta.rs.getString("CodigoBarra"));
                jComboBoxStatusProduto.setSelectedItem(conecta.rs.getString("StatusProd"));
                jComboBoxUnidProduto.setSelectedItem(conecta.rs.getString("UnidadeProd"));
                jDescricaoProduto.setText(conecta.rs.getString("DescricaoProd"));
                jIdGrupo.setText(String.valueOf(conecta.rs.getInt("IdGrupo")));
                jDescricaoGrupo.setText(conecta.rs.getString("NomeGrupo"));
                jIdFor.setText(conecta.rs.getString("IdForn"));
                jNomeFornecedor.setText(conecta.rs.getString("RazaoSocial"));
                jDataFabricacao.setDate(conecta.rs.getDate("DataFabricacao"));
                jReferencia.setText(conecta.rs.getString("ReferenciaProd"));
                // Capturando foto
                caminhoFoto = conecta.rs.getString("FotoProduto");
                if (caminhoFoto != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoFoto);
                    jFotoProduto.setIcon(i);
                    jFotoProduto.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoProduto.getWidth(), jFotoProduto.getHeight(), Image.SCALE_DEFAULT)));
                }
                caminhoFoto1 = conecta.rs.getString("FotoProduto2");
                if (caminhoFoto1 != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoFoto1);
                    jFotoProduto1.setIcon(i);
                    jFotoProduto1.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoProduto1.getWidth(), jFotoProduto1.getHeight(), Image.SCALE_DEFAULT)));
                }
                jObservacao.setText(conecta.rs.getString("Observacao"));
                jDataCompra.setDate(conecta.rs.getDate("DataCompra"));
                // Formata o valor para ser exibido na tela no formato BR                                                   
                valorCompra = conecta.rs.getFloat("ValorCompra");
                DecimalFormat vc = new DecimalFormat(",###0.00");
                String vlDeposito = vc.format(valorCompra);
                jValorCompraProduto.setText(vlDeposito);
                //
                jDataValidadeProduto.setDate(conecta.rs.getDate("DataValidade"));
                //
                qtdCompra = conecta.rs.getFloat("QtdCompra");
                DecimalFormat qc = new DecimalFormat(",###0.00");
                String qtdComp = qc.format(qtdCompra);
                jQtdCompra.setText(qtdComp);
                //                
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                //
                qtdSaida = conecta.rs.getFloat("QtdSaida");
                DecimalFormat qs = new DecimalFormat(",###0.00");
                String qtdSai = qs.format(qtdSaida);
                jQtdSaida.setText(qtdSai);
                //               
                aliquotaICMS = conecta.rs.getFloat("AliquotaIcms");
                DecimalFormat aicm = new DecimalFormat(",###0.00");
                String aliICM = aicm.format(aliquotaICMS);
                jAliquotaIcms.setText(aliICM);
                //                
                aliquotaIPI = conecta.rs.getFloat("AliquotaIpi");
                DecimalFormat aipi = new DecimalFormat(",###0.00");
                String aliIPI = aipi.format(aliquotaIPI);
                jAliquotaIpi.setText(aliIPI);
                //
                jClassificacao.setText(conecta.rs.getString("ClassificacaoFiscal"));
                jLocalMaster.setText(conecta.rs.getString("DescricaoLocal"));
                //               
                estoqueMaximo = conecta.rs.getFloat("EstoqueMaximo");
                DecimalFormat estma = new DecimalFormat(",###0.00");
                String estMax = estma.format(estoqueMaximo);
                jEstoqueMaximo.setText(estMax);
                //                
                estoqueMinimo = conecta.rs.getFloat("EstoqueMinimo");
                DecimalFormat estmi = new DecimalFormat(",###0.00");
                String estMin = estmi.format(estoqueMinimo);
                jEstoqueMinimo.setText(estMin);
                //               
                pontoPedido = conecta.rs.getFloat("PontoPedido");
                DecimalFormat pp = new DecimalFormat(",###0.00");
                String pontPed = pp.format(pontoPedido);
                jPontoPedido.setText(pontPed);
                //
                objProdMed.setIdProd(Integer.valueOf(jIdProduto.getText()));
                SomaProduto();
                objProdMed.setSaldoAtual((float) saldoAtual);
                DecimalFormat sa = new DecimalFormat(",###0.00");
                String salAtu = sa.format(saldoAtual);
                jSaldoAtual.setText(salAtu);
                //
                preencherTabelaLotes("SELECT * FROM LOTE_PRODUTOS_AC "
                        + "INNER JOIN PRODUTOS_AC "
                        + "ON LOTE_PRODUTOS_AC.IdProd=PRODUTOS_AC.IdProd "
                        + "WHERE LOTE_PRODUTOS_AC.IdProd='" + jIdProduto.getText() + "' AND Qtd!='" + 0 + "'");
                conecta.desconecta();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jTabelaProdutosMouseClicked

    private void jCheckBoxPesqTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxPesqTodosItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaProdutos("SELECT * FROM PRODUTOS_AC "
                    + "INNER JOIN GRUPO_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdGrupo=GRUPO_PRODUTOS_AC.IdGrupo "
                    + "INNER JOIN FORNECEDORES_AC "
                    + "ON PRODUTOS_AC.IdForn=FORNECEDORES_AC.IdForn "
                    + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
                    + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                    + "WHERE PRODUTOS_AC.Modulo='" + modulo + "'ORDER BY PRODUTOS_AC.DescricaoProd");                   
        } else {
            jtotalRegistros.setText("");
            limparTabelaProdutos();
        }
    }//GEN-LAST:event_jCheckBoxPesqTodosItemStateChanged

    private void jBtCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelar1ActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelar1ActionPerformed

    private void jBtSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvar1ActionPerformed
        // TODO add your handling code here:
        DecimalFormat valorReal = new DecimalFormat("###,##00.0");
        valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
        if (jComboBoxStatusProduto.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe se o produto está ativo ou inativo.");
            jComboBoxStatusProduto.requestFocus();
            jComboBoxStatusProduto.setBackground(Color.red);
        } else if (jDescricaoGrupo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a que grupo o produto pertence.");
        } else if (jDescricaoProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a descrição do produto.");
            jDescricaoProduto.requestFocus();
            jDescricaoProduto.setBackground(Color.red);
        } else if (jComboBoxUnidProduto.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a unidade de armazenamento do produto.");
            jComboBoxUnidProduto.requestFocus();
            jComboBoxUnidProduto.setBackground(Color.red);
        } else if (jLocalMaster.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a localidade de armazenamento do produto.");
        } else if (jNomeFornecedor.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do fornecedor para esse produto.");
        } else {
            objProdMed.setStatusProd((String) jComboBoxStatusProduto.getSelectedItem());
            objProdMed.setCodigoBarra(jCodigoBarra.getText());
            objProdMed.setDescricao(jDescricaoProduto.getText());
            objProdMed.setUnidade((String) jComboBoxUnidProduto.getSelectedItem());
            objProdMed.setReferencia(jReferencia.getText());
            objProdMed.setFotoProduto(caminhoFoto);
            objProdMed.setFotoProduto1(caminhoFoto1);
            objProdMed.setDataFabricacao(jDataFabricacao.getDate());
            objProdMed.setDataCompra(jDataCompra.getDate());
            objProdMed.setDataValidade(jDataValidadeProduto.getDate());
            objProdMed.setModulo(modulo);
            try {
                objProdMed.setValorCompra(valorReal.parse(jValorCompraProduto.getText()).floatValue());
                objProdMed.setQtdCompra(valorReal.parse(jQtdCompra.getText()).floatValue());
                objProdMed.setQtdSaida(valorReal.parse(jQtdSaida.getText()).floatValue());
                objProdMed.setAliquotaIcms(valorReal.parse(jAliquotaIcms.getText()).floatValue());
                objProdMed.setAliquotaIpi(valorReal.parse(jAliquotaIpi.getText()).floatValue());
                //
                objProdMed.setEstoqueMaximo(valorReal.parse(jEstoqueMaximo.getText()).floatValue());
                objProdMed.setEstoqueMinimo(valorReal.parse(jEstoqueMinimo.getText()).floatValue());
                objProdMed.setPontoPedido(valorReal.parse(jPontoPedido.getText()).floatValue());
                objProdMed.setSaldoAtual(valorReal.parse(jSaldoAtual.getText()).floatValue());
                objProdMed.setTipoInventario(tipoInventario);
            } catch (ParseException ex) {
            }
            objProdMed.setDataSaida(jDataSaida.getDate());
            objProdMed.setClassificaoFiscal(jClassificacao.getText());
            objProdMed.setObservacao(jObservacao.getText());
            objProdMed.setLote(loteProdutos);
            objProdMed.setQtdLote((float) qtdLote);
            if (acao == 1) {
                // VERIFICAR SE O PRODUTO JÁ FOI CADASTRADO, CASO JÁ TENHA SIDO CADASTRADO BLOQUEIA
                verificarProdutoCadastrado();
                if (jDescricaoProduto.getText().trim().equals(nomeProdutoAC)) {
                    JOptionPane.showMessageDialog(rootPane, "Produto já foi cadastrado.");
                } else {
                    objProdMed.setUsuarioInsert(nameUser);
                    objProdMed.setDataInsert(dataModFinal);
                    objProdMed.setHorarioInsert(horaMov);
                    //
                    objProdMed.setNomeGrupo(jDescricaoGrupo.getText());
                    objProdMed.setDescricaoFornecedor(jNomeFornecedor.getText());
                    objProdMed.setNomeLocal(jLocalMaster.getText());
                    control.incluirProdutoAC(objProdMed);
                    buscarID();
                    objProdMed.setIdProd(Integer.valueOf(jIdProduto.getText()));
                    objProdMed.setIdLocal(codLocal);
                    controlEst.incluirEstoqueProduto(objProdMed);
                    // Incluir o produto na tabela de lotes (LOTEPRODUTOS)
                    // Somente inlui o produto, não altera, as alterações somente a quantidade no inventário.
                    controleLote.incluirLoteProdutoAC(objProdMed);
                    // CRIAR PRODUTO PARA CONSULTA NA TABELA HISTORICO_NOVIMENTACAO_ESTOQUE_FAR
                    objHistMovAC.setIdProd(Integer.valueOf(jIdProduto.getText()));
                    objHistMovAC.setIdLocal(codLocal);
                    objHistMovAC.setDescricaoLocal(jLocalMaster.getText());
                    objHistMovAC.setSaldoAtual((float) qtdLote);
                    controlHistMov.incluirHistoricoProdutoCadastroAC(objHistMovAC);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
            if (acao == 2) {
                objProdMed.setUsuarioUp(nameUser);
                objProdMed.setDataUp(dataModFinal);
                objProdMed.setHorarioUp(horaMov);
                //
                objProdMed.setNomeGrupo(jDescricaoGrupo.getText());
                objProdMed.setDescricaoFornecedor(jNomeFornecedor.getText());
                objProdMed.setNomeLocal(jLocalMaster.getText());
                objProdMed.setIdProd(Integer.valueOf(jIdProduto.getText()));
                control.alterarProdutoAC(objProdMed);
                controlEst.alterarEstoqueProduto(objProdMed);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
        }
    }//GEN-LAST:event_jBtSalvar1ActionPerformed

    private void jBtExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluir1ActionPerformed
        // TODO add your handling code here:
        verificarProdutoLote(); // Verificar se o produto tem lote para impedir de excluir
        verificarProdutoSaldoEstoque(); // Verifiar se o produto tem saldo para impedir de excluir.
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (jIdProduto.getText().equals(codProdutoLote)) {
            JOptionPane.showMessageDialog(rootPane, "Esse produto não pode ser excluído, existe lote para o mesmo.");
        } else if (jIdProduto.getText().equals(codProdutoSaldo)) {
            JOptionPane.showMessageDialog(rootPane, "Esse produto não pode ser excluído, existe saldo de estoque ou já teve movimentação.");
        } else {
            if (resposta == JOptionPane.YES_OPTION) {
                objProdMed.setIdProd(Integer.parseInt(jIdProduto.getText()));
                control.excluirProdutoAC(objProdMed);
                controlEst.excluirEstoqueProduto(objProdMed);
                controlHistMov.excluirHistoricoProdutoAC(objHistMovAC);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }//GEN-LAST:event_jBtExcluir1ActionPerformed

    private void jBtAlterar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterar1ActionPerformed
        // TODO add your handling code here:
        acao = 2;
        Alterar();
        corCampos();
        statusMov = "Alterou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtAlterar1ActionPerformed

    private void jBtNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovo1ActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        corCampos();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovo1ActionPerformed

    private void jBtSair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSair1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSair1ActionPerformed

    private void jBtPesqGrupoMedicamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqGrupoMedicamentosActionPerformed
        // TODO add your handling code here:
        TelaPesqGrupoProdutoAC objPesqProdAC = new TelaPesqGrupoProdutoAC();
        TelaModuloAlmoxarifado.jPainelAlmoxarifado.add(objPesqProdAC);
        objPesqProdAC.show();
    }//GEN-LAST:event_jBtPesqGrupoMedicamentosActionPerformed

    private void jBtPesqFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqFornecedorActionPerformed
        // TODO add your handling code here:
        TelaPesqFornecedorAC objFornAC = new TelaPesqFornecedorAC();
        TelaModuloAlmoxarifado.jPainelAlmoxarifado.add(objFornAC);
        objFornAC.show();
    }//GEN-LAST:event_jBtPesqFornecedorActionPerformed

    private void jBtNovaFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaFotoActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser seletor = new javax.swing.JFileChooser();
        int acao = seletor.showOpenDialog(this);
        if (acao == JFileChooser.APPROVE_OPTION) {
            java.io.File f = seletor.getSelectedFile();
            caminhoFoto = f.getPath();
            javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoFoto);
            jFotoProduto.setIcon(i);
            ImageIcon image = new ImageIcon(seletor.getSelectedFile().getPath());
            jFotoProduto.setIcon(new ImageIcon(image.getImage().getScaledInstance(jFotoProduto.getWidth(), jFotoProduto.getHeight(), Image.SCALE_DEFAULT)));
            caminhoFoto = f.getPath();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleção da foto do interno cancelada.");
        }
    }//GEN-LAST:event_jBtNovaFotoActionPerformed

    private void jBtExcluirFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirFotoActionPerformed
        // TODO add your handling code here:
        jFotoProduto.setIcon(null);
    }//GEN-LAST:event_jBtExcluirFotoActionPerformed

    private void jBtNovaFoto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaFoto1ActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser seletor = new javax.swing.JFileChooser();
        int acao1 = seletor.showOpenDialog(this);
        if (acao1 == JFileChooser.APPROVE_OPTION) {
            java.io.File f = seletor.getSelectedFile();
            caminhoFoto1 = f.getPath();
            javax.swing.ImageIcon a = new javax.swing.ImageIcon(caminhoFoto1);
            jFotoProduto1.setIcon(a);
            ImageIcon image = new ImageIcon(seletor.getSelectedFile().getPath());
            jFotoProduto1.setIcon(new ImageIcon(image.getImage().getScaledInstance(jFotoProduto1.getWidth(), jFotoProduto1.getHeight(), Image.SCALE_DEFAULT)));
            caminhoFoto1 = f.getPath();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleção da foto do interno cancelada.");
        }
    }//GEN-LAST:event_jBtNovaFoto1ActionPerformed

    private void jBtExcluirFoto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirFoto1ActionPerformed
        // TODO add your handling code here:
        jFotoProduto1.setIcon(null);
    }//GEN-LAST:event_jBtExcluirFoto1ActionPerformed

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            preencherTabelaProdutos("SELECT * FROM PRODUTOS_AC "
                    + "INNER JOIN GRUPO_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdGrupo=GRUPO_PRODUTOS_AC.IdGrupo "
                    + "INNER JOIN FORNECEDORES_AC "
                    + "ON PRODUTOS_AC.IdForn=FORNECEDORES_AC.IdForn "
                    + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
                    + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                    + "INNER JOIN LOTE_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdProd=LOTE_PRODUTOS_AC.IdProd "
                    + "INNER JOIN SALDO_ESTOQUE_AC "
                    + "ON PRODUTOS_AC.IdProd=SALDO_ESTOQUE_AC.IdProd "
                    + "WHERE PRODUTOS_AC.IdProd='" + jPesqCodigo.getText() + "'AND PRODUTOS_AC.Modulo='" + modulo + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jBtPesqReferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqReferenciaActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqReferencia.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe uma referência para pesquisa.");
        } else {
            preencherTabelaProdutos("SELECT * FROM PRODUTOS_AC "
                    + "INNER JOIN GRUPO_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdGrupo=GRUPO_PRODUTOS_AC.IdGrupo "
                    + "INNER JOIN FORNECEDORES_AC "
                    + "ON PRODUTOS_AC.IdForn=FORNECEDORES_AC.IdForn "
                    + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
                    + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                    + "INNER JOIN LOTE_PRODUTOS_AC "
                    + "ON PRODUTOS_AC.IdProd=LOTE_PRODUTOS_AC.IdProd "
                    + "INNER JOIN SALDO_ESTOQUE_AC "
                    + "ON PRODUTOS_AC.IdProd=SALDO_ESTOQUE_AC.IdProd "
                    + "WHERE PRODUTOS_AC.ReferenciaProd='" + jPesqReferencia.getText() + "' "
                    + "AND PRODUTOS_AC.Modulo='" + modulo + "'");
        }
    }//GEN-LAST:event_jBtPesqReferenciaActionPerformed

    private void jCheckBoxTodosFornecedoresProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosFornecedoresProdutoItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaHistoricoFornecedor.setVisible(true);
            this.preencherTabelaHistoricoFornecedor("SELECT * FROM HISTORICO_PRODUTOS_FORNECEDOR "
                    + "INNER JOIN FORNECEDORES_AC "
                    + "ON HISTORICO_PRODUTOS_FORNECEDOR.IdForn=FORNECEDORES_AC.IdForn "
                    + "INNER JOIN ITENS_COMPRAS_MATERIAIS "
                    + "ON HISTORICO_PRODUTOS_FORNECEDOR.IdItem=ITENS_COMPRAS_MATERIAIS.IdItem "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON ITENS_COMPRAS_MATERIAIS.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE FORNECEDORES_AC.Modulo='" + modulo + "'");
        } else {
            jtotalRegistrosProduto.setText("");
            jTabelaHistoricoFornecedor.setVisible(!true);
        }
    }//GEN-LAST:event_jCheckBoxTodosFornecedoresProdutoItemStateChanged

    private void jBtPesqFornecedorProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqFornecedorProdutoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jPesqDescricaoFornecedor.getText().equals("") && !jDescricaoProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o titulo do acervo a ser pesquisado.");
        } else {
            preencherTabelaHistoricoFornecedor("SELECT * FROM HISTORICO_PRODUTOS_FORNECEDOR "
                    + "INNER JOIN FORNECEDORES_AC "
                    + "ON HISTORICO_PRODUTOS_FORNECEDOR.IdForn=FORNECEDORES_AC.IdForn "
                    + "INNER JOIN ITENS_COMPRAS_MATERIAIS "
                    + "ON HISTORICO_PRODUTOS_FORNECEDOR.IdItem=ITENS_COMPRAS_MATERIAIS.IdItem "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON ITENS_COMPRAS_MATERIAIS.IdProd=PRODUTOS_AC.IdProd  "
                    + "WHERE FORNECEDORES_AC.RazaoSocial LIKE'%" + jPesqDescricaoFornecedor.getText() + "%'AND FORNECEDORES_AC.Modulo='" + modulo + "'");
        }
    }//GEN-LAST:event_jBtPesqFornecedorProdutoActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaProdutosAC objAudProd = new TelaAuditoriaProdutosAC();
        TelaModuloAlmoxarifado.jPainelAlmoxarifado.add(objAudProd);
        objAudProd.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MenuBotoes;
    private javax.swing.JPanel MenuBotoes1;
    private javax.swing.JFormattedTextField jAliquotaIcms;
    private javax.swing.JFormattedTextField jAliquotaIpi;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterar1;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelar1;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluir1;
    private javax.swing.JButton jBtExcluirFoto;
    private javax.swing.JButton jBtExcluirFoto1;
    private javax.swing.JButton jBtNovaFoto;
    private javax.swing.JButton jBtNovaFoto1;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovo1;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqDescProd;
    private javax.swing.JButton jBtPesqFornecedor;
    private javax.swing.JButton jBtPesqFornecedorProduto;
    private javax.swing.JButton jBtPesqGrupoMedicamentos;
    private javax.swing.JButton jBtPesqLocal;
    private javax.swing.JButton jBtPesqReferencia;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSair1;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvar1;
    private javax.swing.JCheckBox jCheckBoxPesqTodos;
    private javax.swing.JCheckBox jCheckBoxTodosFornecedoresProduto;
    private javax.swing.JFormattedTextField jClassificacao;
    private javax.swing.JFormattedTextField jCodigoBarra;
    private javax.swing.JComboBox jComboBoxStatusProduto;
    private javax.swing.JComboBox jComboBoxUnidProduto;
    private com.toedter.calendar.JDateChooser jDataCompra;
    private com.toedter.calendar.JDateChooser jDataFabricacao;
    private com.toedter.calendar.JDateChooser jDataSaida;
    private com.toedter.calendar.JDateChooser jDataValidadeProduto;
    public static javax.swing.JTextField jDescricaoGrupo;
    private javax.swing.JTextField jDescricaoProduto;
    private javax.swing.JFormattedTextField jEstoqueMaximo;
    private javax.swing.JFormattedTextField jEstoqueMinimo;
    private javax.swing.JLabel jFotoProduto;
    private javax.swing.JLabel jFotoProduto1;
    public static javax.swing.JTextField jIdFor;
    public static javax.swing.JTextField jIdGrupo;
    public static javax.swing.JTextField jIdProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jLocalMaster;
    public static javax.swing.JTextField jNomeFornecedor;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesqCodigo;
    private javax.swing.JTextField jPesqDescricaoFornecedor;
    private javax.swing.JTextField jPesqDescricaoProd;
    private javax.swing.JTextField jPesqReferencia;
    private javax.swing.JFormattedTextField jPontoPedido;
    private javax.swing.JFormattedTextField jQtdCompra;
    private javax.swing.JFormattedTextField jQtdSaida;
    private javax.swing.JTextField jReferencia;
    private javax.swing.JFormattedTextField jSaldoAtual;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaHistoricoFornecedor;
    private javax.swing.JTable jTabelaLote;
    private javax.swing.JTable jTabelaProdutos;
    private javax.swing.JFormattedTextField jValorCompraProduto;
    private javax.swing.JLabel jtotalRegistros;
    private javax.swing.JLabel jtotalRegistrosProduto;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jCodigoBarra.setDocument(new LimiteDigitosNum(13));
        jDescricaoProduto.setDocument(new LimiteDigitosAlfa(200));
        jPesqDescricaoProd.setDocument(new LimiteDigitosAlfa(50));
        jValorCompraProduto.setDocument(new LimiteDigitosNum(10));
        jQtdCompra.setDocument(new LimiteDigitosNum(10));
        jQtdSaida.setDocument(new LimiteDigitosNum(10));
        jAliquotaIcms.setDocument(new LimiteDigitosNum(5));
        jAliquotaIpi.setDocument(new LimiteDigitosNum(5));
        jEstoqueMaximo.setDocument(new LimiteDigitosNum(6));
        jEstoqueMinimo.setDocument(new LimiteDigitosNum(6));
        jPontoPedido.setDocument(new LimiteDigitosNum(6));
        //
        jReferencia.setDocument(new LimiteDigitosAlfa(30));
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdProduto.setBackground(Color.white);
        jCodigoBarra.setBackground(Color.white);
        jDescricaoProduto.setBackground(Color.white);
        jComboBoxStatusProduto.setBackground(Color.white);
        jComboBoxUnidProduto.setBackground(Color.white);
        jIdGrupo.setBackground(Color.white);
        jDescricaoGrupo.setBackground(Color.white);
        jReferencia.setBackground(Color.white);
        jIdFor.setBackground(Color.white);
        jNomeFornecedor.setBackground(Color.white);
        jDataFabricacao.setBackground(Color.white);
        //
        jDataCompra.setBackground(Color.white);
        jValorCompraProduto.setBackground(Color.white);
        jDataValidadeProduto.setBackground(Color.white);
        jQtdCompra.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jQtdSaida.setBackground(Color.white);
        //
        jAliquotaIcms.setBackground(Color.white);
        jAliquotaIpi.setBackground(Color.white);
        jClassificacao.setBackground(Color.white);
        jEstoqueMaximo.setBackground(Color.white);
        jEstoqueMinimo.setBackground(Color.white);
        jPontoPedido.setBackground(Color.white);
        jSaldoAtual.setBackground(Color.white);
        //
        jObservacao.setBackground(Color.white);
        jLocalMaster.setBackground(Color.white);
        //      
        jPesqDescricaoFornecedor.setBackground(Color.white);
    }

    public void Novo() {
        jIdProduto.setText("");
        jCodigoBarra.setText("");
        jDescricaoProduto.setText("");
        jComboBoxStatusProduto.setSelectedItem("Ativo");
        jComboBoxUnidProduto.setSelectedItem("UN");
        jIdGrupo.setText("");
        jDescricaoGrupo.setText("");
        jReferencia.setText("");
        jFotoProduto.setIcon(null);
        jFotoProduto1.setIcon(null);
        jIdFor.setText("");
        jNomeFornecedor.setText("");
        jDataFabricacao.setCalendar(Calendar.getInstance());
        //
        jDataCompra.setDate(null);
        jValorCompraProduto.setText("0,00");
        jDataValidadeProduto.setDate(null);
        jQtdCompra.setText("0,00");
        jDataSaida.setDate(null);
        jQtdSaida.setText("0,00");
        //
        jAliquotaIcms.setText("0,00");
        jAliquotaIpi.setText("0,00");
        jClassificacao.setText("");
        jEstoqueMaximo.setText("0,00");
        jEstoqueMinimo.setText("0,00");
        jPontoPedido.setText("0,00");
        jSaldoAtual.setText("0");
        //
        jObservacao.setText("");
        jLocalMaster.setText("");
        //  Habilitar/Desabilitar campos          
        jCodigoBarra.setEnabled(true);
        jDescricaoProduto.setEnabled(true);
        jComboBoxStatusProduto.setEnabled(true);
        jComboBoxUnidProduto.setEnabled(true);
        jBtPesqGrupoMedicamentos.setEnabled(true);
        jReferencia.setEnabled(true);
        jBtPesqFornecedor.setEnabled(true);
        jDataFabricacao.setEnabled(true);
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        jBtNovaFoto1.setEnabled(true);
        jBtExcluirFoto1.setEnabled(true);
        //
        jDataCompra.setEnabled(true);
        jValorCompraProduto.setEnabled(true);
        jDataValidadeProduto.setEnabled(true);
        jQtdCompra.setEnabled(true);
        jDataSaida.setEnabled(true);
        jQtdSaida.setEnabled(true);
        //
        jAliquotaIcms.setEnabled(true);
        jAliquotaIpi.setEnabled(true);
        jClassificacao.setEnabled(true);
        jEstoqueMaximo.setEnabled(true);
        jEstoqueMinimo.setEnabled(true);
        jPontoPedido.setEnabled(true);
        //   jSaldoAtual.setEnabled(true);
        //
        jObservacao.setEnabled(true);
        jBtPesqLocal.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jBtNovo1.setEnabled(!true);
        jBtAlterar1.setEnabled(!true);
        jBtExcluir1.setEnabled(!true);
        jBtSalvar1.setEnabled(true);
        jBtCancelar1.setEnabled(true);
        preencherTabelaLotes("SELECT * FROM LOTE_PRODUTOS_AC WHERE IdProd='" + jIdProduto.getText() + "'");
    }

    public void Alterar() {
        //  Habilitar/Desabilitar campos          
        jCodigoBarra.setEnabled(true);
        jDescricaoProduto.setEnabled(true);
        jComboBoxStatusProduto.setEnabled(true);
        jComboBoxUnidProduto.setEnabled(true);
        jBtPesqGrupoMedicamentos.setEnabled(true);
        jReferencia.setEnabled(true);
        jBtPesqFornecedor.setEnabled(true);
        jDataFabricacao.setEnabled(true);
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        jBtNovaFoto1.setEnabled(true);
        jBtExcluirFoto1.setEnabled(true);
        //
        jDataCompra.setEnabled(true);
        jValorCompraProduto.setEnabled(true);
        jDataValidadeProduto.setEnabled(true);
        jQtdCompra.setEnabled(true);
        jDataSaida.setEnabled(true);
        jQtdSaida.setEnabled(true);
        //
        jAliquotaIcms.setEnabled(true);
        jAliquotaIpi.setEnabled(true);
        jClassificacao.setEnabled(true);
        jEstoqueMaximo.setEnabled(true);
        jEstoqueMinimo.setEnabled(true);
        jPontoPedido.setEnabled(true);
        //  jSaldoAtual.setEnabled(true);
        //
        jObservacao.setEnabled(true);
        jBtPesqLocal.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jBtNovo1.setEnabled(!true);
        jBtAlterar1.setEnabled(!true);
        jBtExcluir1.setEnabled(!true);
        jBtSalvar1.setEnabled(true);
        jBtCancelar1.setEnabled(true);
    }

    public void Excluir() {
        jIdProduto.setText("");
        jCodigoBarra.setText("");
        jDescricaoProduto.setText("");
        jComboBoxStatusProduto.setSelectedItem(null);
        jComboBoxUnidProduto.setSelectedItem(null);
        jIdGrupo.setText("");
        jDescricaoGrupo.setText("");
        jReferencia.setText("");
        jFotoProduto.setIcon(null);
        jIdFor.setText("");
        jNomeFornecedor.setText("");
        jDataFabricacao.setDate(null);
        //
        jDataCompra.setDate(null);
        jValorCompraProduto.setText("");
        jDataValidadeProduto.setDate(null);
        jQtdCompra.setText("");
        jDataSaida.setDate(null);
        jQtdSaida.setText("");
        //
        jAliquotaIcms.setText("");
        jAliquotaIpi.setText("");
        jClassificacao.setText("");
        jEstoqueMaximo.setText("");
        jEstoqueMinimo.setText("");
        jPontoPedido.setText("");
        jSaldoAtual.setText("");
        //
        jObservacao.setText("");
        jLocalMaster.setText("");
        //  Habilitar/Desabilitar campos          
        jCodigoBarra.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jComboBoxStatusProduto.setEnabled(!true);
        jComboBoxUnidProduto.setEnabled(!true);
        jBtPesqGrupoMedicamentos.setEnabled(!true);
        jReferencia.setEnabled(!true);
        jBtPesqFornecedor.setEnabled(!true);
        jDataFabricacao.setEnabled(!true);
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        jBtNovaFoto1.setEnabled(!true);
        jBtExcluirFoto1.setEnabled(!true);
        //
        jDataCompra.setEnabled(!true);
        jValorCompraProduto.setEnabled(!true);
        jDataValidadeProduto.setEnabled(!true);
        jQtdCompra.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jQtdSaida.setEnabled(!true);
        //
        jAliquotaIcms.setEnabled(!true);
        jAliquotaIpi.setEnabled(!true);
        jClassificacao.setEnabled(!true);
        jEstoqueMaximo.setEnabled(!true);
        jEstoqueMinimo.setEnabled(!true);
        jPontoPedido.setEnabled(!true);
        jSaldoAtual.setEnabled(!true);
        //
        jObservacao.setEnabled(!true);
        jBtPesqLocal.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovo1.setEnabled(true);
        jBtAlterar1.setEnabled(!true);
        jBtExcluir1.setEnabled(!true);
        jBtSalvar1.setEnabled(!true);
        jBtCancelar1.setEnabled(!true);
    }

    public void Salvar() {
        //  Habilitar/Desabilitar campos          
        jCodigoBarra.setEnabled(!true);
        jDescricaoProduto.setEnabled(!true);
        jComboBoxStatusProduto.setEnabled(!true);
        jComboBoxUnidProduto.setEnabled(!true);
        jBtPesqGrupoMedicamentos.setEnabled(!true);
        jReferencia.setEnabled(!true);
        jBtPesqFornecedor.setEnabled(!true);
        jDataFabricacao.setEnabled(!true);
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        jBtNovaFoto1.setEnabled(!true);
        jBtExcluirFoto1.setEnabled(!true);
        //
        jDataCompra.setEnabled(!true);
        jValorCompraProduto.setEnabled(!true);
        jDataValidadeProduto.setEnabled(!true);
        jQtdCompra.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jQtdSaida.setEnabled(!true);
        //
        jAliquotaIcms.setEnabled(!true);
        jAliquotaIpi.setEnabled(!true);
        jClassificacao.setEnabled(!true);
        jEstoqueMaximo.setEnabled(!true);
        jEstoqueMinimo.setEnabled(!true);
        jPontoPedido.setEnabled(!true);
        jSaldoAtual.setEnabled(!true);
        //
        jObservacao.setEnabled(!true);
        jBtPesqLocal.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        //
        jBtNovo1.setEnabled(true);
        jBtAlterar1.setEnabled(true);
        jBtExcluir1.setEnabled(true);
        jBtSalvar1.setEnabled(!true);
        jBtCancelar1.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdProduto.getText().equals("")) {
            jIdProduto.setText("");
            jCodigoBarra.setText("");
            jDescricaoProduto.setText("");
            jComboBoxStatusProduto.setSelectedItem(null);
            jComboBoxUnidProduto.setSelectedItem(null);
            jIdGrupo.setText("");
            jDescricaoGrupo.setText("");
            jReferencia.setText("");
            jFotoProduto.setIcon(null);
            jIdFor.setText("");
            jNomeFornecedor.setText("");
            jDataFabricacao.setDate(null);
            //
            jDataCompra.setDate(null);
            jValorCompraProduto.setText("");
            jDataValidadeProduto.setDate(null);
            jQtdCompra.setText("");
            jDataSaida.setDate(null);
            jQtdSaida.setText("");
            //
            jAliquotaIcms.setText("");
            jAliquotaIpi.setText("");
            jClassificacao.setText("");
            jEstoqueMaximo.setText("");
            jEstoqueMinimo.setText("");
            jPontoPedido.setText("");
            jSaldoAtual.setText("");
            //
            jObservacao.setText("");
            jLocalMaster.setText("");
            //  Habilitar/Desabilitar campos          
            jCodigoBarra.setEnabled(!true);
            jDescricaoProduto.setEnabled(!true);
            jComboBoxStatusProduto.setEnabled(!true);
            jComboBoxUnidProduto.setEnabled(!true);
            jBtPesqGrupoMedicamentos.setEnabled(!true);
            jReferencia.setEnabled(!true);
            jBtPesqFornecedor.setEnabled(!true);
            jDataFabricacao.setEnabled(!true);
            jBtNovaFoto.setEnabled(!true);
            jBtExcluirFoto.setEnabled(!true);
            jBtNovaFoto1.setEnabled(!true);
            jBtExcluirFoto1.setEnabled(!true);
            //
            jDataCompra.setEnabled(!true);
            jValorCompraProduto.setEnabled(!true);
            jDataValidadeProduto.setEnabled(!true);
            jQtdCompra.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jQtdSaida.setEnabled(!true);
            //
            jAliquotaIcms.setEnabled(!true);
            jAliquotaIpi.setEnabled(!true);
            jClassificacao.setEnabled(!true);
            jEstoqueMaximo.setEnabled(!true);
            jEstoqueMinimo.setEnabled(!true);
            jPontoPedido.setEnabled(!true);
            jSaldoAtual.setEnabled(!true);
            //
            jObservacao.setEnabled(!true);
            jBtPesqLocal.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            //
            jBtNovo1.setEnabled(true);
            jBtAlterar1.setEnabled(!true);
            jBtExcluir1.setEnabled(!true);
            jBtSalvar1.setEnabled(!true);
            jBtCancelar1.setEnabled(!true);
        } else {
            //  Habilitar/Desabilitar campos          
            jCodigoBarra.setEnabled(!true);
            jDescricaoProduto.setEnabled(!true);
            jComboBoxStatusProduto.setEnabled(!true);
            jComboBoxUnidProduto.setEnabled(!true);
            jBtPesqGrupoMedicamentos.setEnabled(!true);
            jReferencia.setEnabled(!true);
            jBtPesqFornecedor.setEnabled(!true);
            jDataFabricacao.setEnabled(!true);
            jBtNovaFoto.setEnabled(!true);
            jBtExcluirFoto.setEnabled(!true);
            jBtNovaFoto1.setEnabled(!true);
            jBtExcluirFoto1.setEnabled(!true);
            //
            jDataCompra.setEnabled(!true);
            jValorCompraProduto.setEnabled(!true);
            jDataValidadeProduto.setEnabled(!true);
            jQtdCompra.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jQtdSaida.setEnabled(!true);
            //
            jAliquotaIcms.setEnabled(!true);
            jAliquotaIpi.setEnabled(!true);
            jClassificacao.setEnabled(!true);
            jEstoqueMaximo.setEnabled(!true);
            jEstoqueMinimo.setEnabled(!true);
            jPontoPedido.setEnabled(!true);
            jSaldoAtual.setEnabled(!true);
            //
            jObservacao.setEnabled(!true);
            jBtPesqLocal.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            //
            jBtNovo1.setEnabled(true);
            jBtAlterar1.setEnabled(true);
            jBtExcluir1.setEnabled(true);
            jBtSalvar1.setEnabled(!true);
            jBtCancelar1.setEnabled(true);
        }
    }

    public void verificarProdutoCadastrado() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PRODUTOS_AC WHERE DescricaoProd='" + jDescricaoProduto.getText() + "'");
            conecta.rs.first();
            nomeProdutoAC = conecta.rs.getString("DescricaoProd");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PRODUTOS_AC");
            conecta.rs.last();
            jIdProduto.setText(String.valueOf(conecta.rs.getInt("IdProd")));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel obter o código do produto.\nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void verificarProdutoLote() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM LOTE_PRODUTOS_AC WHERE IdProd='" + jIdProduto.getText() + "'");
            conecta.rs.first();
            codProdutoLote = conecta.rs.getString("IdProd");
        } catch (SQLException ex) {
            Logger.getLogger(TelaProdutosAC.class.getName()).log(Level.SEVERE, null, ex);
        }
        conecta.desconecta();
    }

    public void verificarProdutoSaldoEstoque() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SALDO_ESTOQUE_AC WHERE IdProd='" + jIdProduto.getText() + "'");
            conecta.rs.first();
            codProdutoSaldo = conecta.rs.getString("IdProd");
        } catch (SQLException ex) {
            Logger.getLogger(TelaProdutosAC.class.getName()).log(Level.SEVERE, null, ex);
        }
        conecta.desconecta();
    }

    public void preencherTabelaProdutos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Código Barras", "Descrição", "Grupo"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdProd"), conecta.rs.getString("StatusProd"), conecta.rs.getString("CodigoBarra"), conecta.rs.getString("DescricaoProd"), conecta.rs.getString("NomeGrupo")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado...");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaProdutos.setModel(modelo);
        jTabelaProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaProdutos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaProdutos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaProdutos.getTableHeader().setReorderingAllowed(false);
        jTabelaProdutos.setAutoResizeMode(jTabelaProdutos.AUTO_RESIZE_OFF);
        jTabelaProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCamposTabelaProdutos();
        conecta.desconecta();
    }

    public void alinhaCamposTabelaProdutos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaProdutos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaProdutos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaProdutos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparTabelaProdutos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Código Barras", "Descrição", "Grupo"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaProdutos.setModel(modelo);
        jTabelaProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(3).setPreferredWidth(280);
        jTabelaProdutos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaProdutos.getColumnModel().getColumn(4).setPreferredWidth(180);
        jTabelaProdutos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaProdutos.getTableHeader().setReorderingAllowed(false);
        jTabelaProdutos.setAutoResizeMode(jTabelaProdutos.AUTO_RESIZE_OFF);
        jTabelaProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaLotes(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Data Vcto.", "Lote", "Quantidade"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dataVencto = conecta.rs.getString("DataVenc");
                if (dataVencto != null) {
                    String dia = dataVencto.substring(8, 10);
                    String mes = dataVencto.substring(5, 7);
                    String ano = dataVencto.substring(0, 4);
                    dataVencto = dia + "/" + mes + "/" + ano;
                }
                dados.add(new Object[]{dataVencto, conecta.rs.getString("Lote"), conecta.rs.getString("Qtd")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaLote.setModel(modelo);
        jTabelaLote.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaLote.getColumnModel().getColumn(0).setResizable(false);
        jTabelaLote.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaLote.getColumnModel().getColumn(1).setResizable(false);
        jTabelaLote.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaLote.getColumnModel().getColumn(2).setResizable(false);
        jTabelaLote.getTableHeader().setReorderingAllowed(false);
        jTabelaLote.setAutoResizeMode(jTabelaLote.AUTO_RESIZE_OFF);
        jTabelaLote.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCamposTabelaLote();
        conecta.desconecta();
    }

    public void alinhaCamposTabelaLote() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaLote.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaLote.getColumnModel().getColumn(1).setCellRenderer(direita);
        jTabelaLote.getColumnModel().getColumn(2).setCellRenderer(direita);
    }

    public void preencherTabelaHistoricoFornecedor(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Data Compra", "Nr. Doc.", "Código", "Nome do Fornecedor", "Qtde.", "Vl. Unit"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataDocumeto = conecta.rs.getString("DataMov");
                String dia = dataDocumeto.substring(8, 10);
                String mes = dataDocumeto.substring(5, 7);
                String ano = dataDocumeto.substring(0, 4);
                dataDocumeto = dia + "/" + mes + "/" + ano;
                //
                qtdItemCompra = conecta.rs.getFloat("QtdeCompra");
                DecimalFormat qtdc = new DecimalFormat(",###.00");
                String qtdItemNFe = qtdc.format(qtdItemCompra);
                qtdItemComp = qtdItemNFe;
                //
                valorUnitCompra = conecta.rs.getFloat("ValorUnit");
                DecimalFormat vtn = new DecimalFormat(",###.00");
                String valorUniNFe = vtn.format(valorUnitCompra);
                valorUnitComp = valorUniNFe;
                //
                jtotalRegistrosProduto.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{dataDocumeto, conecta.rs.getInt("NfCompra"), conecta.rs.getInt("IdForn"), conecta.rs.getString("RazaoSocial"), qtdItemComp, valorUnitComp});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem exibidos....");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaHistoricoFornecedor.setModel(modelo);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(3).setPreferredWidth(280);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(3).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setPreferredWidth(40);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setResizable(false);
        jTabelaHistoricoFornecedor.getTableHeader().setReorderingAllowed(false);
        jTabelaHistoricoFornecedor.setAutoResizeMode(jTabelaHistoricoFornecedor.AUTO_RESIZE_OFF);
        jTabelaHistoricoFornecedor.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaHistorico();
        conecta.desconecta();
    }

    public void alinharCamposTabelaHistorico() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setCellRenderer(direita);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setCellRenderer(direita);
    }

    public void limparTabelaHistorico() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Data Compra", "Nr. Doc.", "Código", "Nome do Fornecedor", "Qtde.", "Vl. Unit"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaHistoricoFornecedor.setModel(modelo);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(0).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(1).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(2).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(3).setPreferredWidth(280);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(3).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setPreferredWidth(40);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(4).setResizable(false);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTabelaHistoricoFornecedor.getColumnModel().getColumn(5).setResizable(false);
        jTabelaHistoricoFornecedor.getTableHeader().setReorderingAllowed(false);
        jTabelaHistoricoFornecedor.setAutoResizeMode(jTabelaHistoricoFornecedor.AUTO_RESIZE_OFF);
        jTabelaHistoricoFornecedor.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdProduto.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void SomaProduto() {
        saldoAtual = 0;
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM LOTE_PRODUTOS_AC WHERE IdProd='" + objProdMed.getIdProd() + "'");
            while (conecta.rs.next()) {
                saldoAtual = saldoAtual + conecta.rs.getFloat("Qtd");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na soma do saldo de estoque.\nERRO: " + ex);
        }
    }
}
