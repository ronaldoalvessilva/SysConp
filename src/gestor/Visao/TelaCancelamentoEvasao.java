/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAcessoGeral;
import gestor.Controle.ControleCancelamentoEvasao;
import gestor.Controle.ControleLogSistema;
import gestor.Modelo.CamposAcessos;
import gestor.Modelo.CancelamentoEvasao;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloCRC.telaCancelamentoEvasao_CRC;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronal
 */
public class TelaCancelamentoEvasao extends javax.swing.JInternalFrame {

    CancelamentoEvasao objCancelaEvasao = new CancelamentoEvasao();
    ControleCancelamentoEvasao CONTROLE = new ControleCancelamentoEvasao();
    ControleAcessoGeral pPESQUISAR_acessos = new ControleAcessoGeral();
    CamposAcessos objCampos = new CamposAcessos();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "CRC:Cancelamento de Evasão de Internos:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag;
    public static int acao;
    public static String dataInicial;
    public static String dataFinal;
    String dataLancaMov;
    String tipoOperacao = "EVASAO - SAIDA TEMPORARIA";
    String tipoOperacao1 = "EVASÃO - SAIDA LABORATIVA";
    String tipoOperacao2 = "EVASÃO - SAIDA ESTUDOS";
    String tipoOperacao3 = "EVASÃO - SAIDA PRISÃO DOMICILIAR";
    String statusEva = "ABERTO";
    String evadidoInd = "EVADIDO";
    String situacao = "EVADIDO DA UNIDADE"; // Máximo 19 caracteres   
    String confirmaRetorno = "Não";
    String confirmaEvasao = "Sim";
    String operacaoSaida = "SAIDA TEMPORARIA"; //Quando o interno estiver evadido ALTERAR na tabela ITENSSAIDA
    String statusRol = "FINALIZADO";
    //
    String NrDocRetorno = "";
    String NrDocRetornoNull = null;
    String dataEvasao = ""; // Variavel que controla a saida temporaria junto com a evasão
    String dataEntrada, dataSaida, dataSaidaTemp;
    String idRetorniInt;
    String dataRetorno, dataPrevRetorno;
    int tipoEvasao, idInternoRol;
    String horarioEntrada = "00:00";
    int count;
    //MÓDULO FINANCEIRO
    public static double valorDebito = 0;
    public static double valorCredito = 0;
    public static double saldoTotalCredito = 0;
    public static double saldoTotalDebito = 0;
    public static double valorLiquido = 0;
    public static String tipoMovDeb = "D";
    public static String tipoMovCred = "C";
    String statusSaque = "FINALIZADO";
    String movStatus = "D";
    String movTrans = "C";
    double saldoAtual = 0;
    double totalGeral = 0;
    //
    public static String pRESPOSTA_cancel = "";
    String pDATA_Registros = "";
    public static int pTOTAL_registros = 0;
    String pTIPO_OPERCAO_cancelamento = "";
    //
    public static Integer pINTERNO_rol = 0;

    /**
     * Creates new form TelaCancelamentoEvasao
     */
    public TelaCancelamentoEvasao() {
        initComponents();
        corCampos();
        formatarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        grupoBotoes = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jCodigo = new javax.swing.JTextField();
        jNomeInterno = new javax.swing.JTextField();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jBtPesquisaCodigo = new javax.swing.JButton();
        jBtDataLancamento = new javax.swing.JButton();
        jBtPesquisaNomeInterno = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaCancelamentoEvasao = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jRBtSaidaTemporaria = new javax.swing.JRadioButton();
        jRBtSaidaLaborativa = new javax.swing.JRadioButton();
        jRBtSaidaEstudos = new javax.swing.JRadioButton();
        jRBtSaidaMedico = new javax.swing.JRadioButton();
        jRBtSaidaDomiciliar = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jOperacao = new javax.swing.JTextField();
        jIdLanc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jStatusLanc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jNomeResponsavel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jNumeroDocumento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jDataDocumento = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxCargo = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jIdRegistroEvasao = new javax.swing.JTextField();
        jStatusEvasao = new javax.swing.JTextField();
        jDataEvasao = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jTipoEvasao = new javax.swing.JTextField();
        jBtPesquisaEvasao = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jIdInternoEvadido = new javax.swing.JTextField();
        jNomeInternoEvadido = new javax.swing.JTextField();
        jIdSaida = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jDocumentoSaida = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMotivo = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cancelar Lançamento Evasão :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Código:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Data Inicial:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Data Final:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Interno:");

        jCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesquisaCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisaCodigo.setContentAreaFilled(false);
        jBtPesquisaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaCodigoActionPerformed(evt);
            }
        });

        jBtDataLancamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtDataLancamento.setContentAreaFilled(false);
        jBtDataLancamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDataLancamentoActionPerformed(evt);
            }
        });

        jBtPesquisaNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisaNomeInterno.setContentAreaFilled(false);
        jBtPesquisaNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaNomeInternoActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesquisaNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesquisaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jBtPesquisaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)
                        .addComponent(jCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel20)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesquisaNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabelaCancelamentoEvasao.setAutoCreateRowSorter(true);
        jTabelaCancelamentoEvasao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaCancelamentoEvasao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doc.", "Data Evasão", "Status", "Tipo Evasão", "Nome do Interno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaCancelamentoEvasao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaCancelamentoEvasaoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaCancelamentoEvasao);
        if (jTabelaCancelamentoEvasao.getColumnModel().getColumnCount() > 0) {
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(3).setMinWidth(200);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(3).setMaxWidth(200);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(4).setMinWidth(300);
            jTabelaCancelamentoEvasao.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Listagem", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Evasão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        grupoBotoes.add(jRBtSaidaTemporaria);
        jRBtSaidaTemporaria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtSaidaTemporaria.setForeground(new java.awt.Color(0, 0, 255));
        jRBtSaidaTemporaria.setSelected(true);
        jRBtSaidaTemporaria.setText("S. Temporária");
        jRBtSaidaTemporaria.setToolTipText("Saída Temporária");
        jRBtSaidaTemporaria.setEnabled(false);
        jRBtSaidaTemporaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBtSaidaTemporariaMouseClicked(evt);
            }
        });

        grupoBotoes.add(jRBtSaidaLaborativa);
        jRBtSaidaLaborativa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtSaidaLaborativa.setForeground(new java.awt.Color(0, 102, 0));
        jRBtSaidaLaborativa.setText("S. Laborativa");
        jRBtSaidaLaborativa.setToolTipText("Saída Laborativa");
        jRBtSaidaLaborativa.setEnabled(false);
        jRBtSaidaLaborativa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBtSaidaLaborativaMouseClicked(evt);
            }
        });

        grupoBotoes.add(jRBtSaidaEstudos);
        jRBtSaidaEstudos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtSaidaEstudos.setForeground(new java.awt.Color(102, 0, 102));
        jRBtSaidaEstudos.setText("S. Educacional");
        jRBtSaidaEstudos.setToolTipText("Saída Educacional");
        jRBtSaidaEstudos.setEnabled(false);
        jRBtSaidaEstudos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBtSaidaEstudosMouseClicked(evt);
            }
        });

        grupoBotoes.add(jRBtSaidaMedico);
        jRBtSaidaMedico.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtSaidaMedico.setText("S. Médico");
        jRBtSaidaMedico.setToolTipText("Saída para Médico");
        jRBtSaidaMedico.setEnabled(false);
        jRBtSaidaMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBtSaidaMedicoMouseClicked(evt);
            }
        });

        grupoBotoes.add(jRBtSaidaDomiciliar);
        jRBtSaidaDomiciliar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtSaidaDomiciliar.setText("S. Prisão Domiciliar");
        jRBtSaidaDomiciliar.setToolTipText("Saída de Prisão Domiciliar");
        jRBtSaidaDomiciliar.setEnabled(false);
        jRBtSaidaDomiciliar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBtSaidaDomiciliarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jRBtSaidaTemporaria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBtSaidaLaborativa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBtSaidaEstudos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBtSaidaMedico))
                    .addComponent(jRBtSaidaDomiciliar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBtSaidaTemporaria)
                    .addComponent(jRBtSaidaLaborativa)
                    .addComponent(jRBtSaidaEstudos)
                    .addComponent(jRBtSaidaMedico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRBtSaidaDomiciliar))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jOperacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jOperacao.setForeground(new java.awt.Color(153, 0, 102));
        jOperacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jOperacao.setDisabledTextColor(new java.awt.Color(153, 0, 102));
        jOperacao.setEnabled(false);

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jIdLanc.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Descrição da Operação");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Status");

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(255, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jStatusLanc.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Registro");

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jOperacao, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jStatusLanc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel1)
                        .addComponent(jLabel11))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Responsável pela Liberação");

        jNomeResponsavel.setToolTipText("");
        jNomeResponsavel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeResponsavel.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Número do Documento");

        jNumeroDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jNumeroDocumento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNumeroDocumento.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Data Documento");

        jDataDocumento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataDocumento.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Cargo/Função");

        jComboBoxCargo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Diretor da Unidade", "Diretor Adjunto", "Coord. de  Segurança", "Outros" }));
        jComboBoxCargo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxCargo.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeResponsavel)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxCargo, 0, 155, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jNumeroDocumento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jDataDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDataDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados Liberação", jPanel6);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Status");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Data Evasão");

        jIdRegistroEvasao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegistroEvasao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdRegistroEvasao.setEnabled(false);

        jStatusEvasao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEvasao.setEnabled(false);

        jDataEvasao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEvasao.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Tipo de Evsão");

        jTipoEvasao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTipoEvasao.setEnabled(false);

        jBtPesquisaEvasao.setForeground(new java.awt.Color(0, 204, 255));
        jBtPesquisaEvasao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisaEvasao.setText("Buscar");
        jBtPesquisaEvasao.setToolTipText("Pesquiar Registro de Origem (Evasão)");
        jBtPesquisaEvasao.setEnabled(false);
        jBtPesquisaEvasao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaEvasaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTipoEvasao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(0, 19, Short.MAX_VALUE))
                                    .addComponent(jIdRegistroEvasao))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jStatusEvasao, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDataEvasao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15)
                            .addComponent(jBtPesquisaEvasao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusEvasao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdRegistroEvasao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataEvasao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jLabel16)
                .addGap(4, 4, 4)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesquisaEvasao)
                    .addComponent(jTipoEvasao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados da Evasão", jPanel7);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Código");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome do Interno");

        jIdInternoEvadido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoEvadido.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoEvadido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jIdInternoEvadido.setEnabled(false);

        jNomeInternoEvadido.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoEvadido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jNomeInternoEvadido.setEnabled(false);

        jIdSaida.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdSaida.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Código Saida");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Data Saida");

        jDocumentoSaida.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDocumentoSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDocumentoSaida.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Doc. Saida");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInternoEvadido)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jIdInternoEvadido, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jIdSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDocumentoSaida)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 67, Short.MAX_VALUE))))
                    .addComponent(jLabel10))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdInternoEvadido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDocumentoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoEvadido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Dados do Interno", jPanel8);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Motivo");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jMotivo.setColumns(20);
        jMotivo.setRows(5);
        jMotivo.setEnabled(false);
        jScrollPane1.setViewportView(jMotivo);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));
        jPanel12.setToolTipText("Audiroria");

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/191216104515_16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar Registro atual");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/tick.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar Operação");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair da Tela");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSair, jBtSalvar});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jBtSair, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(4, 4, 4))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 30, 483, 484);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesquisaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código do lançamento para pesquisa.");
        } else {
            LIMPAR_tabela();
            PESQUISAR_DADOS_codigo();
        }
    }//GEN-LAST:event_jBtPesquisaCodigoActionPerformed

    private void jBtDataLancamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDataLancamentoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                        LIMPAR_tabela();
                        PESQUISAR_DADOS_data();
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                        LIMPAR_tabela();
                        PESQUISAR_DADOS_data();
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtDataLancamentoActionPerformed

    private void jBtPesquisaNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código do lançamento para pesquisa.");
        } else {
            LIMPAR_tabela();
            PESQUISAR_DADOS_nome();
        }
    }//GEN-LAST:event_jBtPesquisaNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            LIMPAR_tabela();
            PESQUISAR_DADOS_todos();
        } else {
            jtotalRegistros.setText("");
            LIMPAR_tabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jTabelaCancelamentoEvasaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaCancelamentoEvasaoMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaCancelamentoEvasao.getValueAt(jTabelaCancelamentoEvasao.getSelectedRow(), 0);
            jCodigo.setText(IdLanc);
            bloquearCampos(!true);
            bloquearBotoes(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            //
            CONTROLE.MOSTRAR_pesquisa(objCancelaEvasao);
            jIdLanc.setText(String.valueOf(objCancelaEvasao.getIdCancelaEvasao()));
            jStatusLanc.setText(objCancelaEvasao.getStatusCancelarEvasao());
            jDataLanc.setDate(objCancelaEvasao.getDataCancelaEvasao());
            jOperacao.setText(objCancelaEvasao.getTipoOperacao());
            tipoEvasao = objCancelaEvasao.getTipoEvasao();
            if (tipoEvasao == 0) {
                jRBtSaidaTemporaria.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA TEMPORARIA");
            } else if (tipoEvasao == 1) {
                jRBtSaidaLaborativa.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA LABORATIVA");
            } else if (tipoEvasao == 2) {
                jRBtSaidaEstudos.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA ESTUDOS");
            } else if (tipoEvasao == 3) {
                jRBtSaidaMedico.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA MÉDICO");
            } else if (tipoEvasao == 4) {
                jRBtSaidaDomiciliar.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA DOMICILIAR");
            }
            jNomeResponsavel.setText(objCancelaEvasao.getNomeResponsavel());
            jComboBoxCargo.setSelectedItem(objCancelaEvasao.getCargoResponsavel());
            jDataDocumento.setDate(objCancelaEvasao.getDataCancelamento());
            jNumeroDocumento.setText(objCancelaEvasao.getNumeroDocumentoCancela());
            //ABA DADOS DA EVASÃO
            jIdRegistroEvasao.setText(String.valueOf(objCancelaEvasao.getIdRegistroEvasao()));
            jStatusEvasao.setText(objCancelaEvasao.getStatusLanc());
            jDataEvasao.setDate(objCancelaEvasao.getDataEvasao());
            jTipoEvasao.setText(objCancelaEvasao.getTipoOperacao());
            //ABA DADOS INTERNOS
            jIdInternoEvadido.setText(String.valueOf(objCancelaEvasao.getIdInternoCrc()));
            jNomeInternoEvadido.setText(objCancelaEvasao.getNomeInternoCrc());
            jIdSaida.setText(String.valueOf(objCancelaEvasao.getIdSaida()));
            jDataSaida.setDate(objCancelaEvasao.getDataSaida());
            jDocumentoSaida.setText(objCancelaEvasao.getNumeroDocumentoCancela());
            jMotivo.setText(objCancelaEvasao.getMotivoCancelamento());
        }
    }//GEN-LAST:event_jTabelaCancelamentoEvasaoMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaCancelamentoEvasao_CRC);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaCancelamentoEvasao_CRC) && objCampos.getCodigoIncluir() == 1) {
            acao = 1;
            bloquearBotoes(!true);
            habilitarCampos(true);
            Novo();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaCancelamentoEvasao_CRC);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaCancelamentoEvasao_CRC) && objCampos.getCodigoAlterar() == 1) {
            objCancelaEvasao.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse cancelamento de evasão de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                bloquearBotoes(!true);
                habilitarCampos(true);
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaCancelamentoEvasao_CRC);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaCancelamentoEvasao_CRC) && objCampos.getCodigoExcluir() == 1) {
            objCancelaEvasao.setStatusCancelarEvasao(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse cancelamento de evasão de internos não poderá ser excluída, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    statusMov = "Excluiu";
                    horaMov = jHoraSistema.getText();
                    objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
                    CONTROLE.excluirCancelamentoEvasaoInternos(objCancelaEvasao);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação         
                    bloquearBotoes(!true);
                    bloquearCampos(!true);
                    Excluir();
                    if (pRESPOSTA_cancel.equals("Sim")) {
                        JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                    } else if (pRESPOSTA_cancel.equals("Não")) {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível excluir o registro, tente novamente.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        objCampos.setNomeUsuario(nameUser);
        objCampos.setNomeTelaAcesso(telaCancelamentoEvasao_CRC);
        pPESQUISAR_acessos.pesquisarUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarGrupoUsuario(objCampos);
        pPESQUISAR_acessos.pesquisarTelasAcesso(objCampos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || objCampos.getNomeGrupo().equals("ADMINISTRADORES") || objCampos.getCodigoUsuario() == objCampos.getCodigoUsuarioAcesso() && objCampos.getNomeTelaAcesso().equals(telaCancelamentoEvasao_CRC) && objCampos.getCodigoGravar() == 1) {
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe da data do cancelamento do registro de evasão.");
            } else if (jOperacao.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de operação.");
            } else if (jNomeResponsavel.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do responsável pelo cancelamento da evasão.");
            } else if (jComboBoxCargo.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o cargo do responsável.");
            } else if (jNumeroDocumento.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "O número do documento não pode ser em branco.");
            } else if (jNumeroDocumento.getText().equals("0")
                    || jNumeroDocumento.getText().equals("00")
                    || jNumeroDocumento.getText().equals("000")
                    || jNumeroDocumento.getText().equals("00000000000000000")) {
                JOptionPane.showMessageDialog(rootPane, "O número do documento não poderá ser preenchido com zeros");
            } else if (jNumeroDocumento.getText().equals(".")) {
                JOptionPane.showMessageDialog(rootPane, "O número do documento não pode ser ponto.");
            } else if (jIdRegistroEvasao.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o código da evasão que irá ser cancelada.");
            } else if (jIdInternoEvadido.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o código do interno que foi lançado a evasão.");
            } else if (jMotivo.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "O motivo do cancelmento da evasão do interno, não de ser em branco.\nA descrição do motivo do cancelamento da evasão, será lançada na observação do interno.");
            } else {
                objCancelaEvasao.setStatusLanc(statusEva);
                objCancelaEvasao.setDataRegistroCancelamento(jDataLanc.getDate());
                if (jRBtSaidaTemporaria.isSelected()) {
                    tipoEvasao = 0;
                } else if (jRBtSaidaLaborativa.isSelected()) {
                    tipoEvasao = 1;
                } else if (jRBtSaidaEstudos.isSelected()) {
                    tipoEvasao = 2;
                } else if (jRBtSaidaMedico.isSelected()) {
                    tipoEvasao = 3;
                } else if (jRBtSaidaDomiciliar.isSelected()) {
                    tipoEvasao = 4;
                }
                objCancelaEvasao.setTipoOperacao(jOperacao.getText());
                objCancelaEvasao.setTipoEvasao(tipoEvasao);
                //ABA DADOS DO LIBERADOR
                objCancelaEvasao.setNomeResponsavel(jNomeResponsavel.getText());
                objCancelaEvasao.setCargoResponsavel((String) jComboBoxCargo.getSelectedItem());
                objCancelaEvasao.setNumeroDocumentoCancela(jNumeroDocumento.getText());
                objCancelaEvasao.setDataCancelamento(jDataDocumento.getDate());
                //ABA DADOS DA EVASÃO
                objCancelaEvasao.setIdRegistroEvasao(Integer.parseInt(jIdRegistroEvasao.getText()));
                //ABA DADOS DO INTERNO
                objCancelaEvasao.setIdInternoCrc(Integer.parseInt(jIdInternoEvadido.getText()));
                objCancelaEvasao.setNomeInternoCrc(jNomeInternoEvadido.getText());
                objCancelaEvasao.setMotivoCancelamento(jMotivo.getText());
                if (acao == 1) {
                    objCancelaEvasao.setUsuarioInsert(nameUser);
                    objCancelaEvasao.setDataInsert(jDataSistema.getText());
                    objCancelaEvasao.setHorarioInsert(jHoraSistema.getText());
                    CONTROLE.incluirCancelamentoEvasaoInternos(objCancelaEvasao);
                    BUSCAR_codigo();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos(!true);
                    bloquearBotoes(!true);
                    Salvar();
                    if (pRESPOSTA_cancel.equals("Sim")) {
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                    if (pRESPOSTA_cancel.equals("Não")) {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro, tente novamente.");
                    }
                }
                if (acao == 2) {
                    objCancelaEvasao.setUsuarioUp(nameUser);
                    objCancelaEvasao.setDataUp(jDataSistema.getText());
                    objCancelaEvasao.setHorarioUp(jHoraSistema.getText());
                    objCancelaEvasao.setIdCancelaEvasao(Integer.parseInt(jIdLanc.getText()));
                    CONTROLE.alterarCancelamentoEvasaoInternos(objCancelaEvasao);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos(!true);
                    bloquearBotoes(!true);
                    Salvar();
                    if (pRESPOSTA_cancel.equals("Sim")) {
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                    if (pRESPOSTA_cancel.equals("Não")) {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro, tente novamente.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        if (jStatusLanc.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado.");
        } else {
            FINALIZAR_cancelamento();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaCancelamentoEvasao objAudiCancela = new TelaAuditoriaCancelamentoEvasao();
        TelaModuloCRC.jPainelCRC.add(objAudiCancela);
        objAudiCancela.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jRBtSaidaTemporariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBtSaidaTemporariaMouseClicked
        // TODO add your handling code here:
        if (acao == 1 && jRBtSaidaTemporaria.isSelected() && jIdLanc.getText().equals("") || acao == 2 && jRBtSaidaTemporaria.isSelected() && jIdLanc.getText().equals("")) {
            jOperacao.setText("EVASÃO - SAIDA TEMPORARIA");
            jIdInternoEvadido.setText("");
            jNomeInternoEvadido.setText("");
            jIdSaida.setText("");
            jDataSaida.setDate(null);
            jDocumentoSaida.setText("");
        }
    }//GEN-LAST:event_jRBtSaidaTemporariaMouseClicked

    private void jRBtSaidaLaborativaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBtSaidaLaborativaMouseClicked
        // TODO add your handling code here:
        if (acao == 1 && jRBtSaidaLaborativa.isSelected() && jIdLanc.getText().equals("") || acao == 2 && jRBtSaidaLaborativa.isSelected() && jIdLanc.getText().equals("")) {
            jOperacao.setText("EVASÃO - SAIDA LABORATIVA");
            jIdInternoEvadido.setText("");
            jNomeInternoEvadido.setText("");
            jIdSaida.setText("");
            jDataSaida.setDate(null);
            jDocumentoSaida.setText("");
        }
    }//GEN-LAST:event_jRBtSaidaLaborativaMouseClicked

    private void jRBtSaidaEstudosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBtSaidaEstudosMouseClicked
        // TODO add your handling code here:
        if (acao == 1 && jRBtSaidaEstudos.isSelected() && jIdLanc.getText().equals("") || acao == 2 && jRBtSaidaEstudos.isSelected() && jIdLanc.getText().equals("")) {
            jOperacao.setText("EVASÃO - SAIDA ESTUDOS");
            jIdInternoEvadido.setText("");
            jNomeInternoEvadido.setText("");
            jIdSaida.setText("");
            jDataSaida.setDate(null);
            jDocumentoSaida.setText("");
        }
    }//GEN-LAST:event_jRBtSaidaEstudosMouseClicked

    private void jRBtSaidaMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBtSaidaMedicoMouseClicked
        // TODO add your handling code here:
        if (acao == 1 && jRBtSaidaMedico.isSelected() && jIdLanc.getText().equals("") || acao == 2 && jRBtSaidaMedico.isSelected() && jIdLanc.getText().equals("")) {
            jOperacao.setText("EVASÃO - SAIDA MÉDICO");
            jIdInternoEvadido.setText("");
            jNomeInternoEvadido.setText("");
            jIdSaida.setText("");
            jDataSaida.setDate(null);
            jDocumentoSaida.setText("");
        }
    }//GEN-LAST:event_jRBtSaidaMedicoMouseClicked

    private void jRBtSaidaDomiciliarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBtSaidaDomiciliarMouseClicked
        // TODO add your handling code here:
        if (acao == 1 && jRBtSaidaDomiciliar.isSelected() && jIdLanc.getText().equals("") || acao == 2 && jRBtSaidaDomiciliar.isSelected() && jIdLanc.getText().equals("")) {
            jOperacao.setText("EVASÃO - SAIDA DOMICILIAR");
            jIdInternoEvadido.setText("");
            jNomeInternoEvadido.setText("");
            jIdSaida.setText("");
            jDataSaida.setDate(null);
            jDocumentoSaida.setText("");
        }
    }//GEN-LAST:event_jRBtSaidaDomiciliarMouseClicked

    private void jBtPesquisaEvasaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaEvasaoActionPerformed
        // TODO add your handling code here:
        if (jRBtSaidaTemporaria.isSelected()) {
            TelaPesquisaCancelaEvadidos_TMP objPesqCanEvaST = new TelaPesquisaCancelaEvadidos_TMP();
            TelaModuloCRC.jPainelCRC.add(objPesqCanEvaST);
            objPesqCanEvaST.show();
        } else if (jRBtSaidaLaborativa.isSelected()) {
            TelaPesquisaCancelaEvadidos_LAB objPesqCanEvaLab = new TelaPesquisaCancelaEvadidos_LAB();
            TelaModuloCRC.jPainelCRC.add(objPesqCanEvaLab);
            objPesqCanEvaLab.show();
        } else if (jRBtSaidaEstudos.isSelected()) {
            TelaPesquisaCancelaEvadidos_EDU objPesqCanEvaEdu = new TelaPesquisaCancelaEvadidos_EDU();
            TelaModuloCRC.jPainelCRC.add(objPesqCanEvaEdu);
            objPesqCanEvaEdu.show();
        } else if (jRBtSaidaMedico.isSelected()) {
            TelaPesquisaCancelaEvadidos_MED objPesqCanEvaMed = new TelaPesquisaCancelaEvadidos_MED();
            TelaModuloCRC.jPainelCRC.add(objPesqCanEvaMed);
            objPesqCanEvaMed.show();
        } else if (jRBtSaidaDomiciliar.isSelected()) {
            TelaPesquisaCancelaEvadidos_PD objPesqCanEvaDomiciliar = new TelaPesquisaCancelaEvadidos_PD();
            TelaModuloCRC.jPainelCRC.add(objPesqCanEvaDomiciliar);
            objPesqCanEvaDomiciliar.show();
        }
    }//GEN-LAST:event_jBtPesquisaEvasaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoes;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtDataLancamento;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesquisaCodigo;
    private javax.swing.JButton jBtPesquisaEvasao;
    private javax.swing.JButton jBtPesquisaNomeInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JTextField jCodigo;
    private javax.swing.JComboBox<String> jComboBoxCargo;
    private com.toedter.calendar.JDateChooser jDataDocumento;
    public static com.toedter.calendar.JDateChooser jDataEvasao;
    public static com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    public static javax.swing.JTextField jDocumentoSaida;
    public static javax.swing.JTextField jIdInternoEvadido;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdRegistroEvasao;
    public static javax.swing.JTextField jIdSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextArea jMotivo;
    public static javax.swing.JTextField jNomeInterno;
    public static javax.swing.JTextField jNomeInternoEvadido;
    private javax.swing.JTextField jNomeResponsavel;
    private javax.swing.JTextField jNumeroDocumento;
    public static javax.swing.JTextField jOperacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRBtSaidaDomiciliar;
    private javax.swing.JRadioButton jRBtSaidaEstudos;
    private javax.swing.JRadioButton jRBtSaidaLaborativa;
    private javax.swing.JRadioButton jRBtSaidaMedico;
    private javax.swing.JRadioButton jRBtSaidaTemporaria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField jStatusEvasao;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaCancelamentoEvasao;
    public static javax.swing.JTextField jTipoEvasao;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jOperacao.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        //ABA DADOS LIBERAÇÃO
        jNomeResponsavel.setBackground(Color.white);
        jComboBoxCargo.setBackground(Color.white);
        jNumeroDocumento.setBackground(Color.white);
        jDataDocumento.setBackground(Color.white);
        jMotivo.setBackground(Color.white);
        //ABA DADSO DA EVASÃO
        jIdRegistroEvasao.setBackground(Color.white);
        jStatusEvasao.setBackground(Color.white);
        jDataEvasao.setBackground(Color.white);
        jTipoEvasao.setBackground(Color.white);
        //ABA DADOS DO INTERNO        
        jIdInternoEvadido.setBackground(Color.white);
        jNomeInternoEvadido.setBackground(Color.white);
        jIdSaida.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jDocumentoSaida.setBackground(Color.white);
    }

    public void formatarCampos() {
        jMotivo.setLineWrap(true);
        jMotivo.setWrapStyleWord(true);
    }

    public void bloquearCampos(boolean opcao) {
        jIdLanc.setEnabled(opcao);
        jStatusLanc.setEnabled(opcao);
        jOperacao.setEnabled(opcao);
        jDataLanc.setEnabled(opcao);
        jRBtSaidaTemporaria.setEnabled(opcao);
        jRBtSaidaLaborativa.setEnabled(opcao);
        jRBtSaidaEstudos.setEnabled(opcao);
        jRBtSaidaMedico.setEnabled(opcao);
        jRBtSaidaDomiciliar.setEnabled(opcao);
        //ABA DADOS LIBERAÇÃO
        jNomeResponsavel.setEnabled(opcao);
        jComboBoxCargo.setEnabled(opcao);
        jNumeroDocumento.setEnabled(opcao);
        jDataDocumento.setEnabled(opcao);
        jMotivo.setEnabled(opcao);
        //ABA DADSO DA EVASÃO
        jIdRegistroEvasao.setEnabled(opcao);
        jStatusEvasao.setEnabled(opcao);
        jDataEvasao.setEnabled(opcao);
        jTipoEvasao.setEnabled(opcao);
        //ABA DADOS DO INTERNO        
        jIdInternoEvadido.setEnabled(opcao);
        jNomeInternoEvadido.setEnabled(opcao);
        jIdSaida.setEnabled(opcao);
        jDataSaida.setEnabled(opcao);
        jDocumentoSaida.setEnabled(opcao);
    }

    public void habilitarCampos(boolean opcao) {
        jRBtSaidaTemporaria.setEnabled(opcao);
        jRBtSaidaLaborativa.setEnabled(opcao);
        jRBtSaidaEstudos.setEnabled(opcao);
        jRBtSaidaMedico.setEnabled(opcao);
        jRBtSaidaDomiciliar.setEnabled(opcao);
        //ABA DADOS LIBERAÇÃO
        jNomeResponsavel.setEnabled(opcao);
        jComboBoxCargo.setEnabled(opcao);
        jNumeroDocumento.setEnabled(opcao);
        jDataDocumento.setEnabled(opcao);
        jMotivo.setEnabled(opcao);
    }

    public void bloquearBotoes(boolean opcao) {
        jBtNovo.setEnabled(opcao);
        jBtAlterar.setEnabled(opcao);
        jBtExcluir.setEnabled(opcao);
        jBtSalvar.setEnabled(opcao);
        jBtCancelar.setEnabled(opcao);
        jBtAuditoria.setEnabled(opcao);
        jBtFinalizar.setEnabled(opcao);
        jBtPesquisaEvasao.setEnabled(opcao);
    }

    public void limparCampos() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jOperacao.setText("");
        jDataLanc.setDate(null);
        grupoBotoes.clearSelection();
        //ABA DADOS LIBERAÇÃO
        jNomeResponsavel.setText("");
        jComboBoxCargo.setSelectedItem(null);
        jNumeroDocumento.setText("");
        jDataDocumento.setDate(null);
        jMotivo.setText("");
        //ABA DADSO DA EVASÃO
        jIdRegistroEvasao.setText("");
        jStatusEvasao.setText("");
        jDataEvasao.setDate(null);
        jTipoEvasao.setText("");
        //ABA DADOS DO INTERNO        
        jIdInternoEvadido.setText("");
        jNomeInternoEvadido.setText("");
        jIdSaida.setText("");
        jDataSaida.setDate(null);
        jDocumentoSaida.setText("");
    }

    public void Novo() {
        jStatusLanc.setText("ABERTO");
        jDataLanc.setCalendar(Calendar.getInstance());
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtPesquisaEvasao.setEnabled(true);
    }

    public void Alterar() {
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtPesquisaEvasao.setEnabled(true);
    }

    public void Excluir() {
        jBtNovo.setEnabled(true);
    }

    public void Salvar() {
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            limparCampos();
            bloquearBotoes(!true);
            bloquearCampos(!true);
            //
            jBtNovo.setEnabled(true);
        } else {
            bloquearBotoes(!true);
            bloquearCampos(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //BUSCAR DADOS ANTERIOR
            String IdLanc = "" + jTabelaCancelamentoEvasao.getValueAt(jTabelaCancelamentoEvasao.getSelectedRow(), 0);
            jCodigo.setText(IdLanc);
            bloquearCampos(!true);
            bloquearBotoes(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            //
            CONTROLE.MOSTRAR_pesquisa(objCancelaEvasao);
            jIdLanc.setText(String.valueOf(objCancelaEvasao.getIdCancelaEvasao()));
            jStatusLanc.setText(objCancelaEvasao.getStatusCancelarEvasao());
            jDataLanc.setDate(objCancelaEvasao.getDataCancelaEvasao());
            jOperacao.setText(objCancelaEvasao.getTipoOperacao());
            tipoEvasao = objCancelaEvasao.getTipoEvasao();
            if (tipoEvasao == 0) {
                jRBtSaidaTemporaria.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA TEMPORARIA");
            } else if (tipoEvasao == 1) {
                jRBtSaidaLaborativa.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA LABORATIVA");
            } else if (tipoEvasao == 2) {
                jRBtSaidaEstudos.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA ESTUDOS");
            } else if (tipoEvasao == 3) {
                jRBtSaidaMedico.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA MÉDICO");
            } else if (tipoEvasao == 4) {
                jRBtSaidaDomiciliar.setSelected(true);
                jOperacao.setText("EVASÃO - SAIDA DOMICILIAR");
            }
            jNomeResponsavel.setText(objCancelaEvasao.getNomeResponsavel());
            jComboBoxCargo.setSelectedItem(objCancelaEvasao.getCargoResponsavel());
            jDataDocumento.setDate(objCancelaEvasao.getDataCancelamento());
            jNumeroDocumento.setText(objCancelaEvasao.getNumeroDocumentoCancela());
            //ABA DADOS DA EVASÃO
            jIdRegistroEvasao.setText(String.valueOf(objCancelaEvasao.getIdRegistroEvasao()));
            jStatusEvasao.setText(objCancelaEvasao.getStatusLanc());
            jDataEvasao.setDate(objCancelaEvasao.getDataEvasao());
            jTipoEvasao.setText(objCancelaEvasao.getTipoOperacao());
            //ABA DADOS INTERNOS
            jIdInternoEvadido.setText(String.valueOf(objCancelaEvasao.getIdInternoCrc()));
            jNomeInternoEvadido.setText(objCancelaEvasao.getNomeInternoCrc());
            jIdSaida.setText(String.valueOf(objCancelaEvasao.getIdSaida()));
            jDataSaida.setDate(objCancelaEvasao.getDataSaida());
            jDocumentoSaida.setText(objCancelaEvasao.getNumeroDocumentoCancela());
            jMotivo.setText(objCancelaEvasao.getMotivoCancelamento());
        }
    }

    public void BUSCAR_codigo() {
        CONTROLE.BUSCAR_CODIGO_cancelamento(objCancelaEvasao);
    }

    public void FINALIZAR_cancelamento() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse cancelamento de evasão de internos for finalizado, você não poderá mais excluir ou alterar.\nSerá necessário"
                + "também realocar o interno na cela caso seja necessário.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            FINALIZAR_evasao();
            objCancelaEvasao.setStatusLanc(statusEntrada);
            objCancelaEvasao.setIdCancelaEvasao(Integer.parseInt(jIdLanc.getText()));
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            CONTROLE.FINALIZAR_CANCELAMENTO_evasao(objCancelaEvasao);
            jStatusLanc.setText(statusEntrada);//          
            // CALCULAR O VALOR LIQUIDO DO INTERNO
            CONTROLE.CALCULAR_credito(objCancelaEvasao);
            CONTROLE.CALCULAR_debito(objCancelaEvasao);
            valorLiquido = saldoTotalCredito - saldoTotalDebito;
            // INCLUIR SAQUE NA  TABELA SALDOVALORES
            objCancelaEvasao.setHistorico(situacao);
            objCancelaEvasao.setDataMov(jDataLanc.getDate());
            objCancelaEvasao.setFavorecidoDepositante(jNomeInternoEvadido.getText());
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setStatusMov(movStatus);
            objCancelaEvasao.setSaldo((float) valorLiquido);
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
            CONTROLE.INCLUIR_saldo(objCancelaEvasao); // SALDOVALORES
            // TABELA SALDO_VALORES_INATIVOS
            objCancelaEvasao.setSaldoAtual((float) valorLiquido);
            CONTROLE.INCLUIR_SALDO_inativos(objCancelaEvasao); // SALDO_VALORES_INATIVOS
            // LANÇA DEBITO NA TABELA SAQUE
            objCancelaEvasao.setStatusLanc(statusSaque);
            objCancelaEvasao.setDataLanc(jDataLanc.getDate());
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setNomeInterno(jNomeInternoEvadido.getText());
            objCancelaEvasao.setFavorecido(jNomeInternoEvadido.getText());
            objCancelaEvasao.setObservacao(situacao);
            objCancelaEvasao.setValorSaque((float) valorLiquido);
            CONTROLE.INCLUIR_saque(objCancelaEvasao); // TABELA - SAQUE
            // DEPOSITO NA CONTA DOS INATIVOS DEPOSITO_INATIVOS
            objCancelaEvasao.setStatusLanc(statusSaque);
            objCancelaEvasao.setDataLanc(jDataLanc.getDate());
            objCancelaEvasao.setValorDeposito((float) valorLiquido);
            objCancelaEvasao.setDepositante(jNomeInternoEvadido.getText());
            objCancelaEvasao.setObservacao(situacao);
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setNomeInterno(jNomeInternoEvadido.getText());
            CONTROLE.INCLUID_depositos(objCancelaEvasao); // TABELA - DEPOSITOS_INATIVOS
            //
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jDataLanc.setEnabled(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
        }
    }

    public void FINALIZAR_evasao() {
        objCancelaEvasao.setStatusLanc(statusEva);
        objCancelaEvasao.setTipoOperacao(jOperacao.getText());
        objCancelaEvasao.setNrDocSaida(jDocumentoSaida.getText());
        objCancelaEvasao.setDataLanc(jDataLanc.getDate());
        objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
        objCancelaEvasao.setObservacao(jMotivo.getText());
        // SE FOR EVSÃO DE SAIDA TEMPORARIA
        if (tipoEvasao == 0) {
            // INCLUIR NA TABELA (MOVIMENTOCRC)
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
            CONTROLE.INSERT_movisr(objCancelaEvasao);
            // Atualiza tabela de Itens de saida temporaria, quando interno está evadido. TESTADO EM 06/06/2015 FUNCIONANDO                        
            objCancelaEvasao.setInternoEvadido(evadidoInd); // Quando interno EVADE
            objCancelaEvasao.setIdInternoSaida(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
            CONTROLE.UPDATE_ITENS_saida(objCancelaEvasao); // tabela ITENSSAIDA quando evadidos. TESTADO EM 06/06/2015 FUNCIONANDO                              
            // CONFIRMA A EVASÃO DO INTERNO DA TABELA (MOVISR). TESTADO EM 06/06/2015 - FUNCIONANDO
            objCancelaEvasao.setDataEvasaoTmp(jDataLanc.getDate()); // Data da Evasão 
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
//            control.confirmaEvasaoInternoSaidaTmp(objItemSaida);
            // SE FOR EVASÃO DE SAIDA LABORATIVA EXTERNA
        } else if (tipoEvasao == 1) {
            // INCLUIR NA TABELA (MOVIMENTOCRC)
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
            CONTROLE.INSERT_movisr(objCancelaEvasao);
            // ATUALIZA TABELA DE (ITENSLABORINTERNO), QUADO INTERNO ESTÁ EVADIDO.
            objCancelaEvasao.setInternoEvadido(evadidoInd);
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdSaida.getText()));
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
//            control.incluirEvasaoInterno(objItenLabor);
            // INSERIR NA TABELA (MOVISR) OS DADOS DO INTERNO EVADIDO
            objCancelaEvasao.setIdInternoSaida(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setIdSaida(Integer.valueOf(jIdSaida.getText()));
            objCancelaEvasao.setDataSaida(jDataSaida.getDate());
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
            objCancelaEvasao.setDataEvasaoTmp(jDataLanc.getDate());
//            control.incluirEvasaoInternoSaidaLaborativa(objItemSaida);
            // SE FOR EVASÃO DE SAIDA PARA ESTUDAR NA TABELA INTERNOS_ENTRADA_SAIDA_EDUCACAO  
        } else if (tipoEvasao == 2) {
            // INCLUIR NA TABELA (MOVIMENTOCRC)
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
            CONTROLE.INSERT_movisr(objCancelaEvasao);
            // UPDATE CAMPO (OBSERVACAO E EVADIDO) DA TABELA INTERNOS_ENTRADA_SAIDA_EDUCACAO - PORTARIA 
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setInternoEvadido(evadidoInd);
            objCancelaEvasao.setObservacao(evadidoInd);
            objCancelaEvasao.setHorarioEntrada(horarioEntrada);
            CONTROLE.UPDATE_SAIDA_EDUCACIONAL_DATA_HORA_portaria(objCancelaEvasao);
            // UPDATE NO CAMPO (EVADIDO) DA TABELA INTERNOS_SAIDA_EDUCACIONAL - PEDAGOGIA
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setInternoEvadido(evadidoInd);
//            control.incluirEvasaoEducacionalInternoPedagogia(objItenLabor);
            // INSERIR NA TABELA (MOVISR) OS DADOS DO INTERNO EVADIDO
            objCancelaEvasao.setIdInternoSaida(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setIdSaida(Integer.valueOf(jIdSaida.getText()));
            objCancelaEvasao.setDataSaida(jDataSaida.getDate());
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
            objCancelaEvasao.setDataEvasaoTmp(jDataLanc.getDate());
//            control.incluirEvasaoInternoSaidaLaborativa(objItemSaida);
        } else if (tipoEvasao == 3) {
            // INCLUIR NA TABELA (MOVIMENTOCRC)
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
            CONTROLE.INSERT_movisr(objCancelaEvasao);
            // UPDATE CAMPO (OBSERVACAO E EVADIDO) DA TABELA INTERNOS_ENTRADA_SAIDA_EDUCACAO - PORTARIA 
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setInternoEvadido(evadidoInd);
            objCancelaEvasao.setObservacao(evadidoInd);
            objCancelaEvasao.setHorarioEntrada(horarioEntrada);
//            control.incluirEvasaoEducacionalInternoPortaria(objItenLabor);
            // UPDATE NO CAMPO (EVADIDO) DA TABELA INTERNOS_SAIDA_EDUCACIONAL - PEDAGOGIA
            objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setInternoEvadido(evadidoInd);
//            control.incluirEvasaoEducacionalInternoPedagogia(objItenLabor);
            // INSERIR NA TABELA (MOVISR) OS DADOS DO INTERNO EVADIDO
            objCancelaEvasao.setIdInternoSaida(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setIdSaida(Integer.valueOf(jIdSaida.getText()));
            objCancelaEvasao.setDataSaida(jDataSaida.getDate());
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
            objCancelaEvasao.setDataEvasaoTmp(jDataLanc.getDate());
//            control.incluirEvasaoInternoSaidaLaborativa(objCancelaEvasao);
            //PRISÃO DOMICILIAR
        } else if (tipoEvasao == 4) {
            // INCLUIR NA TABELA (MOVIMENTOCRC)
            objCancelaEvasao.setIdCancelaEvasao(Integer.valueOf(jIdLanc.getText()));
            CONTROLE.INSERT_movisr(objCancelaEvasao);
            // Atualiza tabela de Itens de saida temporaria, quando interno está evadido. TESTADO EM 06/06/2015 FUNCIONANDO                        
            objCancelaEvasao.setInternoEvadido(evadidoInd); // Quando interno EVADE
            objCancelaEvasao.setIdInternoSaida(Integer.valueOf(jIdInternoEvadido.getText()));
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
//            control.alterarEvasaoInternoSaidaTmp(objItemSaida); // tabela ITENSSAIDA quando evadidos. TESTADO EM 06/06/2015 FUNCIONANDO                              
            // CONFIRMA A EVASÃO DO INTERNO DA TABELA (MOVISR). TESTADO EM 06/06/2015 - FUNCIONANDO
            objCancelaEvasao.setDataEvasaoTmp(jDataLanc.getDate()); // Data da Evasão 
            objCancelaEvasao.setDocumento(jDocumentoSaida.getText());
            objCancelaEvasao.setConfirmaEvasao(confirmaEvasao);
//            control.confirmaEvasaoInternoSaidaPD(objItemSaida);
        }
        // MODIFICA A SITUAÇÃO DO INTERNO NA TABELA PRONTUARIOSCRC
        objCancelaEvasao.setIdInternoCrc(Integer.parseInt(jIdInternoEvadido.getText()));
        objCancelaEvasao.setSituacaoCrc(situacao);
        CONTROLE.UPDATE_SITUACAO_interno(objCancelaEvasao);
        // ABRIR O ROL DE VISITAS, DESBLOQUEIA INTERNO NO ROL (ABERTO)         
        CONTROLE.UPDATE_ROL_SAIDA_interno(objCancelaEvasao);
        statusRol = "ABERTO";
        objCancelaEvasao.setIdInternoCrc(Integer.valueOf(jIdInternoEvadido.getText()));
        objCancelaEvasao.setStatusRol(statusRol);
        objCancelaEvasao.setObservacao(jOperacao.getText());
        objCancelaEvasao.setUsuarioUp(nameUser);
        objCancelaEvasao.setDataUp(jDataSistema.getText());
        objCancelaEvasao.setHoraUp(horaMov);
        CONTROLE.FINALIZA_ROL_VISITAS_portaria(objCancelaEvasao);
    }

    public void LIMPAR_tabela() {
        // APAGAR DADOS DA TABELA
        while (jTabelaCancelamentoEvasao.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaCancelamentoEvasao.getModel()).removeRow(0);
        }
    }

    public void PESQUISAR_DADOS_codigo() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaCancelamentoEvasao.getModel();
        try {
            for (CancelamentoEvasao dd : CONTROLE.LISTA_REGISTROS_CODIGO_read()) {
                pDATA_Registros = String.valueOf(dd.getDataCancelaEvasao());
                String dia = pDATA_Registros.substring(8, 10);
                String mes = pDATA_Registros.substring(5, 7);
                String ano = pDATA_Registros.substring(0, 4);
                pDATA_Registros = dia + "/" + mes + "/" + ano;
                if (dd.getTipoOperacaoCancelar() == 0) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA TEMPORARIA";
                } else if (dd.getTipoOperacaoCancelar() == 1) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA LABORATIVA";
                } else if (dd.getTipoOperacaoCancelar() == 2) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA ESTUDOS";
                } else if (dd.getTipoOperacaoCancelar() == 3) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA MÉDICO";
                } else if (dd.getTipoOperacaoCancelar() == 4) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA DOMICILIAR";
                }
                dadosOrigem.addRow(new Object[]{dd.getIdCancelaEvasao(), pDATA_Registros, dd.getStatusCancelarEvasao(), pTIPO_OPERCAO_cancelamento, dd.getNomeInternoCrc()});
                jtotalRegistros.setText(Integer.toString(pTOTAL_registros));
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaCancelamentoEvasao.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCancelamentoEvasao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void PESQUISAR_DADOS_nome() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaCancelamentoEvasao.getModel();
        try {
            for (CancelamentoEvasao dd : CONTROLE.LISTA_REGISTROS_NOME_read()) {
                pDATA_Registros = String.valueOf(dd.getDataCancelaEvasao());
                String dia = pDATA_Registros.substring(8, 10);
                String mes = pDATA_Registros.substring(5, 7);
                String ano = pDATA_Registros.substring(0, 4);
                pDATA_Registros = dia + "/" + mes + "/" + ano;
                if (dd.getTipoOperacaoCancelar() == 0) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA TEMPORARIA";
                } else if (dd.getTipoOperacaoCancelar() == 1) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA LABORATIVA";
                } else if (dd.getTipoOperacaoCancelar() == 2) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA ESTUDOS";
                } else if (dd.getTipoOperacaoCancelar() == 3) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA MÉDICO";
                } else if (dd.getTipoOperacaoCancelar() == 4) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA DOMICILIAR";
                }
                dadosOrigem.addRow(new Object[]{dd.getIdCancelaEvasao(), pDATA_Registros, dd.getStatusCancelarEvasao(), pTIPO_OPERCAO_cancelamento, dd.getNomeInternoCrc()});
                jtotalRegistros.setText(Integer.toString(pTOTAL_registros));
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaCancelamentoEvasao.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCancelamentoEvasao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void PESQUISAR_DADOS_data() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaCancelamentoEvasao.getModel();
        try {
            for (CancelamentoEvasao dd : CONTROLE.LISTA_REGISTROS_DATA_read()) {
                pDATA_Registros = String.valueOf(dd.getDataCancelaEvasao());
                String dia = pDATA_Registros.substring(8, 10);
                String mes = pDATA_Registros.substring(5, 7);
                String ano = pDATA_Registros.substring(0, 4);
                pDATA_Registros = dia + "/" + mes + "/" + ano;
                if (dd.getTipoOperacaoCancelar() == 0) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA TEMPORARIA";
                } else if (dd.getTipoOperacaoCancelar() == 1) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA LABORATIVA";
                } else if (dd.getTipoOperacaoCancelar() == 2) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA ESTUDOS";
                } else if (dd.getTipoOperacaoCancelar() == 3) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA MÉDICO";
                } else if (dd.getTipoOperacaoCancelar() == 4) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA DOMICILIAR";
                }
                dadosOrigem.addRow(new Object[]{dd.getIdCancelaEvasao(), pDATA_Registros, dd.getStatusCancelarEvasao(), pTIPO_OPERCAO_cancelamento, dd.getNomeInternoCrc()});
                jtotalRegistros.setText(Integer.toString(pTOTAL_registros));
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaCancelamentoEvasao.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCancelamentoEvasao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void PESQUISAR_DADOS_todos() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaCancelamentoEvasao.getModel();
        try {
            for (CancelamentoEvasao dd : CONTROLE.LISTA_REGISTROS_TODOS_read()) {
                pDATA_Registros = String.valueOf(dd.getDataCancelaEvasao());
                String dia = pDATA_Registros.substring(8, 10);
                String mes = pDATA_Registros.substring(5, 7);
                String ano = pDATA_Registros.substring(0, 4);
                pDATA_Registros = dia + "/" + mes + "/" + ano;
                //TIPO DE CANCELAMENTO
                if (dd.getTipoOperacaoCancelar() == 0) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA TEMPORARIA";
                } else if (dd.getTipoOperacaoCancelar() == 1) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA LABORATIVA";
                } else if (dd.getTipoOperacaoCancelar() == 2) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA ESTUDOS";
                } else if (dd.getTipoOperacaoCancelar() == 3) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA MÉDICO";
                } else if (dd.getTipoOperacaoCancelar() == 4) {
                    pTIPO_OPERCAO_cancelamento = "EVASÃO - SAIDA DOMICILIAR";
                }
                dadosOrigem.addRow(new Object[]{dd.getIdCancelaEvasao(), pDATA_Registros, dd.getStatusCancelarEvasao(), pTIPO_OPERCAO_cancelamento, dd.getNomeInternoCrc()});
                jtotalRegistros.setText(Integer.toString(pTOTAL_registros));
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaCancelamentoEvasao.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaCancelamentoEvasao.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCancelamentoEvasao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
