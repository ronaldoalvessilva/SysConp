/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEntradaSaidaVisitasReligiosa;
import gestor.Controle.ControleEntradaSaidaVisitasReligiosasPortaria;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleVisitasReligiosas;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.EntradaSaidaVisitasReligiosas;
import gestor.Modelo.ItensEntradaSaidaReligiosaPortaria;
import gestor.Modelo.LogSistema;
import gestor.Modelo.VisitasReligiosasPortaria;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author user
 */
public class TelaEntradaSaidaVisitasReligiosas extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EntradaSaidaVisitasReligiosas objEntSaiVisitasRel = new EntradaSaidaVisitasReligiosas();
    ControleEntradaSaidaVisitasReligiosa control = new ControleEntradaSaidaVisitasReligiosa();
    //
    ItensEntradaSaidaReligiosaPortaria objItensEntSaiVistasReligiosa = new ItensEntradaSaidaReligiosaPortaria();
    ControleEntradaSaidaVisitasReligiosasPortaria controle = new ControleEntradaSaidaVisitasReligiosasPortaria();
    //
    VisitasReligiosasPortaria objEntSaiVisitasReligiosas = new VisitasReligiosasPortaria();
    ControleVisitasReligiosas controleRel = new ControleVisitasReligiosas();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria:Entrada/Saida de Visitas Religiosa/Visitas:Manutenção";
    String nomeModuloTela2 = "Portaria:Entrada/Saida de Visitas Religiosa/Visitas:Visitas";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String statusEnt = "ABERTO";
    String dataInicial;
    String dataFinal;
    String dataEntrada, dataBrasil;
    String dataSaida;
    public static String idItem;
    String codlanc;
    String idEntAd; // ID de lançamento para atualizar data e hora dos Ad. e Internos
    String caminho, caminhoAdv;
    int count = 0;
    // VARIAVEIS PARA BLOQUEAR O REGISTRO CASO NÃO ESTEJA COM OS HORÁRIOS PREENCHIDOS COM AS HORAS.
    String verHorarioSaida = "00:00";
    String verHorarioEntrada = "00:00";
    String horaEntradaEncontrada, codigoRegistro, horaSaidaEncontrado;
    //
    String codigoDoc;
    String codigoInstituicao;
    //

    /**
     * Creates new form TelaEntradaSaidaAdvogadosInternos
     */
    public static TelaFotoVsitanteReligioso telaVisitasReligiosas;

    public TelaEntradaSaidaVisitasReligiosas() {
        super();
        initComponents();
        setResizable(false);
        formatarCampos();
        corCampo();
    }

    public void mostrarFotoVisitaReligiosa() {
        telaVisitasReligiosas = new TelaFotoVsitanteReligioso(this, true);
        telaVisitasReligiosas.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jBtPesqData = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jBtPesqID = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPesquisaNomeAdvogado = new javax.swing.JTextField();
        jBtNomeAdvogado = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaEntradaSaidaVisitasReligiosas = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jNomeVisitaReligiosa = new javax.swing.JTextField();
        jIdVistaRel = new javax.swing.JTextField();
        jBtPesqInterno = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jHorarioEntrada = new javax.swing.JFormattedTextField();
        jDataEntrada = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jHorarioSaida = new javax.swing.JFormattedTextField();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaVisitasReligiosas = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jBtNovaVisita = new javax.swing.JButton();
        jBtAlterarVisita = new javax.swing.JButton();
        jBtExcluirVisita = new javax.swing.JButton();
        jBtSalvarVisita = new javax.swing.JButton();
        jBtCancelarVisita = new javax.swing.JButton();
        jBtAuditoriaVisita = new javax.swing.JButton();
        jBtBuscarVisita = new javax.swing.JButton();
        jBtZoonFotoVisita = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jFotoVisitaReligiosa = new javax.swing.JLabel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSairVisita = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoriaManu = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jStatusEntCola = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jIDlanc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDatalancamento = new com.toedter.calendar.JDateChooser();
        jIdIstituicao = new javax.swing.JTextField();
        jNomeInstituicao = new javax.swing.JTextField();
        jBtPesqInstituicao = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("...::: Entrada e Saida Visitas Religiosas {P1} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqID.setContentAreaFilled(false);
        jBtPesqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIDActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Instituião:");

        jPesquisaNomeAdvogado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtNomeAdvogado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtNomeAdvogado.setContentAreaFilled(false);
        jBtNomeAdvogado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNomeAdvogadoActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPesquisaNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)))
                .addGap(23, 23, 23))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqID)
                    .addComponent(jLabel15)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(jPesquisaNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtNomeAdvogado)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaEntradaSaidaVisitasReligiosas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEntradaSaidaVisitasReligiosas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome Advogado", "Observação"
            }
        ));
        jTabelaEntradaSaidaVisitasReligiosas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEntradaSaidaVisitasReligiosasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaEntradaSaidaVisitasReligiosas);
        if (jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumnCount() > 0) {
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setMinWidth(350);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setMaxWidth(350);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setMinWidth(360);
            jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setMaxWidth(360);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Código");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Nome da Visita Religiosa");

        jNomeVisitaReligiosa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisitaReligiosa.setEnabled(false);

        jIdVistaRel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdVistaRel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdVistaRel.setEnabled(false);

        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setToolTipText("Pesquisar Setor");
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 255));
        jLabel11.setText("Data Entrada");

        jHorarioEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioEntrada.setEnabled(false);

        jDataEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntrada.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 51, 0));
        jLabel18.setText("Data Saída");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 0, 255));
        jLabel13.setText("Horário");

        jHorarioSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioSaida.setEnabled(false);

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 51, 0));
        jLabel19.setText("Horário");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeVisitaReligiosa)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jIdVistaRel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel13))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jIdVistaRel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeVisitaReligiosa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaVisitasReligiosas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVisitasReligiosas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome da Visita Religiosa", "Data Entrada", "Horário", "Data Saída", "Horário"
            }
        ));
        jTabelaVisitasReligiosas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVisitasReligiosasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaVisitasReligiosas);
        if (jTabelaVisitasReligiosas.getColumnModel().getColumnCount() > 0) {
            jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(1).setMinWidth(350);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(1).setMaxWidth(350);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setMinWidth(50);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setMaxWidth(50);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaVisitasReligiosas.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jBtNovaVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovaVisita.setText("Novo");
        jBtNovaVisita.setEnabled(false);
        jBtNovaVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaVisitaActionPerformed(evt);
            }
        });

        jBtAlterarVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarVisita.setText("Alterar");
        jBtAlterarVisita.setEnabled(false);
        jBtAlterarVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarVisitaActionPerformed(evt);
            }
        });

        jBtExcluirVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirVisita.setText("Excluir");
        jBtExcluirVisita.setEnabled(false);
        jBtExcluirVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirVisitaActionPerformed(evt);
            }
        });

        jBtSalvarVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarVisita.setText("Gravar");
        jBtSalvarVisita.setEnabled(false);
        jBtSalvarVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarVisitaActionPerformed(evt);
            }
        });

        jBtCancelarVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarVisita.setText("Cancelar");
        jBtCancelarVisita.setEnabled(false);
        jBtCancelarVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarVisitaActionPerformed(evt);
            }
        });

        jBtAuditoriaVisita.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaVisita.setToolTipText("Auditoria");
        jBtAuditoriaVisita.setContentAreaFilled(false);
        jBtAuditoriaVisita.setEnabled(false);
        jBtAuditoriaVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaVisitaActionPerformed(evt);
            }
        });

        jBtBuscarVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarVisita.setText("Buscar");
        jBtBuscarVisita.setEnabled(false);
        jBtBuscarVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarVisitaActionPerformed(evt);
            }
        });

        jBtZoonFotoVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/11985_16x16.png"))); // NOI18N
        jBtZoonFotoVisita.setToolTipText("Ampliar Foto Interno");
        jBtZoonFotoVisita.setEnabled(false);
        jBtZoonFotoVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtZoonFotoVisitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBtNovaVisita)
                                    .addComponent(jBtAlterarVisita)
                                    .addComponent(jBtExcluirVisita)
                                    .addComponent(jBtSalvarVisita)
                                    .addComponent(jBtCancelarVisita)
                                    .addComponent(jBtBuscarVisita)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jBtAuditoriaVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBtZoonFotoVisita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarVisita, jBtBuscarVisita, jBtCancelarVisita, jBtExcluirVisita, jBtNovaVisita, jBtSalvarVisita});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovaVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtBuscarVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtZoonFotoVisita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaVisita)
                .addContainerGap())
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarVisita, jBtAuditoriaVisita, jBtBuscarVisita, jBtCancelarVisita, jBtExcluirVisita, jBtNovaVisita, jBtSalvarVisita});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/holybible_bible_book_4252(3).png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto da Visita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVisitaReligiosa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVisitaReligiosa, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSairVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairVisita.setText("Sair");
        jBtSairVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairVisitaActionPerformed(evt);
            }
        });

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setContentAreaFilled(false);
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoriaManu.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setContentAreaFilled(false);
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 255));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jStatusEntCola.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEntCola.setForeground(new java.awt.Color(255, 0, 0));
        jStatusEntCola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEntCola.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Status");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jIDlanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDlanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDlanc.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome da Instituição Religiosa");

        jDatalancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDatalancamento.setEnabled(false);

        jIdIstituicao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdIstituicao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdIstituicao.setEnabled(false);

        jNomeInstituicao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInstituicao.setEnabled(false);

        jBtPesqInstituicao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInstituicao.setToolTipText("Pesquisar Instituição Religiosa");
        jBtPesqInstituicao.setContentAreaFilled(false);
        jBtPesqInstituicao.setEnabled(false);
        jBtPesqInstituicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInstituicaoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Cadastro");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jIdIstituicao, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(jIDlanc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jStatusEntCola, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jDatalancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addComponent(jLabel4)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jNomeInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesqInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIDlanc, jIdIstituicao});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(5, 5, 5))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIDlanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jStatusEntCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDatalancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jNomeInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInstituicao)
                    .addComponent(jIdIstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDatalancamento, jIDlanc, jStatusEntCola});

        jTabbedPane2.addTab("Documento", jPanel11);

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Observação", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jBtNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSairVisita)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo)
                        .addComponent(jBtAlterar)
                        .addComponent(jBtExcluir)
                        .addComponent(jBtSalvar)
                        .addComponent(jBtCancelar)
                        .addComponent(jBtSairVisita))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBtFinalizar)
                        .addComponent(jBtAuditoriaManu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(250, 10, 709, 556);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesqFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    preencherTodasEntSai("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                            + "INNER JOIN INSTITUICAO_RELIGIOSA "
                            + "ON ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdCod=INSTITUICAO_RELIGIOSA.IdCod "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIDActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um Código para pesquisa.");
        } else {
            preencherTodasEntSai("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "INNER JOIN INSTITUICAO_RELIGIOSA "
                    + "ON ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdCod=INSTITUICAO_RELIGIOSA.IdCod "
                    + "WHERE IdLanc='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIDActionPerformed

    private void jTabelaEntradaSaidaVisitasReligiosasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEntradaSaidaVisitasReligiosasMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaEntradaSaidaVisitasReligiosas.getValueAt(jTabelaEntradaSaidaVisitasReligiosas.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            //
            jDatalancamento.setDate(jDatalancamento.getDate());
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtNovaVisita.setEnabled(true);
            jBtBuscarVisita.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            //
            limparCamposReligioso();
            //
            bloquearCamposPesquisa();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                        + "INNER JOIN INSTITUICAO_RELIGIOSA "
                        + "ON ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdCod=INSTITUICAO_RELIGIOSA.IdCod "
                        + "WHERE IdEntSaiVisita='" + IdLanc + "'");
                conecta.rs.first();
                jIDlanc.setText(String.valueOf(conecta.rs.getInt("IdEntSaiVisita")));
                jStatusEntCola.setText(conecta.rs.getString("Statuslanc"));
                jDatalancamento.setDate(conecta.rs.getDate("DataLanc"));
                jIdIstituicao.setText(String.valueOf(conecta.rs.getInt("IdCod")));
                jNomeInstituicao.setText(conecta.rs.getString("NomeInstituicao"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            preencherTabelaItens("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "INNER JOIN VISITAS_RELIGIOSA_INTERNOS "
                    + "ON ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdVisitaRel=VISITAS_RELIGIOSA_INTERNOS.IdVisitaRel "
                    + "WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaEntradaSaidaVisitasReligiosasMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        bloquearCamposPesquisa();
        bloquearBotoes();
        Novo();
        corCampo();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        verificarInstituicao();
        objEntSaiVisitasRel.setStatusLanc(jStatusEntCola.getText());
        if (jStatusEntCola.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa entrada de visitas religiosas não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            acao = 2;
            bloquearCamposPesquisa();
            bloquearBotoes();
            Alterar();
            corCampo();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        objEntSaiVisitasRel.setStatusLanc(jStatusEntCola.getText());
        if (jStatusEntCola.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa entrada de visitas religiosas não poderá ser excluída, o mesmo encontra-se FINALIZADO");
        } else {
            verificarItens();
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:       
        if (jDatalancamento.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data do lancamento.");
            jDatalancamento.requestFocus();
            jDatalancamento.setBackground(Color.red);
        } else if (jIdIstituicao.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a instituição.");
        } else {
            objEntSaiVisitasRel.setStatusLanc(statusEnt);
            objEntSaiVisitasRel.setDataLanc(jDatalancamento.getDate());
            objEntSaiVisitasRel.setObsLanc(jObservacao.getText());
            objEntSaiVisitasRel.setIdInstituicao(Integer.valueOf(jIdIstituicao.getText()));
            objEntSaiVisitasRel.setNomeInstituicao(jNomeInstituicao.getText());
            if (acao == 1) {
                objEntSaiVisitasRel.setUsuarioInsert(nameUser);
                objEntSaiVisitasRel.setDataInsert(dataModFinal);
                objEntSaiVisitasRel.setHoraInsert(horaMov);
                //
                control.incluirEntSaiVisitasReligiosas(objEntSaiVisitasRel);
                buscarID();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                Salvar();
            }
            if (acao == 2) {
                objEntSaiVisitasRel.setUsuarioUp(nameUser);
                objEntSaiVisitasRel.setDataUp(dataModFinal);
                objEntSaiVisitasRel.setHoraUp(horaMov);
                objEntSaiVisitasRel.setIdLanc(Integer.valueOf(jIDlanc.getText()));
                control.alterarEntSaiVisitasReligiosas(objEntSaiVisitasRel);
                //
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                Salvar();
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        Integer rows = jTabelaVisitasReligiosas.getModel().getRowCount();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível finalizar registro. A tabela de visitas encontra-se vazia.");
        } else {
            verificarHoraEntrada();
            if (jHorarioSaida.getText().equals(horaSaidaEncontrado) && jIDlanc.getText().equals(codigoRegistro) || jHorarioEntrada.getText().equals(horaEntradaEncontrada) && jIDlanc.getText().equals(codigoRegistro)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível FINALIZAR esse registro, existe(m) horário(s) de entrada de visita(s) em aberto.\nCorrija os horários com divergências e então poderá FINALIZAR o documento. ");
            } else {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
                    conecta.rs.first();
                    jStatusEntCola.setText(conecta.rs.getString("StatusLanc"));
                    if (jStatusEntCola.getText().equals("FINALIZADO")) {
                        JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
                    } else {
                        Finalizar();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
                }
                conecta.desconecta();
            }
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaPesquisaVisitasReligiosasPortaria objVisitasPortaria = new TelaPesquisaVisitasReligiosasPortaria();
        TelaModuloPortarias.jPainelPortarias.add(objVisitasPortaria);
        objVisitasPortaria.show();
    }//GEN-LAST:event_jBtPesqInternoActionPerformed

    private void jTabelaVisitasReligiosasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVisitasReligiosasMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeColaborador = "" + jTabelaVisitasReligiosas.getValueAt(jTabelaVisitasReligiosas.getSelectedRow(), 1);
            jNomeVisitaReligiosa.setText(nomeColaborador);
            idItem = "" + jTabelaVisitasReligiosas.getValueAt(jTabelaVisitasReligiosas.getSelectedRow(), 2);
            // Habilitar os botões
            jBtNovaVisita.setEnabled(true);
            jBtAlterarVisita.setEnabled(true);
            jBtExcluirVisita.setEnabled(true);
            jBtSalvarVisita.setEnabled(!true);
            jBtCancelarVisita.setEnabled(true);
            jBtAuditoriaVisita.setEnabled(true);
            jBtZoonFotoVisita.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                        + "INNER JOIN VISITAS_RELIGIOSA_INTERNOS "
                        + "ON ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdVisitaRel=VISITAS_RELIGIOSA_INTERNOS.IdVisitaRel "
                        + "INNER JOIN ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                        + "ON ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdEntSaiVisita=ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdEntSaiVisita "
                        + "WHERE VISITAS_RELIGIOSA_INTERNOS.NomeVisitaRel='" + jNomeVisitaReligiosa.getText() + "' "
                        + "AND ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdEntSaiVisita='" + jIDlanc.getText() + "'");
                conecta.rs.first();
                jIdVistaRel.setText(conecta.rs.getString("IdVisitaRel"));
                jNomeVisitaReligiosa.setText(conecta.rs.getString("NomeVisitaRel"));
                idItem = conecta.rs.getString("IdItem"); // Coluna 2          
                // Capturando foto
                caminho = conecta.rs.getString("ImagemVisitaRel");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoVisitaReligiosa.setIcon(i);
                jFotoVisitaReligiosa.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoVisitaReligiosa.getWidth(), jFotoVisitaReligiosa.getHeight(), Image.SCALE_DEFAULT)));
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jHorarioEntrada.setText(conecta.rs.getString("HorarioEntrada"));
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jHorarioSaida.setText(conecta.rs.getString("HorarioSaida"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaVisitasReligiosasMouseClicked

    private void jBtNovaVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaVisitaActionPerformed
        // TODO add your handling code here:
        objEntSaiVisitasRel.setStatusLanc(jStatusEntCola.getText());
        if (jStatusEntCola.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa entrada de interno não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            acao = 3;
            bloquearBotoes();
            bloquearCamposPesquisa();
            NovoInterno();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtNovaVisitaActionPerformed

    private void jBtAlterarVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarVisitaActionPerformed
        // TODO add your handling code here:
        objEntSaiVisitasRel.setStatusLanc(jStatusEntCola.getText());
        if (jStatusEntCola.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa entrada de interno não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            acao = 4;
            bloquearBotoes();
            bloquearCamposPesquisa();
            AlterarInterno();
            corCampo();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtAlterarVisitaActionPerformed

    private void jBtExcluirVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirVisitaActionPerformed
        // TODO add your handling code here:
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        objEntSaiVisitasRel.setStatusLanc(jStatusEntCola.getText());
        if (jStatusEntCola.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse  interno não poderá ser excluído, o mesmo encontra-se FINALIZADO");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o interno selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objItensEntSaiVistasReligiosa.setIdItem(Integer.valueOf(idItem));
                controle.excluirEntSaiVisitaReligiosaP1(objItensEntSaiVistasReligiosa);
                objEntSaiVisitasReligiosas.setIdLanc(Integer.valueOf(jIDlanc.getText()));
                objEntSaiVisitasReligiosas.setIdVisitaRel(Integer.valueOf(jIdVistaRel.getText()));
                controleRel.excluirVisitasHistReligiosa(objEntSaiVisitasReligiosas);
                objLog2();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                ExcluirInterno();
                preencherTabelaItens("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                        + "INNER JOIN VISITAS_RELIGIOSA_INTERNOS "
                        + "ON ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdVisitaRel=VISITAS_RELIGIOSA_INTERNOS.IdVisitaRel "
                        + "WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
            }
        }
    }//GEN-LAST:event_jBtExcluirVisitaActionPerformed

    private void jBtSalvarVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarVisitaActionPerformed
        // TODO add your handling code here:               
        if (jNomeVisitaReligiosa.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da visita religiosa.");
            jNomeVisitaReligiosa.requestFocus();
            jNomeVisitaReligiosa.setBackground(Color.red);
        } else {
            objItensEntSaiVistasReligiosa.setIdEntSaiVisita(Integer.valueOf(jIDlanc.getText()));
            objItensEntSaiVistasReligiosa.setIdCod(Integer.valueOf(jIdIstituicao.getText()));
            objItensEntSaiVistasReligiosa.setNomeInstituicao(jNomeInstituicao.getText());
            objItensEntSaiVistasReligiosa.setIdVisitaRel(Integer.valueOf(jIdVistaRel.getText()));
            objItensEntSaiVistasReligiosa.setNomeVisitaRel(jNomeVisitaReligiosa.getText());
            objItensEntSaiVistasReligiosa.setDataEntrada(jDataEntrada.getDate());
            objItensEntSaiVistasReligiosa.setHorarioEntrada(jHorarioEntrada.getText());
            objItensEntSaiVistasReligiosa.setDataSaida(jDataSaida.getDate());
            objItensEntSaiVistasReligiosa.setHorarioSaida(jHorarioSaida.getText());
            if (acao == 3) {
                // Para o log do registro
                objItensEntSaiVistasReligiosa.setUsuarioInsert(nameUser);
                objItensEntSaiVistasReligiosa.setDataInsert(dataModFinal);
                objItensEntSaiVistasReligiosa.setHorarioInsert(horaMov);
                //
                controle.incluirEntSaiVisitaReligiosaP1(objItensEntSaiVistasReligiosa);
                objVisitasReligiosas();
                controleRel.incluirVisitasHistReligiosa(objEntSaiVisitasReligiosas); // Incluir os internos no cadastro do advogdo
                objLog2();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                SalvarInterno();
                preencherTabelaItens("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                        + "INNER JOIN VISITAS_RELIGIOSA_INTERNOS "
                        + "ON ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdVisitaRel=VISITAS_RELIGIOSA_INTERNOS.IdVisitaRel "
                        + "WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
            if (acao == 4) {
                objItensEntSaiVistasReligiosa.setUsuarioUp(nameUser);
                objItensEntSaiVistasReligiosa.setDataUp(dataModFinal);
                objItensEntSaiVistasReligiosa.setHorarioUp(horaMov);
                //                
                objItensEntSaiVistasReligiosa.setIdItem(Integer.valueOf(idItem));
                controle.alterarEntSaiVisitaReligiosaP1(objItensEntSaiVistasReligiosa);
                objVisitasReligiosas();
                controleRel.alterarVisitasHistReligiosa(objEntSaiVisitasReligiosas); // Alterar os internos no cadastro do advogado
                objLog2();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                SalvarInterno();
                preencherTabelaItens("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                        + "INNER JOIN VISITAS_RELIGIOSA_INTERNOS "
                        + "ON ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdVisitaRel=VISITAS_RELIGIOSA_INTERNOS.IdVisitaRel "
                        + "WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");

            }
        }
    }//GEN-LAST:event_jBtSalvarVisitaActionPerformed

    private void jBtCancelarVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarVisitaActionPerformed
        // TODO add your handling code here:
        CancelarInterno();
    }//GEN-LAST:event_jBtCancelarVisitaActionPerformed

    private void jBtSairVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairVisitaActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairVisitaActionPerformed

    private void jBtBuscarVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarVisitaActionPerformed
        // TODO add your handling code here:
        TelaBuscarVisitasReligiosas objBuscarVisitasRel = new TelaBuscarVisitasReligiosas();
        TelaModuloPortarias.jPainelPortarias.add(objBuscarVisitasRel);
        objBuscarVisitasRel.show();
    }//GEN-LAST:event_jBtBuscarVisitaActionPerformed

    private void jBtNomeAdvogadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNomeAdvogadoActionPerformed
        // TODO add your handling code here:   
        count = 0;
        flag = 1;
        if (jPesquisaNomeAdvogado.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome de Advogado para pesquisa");
            jPesquisaNomeAdvogado.requestFocus();
        } else {
            pesquisarEntSaiAdvInterno("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "INNER JOIN INSTITUICAO_RELIGIOSA "
                    + "ON ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdCod=INSTITUICAO_RELIGIOSA.IdCod "
                    + "WHERE NomeAInstituicao LIKE'%" + jPesquisaNomeAdvogado.getText() + "%'");
        }
    }//GEN-LAST:event_jBtNomeAdvogadoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTodasEntSai("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "INNER JOIN INSTITUICAO_RELIGIOSA "
                    + "ON ENTRADA_SAIDA_VISITAS_RELIGIOSA.IdCod=INSTITUICAO_RELIGIOSA.IdCod ORDER BY DataLanc");
        } else {
            jtotalRegistros.setText("");
            limparTabelaEntSai();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEntSaiVisitasRel objAudEntSaiVisRel = new TelaAuditoriaEntSaiVisitasRel();
        TelaModuloPortarias.jPainelPortarias.add(objAudEntSaiVisRel);
        objAudEntSaiVisRel.show();
    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jBtAuditoriaVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaVisitaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensEntradaSaidaVisitasRel objAudEntSaiItensViRel = new TelaAuditoriaItensEntradaSaidaVisitasRel();
        TelaModuloPortarias.jPainelPortarias.add(objAudEntSaiItensViRel);
        objAudEntSaiItensViRel.show();
    }//GEN-LAST:event_jBtAuditoriaVisitaActionPerformed

    private void jBtZoonFotoVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtZoonFotoVisitaActionPerformed
        // TODO add your handling code here:
        if (jIdVistaRel.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da visita.");
        } else {
            mostrarFotoVisitaReligiosa();
        }
    }//GEN-LAST:event_jBtZoonFotoVisitaActionPerformed

    private void jBtPesqInstituicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInstituicaoActionPerformed
        // TODO add your handling code here:
        TelaPesquisaInstituicaoRolReligiosoPortaria objPesqInstRel = new TelaPesquisaInstituicaoRolReligiosoPortaria();
        TelaModuloPortarias.jPainelPortarias.add(objPesqInstRel);
        objPesqInstRel.show();
    }//GEN-LAST:event_jBtPesqInstituicaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarVisita;
    private javax.swing.JButton jBtAuditoriaManu;
    private javax.swing.JButton jBtAuditoriaVisita;
    public static javax.swing.JButton jBtBuscarVisita;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarVisita;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirVisita;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtNomeAdvogado;
    public static javax.swing.JButton jBtNovaVisita;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqID;
    private javax.swing.JButton jBtPesqInstituicao;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtSairVisita;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarVisita;
    public static javax.swing.JButton jBtZoonFotoVisita;
    private javax.swing.JCheckBox jCheckBox1;
    public static com.toedter.calendar.JDateChooser jDataEntrada;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    private com.toedter.calendar.JDateChooser jDatalancamento;
    public static javax.swing.JLabel jFotoVisitaReligiosa;
    public static javax.swing.JFormattedTextField jHorarioEntrada;
    public static javax.swing.JFormattedTextField jHorarioSaida;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIDlanc;
    public static javax.swing.JTextField jIdIstituicao;
    public static javax.swing.JTextField jIdVistaRel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInstituicao;
    public static javax.swing.JTextField jNomeVisitaReligiosa;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesquisaNomeAdvogado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jStatusEntCola;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaEntradaSaidaVisitasReligiosas;
    private javax.swing.JTable jTabelaVisitasReligiosas;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void verificarInternos() {
        //Verificar a existencia de registros para serem atualizados com a data da capa
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM HISTORICO_VISITAS_RELIGIOSA WHERE IdLanc='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            idEntAd = conecta.rs.getString("IdLanc");
            if (jIDlanc.getText().equals(idEntAd)) {
                objHorarioVisitasReligiosas();
                objItensEntSaiVistasReligiosa.setIdEntSaiVisita(Integer.valueOf(jIDlanc.getText()));
                controleRel.alterarHorarioAdvogadosInterno(objEntSaiVisitasReligiosas);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Não foi possivel gravar o novo horário...");
            }
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void objHorarioVisitasReligiosas() {
        objEntSaiVisitasReligiosas.setIdLanc(Integer.valueOf(jIDlanc.getText()));
        objEntSaiVisitasReligiosas.setIdIstituicao(Integer.valueOf(jIdIstituicao.getText()));
        objEntSaiVisitasReligiosas.setDataEntrada(jDataEntrada.getDate());
        objEntSaiVisitasReligiosas.setHorarioEntrada(jHorarioEntrada.getText());
        objEntSaiVisitasReligiosas.setDataSaida(jDataSaida.getDate());
        objEntSaiVisitasReligiosas.setHorarioSaida(jHorarioSaida.getText());
    }

    public void objVisitasReligiosas() {

        objEntSaiVisitasReligiosas.setIdIstituicao(Integer.valueOf(jIdIstituicao.getText()));
        objEntSaiVisitasReligiosas.setIdVisitaRel(Integer.valueOf(jIdVistaRel.getText()));
        objEntSaiVisitasReligiosas.setIdLanc(Integer.valueOf(jIDlanc.getText()));
        objEntSaiVisitasReligiosas.setDataEntrada(jDataEntrada.getDate());
        objEntSaiVisitasReligiosas.setHorarioEntrada(jHorarioEntrada.getText());
        objEntSaiVisitasReligiosas.setDataSaida(jDataSaida.getDate());
        objEntSaiVisitasReligiosas.setHorarioSaida(jHorarioSaida.getText());
    }

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
        try {
            MaskFormatter horarioEntrada = new MaskFormatter("##:##");
            jHorarioEntrada.setFormatterFactory(new DefaultFormatterFactory(horarioEntrada));
            MaskFormatter horarioSaida = new MaskFormatter("##:##");
            jHorarioSaida.setFormatterFactory(new DefaultFormatterFactory(horarioSaida));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar campos\nERRO :" + ex);
        }
    }

    public void bloquearCamposPesquisa() {
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //                   
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
    }

    public void bloquearBotoes() {
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        jBtZoonFotoVisita.setEnabled(true);
        jBtNovaVisita.setEnabled(true);
        jBtAlterarVisita.setEnabled(!true);
        jBtExcluirVisita.setEnabled(!true);
        jBtSalvarVisita.setEnabled(!true);
        jBtCancelarVisita.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jBtAuditoriaVisita.setEnabled(!true);
    }

    public void limparCamposReligioso() {
        jIdVistaRel.setText("");
        jNomeVisitaReligiosa.setText("");
        jFotoVisitaReligiosa.setIcon(null);
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
    }

    public void corCampo() {

        jIDlanc.setBackground(Color.white);
        jStatusEntCola.setBackground(Color.white);
        jDatalancamento.setBackground(Color.white);
        jIdIstituicao.setBackground(Color.white);
        jNomeInstituicao.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        // 
        jDataEntrada.setBackground(Color.white);
        jHorarioEntrada.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jHorarioSaida.setBackground(Color.white);
        jIdVistaRel.setBackground(Color.white);
        jNomeVisitaReligiosa.setBackground(Color.white);
    }

    public void Novo() {
        // Limpar campos
        jIDlanc.setText("");
        jStatusEntCola.setText("ABERTO");
        jDatalancamento.setCalendar(Calendar.getInstance());
        jIdIstituicao.setText("");
        jNomeInstituicao.setText("");
        jObservacao.setText("");
        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInstituicao.setEnabled(true);
        //
        jIdVistaRel.setText("");
        jFotoVisitaReligiosa.setIcon(null);
        jNomeVisitaReligiosa.setText("");
        jDataEntrada.setDate(null);
        //
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jBtPesqInstituicao.setEnabled(true);
        jBtAuditoriaManu.setEnabled(!true);
        jBtZoonFotoVisita.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtNovaVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(!true);
        limparTabelaItens();
    }

    public void Alterar() {
        if (jIDlanc.getText().equals(codigoDoc) && jIdIstituicao.getText().equals(codigoInstituicao)) {
            jBtPesqInstituicao.setEnabled(!true);
        } else {
            jBtPesqInstituicao.setEnabled(true);
        }
        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtPesqInstituicao.setEnabled(true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Excluir() {
        // Limpar campos
        jIDlanc.setText("");
        jDatalancamento.setDate(null);
        jIdIstituicao.setText("");
        jNomeInstituicao.setText("");
        jObservacao.setText("");
        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Salvar() {

        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtPesqInstituicao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtPesqInstituicao.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
        //
        jBtNovaVisita.setEnabled(true);
    }

    public void Cancelar() {

        if (jIDlanc.getText().equals("")) {
            // Limpar campos
            jIDlanc.setText("");
            jDatalancamento.setDate(null);
            jStatusEntCola.setText("");
            jObservacao.setText("");
            jIdIstituicao.setText("");
            jNomeInstituicao.setText("");
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtPesqInstituicao.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            //           
            limparTabelaItens();
        } else {
            jDatalancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
        }
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objEntSaiVisitasRel.setStatusLanc(statusLanc);
            objEntSaiVisitasRel.setIdLanc(Integer.parseInt(jIDlanc.getText()));
            control.finalizarEntSaiVisitasReligiosas(objEntSaiVisitasRel);
            jStatusEntCola.setText("FINALIZADO");
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            //
            jBtPesqInstituicao.setEnabled(!true);
            jDatalancamento.setEnabled(!true);
            jDataEntrada.setEnabled(!true);
            jHorarioEntrada.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jHorarioSaida.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovaVisita.setEnabled(!true);
            jBtAlterarVisita.setEnabled(!true);
            jBtExcluirVisita.setEnabled(!true);
            jBtSalvarVisita.setEnabled(!true);
            jBtCancelarVisita.setEnabled(!true);
        }
    }

    public void NovoInterno() {
        // Limpar os campos
        jIdVistaRel.setText("");
        jNomeVisitaReligiosa.setText("");
        jFotoVisitaReligiosa.setIcon(null);
        // Habilitar/Desabilitar campos
        jBtZoonFotoVisita.setEnabled(!true);
        jBtPesqInterno.setEnabled(true);
        jBtBuscarVisita.setEnabled(!true);
        //
        jDataEntrada.setCalendar(Calendar.getInstance());
        jHorarioEntrada.setText("00:00");
        jDataSaida.setCalendar(Calendar.getInstance());
        jHorarioSaida.setText("00:00");
        //
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        // Botões
        jBtNovaVisita.setEnabled(!true);
        jBtAlterarVisita.setEnabled(!true);
        jBtExcluirVisita.setEnabled(!true);
        jBtSalvarVisita.setEnabled(true);
        jBtCancelarVisita.setEnabled(true);
        jBtBuscarVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(true);
        jBtAuditoriaVisita.setEnabled(!true);
    }

    public void AlterarInterno() {

        // Habilitar/Desabilitar campos
        jBtPesqInterno.setEnabled(true);
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        // Botões
        jBtNovaVisita.setEnabled(!true);
        jBtAlterarVisita.setEnabled(!true);
        jBtExcluirVisita.setEnabled(!true);
        jBtSalvarVisita.setEnabled(true);
        jBtCancelarVisita.setEnabled(true);
        jBtBuscarVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(true);
        jBtAuditoriaVisita.setEnabled(!true);
    }

    public void ExcluirInterno() {

        // Limpar os campos
        jIdVistaRel.setText("");
        jNomeVisitaReligiosa.setText("");
        jFotoVisitaReligiosa.setIcon(null);
        // Habilitar/Desabilitar campos
        jBtPesqInterno.setEnabled(!true);
        // Botões
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        //
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtNovaVisita.setEnabled(true);
        jBtAlterarVisita.setEnabled(!true);
        jBtExcluirVisita.setEnabled(!true);
        jBtSalvarVisita.setEnabled(!true);
        jBtCancelarVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(!true);
        jBtAuditoriaVisita.setEnabled(!true);
    }

    public void SalvarInterno() {

        // Limpar os campos
        jIdVistaRel.setText("");
        jNomeVisitaReligiosa.setText("");
        jFotoVisitaReligiosa.setIcon(null);
        // Habilitar/Desabilitar campos
        jBtPesqInterno.setEnabled(!true);
        // Botões
        jBtNovaVisita.setEnabled(true);
        jBtAlterarVisita.setEnabled(!true);
        jBtExcluirVisita.setEnabled(!true);
        jBtSalvarVisita.setEnabled(!true);
        jBtCancelarVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(true);
        jBtBuscarVisita.setEnabled(!true);
        jBtAuditoriaVisita.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void CancelarInterno() {

        // Habilitar/Desabilitar campos
        jBtPesqInterno.setEnabled(!true);
        // Botões
        jBtNovaVisita.setEnabled(true);
        jBtAlterarVisita.setEnabled(!true);
        jBtExcluirVisita.setEnabled(!true);
        jBtSalvarVisita.setEnabled(!true);
        jBtCancelarVisita.setEnabled(!true);
        jBtBuscarVisita.setEnabled(true);
        jBtBuscarVisita.setEnabled(!true);
        jBtAuditoriaVisita.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADA_SAIDA_VISITAS_RELIGIOSA");
            conecta.rs.last();
            jIDlanc.setText(conecta.rs.getString("IdEntSaiVisita"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO : " + ex);
        }
    }

    public void verificarInstituicao() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            codigoDoc = conecta.rs.getString("IdEntSaiVisita");
            codigoInstituicao = conecta.rs.getString("IdCod");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void verificarHoraEntrada() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "WHERE HorarioSaida='" + verHorarioSaida + "'AND IdEntSaiVisita='" + jIDlanc.getText() + "' "
                    + "OR HorarioEntrada='" + verHorarioEntrada + "'AND IdEntSaiVisita='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            horaEntradaEncontrada = conecta.rs.getString("HorarioEntrada");
            horaSaidaEncontrado = conecta.rs.getString("HorarioSaida");
            codigoRegistro = conecta.rs.getString("IdEntSaiVisita");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    //Preencher tabela com todos os dados de entrada/saída 
    public void preencherTodasEntSai(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome da Instituição", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdEntSaiVisita"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeInstituicao"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaVisitasReligiosas.setModel(modelo);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setPreferredWidth(360);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaVisitasReligiosas.setAutoResizeMode(jTabelaEntradaSaidaVisitasReligiosas.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaVisitasReligiosas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaEntSai();
        conecta.desconecta();
    }

    public void limparTabelaEntSai() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome da Instituição", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaVisitasReligiosas.setModel(modelo);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setPreferredWidth(360);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaVisitasReligiosas.setAutoResizeMode(jTabelaEntradaSaidaVisitasReligiosas.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaVisitasReligiosas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaEntSai() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void pesquisarEntSaiAdvInterno(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome da Visita ", "Data Entrada", "Horário", "Dt. Saída", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataLanc");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                // Formatar a data no formato Brasil
                dataEntrada = conecta.rs.getString("DataEntrada");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                // Formatar a data no formato Brasil
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dias + "/" + mess + "/" + anos;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdEntSaiVisita"), dataBrasil, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeVisitaRel"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaVisitasReligiosas.setModel(modelo);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(5).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(6).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(7).setPreferredWidth(70);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(7).setResizable(false);
        jTabelaEntradaSaidaVisitasReligiosas.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaVisitasReligiosas.setAutoResizeMode(jTabelaEntradaSaidaVisitasReligiosas.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaVisitasReligiosas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAdvogados();
        conecta.desconecta();
    }

    public void alinharTabelaAdvogados() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(5).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(6).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasReligiosas.getColumnModel().getColumn(7).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome da Visita Religiosa", "Data Entrada", "Horário", "Data Saída", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataEntrada");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                dados.add(new Object[]{conecta.rs.getInt("IdVisitaRel"), conecta.rs.getString("NomeVisitaRel"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisitasReligiosas.setModel(modelo);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVisitasReligiosas.getTableHeader().setReorderingAllowed(false);
        jTabelaVisitasReligiosas.setAutoResizeMode(jTabelaVisitasReligiosas.AUTO_RESIZE_OFF);
        jTabelaVisitasReligiosas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaItens();
        conecta.desconecta();
    }

    public void alinharTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setCellRenderer(centralizado);
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome da Visita Religiosa", "Data Entrada", "Horário", "Data Saída", "Horário"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisitasReligiosas.setModel(modelo);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaVisitasReligiosas.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVisitasReligiosas.getTableHeader().setReorderingAllowed(false);
        jTabelaVisitasReligiosas.setAutoResizeMode(jTabelaVisitasReligiosas.AUTO_RESIZE_OFF);
        jTabelaVisitasReligiosas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void verificarItens() {

        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENTRADA_SAIDA_VISITAS_RELIGIOSA "
                    + "WHERE IdEntSaiVisita='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            codlanc = conecta.rs.getString("IdEntSaiVisita");
            if (jIDlanc.getText().equals(codlanc)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objEntSaiVisitasRel.setIdLanc(Integer.parseInt(jIDlanc.getText()));
                control.excluirEntSaiVisitasReligiosas(objEntSaiVisitasRel);
                //
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                bloquearCamposPesquisa();
                bloquearBotoes();
                Excluir();
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDlanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDlanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
