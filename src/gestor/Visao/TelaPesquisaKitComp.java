/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.codigoPesquisaKit;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.codigoPesquisaKitItem;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jRBtKitAnual;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jRBtKitDecendial;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jRBtKitInicial;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jRBtKitMensal;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jRBtKitQuinzenal;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jRBtKitSemestral;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jTabelaGeralProdutosKit;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.jtotalProdutosKit;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.qtdItem;
import static gestor.Visao.TelaMontagemPagamentoKitInterno.qtdItemTab;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronal
 */
public class TelaPesquisaKitComp extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();

    int flag;
    int kitInicial = 0;
    int kitAnual = 0;
    int kitDecendial = 0;
    int kitQuinzenal = 0;
    int kitMensal = 0;
    int kitSemestral = 0;
    String nomeKit = "";
    String IdKit;

    /**
     * Creates new form TelaPesquisaKitComp
     */
    public static TelaMontagemPagamentoKitInterno telaMotagemKit;

    public TelaPesquisaKitComp(TelaMontagemPagamentoKitInterno parent, boolean modal) {
        this.telaMotagemKit = parent;
        this.setModal(modal);
        setLocationRelativeTo(telaMotagemKit);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotoes = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPesquisaNomeProduto = new javax.swing.JTextField();
        jBtPesqNome = new javax.swing.JButton();
        jCheckBoxKitInicial = new javax.swing.JCheckBox();
        jCheckBoxKitQuinzenal = new javax.swing.JCheckBox();
        jCheckBoxKitMensal = new javax.swing.JCheckBox();
        jCheckBoxKitDecendial = new javax.swing.JCheckBox();
        jCheckBoxKitSemestral = new javax.swing.JCheckBox();
        jCheckBoxKitAnual = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaProdutosKit = new javax.swing.JTable();
        jBtConfirmar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Pesquisa de Tipos de Kits :::...");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Tipos de Kits de Higiêne", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Descrição Produto:");

        jPesquisaNomeProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNome.setContentAreaFilled(false);
        jBtPesqNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeActionPerformed(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitInicial);
        jCheckBoxKitInicial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitInicial.setText("Kit Inicial");
        jCheckBoxKitInicial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitInicialItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitQuinzenal);
        jCheckBoxKitQuinzenal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitQuinzenal.setForeground(new java.awt.Color(204, 0, 0));
        jCheckBoxKitQuinzenal.setText("Quinzenal");
        jCheckBoxKitQuinzenal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitQuinzenalItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitMensal);
        jCheckBoxKitMensal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitMensal.setForeground(new java.awt.Color(153, 0, 102));
        jCheckBoxKitMensal.setText("Mensal");
        jCheckBoxKitMensal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitMensalItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitDecendial);
        jCheckBoxKitDecendial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitDecendial.setForeground(new java.awt.Color(0, 153, 0));
        jCheckBoxKitDecendial.setText("Decendial");
        jCheckBoxKitDecendial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitDecendialItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitSemestral);
        jCheckBoxKitSemestral.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitSemestral.setForeground(new java.awt.Color(0, 0, 204));
        jCheckBoxKitSemestral.setText("Semestral");
        jCheckBoxKitSemestral.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitSemestralItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitAnual);
        jCheckBoxKitAnual.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitAnual.setText("Anual");
        jCheckBoxKitAnual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitAnualItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Tipo Kit:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxKitInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxKitQuinzenal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxKitMensal)
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBoxKitDecendial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxKitSemestral)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxKitAnual))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPesquisaNomeProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesquisaNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jBtPesqNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxKitQuinzenal)
                    .addComponent(jCheckBoxKitInicial)
                    .addComponent(jCheckBoxKitMensal)
                    .addComponent(jCheckBoxKitDecendial)
                    .addComponent(jCheckBoxKitSemestral)
                    .addComponent(jCheckBoxKitAnual)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaProdutosKit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaProdutosKit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Registro", "Tipo Kit", "Código", "Descrição Produto", "Un.", "Quant."
            }
        ));
        jTabelaProdutosKit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaProdutosKitMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaProdutosKit);
        if (jTabelaProdutosKit.getColumnModel().getColumnCount() > 0) {
            jTabelaProdutosKit.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(2).setMaxWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaProdutosKit.getColumnModel().getColumn(3).setMaxWidth(300);
            jTabelaProdutosKit.getColumnModel().getColumn(4).setMinWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(4).setMaxWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        jBtConfirmar.setForeground(new java.awt.Color(0, 102, 0));
        jBtConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/40_16x16.png"))); // NOI18N
        jBtConfirmar.setText("Confirmar");
        jBtConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtConfirmarActionPerformed(evt);
            }
        });

        jBtSair.setForeground(new java.awt.Color(204, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtConfirmar)
                    .addComponent(jBtSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeActionPerformed
        // TODO add your handling code here:
        if (jPesquisaNomeProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do produto para pesquisa.");
        } else {
            preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE NomeProd LIKE'%" + jPesquisaNomeProduto.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeActionPerformed

    private void jTabelaProdutosKitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaProdutosKitMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            IdKit = "" + jTabelaProdutosKit.getValueAt(jTabelaProdutosKit.getSelectedRow(), 0);
            //
            String descricaoProduto = "" + jTabelaProdutosKit.getValueAt(jTabelaProdutosKit.getSelectedRow(), 3);
            jPesquisaNomeProduto.setText(descricaoProduto);
        }
    }//GEN-LAST:event_jTabelaProdutosKitMouseClicked

    private void jBtConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConfirmarActionPerformed
        // TODO add your handling code here:           
        flag = 1;
        if (jPesquisaNomeProduto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Selecione pelo menos um item do kit e clique no botão CONFIRMAR.");
        } else {
            if (kitInicial == 1) {                
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + IdKit + "' "
                            + "AND KitInicial='" + kitInicial + "'");
                    conecta.rs.first();
                    codigoPesquisaKitItem = conecta.rs.getInt("IdItem");
                    codigoPesquisaKit = conecta.rs.getInt("IdKit");
                    kitInicial = conecta.rs.getInt("KitInicial");
                    if (kitInicial == 1) {
                        jRBtKitInicial.setSelected(true);
                    } else if (kitInicial == 0) {
                        jRBtKitInicial.setSelected(!true);
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa do kit Inicial." + e);
                }
                conecta.desconecta();
                dispose();
            } else if (kitQuinzenal == 1) {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + IdKit + "' "
                            + "AND KitQuinzenal='" + kitQuinzenal + "'");
                    conecta.rs.first();
                    codigoPesquisaKitItem = conecta.rs.getInt("IdItem");
                    codigoPesquisaKit = conecta.rs.getInt("IdKit");
                    kitQuinzenal = conecta.rs.getInt("KitQuinzenal");
                    conecta.desconecta();
                    dispose();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa do kit Quinzenal." + e);
                }
                if (kitQuinzenal == 1) {
                    jRBtKitQuinzenal.setSelected(true);
                } else if (kitQuinzenal == 0) {
                    jRBtKitQuinzenal.setSelected(!true);
                }
                conecta.desconecta();
                dispose();
            } else if (kitMensal == 1) {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + IdKit + "' "
                            + "AND KitMensal='" + kitMensal + "'");
                    conecta.rs.first();
                    codigoPesquisaKitItem = conecta.rs.getInt("IdItem");
                    codigoPesquisaKit = conecta.rs.getInt("IdKit");
                    kitMensal = conecta.rs.getInt("KitMensal");
                    if (kitMensal == 1) {
                        jRBtKitMensal.setSelected(true);
                    } else if (kitMensal == 0) {
                        jRBtKitMensal.setSelected(!true);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa do kit Mensal." + e);
                }
                conecta.desconecta();
                dispose();
            } else if (kitDecendial == 1) {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + IdKit + "' "
                            + "AND KitDecendial='" + kitDecendial + "'");
                    conecta.rs.first();
                    codigoPesquisaKitItem = conecta.rs.getInt("IdItem");
                    codigoPesquisaKit = conecta.rs.getInt("IdKit");
                    kitDecendial = conecta.rs.getInt("KitDecendial");
                    if (kitDecendial == 1) {
                        jRBtKitDecendial.setSelected(true);
                    } else if (kitDecendial == 0) {
                        jRBtKitDecendial.setSelected(!true);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa do kit Decendial." + e);
                }
                conecta.desconecta();
                dispose();
            } else if (kitSemestral == 1) {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + IdKit + "' "
                            + "AND KitSemestral='" + kitSemestral + "'");
                    conecta.rs.first();
                    codigoPesquisaKitItem = conecta.rs.getInt("IdItem");
                    codigoPesquisaKit = conecta.rs.getInt("IdKit");
                    kitSemestral = conecta.rs.getInt("KitSemestral");
                    if (kitSemestral == 1) {
                        jRBtKitSemestral.setSelected(true);
                    } else if (kitSemestral == 0) {
                        jRBtKitSemestral.setSelected(!true);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa do kit Semestral." + e);
                }
                conecta.desconecta();
                dispose();
            } else if (kitAnual == 1) {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + IdKit + "' "
                            + "AND KitAnual='" + kitAnual + "'");
                    conecta.rs.first();
                    codigoPesquisaKitItem = conecta.rs.getInt("IdItem");
                    codigoPesquisaKit = conecta.rs.getInt("IdKit");
                    kitAnual = conecta.rs.getInt("KitAnual");
                    if (kitAnual == 1) {
                        jRBtKitAnual.setSelected(true);
                    } else if (kitAnual == 0) {
                        jRBtKitAnual.setSelected(!true);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa do kit Anual." + e);
                }
                conecta.desconecta();
                dispose();
            }
        }
    }//GEN-LAST:event_jBtConfirmarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jCheckBoxKitInicialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitInicialItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            limparTabelaItens();
            kitInicial = 1;
            this.preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE KitInicial='" + kitInicial + "'");
        } else {
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBoxKitInicialItemStateChanged

    private void jCheckBoxKitQuinzenalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitQuinzenalItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            limparTabelaItens();
            kitQuinzenal = 1;
            this.preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE KitQuinzenal='" + kitQuinzenal + "'");
        } else {
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBoxKitQuinzenalItemStateChanged

    private void jCheckBoxKitMensalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitMensalItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            limparTabelaItens();
            kitMensal = 1;
            this.preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE KitMensal='" + kitMensal + "'");
        } else {
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBoxKitMensalItemStateChanged

    private void jCheckBoxKitDecendialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitDecendialItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            limparTabelaItens();
            kitDecendial = 1;
            this.preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE KitDecendial='" + kitDecendial + "'");
        } else {
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBoxKitDecendialItemStateChanged

    private void jCheckBoxKitSemestralItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitSemestralItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            limparTabelaItens();
            kitSemestral = 1;
            this.preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE KitSemestral='" + kitSemestral + "'");
        } else {
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBoxKitSemestralItemStateChanged

    private void jCheckBoxKitAnualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitAnualItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            limparTabelaItens();
            kitAnual = 1;
            this.preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE KitAnual='" + kitAnual + "'");
        } else {
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBoxKitAnualItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaKitComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaKitComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaKitComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaKitComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaPesquisaKitComp dialog = new TelaPesquisaKitComp(telaMotagemKit, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoes;
    private javax.swing.JButton jBtConfirmar;
    private javax.swing.JButton jBtPesqNome;
    private javax.swing.JButton jBtSair;
    private javax.swing.JCheckBox jCheckBoxKitAnual;
    private javax.swing.JCheckBox jCheckBoxKitDecendial;
    private javax.swing.JCheckBox jCheckBoxKitInicial;
    private javax.swing.JCheckBox jCheckBoxKitMensal;
    private javax.swing.JCheckBox jCheckBoxKitQuinzenal;
    private javax.swing.JCheckBox jCheckBoxKitSemestral;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPesquisaNomeProduto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelaProdutosKit;
    // End of variables declaration//GEN-END:variables

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "TipoKit", "Código", "Descrição Produto", "Un.", "Qtd."};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                kitInicial = conecta.rs.getInt("KitInicial");
                kitAnual = conecta.rs.getInt("KitAnual");
                kitDecendial = conecta.rs.getInt("KitDecendial");
                kitQuinzenal = conecta.rs.getInt("KitQuinzenal");
                kitMensal = conecta.rs.getInt("KitMensal");
                kitSemestral = conecta.rs.getInt("KitSemestral");
                if (kitInicial == 1) {
                    nomeKit = "Kit Inicial";
                } else if (kitAnual == 1) {
                    nomeKit = "Kit Anual";
                } else if (kitDecendial == 1) {
                    nomeKit = "Kit Decendial";
                } else if (kitQuinzenal == 1) {
                    nomeKit = "Kit Quinzenal";
                } else if (kitMensal == 1) {
                    nomeKit = "Kit Mensal";
                } else if (kitSemestral == 1) {
                    nomeKit = "Kit Semestral";
                }
                qtdItem = conecta.rs.getFloat("QuantItem");
                DecimalFormat vi = new DecimalFormat(",###0.00");
                String vqtdItem = vi.format(qtdItem);
                qtdItemTab = vqtdItem;
                //                
                dados.add(new Object[]{conecta.rs.getInt("IdKit"), nomeKit, conecta.rs.getInt("IdProd"), conecta.rs.getString("DescricaoProd"), conecta.rs.getString("UnidadeProd"), qtdItemTab});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaProdutosKit.setModel(modelo);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(5).setResizable(false);
        jTabelaProdutosKit.getTableHeader().setReorderingAllowed(false);
        jTabelaProdutosKit.setAutoResizeMode(jTabelaProdutosKit.AUTO_RESIZE_OFF);
        jTabelaProdutosKit.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "TipoKit", "Código", "Descrição Produto", "Un.", "Qtd."};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaProdutosKit.setModel(modelo);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(5).setResizable(false);
        jTabelaProdutosKit.getTableHeader().setReorderingAllowed(false);
        jTabelaProdutosKit.setAutoResizeMode(jTabelaProdutosKit.AUTO_RESIZE_OFF);
        jTabelaProdutosKit.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaProdutosKit.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setCellRenderer(direita);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setCellRenderer(direita);
        jTabelaProdutosKit.getColumnModel().getColumn(5).setCellRenderer(direita);
    }
}
