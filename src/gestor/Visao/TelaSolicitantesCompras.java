/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleItensSolicitantesCompras;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleSolicitantesCompras;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosNum;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensSolicitantesCompras;
import gestor.Modelo.LogSistema;
import gestor.Modelo.SolicitantesCompras;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloAdmPessoal.codAbrirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codAlterarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codConsultarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codExcluirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codGravarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codIncluirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codUserAcessoADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoGrupoADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoUserADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoUserGroupADM;
import static gestor.Visao.TelaModuloAdmPessoal.nomeGrupoADM;
import static gestor.Visao.TelaModuloAdmPessoal.nomeTelaADM;
import static gestor.Visao.TelaModuloAdmPessoal.telaSolicitantesC_ADM;
import static gestor.Visao.TelaModuloAdmPessoal.telaSolicitantesSOL_ADM;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaSolicitantesCompras extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    SolicitantesCompras solComp = new SolicitantesCompras();
    ItensSolicitantesCompras itensSolComp = new ItensSolicitantesCompras();
    ControleSolicitantesCompras control = new ControleSolicitantesCompras();
    ControleItensSolicitantesCompras controle = new ControleItensSolicitantesCompras();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Administração:Solicitantes de Compras:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag, acao;
    int count = 0;
    int statusValor;
    double valorMaximo = 0;
    double saldoGrupo = 0;
    double valorItemMaximo = 0;
    double saldoCompras = 0;
    String codFunc;
    int idSeq = 0;
    public static String idItem;
    int countCalc = 0;
    double valorLib = 0;
    String valorLibReal, codSolicitanta;
    String codColaboradorAC, codColaboradorNUTRI, codColaboradorFAR, codColaboradorADM, codFuncSol;
    int codigoColaboradorPesq, codigoColaboradorPesq1;
    float vACU = 0; // VALOR ACUMULADO DA SOLICITAÇÃO
    String statusFunc = "Ativo";
    float vMAX = 0;
    int qtdFunc = 0;

    /**
     * Creates new form TelaSolicitantesCompras
     */
    public TelaSolicitantesCompras() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotoesValores = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCodigoPesquisa = new javax.swing.JTextField();
        jDescricaoDepartamento = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqDescricaoDepartamento = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaSolicitantes = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCodigo = new javax.swing.JTextField();
        jComboBoxStatus = new javax.swing.JComboBox();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jCodigoDepto = new javax.swing.JTextField();
        jComboBoxDepartamento = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jBtAuditoria = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jRBIndividual = new javax.swing.JRadioButton();
        jRBGrupo = new javax.swing.JRadioButton();
        jPanel14 = new javax.swing.JPanel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jSaldoGrupo = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jValorMax = new javax.swing.JFormattedTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jDataInicialFunc = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jDataFinalFunc = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jValorMaxFunc = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jSaldoCompras = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jCodigoFunc = new javax.swing.JTextField();
        jNomeColaboradorSolicitante = new javax.swing.JTextField();
        jBtPesqColaborador = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaColaborador = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jBtNovoFunc = new javax.swing.JButton();
        jBtAlterarFunc = new javax.swing.JButton();
        jBtExcluirFunc = new javax.swing.JButton();
        jBtSalvarFunc = new javax.swing.JButton();
        jBtCancelarFunc = new javax.swing.JButton();
        jBtSairFunc = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jtotalItens = new javax.swing.JLabel();
        jBtAuditoriaFunc = new javax.swing.JButton();
        jBtPesqFunc = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Solicitantes de Materiais de Compras");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Código:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Departamento:");

        jCodigoPesquisa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoPesquisa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDescricaoDepartamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqDescricaoDepartamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDescricaoDepartamento.setContentAreaFilled(false);
        jBtPesqDescricaoDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDescricaoDepartamentoActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCodigoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodos))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDescricaoDepartamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqDescricaoDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jLabel10)
                    .addComponent(jCodigoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDescricaoDepartamento)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaSolicitantes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaSolicitantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Código", "Status", "Departamento"
            }
        ));
        jTabelaSolicitantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaSolicitantesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaSolicitantes);
        if (jTabelaSolicitantes.getColumnModel().getColumnCount() > 0) {
            jTabelaSolicitantes.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaSolicitantes.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaSolicitantes.getColumnModel().getColumn(1).setMinWidth(60);
            jTabelaSolicitantes.getColumnModel().getColumn(1).setMaxWidth(60);
            jTabelaSolicitantes.getColumnModel().getColumn(2).setMinWidth(280);
            jTabelaSolicitantes.getColumnModel().getColumn(2).setMaxWidth(280);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigo.setEnabled(false);

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatus.setForeground(new java.awt.Color(102, 0, 102));
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jComboBoxStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatus.setEnabled(false);

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jCodigoDepto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoDepto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoDepto.setEnabled(false);

        jComboBoxDepartamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxDepartamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxDepartamento.setEnabled(false);
        jComboBoxDepartamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxDepartamentoMouseClicked(evt);
            }
        });
        jComboBoxDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDepartamentoItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Descrição");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jCodigoDepto, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jCodigo))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboBoxDepartamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCodigo, jCodigoDepto});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCodigoDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCodigo, jCodigoDepto});

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoria)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_white_text.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addGap(2, 2, 2)
                .addComponent(jBtSalvar)
                .addGap(2, 2, 2)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtSair)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtCancelar, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtNovo))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtExcluir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtSalvar)))
            .addComponent(jBtSair, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Controle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        grupoBotoesValores.add(jRBIndividual);
        jRBIndividual.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBIndividual.setForeground(new java.awt.Color(255, 0, 0));
        jRBIndividual.setSelected(true);
        jRBIndividual.setText("Individual");
        jRBIndividual.setEnabled(false);
        jRBIndividual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRBIndividualItemStateChanged(evt);
            }
        });
        jRBIndividual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jRBIndividualFocusLost(evt);
            }
        });

        grupoBotoesValores.add(jRBGrupo);
        jRBGrupo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBGrupo.setForeground(new java.awt.Color(0, 153, 0));
        jRBGrupo.setText("Grupo");
        jRBGrupo.setEnabled(false);
        jRBGrupo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRBGrupoItemStateChanged(evt);
            }
        });
        jRBGrupo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jRBGrupoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRBIndividual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBGrupo)
                .addGap(28, 28, 28))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBIndividual)
                    .addComponent(jRBGrupo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInicial.setToolTipText("Data Inicial");
        jDataInicial.setEnabled(false);

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataFinal.setToolTipText("Data Final");
        jDataFinal.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("De:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Até:");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Saldo Grupo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jSaldoGrupo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jSaldoGrupo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jSaldoGrupo.setToolTipText("Saldo Compra do Grupo");
        jSaldoGrupo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSaldoGrupo.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jSaldoGrupo.setEnabled(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSaldoGrupo)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSaldoGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor do Período", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Grupo R$:");

        jValorMax.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorMax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorMax.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jValorMax.setEnabled(false);
        jValorMax.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jValorMax, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jValorMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Colaboradores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Nome Completo do Colaborador");

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jDataInicialFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInicialFunc.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Data Inicial");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Data Final");

        jDataFinalFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataFinalFunc.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Vl. Período");

        jValorMaxFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorMaxFunc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorMaxFunc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jValorMaxFunc.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("S. Compras");

        jSaldoCompras.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSaldoCompras.setForeground(new java.awt.Color(255, 0, 0));
        jSaldoCompras.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jSaldoCompras.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jSaldoCompras.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jSaldoCompras.setEnabled(false);
        jSaldoCompras.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jDataInicialFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataFinalFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jValorMaxFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSaldoCompras))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSaldoCompras, jValorMaxFunc});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataInicialFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataFinalFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jValorMaxFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSaldoCompras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jSaldoCompras, jValorMaxFunc});

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Código");

        jCodigoFunc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoFunc.setEnabled(false);

        jNomeColaboradorSolicitante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeColaboradorSolicitante.setEnabled(false);

        jBtPesqColaborador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqColaborador.setContentAreaFilled(false);
        jBtPesqColaborador.setEnabled(false);
        jBtPesqColaborador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqColaboradorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jCodigoFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jNomeColaboradorSolicitante)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jNomeColaboradorSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqColaborador)
                    .addComponent(jCodigoFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabelaColaborador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaColaborador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Nome Completo Colaborador", "Valor R$"
            }
        ));
        jTabelaColaborador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaColaboradorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaColaborador);
        if (jTabelaColaborador.getColumnModel().getColumnCount() > 0) {
            jTabelaColaborador.getColumnModel().getColumn(0).setMinWidth(40);
            jTabelaColaborador.getColumnModel().getColumn(0).setMaxWidth(40);
            jTabelaColaborador.getColumnModel().getColumn(1).setMinWidth(60);
            jTabelaColaborador.getColumnModel().getColumn(1).setMaxWidth(60);
            jTabelaColaborador.getColumnModel().getColumn(2).setMinWidth(230);
            jTabelaColaborador.getColumnModel().getColumn(2).setMaxWidth(230);
            jTabelaColaborador.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaColaborador.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_white_text.png"))); // NOI18N
        jBtNovoFunc.setToolTipText("Novo");
        jBtNovoFunc.setEnabled(false);
        jBtNovoFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoFuncActionPerformed(evt);
            }
        });

        jBtAlterarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarFunc.setToolTipText("Alterar");
        jBtAlterarFunc.setEnabled(false);
        jBtAlterarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarFuncActionPerformed(evt);
            }
        });

        jBtExcluirFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirFunc.setToolTipText("Excluir");
        jBtExcluirFunc.setEnabled(false);
        jBtExcluirFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirFuncActionPerformed(evt);
            }
        });

        jBtSalvarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarFunc.setToolTipText("Gravar");
        jBtSalvarFunc.setEnabled(false);
        jBtSalvarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarFuncActionPerformed(evt);
            }
        });

        jBtCancelarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarFunc.setToolTipText("Cancelar");
        jBtCancelarFunc.setEnabled(false);
        jBtCancelarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarFuncActionPerformed(evt);
            }
        });

        jBtSairFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairFunc.setToolTipText("Sair");
        jBtSairFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairFuncActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("Itens");

        jtotalItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalItens.setForeground(new java.awt.Color(255, 0, 0));
        jtotalItens.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jtotalItens.setToolTipText("Total de Itens");
        jtotalItens.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtAuditoriaFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaFunc.setToolTipText("Auditoria");
        jBtAuditoriaFunc.setContentAreaFilled(false);
        jBtAuditoriaFunc.setEnabled(false);
        jBtAuditoriaFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaFuncActionPerformed(evt);
            }
        });

        jBtPesqFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqFunc.setToolTipText("Pesquisar Registros");
        jBtPesqFunc.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtNovoFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtAuditoriaFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtotalItens, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarFunc, jBtCancelarFunc, jBtExcluirFunc, jBtNovoFunc, jBtPesqFunc, jBtSairFunc, jBtSalvarFunc});

        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel21)
                    .addComponent(jtotalItens, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtSairFunc)
                    .addComponent(jBtCancelarFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtSalvarFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtExcluirFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtAlterarFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtNovoFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtAuditoriaFunc)
                    .addComponent(jBtPesqFunc))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarFunc, jBtCancelarFunc, jBtExcluirFunc, jBtNovoFunc, jBtPesqFunc, jBtSairFunc, jBtSalvarFunc});

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 410, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Solicitantes", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 30, 451, 468);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        flag = 1;
        count = 0;
        if (jCodigoPesquisa.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            preencherTabelaSolicitantes("SELECT * FROM SOLICITANTES_COMPRAS "
                    + "INNER JOIN DEPARTAMENTOS "
                    + "ON SOLICITANTES_COMPRAS.IdDepartamento=DEPARTAMENTOS.IdDepartamento "
                    + "WHERE IdSoli='" + jCodigoPesquisa.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:       
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaSolicitantes("SELECT * FROM SOLICITANTES_COMPRAS "
                    + "INNER JOIN DEPARTAMENTOS "
                    + "ON SOLICITANTES_COMPRAS.IdDepartamento=DEPARTAMENTOS.IdDepartamento");
        } else {
            jtotalRegistros.setText("");
            limparTelaSolicitantes();
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtPesqDescricaoDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDescricaoDepartamentoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDescricaoDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome para pesquisa.");
        } else {
            preencherTabelaSolicitantes("SELECT * FROM SOLICITANTES_COMPRAS "
                    + "INNER JOIN DEPARTAMENTOS "
                    + "ON SOLICITANTES_COMPRAS.IdDepartamento=DEPARTAMENTOS.IdDepartamento "
                    + "WHERE NomeDepartamento LIKE'%" + jDescricaoDepartamento.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqDescricaoDepartamentoActionPerformed

    private void jTabelaSolicitantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaSolicitantesMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeDepto = "" + jTabelaSolicitantes.getValueAt(jTabelaSolicitantes.getSelectedRow(), 2);
            jDescricaoDepartamento.setText(nomeDepto);
            String idSoli = "" + jTabelaSolicitantes.getValueAt(jTabelaSolicitantes.getSelectedRow(), 0);
            jCodigoPesquisa.setText(idSoli);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
            jComboBoxDepartamento.removeAllItems();
            //
            bloquearCamposPesquisa();
            //
            jBtNovoFunc.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM SOLICITANTES_COMPRAS "
                        + "INNER JOIN DEPARTAMENTOS "
                        + "ON SOLICITANTES_COMPRAS.IdDepartamento=DEPARTAMENTOS.IdDepartamento "
                        + "WHERE IdSoli='" + idSoli + "'");
                conecta.rs.first();
                jCodigo.setText(String.valueOf(conecta.rs.getInt("IdSoli")));
                jComboBoxStatus.setSelectedItem(conecta.rs.getString("StatusSoli"));
                jDataLanc.setDate(conecta.rs.getDate("DataSoli"));
                jCodigoDepto.setText(conecta.rs.getString("IdDepartamento"));
                statusValor = conecta.rs.getInt("TipoValor");
                if (statusValor == 0) {
                    jRBIndividual.setSelected(true);
                } else if (statusValor == 1) {
                    jRBGrupo.setSelected(true);
                }
                // VALOR DEFIIDO PARA COMPRAS DO GRUPO.
                valorMaximo = conecta.rs.getFloat("ValorMax");
                DecimalFormat vs = new DecimalFormat(",###00.00");
                String vlSolicitacao = vs.format(valorMaximo);
                jValorMax.setText(vlSolicitacao);
                // VALOR ACUMULATIVO DE ACORDO COM AS COMPRAS REALIZADAS NO PERIODO
                saldoGrupo = conecta.rs.getFloat("ValorGAC");
                DecimalFormat vsg = new DecimalFormat(",###00.00");
                String vlgrupo = vsg.format(saldoGrupo);
                jSaldoGrupo.setText(vlgrupo);
                //
                jDataInicial.setDate(conecta.rs.getDate("DataInicial"));
                jDataFinal.setDate(conecta.rs.getDate("DataFinal"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
                jComboBoxDepartamento.addItem(conecta.rs.getString("NomeDepartamento"));
            } catch (SQLException e) {
            }
            countCalc = 0;
            preencherTabelaItensColaborador("SELECT * FROM ITENS_SOLICITANTES_COMPRAS "
                    + "INNER JOIN SOLICITANTES_COMPRAS "
                    + "ON ITENS_SOLICITANTES_COMPRAS.IdSoli=SOLICITANTES_COMPRAS.IdSoli "
                    + "INNER JOIN COLABORADOR "
                    + "ON ITENS_SOLICITANTES_COMPRAS.IdFunc=COLABORADOR.IdFunc "
                    + "WHERE ITENS_SOLICITANTES_COMPRAS.IdSoli='" + jCodigo.getText() + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaSolicitantesMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaSolicitantesC_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesC_ADM) && codIncluirADM == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 1;
            Novo();
            corCampos();
            preencherComboNovo();
            limparCamposTabelaColaboradores();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaSolicitantesC_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesC_ADM) && codAlterarADM == 1) {
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 2;
            Alterar();
            corCampos();
            preencherComboNovo();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:  
        buscarAcessoUsuario(telaSolicitantesC_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesC_ADM) && codExcluirADM == 1) {
            verificarColaboradores();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaSolicitantesC_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesC_ADM) && codGravarADM == 1) {
            DecimalFormat valorReal = new DecimalFormat("###,##00.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do registro.");
                jDataLanc.requestFocus();
                jDataLanc.setBackground(Color.red);
            } else if (jCodigoDepto.getText().equals("") || jComboBoxDepartamento.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o departamento do colaborador.");
            } else if (statusValor == 1 && jValorMax.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe um valor para o solicitante.");
                jValorMax.requestFocus();
                jValorMax.setBackground(Color.red);
            } else if (statusValor == 1 && jDataInicial.getDate() == null || statusValor == 1 && jDataFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial e final para o grupo.");
            } else {
                solComp.setStatusSoli((String) jComboBoxStatus.getSelectedItem());
                solComp.setDataSoli(jDataLanc.getDate());
                solComp.setIdDepartamento(Integer.valueOf(jCodigoDepto.getText()));
                solComp.setNomeDepartamento((String) jComboBoxDepartamento.getSelectedItem());
                solComp.setDataInicial(jDataInicial.getDate());
                solComp.setDataFinal(jDataFinal.getDate());
                solComp.setObservacao(jObservacao.getText());
                if (jRBIndividual.isSelected()) {
                    statusValor = 0;
                    jDataInicial.setDate(null);
                    jDataFinal.setDate(null);
                } else if (jRBGrupo.isSelected()) {
                    statusValor = 1;
                    try {
                        solComp.setValorMax(valorReal.parse(jValorMax.getText()).floatValue());
                        solComp.setValorGAC(valorReal.parse(jValorMax.getText()).floatValue());
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaInventarioProdutosMed.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                solComp.setTipoValor(statusValor);
                if (acao == 1) {
                    solComp.setUsuarioInsert(nameUser);
                    solComp.setDataInsert(dataModFinal);
                    solComp.setHorarioInsert(horaMov);
                    control.incluirSolicitanteCompras(solComp);
                    buscarCodigo();
                    Salvar();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 2) {
                    solComp.setUsuarioUp(nameUser);
                    solComp.setDataUp(dataModFinal);
                    solComp.setHorarioUp(horaMov);
                    solComp.setIdSoli(Integer.valueOf(jCodigo.getText()));
                    control.alterarSolicitanteCompras(solComp);
                    Salvar();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jComboBoxDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDepartamentoItemStateChanged
        // TODO add your handling code here:        
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DEPARTAMENTOS WHERE NomeDepartamento='" + jComboBoxDepartamento.getSelectedItem() + "'");
            conecta.rs.first();
            jCodigoDepto.setText(conecta.rs.getString("IdDepartamento"));
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }//GEN-LAST:event_jComboBoxDepartamentoItemStateChanged

    private void jComboBoxDepartamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxDepartamentoMouseClicked
        // TODO add your handling code here:
        preencherComboNovo();
    }//GEN-LAST:event_jComboBoxDepartamentoMouseClicked

    private void jRBGrupoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jRBGrupoFocusLost
        // TODO add your handling code here:
        jValorMax.setEnabled(true);
    }//GEN-LAST:event_jRBGrupoFocusLost

    private void jRBIndividualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jRBIndividualFocusLost
        // TODO add your handling code here:
        jValorMax.setEnabled(!true);
    }//GEN-LAST:event_jRBIndividualFocusLost

    private void jRBIndividualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRBIndividualItemStateChanged
        // TODO add your handling code here:
        if (acao == 1 || acao == 2) {
            jDataInicial.setDate(null);
            jDataFinal.setDate(null);
            jDataInicial.setEnabled(!true);
            jDataFinal.setEnabled(!true);
            jValorMax.setEnabled(!true);
        }
    }//GEN-LAST:event_jRBIndividualItemStateChanged

    private void jRBGrupoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRBGrupoItemStateChanged
        // TODO add your handling code here:
        if (acao == 1 || acao == 2) {
            jDataInicial.setCalendar(Calendar.getInstance());
            jDataFinal.setCalendar(Calendar.getInstance());
            jDataInicial.setEnabled(true);
            jDataFinal.setEnabled(true);
            jValorMax.setEnabled(true);
        }
    }//GEN-LAST:event_jRBGrupoItemStateChanged

    private void jBtNovoFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoFuncActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaSolicitantesSOL_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesSOL_ADM) && codIncluirADM == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 3;
            NovoFunc();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoFuncActionPerformed

    private void jBtAlterarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarFuncActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaSolicitantesSOL_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesSOL_ADM) && codAlterarADM == 1) {
            statusMov = "Alterar";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 4;
            AlterarFunc();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarFuncActionPerformed

    private void jBtExcluirFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirFuncActionPerformed
        // TODO add your handling code here:   
        buscarAcessoUsuario(telaSolicitantesSOL_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesSOL_ADM) && codExcluirADM == 1) {
            verificarColaboradoresSolicitacao();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirFuncActionPerformed

    private void jBtSalvarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarFuncActionPerformed
        // TODO add your handling code here:      
        buscarAcessoUsuario(telaSolicitantesSOL_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaSolicitantesSOL_ADM) && codGravarADM == 1) {
            DecimalFormat valorReal = new DecimalFormat("###,##00.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jValorMaxFunc.getText().equals("") && statusValor == 0) {
                JOptionPane.showMessageDialog(rootPane, "Informe o valor para colaborador.");
            } else {
                itensSolComp.setNomeColaborador(jNomeColaboradorSolicitante.getText());
                if (statusValor == 0 && acao == 3) { // VALOR INDIVIDUAL E SE FOR UMA INCLUSÃO
                    itensSolComp.setDataInicialFunc(jDataInicialFunc.getDate());
                    itensSolComp.setDataFinalFunc(jDataFinalFunc.getDate());
                    try {
                        itensSolComp.setValorMax(valorReal.parse(jValorMaxFunc.getText()).floatValue());
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaInventarioProdutosMed.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    buscarValorAcumulado();
                    vACU = vACU + itensSolComp.getValorMax();
                    itensSolComp.setValorVTA(vACU);
                } else if (statusValor == 1 && acao == 3) { //VALOR EM GRUPO E SE FOR UMA INCLUSÃO
                    try {
                        itensSolComp.setValorMax(valorReal.parse(jValorMax.getText()).floatValue());
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaSolicitantesCompras.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    vACU = 0;
                    itensSolComp.setValorMax(vACU);
                    itensSolComp.setValorVTA(vACU);
                } else if (statusValor == 0 && acao == 4) { // VALOR INDIVIDUAL E SE FOR UMA ALTERAÇÃO
                    itensSolComp.setDataInicialFunc(jDataInicialFunc.getDate());
                    itensSolComp.setDataFinalFunc(jDataFinalFunc.getDate());
                    try {
                        itensSolComp.setValorMax(valorReal.parse(jValorMaxFunc.getText()).floatValue());
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaSolicitantesCompras.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    buscarValorAcumulado();
                    vACU = (vACU - vMAX) + itensSolComp.getValorMax();
                    itensSolComp.setValorVTA(vACU);
                } else if (statusValor == 1 && acao == 4) { // VALOR EM GRUPO E SE FOR ALTERAÇÃO
                    itensSolComp.setDataInicialFunc(jDataInicialFunc.getDate());
                    itensSolComp.setDataFinalFunc(jDataFinalFunc.getDate());
                    try {
                        itensSolComp.setValorMax(valorReal.parse(jValorMax.getText()).floatValue());
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaSolicitantesCompras.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    vACU = 0;
                    itensSolComp.setValorMax(vACU);
                    itensSolComp.setValorVTA(vACU);
                }
                if (acao == 3) {
                    idSeq = 1 + countCalc;
                    itensSolComp.setUsuarioInsert(nameUser);
                    itensSolComp.setDataInsert(dataModFinal);
                    itensSolComp.setHorarioInsert(horaMov);
                    itensSolComp.setIdSoli(Integer.valueOf(jCodigo.getText()));
                    itensSolComp.setIdSeq(idSeq);
                    controle.incluirItensSolicitanteCompras(itensSolComp);
                    idSeq = idSeq + 1 + countCalc;
                    SalvarFunc();
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaItensColaborador("SELECT * FROM ITENS_SOLICITANTES_COMPRAS "
                            + "INNER JOIN SOLICITANTES_COMPRAS "
                            + "ON ITENS_SOLICITANTES_COMPRAS.IdSoli=SOLICITANTES_COMPRAS.IdSoli "
                            + "INNER JOIN COLABORADOR "
                            + "ON ITENS_SOLICITANTES_COMPRAS.IdFunc=COLABORADOR.IdFunc "
                            + "WHERE ITENS_SOLICITANTES_COMPRAS.IdSoli='" + jCodigo.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    itensSolComp.setUsuarioUp(nameUser);
                    itensSolComp.setDataUp(dataModFinal);
                    itensSolComp.setHorarioUp(horaMov);
                    itensSolComp.setIdSoli(Integer.valueOf(jCodigo.getText()));
                    itensSolComp.setIdSeq(idSeq);
                    itensSolComp.setIdItem(Integer.valueOf(idItem));
                    try {
                        itensSolComp.setValorVTA(valorReal.parse(jSaldoCompras.getText()).floatValue());
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaSolicitantesCompras.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    controle.alterarItensSolicitanteCompras(itensSolComp);
                    SalvarFunc();
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaItensColaborador("SELECT * FROM ITENS_SOLICITANTES_COMPRAS "
                            + "INNER JOIN SOLICITANTES_COMPRAS "
                            + "ON ITENS_SOLICITANTES_COMPRAS.IdSoli=SOLICITANTES_COMPRAS.IdSoli "
                            + "INNER JOIN COLABORADOR "
                            + "ON ITENS_SOLICITANTES_COMPRAS.IdFunc=COLABORADOR.IdFunc "
                            + "WHERE ITENS_SOLICITANTES_COMPRAS.IdSoli='" + jCodigo.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarFuncActionPerformed

    private void jBtCancelarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarFuncActionPerformed
        // TODO add your handling code here:
        CancelarFunc();
    }//GEN-LAST:event_jBtCancelarFuncActionPerformed

    private void jBtSairFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairFuncActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairFuncActionPerformed

    private void jTabelaColaboradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaColaboradorMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String codSeq = "" + jTabelaColaborador.getValueAt(jTabelaColaborador.getSelectedRow(), 0);
            String nomeFunc = "" + jTabelaColaborador.getValueAt(jTabelaColaborador.getSelectedRow(), 2);
            jNomeColaboradorSolicitante.setText(nomeFunc);
            //
            jBtNovoFunc.setEnabled(true);
            jBtAlterarFunc.setEnabled(true);
            jBtExcluirFunc.setEnabled(true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtAuditoriaFunc.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_SOLICITANTES_COMPRAS "
                        + "INNER JOIN SOLICITANTES_COMPRAS "
                        + "ON ITENS_SOLICITANTES_COMPRAS.IdSoli=SOLICITANTES_COMPRAS.IdSoli "
                        + "INNER JOIN COLABORADOR "
                        + "ON ITENS_SOLICITANTES_COMPRAS.IdFunc=COLABORADOR.IdFunc "
                        + "WHERE ITENS_SOLICITANTES_COMPRAS.IdSeq='" + codSeq + "'AND NomeFunc='" + nomeFunc + "'");
                conecta.rs.first();
                jCodigoFunc.setText(conecta.rs.getString("IdFunc"));
                jNomeColaboradorSolicitante.setText(conecta.rs.getString("NomeFunc"));
                jDataInicialFunc.setDate(conecta.rs.getDate("DataInicial"));
                jDataFinalFunc.setDate(conecta.rs.getDate("DataFinal"));
                idSeq = conecta.rs.getInt("IdSeq");
                idItem = conecta.rs.getString("IdItem");
                //
                valorItemMaximo = conecta.rs.getFloat("ValorMax");
                DecimalFormat vis = new DecimalFormat("##,##0.00");
                String vlItemSolicitacao = vis.format(valorItemMaximo);
                jValorMaxFunc.setText(vlItemSolicitacao);
                vMAX = conecta.rs.getFloat("ValorMax");
                saldoCompras = conecta.rs.getFloat("ValorVTA");
                DecimalFormat vsaldo = new DecimalFormat("##,##0.00");
                String valorSaldoAcu = vsaldo.format(saldoCompras);
                jSaldoCompras.setText(valorSaldoAcu);
            } catch (SQLException e) {
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaColaboradorMouseClicked

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaSolicitantesCompras objAudSolComp = new TelaAuditoriaSolicitantesCompras();
        TelaModuloAdmPessoal.jPainelAdmPessoal.add(objAudSolComp);
        objAudSolComp.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtAuditoriaFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaFuncActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensSolicitantesCompras objAudItensSoli = new TelaAuditoriaItensSolicitantesCompras();
        TelaModuloAdmPessoal.jPainelAdmPessoal.add(objAudItensSoli);
        objAudItensSoli.show();
    }//GEN-LAST:event_jBtAuditoriaFuncActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqColaboradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqColaboradorActionPerformed
        // TODO add your handling code here:
        TelaPesqColaboradorSolicitacao objPesqFuncSol = new TelaPesqColaboradorSolicitacao();
        TelaModuloAdmPessoal.jPainelAdmPessoal.add(objPesqFuncSol);
        objPesqFuncSol.show();
    }//GEN-LAST:event_jBtPesqColaboradorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoesValores;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarFunc;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaFunc;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarFunc;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirFunc;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoFunc;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqColaborador;
    private javax.swing.JButton jBtPesqDescricaoDepartamento;
    private javax.swing.JButton jBtPesqFunc;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSairFunc;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarFunc;
    private javax.swing.JCheckBox jCheckBoxTodos;
    public static javax.swing.JTextField jCodigo;
    public static javax.swing.JTextField jCodigoDepto;
    public static javax.swing.JTextField jCodigoFunc;
    private javax.swing.JTextField jCodigoPesquisa;
    private javax.swing.JComboBox jComboBoxDepartamento;
    private javax.swing.JComboBox jComboBoxStatus;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataFinalFunc;
    private com.toedter.calendar.JDateChooser jDataInicial;
    private com.toedter.calendar.JDateChooser jDataInicialFunc;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private javax.swing.JTextField jDescricaoDepartamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeColaboradorSolicitante;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRBGrupo;
    private javax.swing.JRadioButton jRBIndividual;
    private javax.swing.JFormattedTextField jSaldoCompras;
    private javax.swing.JTextField jSaldoGrupo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaColaborador;
    private javax.swing.JTable jTabelaSolicitantes;
    private javax.swing.JFormattedTextField jValorMax;
    private javax.swing.JFormattedTextField jValorMaxFunc;
    private javax.swing.JLabel jtotalItens;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void bloquearCamposPesquisa() {
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jCodigoFunc.setText("");
        jNomeColaboradorSolicitante.setText("");
        jDataInicialFunc.setDate(null);
        jDataFinalFunc.setDate(null);
        jValorMaxFunc.setText("");
        jSaldoCompras.setText("");
        //
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jNomeColaboradorSolicitante.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
    }

    public void formatarCampos() {
        jValorMax.setDocument(new LimiteDigitosNum(13));
        jValorMaxFunc.setDocument(new LimiteDigitosNum(10));
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jCodigo.setBackground(Color.white);
        jComboBoxStatus.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jCodigoDepto.setBackground(Color.white);
        jComboBoxDepartamento.setBackground(Color.white);
        jValorMax.setBackground(Color.white);
        jSaldoGrupo.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //       
        jCodigoFunc.setBackground(Color.white);
        jNomeColaboradorSolicitante.setBackground(Color.white);
        jValorMaxFunc.setBackground(Color.white);
        jSaldoCompras.setBackground(Color.white);
    }

    public void Novo() {
        jCodigo.setText("");
        jComboBoxStatus.setSelectedItem("Ativo");
        jDataLanc.setCalendar(Calendar.getInstance());
        jCodigoDepto.setText("");
        jComboBoxDepartamento.setSelectedItem(null);
        jValorMax.setText("");

        jObservacao.setText("");
        //
        jNomeColaboradorSolicitante.setText("");
        jValorMaxFunc.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(true);
        jDataLanc.setEnabled(true);
        jComboBoxDepartamento.setEnabled(true);
        jRBIndividual.setEnabled(true);
        jRBGrupo.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        if (jRBIndividual.isSelected()) {
            jValorMax.setEnabled(!true);
        } else if (jRBGrupo.isSelected()) {
            jValorMax.setEnabled(true);
            jDataInicial.setCalendar(Calendar.getInstance());
            jDataFinal.setCalendar(Calendar.getInstance());
            jDataInicial.setEnabled(true);
            jDataFinal.setEnabled(true);
        }
        //        
        jNomeColaboradorSolicitante.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
        limparCamposTabelaColaboradores();
    }

    public void Alterar() {
        jCodigoFunc.setText("");
        jNomeColaboradorSolicitante.setText("");
        jValorMaxFunc.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(true);
        jDataLanc.setEnabled(true);
        // VERIFICAR SE A TABELA TEM COLABORADORES, SE NÃO ESTIVER VAZIA NÃO DEIXA ALTERAR O DEPARTAMENTO E TIPO DE VALOR
        Integer rows = jTabelaColaborador.getModel().getRowCount();
        if (rows == 0) {
            jComboBoxDepartamento.setEnabled(true);
            jRBIndividual.setEnabled(true);
            jRBGrupo.setEnabled(true);
            jObservacao.setEnabled(true);
            //        
            jDataInicialFunc.setEnabled(!true);
            jDataFinalFunc.setEnabled(!true);
            jValorMaxFunc.setEnabled(!true);
            //
            if (jRBIndividual.isSelected()) {
                jValorMax.setEnabled(!true);
            } else if (jRBGrupo.isSelected()) {
                jValorMax.setEnabled(true);
                jDataInicial.setEnabled(true);
                jDataFinal.setEnabled(true);
            }
            //     
            jValorMaxFunc.setEnabled(!true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(!true);
            //
            jBtNovoFunc.setEnabled(!true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtAuditoriaFunc.setEnabled(!true);
        } else {
            jComboBoxDepartamento.setEnabled(!true);
            jRBIndividual.setEnabled(!true);
            jRBGrupo.setEnabled(!true);
            jObservacao.setEnabled(true);
            //        
            jDataInicialFunc.setEnabled(!true);
            jDataFinalFunc.setEnabled(!true);
            jValorMaxFunc.setEnabled(!true);
            //
            if (jRBIndividual.isSelected()) {
                jValorMax.setEnabled(!true);
            } else if (jRBGrupo.isSelected()) {
                jValorMax.setEnabled(true);
                jDataInicial.setEnabled(true);
                jDataFinal.setEnabled(true);
            }
            //     
            jValorMaxFunc.setEnabled(!true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(!true);
            //
            jBtNovoFunc.setEnabled(!true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtAuditoriaFunc.setEnabled(!true);
        }
    }

    public void Excluir() {
        jCodigo.setText("");
        jComboBoxStatus.setSelectedItem("Ativo");
        jDataLanc.setCalendar(Calendar.getInstance());
        jCodigoDepto.setText("");
        jComboBoxDepartamento.setSelectedItem(null);
        jValorMax.setText("");
        jObservacao.setText("");
        //
        jNomeColaboradorSolicitante.setText("");
        jValorMaxFunc.setText("");
        jSaldoCompras.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jNomeColaboradorSolicitante.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void Salvar() {
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jNomeColaboradorSolicitante.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void Cancelar() {
        if (jCodigo.getText().equals("")) {
            jComboBoxStatus.setSelectedItem(null);
            jDataLanc.setDate(null);
            jCodigoDepto.setText("");
            jComboBoxDepartamento.setSelectedItem(null);
            jValorMax.setText("");
            jDataInicial.setDate(null);
            jDataFinal.setDate(null);
            jObservacao.setText("");
            // Habilitar/Desabilitar Campos      
            jComboBoxStatus.setEnabled(!true);
            jDataLanc.setEnabled(!true);
            jComboBoxDepartamento.setEnabled(!true);
            jRBIndividual.setEnabled(!true);
            jRBGrupo.setEnabled(!true);
            jValorMax.setEnabled(!true);
            jDataInicial.setEnabled(!true);
            jDataFinal.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //        
            jNomeColaboradorSolicitante.setEnabled(!true);
            jDataInicialFunc.setEnabled(!true);
            jDataFinalFunc.setEnabled(!true);
            jValorMaxFunc.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jBtNovoFunc.setEnabled(!true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtAuditoriaFunc.setEnabled(!true);
        } else {
            // Habilitar/Desabilitar Campos      
            jComboBoxStatus.setEnabled(!true);
            jDataLanc.setEnabled(!true);
            jComboBoxDepartamento.setEnabled(!true);
            jRBIndividual.setEnabled(!true);
            jRBGrupo.setEnabled(!true);
            jValorMax.setEnabled(!true);
            jDataInicial.setEnabled(!true);
            jDataFinal.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //        
            jNomeColaboradorSolicitante.setEnabled(!true);
            jDataInicialFunc.setEnabled(!true);
            jDataFinalFunc.setEnabled(!true);
            jValorMaxFunc.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovoFunc.setEnabled(true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtAuditoriaFunc.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SOLICITANTES_COMPRAS");
            conecta.rs.last();
            jCodigo.setText(conecta.rs.getString("IdSoli"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void preencherComboNovo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DEPARTAMENTOS ORDER BY NomeDepartamento");
            conecta.rs.first();
            do {
                jComboBoxDepartamento.addItem(conecta.rs.getString("NomeDepartamento"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void verificarColaboradores() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_SOLICITANTES_COMPRAS WHERE IdSoli='" + jCodigo.getText() + "'");
            conecta.rs.first();
            codSolicitanta = conecta.rs.getString("IdSoli");
        } catch (Exception e) {
        }
        if (jCodigo.getText().equals(codSolicitanta)) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, existe Colaboradores relacionado a esse documento.\nExclua os Colaboradores primeiro, para poder excluir esse documento.");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                solComp.setIdSoli(Integer.parseInt(jCodigo.getText()));
                control.excluirSolicitanteCompras(solComp);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
            conecta.desconecta();
        }
    }

    public void verificarColaboradoresSolicitacao() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            // ALMIXARIFADO CENTRAL
            conecta.executaSQL("SELECT * FROM SOLICITACAO_PRODUTOS_AC WHERE IdFunc='" + jCodigoFunc.getText() + "'");
            conecta.rs.first();
            codColaboradorAC = conecta.rs.getString("IdFunc");
            // FARMÁCIA
            conecta.executaSQL("SELECT * FROM SOLICITACAO_PRODUTOS_FAR WHERE IdFunc='" + jCodigoFunc.getText() + "'");
            conecta.rs.first();
            codColaboradorFAR = conecta.rs.getString("IdFunc");
            // NUTRIÇÃO
            conecta.executaSQL("SELECT * FROM SOLICITACAO_PRODUTOS_NUTRI WHERE IdFunc='" + jCodigoFunc.getText() + "'");
            conecta.rs.first();
            codColaboradorNUTRI = conecta.rs.getString("IdFunc");
            // ADMINISTRAÇÃO
            conecta.executaSQL("SELECT * FROM SOLICITACAO_PRODUTOS_ADM WHERE IdFunc='" + jCodigoFunc.getText() + "'");
            conecta.rs.first();
            codColaboradorADM = conecta.rs.getString("IdFunc");
        } catch (Exception e) {
        }
        if (jCodigoFunc.getText().equals(codColaboradorAC) || jCodigoFunc.getText().equals(codColaboradorFAR) || jCodigoFunc.getText().equals(codColaboradorNUTRI) || jCodigoFunc.getText().equals(codColaboradorADM)) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, existe Colaboradores relacionado a esse documento.");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                itensSolComp.setIdItem(Integer.valueOf(idItem));
                controle.excluirItensSolicitanteCompras(itensSolComp);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                preencherTabelaItensColaborador("SELECT * FROM ITENS_SOLICITANTES_COMPRAS "
                        + "INNER JOIN SOLICITANTES_COMPRAS "
                        + "ON ITENS_SOLICITANTES_COMPRAS.IdSoli=SOLICITANTES_COMPRAS.IdSoli "
                        + "INNER JOIN COLABORADOR "
                        + "ON ITENS_SOLICITANTES_COMPRAS.IdFunc=COLABORADOR.IdFunc "
                        + "WHERE ITENS_SOLICITANTES_COMPRAS.IdSoli='" + jCodigo.getText() + "'");
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                ExcluirFunc();
            }
            conecta.desconecta();
        }
    }

    public void NovoFunc() {
        jCodigoFunc.setText("");
        jNomeColaboradorSolicitante.setText("");
        jValorMaxFunc.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jBtPesqColaborador.setEnabled(true);
        //
        if (jRBIndividual.isSelected()) {
            jValorMaxFunc.setEnabled(true);
            jDataInicialFunc.setEnabled(true);
            jDataFinalFunc.setEnabled(true);
            jDataInicialFunc.setCalendar(Calendar.getInstance());
            jDataFinalFunc.setCalendar(Calendar.getInstance());
        } else if (jRBGrupo.isSelected()) {
            jValorMaxFunc.setEnabled(!true);
        }
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(true);
        jBtCancelarFunc.setEnabled(true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void AlterarFunc() {
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jBtPesqColaborador.setEnabled(true);
        //
        if (jRBIndividual.isSelected()) {
            jValorMaxFunc.setEnabled(true);
            jDataInicialFunc.setEnabled(true);
            jDataFinalFunc.setEnabled(true);
        } else if (jRBGrupo.isSelected()) {
            jValorMaxFunc.setEnabled(!true);
        }
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(true);
        jBtCancelarFunc.setEnabled(true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void ExcluirFunc() {
        jCodigoFunc.setText("");
        jNomeColaboradorSolicitante.setText("");
        jDataInicialFunc.setDate(null);
        jDataFinalFunc.setDate(null);
        jValorMaxFunc.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jBtPesqColaborador.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void SalvarFunc() {
        jCodigoFunc.setText("");
        jNomeColaboradorSolicitante.setText("");
        jDataInicialFunc.setDate(null);
        jDataFinalFunc.setDate(null);
        jValorMaxFunc.setText("");
        jSaldoCompras.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jBtPesqColaborador.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void CancelarFunc() {
        jCodigoFunc.setText("");
        jNomeColaboradorSolicitante.setText("");
        jDataInicialFunc.setDate(null);
        jDataFinalFunc.setDate(null);
        jValorMaxFunc.setText("");
        jSaldoCompras.setText("");
        // Habilitar/Desabilitar Campos      
        jComboBoxStatus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxDepartamento.setEnabled(!true);
        jRBIndividual.setEnabled(!true);
        jRBGrupo.setEnabled(!true);
        jValorMax.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //        
        jBtPesqColaborador.setEnabled(!true);
        jDataInicialFunc.setEnabled(!true);
        jDataFinalFunc.setEnabled(!true);
        jValorMaxFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void buscarValorAcumulado() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_SOLICITANTES_COMPRAS WHERE IdFunc='" + codigoColaboradorPesq + "'");
            conecta.rs.first();
            vACU = conecta.rs.getFloat("ValorVTA");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaSolicitantes(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Departamento"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getString("IdSoli"), conecta.rs.getString("StatusSoli"), conecta.rs.getString("NomeDepartamento")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem exibidos....");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaSolicitantes.setModel(modelo);
        jTabelaSolicitantes.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaSolicitantes.getColumnModel().getColumn(0).setResizable(false);
        jTabelaSolicitantes.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaSolicitantes.getColumnModel().getColumn(1).setResizable(false);
        jTabelaSolicitantes.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaSolicitantes.getColumnModel().getColumn(2).setResizable(false);
        jTabelaSolicitantes.setAutoResizeMode(jTabelaSolicitantes.AUTO_RESIZE_OFF);
        jTabelaSolicitantes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaColunasTabelaSolicitantes();
        conecta.desconecta();
    }

    public void alinhaColunasTabelaSolicitantes() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaSolicitantes.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaSolicitantes.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void limparTelaSolicitantes() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Departamento"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaSolicitantes.setModel(modelo);
        jTabelaSolicitantes.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaSolicitantes.getColumnModel().getColumn(0).setResizable(false);
        jTabelaSolicitantes.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaSolicitantes.getColumnModel().getColumn(2).setPreferredWidth(280);
        jTabelaSolicitantes.getColumnModel().getColumn(2).setResizable(false);
        jTabelaSolicitantes.setAutoResizeMode(jTabelaSolicitantes.AUTO_RESIZE_OFF);
        jTabelaSolicitantes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaItensColaborador(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome Completo Colaborador", "Valor R$"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            countCalc = 0;
            do {
                countCalc = countCalc + 1;
                valorLib = conecta.rs.getFloat("ValorMax");
                DecimalFormat vl1 = new DecimalFormat("##,##0.00");
                String valorLib1 = vl1.format(valorLib);
                valorLibReal = valorLib1;
                jtotalItens.setText(Integer.toString(countCalc)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getString("IdSeq"), conecta.rs.getString("IdFunc"), conecta.rs.getString("NomeFunc"), valorLibReal});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaColaborador.setModel(modelo);
        jTabelaColaborador.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaColaborador.getColumnModel().getColumn(0).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaColaborador.getColumnModel().getColumn(1).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(2).setPreferredWidth(230);
        jTabelaColaborador.getColumnModel().getColumn(2).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaColaborador.getColumnModel().getColumn(3).setResizable(false);
        jTabelaColaborador.setAutoResizeMode(jTabelaColaborador.AUTO_RESIZE_OFF);
        jTabelaColaborador.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharColunasTabelaColaboradores();
        conecta.desconecta();
    }

    public void alinharColunasTabelaColaboradores() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaColaborador.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaColaborador.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaColaborador.getColumnModel().getColumn(3).setCellRenderer(direita);
    }

    public void limparCamposTabelaColaboradores() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome Completo Colaborador", "Valor R$"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaColaborador.setModel(modelo);
        jTabelaColaborador.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaColaborador.getColumnModel().getColumn(0).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaColaborador.getColumnModel().getColumn(1).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(2).setPreferredWidth(230);
        jTabelaColaborador.getColumnModel().getColumn(2).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaColaborador.getColumnModel().getColumn(3).setResizable(false);
        jTabelaColaborador.setAutoResizeMode(jTabelaColaborador.AUTO_RESIZE_OFF);
        jTabelaColaborador.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jCodigo.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jCodigo.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserADM = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserADM + "'");
            conecta.rs.first();
            codigoUserGroupADM = conecta.rs.getInt("IdUsuario");
            codigoGrupoADM = conecta.rs.getInt("IdGrupo");
            nomeGrupoADM = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserADM + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoADM = conecta.rs.getInt("IdUsuario");
            codAbrirADM = conecta.rs.getInt("Abrir");
            codIncluirADM = conecta.rs.getInt("Incluir");
            codAlterarADM = conecta.rs.getInt("Alterar");
            codExcluirADM = conecta.rs.getInt("Excluir");
            codGravarADM = conecta.rs.getInt("Gravar");
            codConsultarADM = conecta.rs.getInt("Consultar");
            nomeTelaADM = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
