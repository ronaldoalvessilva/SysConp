/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

import java.io.FileOutputStream;
import java.io.IOException;
//import api iText
import com.lowagie.text.*;
import com.lowagie.text.pdf.PdfWriter;
import gestor.Controle.ControleOcorrenciaBaseSeguranca;
import gestor.Modelo.OcorrenciaSeguranca;
import static gestor.Visao.TelaModuloBaseDois.codAbrirB2;
import static gestor.Visao.TelaModuloBaseDois.codAlterarB2;
import static gestor.Visao.TelaModuloBaseDois.codConsultarB2;
import static gestor.Visao.TelaModuloBaseDois.codExcluirB2;
import static gestor.Visao.TelaModuloBaseDois.codGravarB2;
import static gestor.Visao.TelaModuloBaseDois.codIncluirB2;
import static gestor.Visao.TelaModuloBaseDois.codUserAcessoB2;
import static gestor.Visao.TelaModuloBaseDois.codigoGrupoB2;
import static gestor.Visao.TelaModuloBaseDois.codigoUserB2;
import static gestor.Visao.TelaModuloBaseDois.codigoUserGroupB2;
import static gestor.Visao.TelaModuloBaseDois.nomeGrupoB2;
import static gestor.Visao.TelaModuloBaseDois.nomeTelaB2;
import static gestor.Visao.TelaModuloBaseDois.telaLivroOcorrenciasB2;
import java.io.BufferedOutputStream;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.rtf.RTFEditorKit;

/**
 *
 * @author ronaldo
 */
public class TelaOcorrenciaBaseDois extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    OcorrenciaSeguranca objOcorr = new OcorrenciaSeguranca();
    ControleOcorrenciaBaseSeguranca control = new ControleOcorrenciaBaseSeguranca();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    int flag, acao;
    String dataInicial, dataFinal, dataBrasil;
    String dataEntrada;
    String statusMov;
    String statusEntrada = "ABERTO";

    // Variáveis para gravar o log
    String nomeModuloTela = "Base Segurança:Movimentação:Ocorrências Diárias:Manutenção";
    String horaMov;
    String dataModFinal;
    int count = 0;
    String textoOcorrencia;
    //
    int pBtEsq = 0;
    int pBtCen = 0;
    int pBtDir = 0;
    int pBtJus = 0;
    //
    String caminhoPDF = "";
    String tituloOcorrencia = "OCORRÊNCIA_BASE_DOIS";
    String dataPDF = "";
    String horaPDF = "";

    /**
     * Creates new form TelaOcorrenciaPortaria
     */
    public TelaOcorrenciaBaseDois() {
        initComponents();
        corCampos();
        formatarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jCodigo = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqData = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jPesqTituloOcorrencia = new javax.swing.JTextField();
        jBtPesqTituloOcorrrencia = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaOcorrenciaPortaria = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdOcorrencia = new javax.swing.JTextField();
        jStatusOcorrencia = new javax.swing.JTextField();
        jDataOcorrencia = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jTituloOcorrencia = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jCorpoTextoOcorrencia = new javax.swing.JTextPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtImpressao = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jBtPDF = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxCorFonte = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxSize = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jBtEsquerda = new javax.swing.JButton();
        jBtCentralizar = new javax.swing.JButton();
        jBtDireita = new javax.swing.JButton();
        jBtJustificar = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jBtFinalizar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        jScrollPane3.setViewportView(jEditorPane1);

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Ocorrência Base II - {BASESEG} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Data Inicial:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Data Final:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtPesqDataMouseClicked(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Titulo:");

        jPesqTituloOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqTituloOcorrrencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqTituloOcorrrencia.setContentAreaFilled(false);
        jBtPesqTituloOcorrrencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtPesqTituloOcorrrenciaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPesqTituloOcorrencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqTituloOcorrrencia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqData)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtPesqTituloOcorrrencia)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jPesqTituloOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaOcorrenciaPortaria.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaOcorrenciaPortaria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Titulo Ocorrência"
            }
        ));
        jTabelaOcorrenciaPortaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaOcorrenciaPortariaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaOcorrenciaPortaria);
        if (jTabelaOcorrenciaPortaria.getColumnModel().getColumnCount() > 0) {
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(3).setMinWidth(380);
            jTabelaOcorrenciaPortaria.getColumnModel().getColumn(3).setMaxWidth(380);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel4);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Ocorrência:");

        jIdOcorrencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdOcorrencia.setEnabled(false);

        jStatusOcorrencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusOcorrencia.setEnabled(false);

        jDataOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataOcorrencia.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Titulo:");

        jTituloOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTituloOcorrencia.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jIdOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jStatusOcorrencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTituloOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jIdOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jStatusOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jDataOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTituloOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jCorpoTextoOcorrencia.setEnabled(false);
        jScrollPane4.setViewportView(jCorpoTextoOcorrencia);

        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Nova Ocorrência");
        jBtNovo.setAutoscrolls(true);
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar Ocorrência");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir Ocorrência");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar Ocorrência");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressao.setToolTipText("Imprimir Ocorrência");
        jBtImpressao.setContentAreaFilled(false);
        jBtImpressao.setEnabled(false);
        jBtImpressao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtImpressao.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtImpressao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtImpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImpressaoActionPerformed(evt);
            }
        });

        jBtAuditoria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoria.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoria.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jBtPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/pdf-document-icone-7000-16.png"))); // NOI18N
        jBtPDF.setToolTipText("Salvar em PDF");
        jBtPDF.setContentAreaFilled(false);
        jBtPDF.setEnabled(false);
        jBtPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtImpressao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtImpressao, jBtNovo, jBtSalvar});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtImpressao)
                .addComponent(jBtNovo)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addComponent(jBtAuditoria)
                .addComponent(jBtPDF))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtImpressao, jBtNovo, jBtSalvar});

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Inicio", jPanel6);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Fonte");

        jComboBoxCorFonte.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxCorFonte.setEnabled(false);
        jComboBoxCorFonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCorFonteActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Tam.");

        jComboBoxSize.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20", "22", "24", "26", "28", "36", "48", "72" }));
        jComboBoxSize.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxSize.setEnabled(false);
        jComboBoxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addComponent(jComboBoxCorFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(7, 7, 7)
                .addComponent(jComboBoxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(jComboBoxCorFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtEsquerda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/esquerda.png"))); // NOI18N
        jBtEsquerda.setToolTipText("Esquerda");
        jBtEsquerda.setEnabled(false);
        jBtEsquerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEsquerdaActionPerformed(evt);
            }
        });

        jBtCentralizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Centralizado.png"))); // NOI18N
        jBtCentralizar.setToolTipText("Centralizar");
        jBtCentralizar.setEnabled(false);
        jBtCentralizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCentralizarActionPerformed(evt);
            }
        });

        jBtDireita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/direita.png"))); // NOI18N
        jBtDireita.setToolTipText("Direta");
        jBtDireita.setEnabled(false);
        jBtDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDireitaActionPerformed(evt);
            }
        });

        jBtJustificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/justificado.png"))); // NOI18N
        jBtJustificar.setToolTipText("Justificar");
        jBtJustificar.setEnabled(false);
        jBtJustificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtJustificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jBtEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCentralizar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtJustificar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtCentralizar, jBtDireita, jBtEsquerda, jBtJustificar});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtEsquerda)
                    .addComponent(jBtCentralizar)
                    .addComponent(jBtDireita)
                    .addComponent(jBtJustificar))
                .addContainerGap())
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtCentralizar, jBtDireita, jBtEsquerda, jBtJustificar});

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Formatação", jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar Ocorrência");
        jBtFinalizar.setContentAreaFilled(false);
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtFinalizar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtFinalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 495, Short.MAX_VALUE)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtSair, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtFinalizar))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Finalização", jPanel9);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addComponent(jTabbedPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 10, 634, 604);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaLivroOcorrenciasB2);
        if (codigoUserB2 == codUserAcessoB2 && nomeTelaB2.equals(telaLivroOcorrenciasB2) && codIncluirB2 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoB2.equals("ADMINISTRADORES")) {
            acao = 1;
            Novo();
            loadFont();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            //Impedir que a janela seja fechada pelo X 
            setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaLivroOcorrenciasB2);
        if (codigoUserB2 == codUserAcessoB2 && nomeTelaB2.equals(telaLivroOcorrenciasB2) && codAlterarB2 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoB2.equals("ADMINISTRADORES")) {
            objOcorr.setStatusLanc(jStatusOcorrencia.getText());
            if (jStatusOcorrencia.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa ocorrência não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                loadFont();
                corCampos();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                //Impedir que a janela seja fechada pelo X 
                setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaLivroOcorrenciasB2);
        if (codigoUserB2 == codUserAcessoB2 && nomeTelaB2.equals(telaLivroOcorrenciasB2) && codExcluirB2 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoB2.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objOcorr.setStatusLanc(jStatusOcorrencia.getText());
            if (jStatusOcorrencia.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa ocorrência não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objOcorr.setIdLanc(Integer.parseInt(jIdOcorrencia.getText()));
                    control.excluirOcorrenciaP1(objOcorr);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    Excluir();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaLivroOcorrenciasB2);
        if (codigoUserB2 == codUserAcessoB2 && nomeTelaB2.equals(telaLivroOcorrenciasB2) && codGravarB2 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoB2.equals("ADMINISTRADORES")) {
            if (jDataOcorrencia.getDate() == null) {
                jDataOcorrencia.requestFocus();
                jDataOcorrencia.setBackground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Informe a data da Ocorrência.");
            } else {
                if (jTituloOcorrencia.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o titulo da Ocorrência.");
                } else {
                    objOcorr.setStatusLanc(statusEntrada);
                    objOcorr.setDataLanc(jDataOcorrencia.getDate());
                    objOcorr.setTitulo(jTituloOcorrencia.getText());
                    objOcorr.setTextoArea(jCorpoTextoOcorrencia.getText());
                    objOcorr.setFonte((String) jComboBoxCorFonte.getSelectedItem());
                    objOcorr.setTamanho((String) jComboBoxSize.getSelectedItem());
                    objOcorr.setBtesq(pBtEsq);
                    objOcorr.setBtCen(pBtCen);
                    objOcorr.setBtDir(pBtDir);
                    objOcorr.setBtJus(pBtJus);
                    if (acao == 1) {
                        objOcorr.setUsuarioInsert(nameUser);
                        objOcorr.setDataInsert(jDataSistema.getText());
                        objOcorr.setHorarioInsert(jHoraSistema.getText());
                        control.incluirOcorrenciaP1(objOcorr);
                        buscarID();
                        Salvar();
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        int resposta = JOptionPane.showConfirmDialog(this, "Deseja continuar digitando a ocorrência?", "Confirmação",
                                JOptionPane.YES_NO_OPTION);
                        if (resposta == JOptionPane.YES_OPTION) {
                            Alterar();
                            acao = 2;
                        }
                    }
                    if (acao == 2) {
                        objOcorr.setUsuarioUp(nameUser);
                        objOcorr.setDataUp(jDataSistema.getText());
                        objOcorr.setHorarioUp(jHoraSistema.getText());
                        objOcorr.setIdLanc(Integer.valueOf(jIdOcorrencia.getText()));
                        control.alterarOcorrenciaP1(objOcorr);
                        Salvar();
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        int resposta = JOptionPane.showConfirmDialog(this, "Deseja continuar digitando a ocorrência?", "Confirmação",
                                JOptionPane.YES_NO_OPTION);
                        if (resposta == JOptionPane.YES_OPTION) {
                            Alterar();
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
        // LIBERAR PARA FECHAR A TELA NO X
        setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:  
        buscarParametroPDF();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA "
                    + "WHERE IdLanc='" + jIdOcorrencia.getText() + "'");
            conecta.rs.first();
            jStatusOcorrencia.setText(conecta.rs.getString("StatusLanc"));
            if (jStatusOcorrencia.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
                gerarPDF();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaOcorrenciasP1 objAudiOcorre = new TelaAuditoriaOcorrenciasP1();
        TelaModuloPortarias.jPainelPortarias.add(objAudiOcorre);
        objAudiOcorre.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtImpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImpressaoActionPerformed
        // TODO add your handling code here:
        try {
            conecta.abrirConexao();
            String path = "reports/ListagemOcorrenciaBaseSeguranca.jasper";
            conecta.executaSQL("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA WHERE IdLanc='" + jIdOcorrencia.getText() + "'");
            HashMap parametros = new HashMap();
            parametros.put("idOcorrencia", jIdOcorrencia.getText());
            parametros.put("nomeUsuario", nameUser);
            JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
            JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
            JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
            jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
            jv.setTitle("Livro de Ocorrência Diária");
            jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
            jv.toFront(); // Traz o relatorio para frente da aplicação            
            conecta.desconecta();
        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
        }
    }//GEN-LAST:event_jBtImpressaoActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        if (acao == 2) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA "
                        + "WHERE IdLanc='" + jIdOcorrencia.getText() + "'");
                conecta.rs.first();
                textoOcorrencia = conecta.rs.getString("TextoArea");
            } catch (Exception e) {
            }
            conecta.desconecta();
        }
        // SE A VARIAVEL FOR IGUAL AO TEXTO DO BANCO DE DADOS SAIR SEM PERGUNTAR
        if (jCorpoTextoOcorrencia.getText().equals(textoOcorrencia) && acao == 2) {
            dispose();
            // SE O TEXTO FOR DIFERENTE DO BANCO DE DADOS SAIR E PERGUNTAR
        } else if (!jCorpoTextoOcorrencia.getText().equals(textoOcorrencia) && acao == 2) {
            int resposta = JOptionPane.showConfirmDialog(this, "A ocorrência ainda não foi gravada, deseja sair assim mesmo?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                dispose();
            }
            // SE O CAMPO FOR HABILITADO E O TEXTO NÃO FOR EM BRANCO
        } else if (jCorpoTextoOcorrencia.isEnabled() && !jCorpoTextoOcorrencia.getText().equals("") && acao == 1) {
            int resposta = JOptionPane.showConfirmDialog(this, "A ocorrência ainda não foi gravada, deseja sair assim mesmo?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                dispose();
            }
            // SE O CAMPO FOR HABILITADO E O TEXTO FOR VAZIO SAI SEM PERGUTAR.
        } else {
            dispose();
        }
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código para pesquisa.");
        } else {
            pesquisarOcorrrencias("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA "
                    + "WHERE IdLanc='" + jCodigo.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.pesquisarOcorrrencias("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesqDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtPesqDataMouseClicked
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                    pesquisarOcorrrencias("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "' "
                            + "AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataMouseClicked

    private void jBtPesqTituloOcorrrenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtPesqTituloOcorrrenciaMouseClicked
        // TODO add your handling code here:
        count = 0;
        if (jPesqTituloOcorrencia.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquuisa.");
        } else {
            pesquisarOcorrrencias("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA WHERE WHERE Titulo "
                    + "LIKE'%" + jPesqTituloOcorrencia + "%'");
        }
    }//GEN-LAST:event_jBtPesqTituloOcorrrenciaMouseClicked

    private void jTabelaOcorrenciaPortariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaOcorrenciaPortariaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaOcorrenciaPortaria.getValueAt(jTabelaOcorrenciaPortaria.getSelectedRow(), 0);
            jCodigo.setText(IdLanc);
            if (jStatusOcorrencia.getText().equals("FINALIZADO")) {
                jDataOcorrencia.setEnabled(!true);
                jTituloOcorrencia.setEnabled(!true);
                jCorpoTextoOcorrencia.setEnabled(!true);
                //
                jBtNovo.setEnabled(true);
                jBtAlterar.setEnabled(!true);
                jBtExcluir.setEnabled(!true);
                jBtSalvar.setEnabled(!true);
                jBtCancelar.setEnabled(!true);
                jBtFinalizar.setEnabled(!true);
                jBtAuditoria.setEnabled(true);
                jBtImpressao.setEnabled(true);
                jBtPDF.setEnabled(true);
            } else {
                jDataOcorrencia.setEnabled(!true);
                jTituloOcorrencia.setEnabled(!true);
                jCorpoTextoOcorrencia.setEnabled(!true);
                //
                jBtNovo.setEnabled(true);
                jBtAlterar.setEnabled(true);
                jBtExcluir.setEnabled(true);
                jBtSalvar.setEnabled(!true);
                jBtCancelar.setEnabled(!true);
                jBtFinalizar.setEnabled(true);
                jBtAuditoria.setEnabled(true);
                jBtImpressao.setEnabled(true);
                jBtPDF.setEnabled(true);
            }
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA "
                        + "WHERE IdLanc ='" + IdLanc + "'");
                conecta.rs.first();
                jIdOcorrencia.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusOcorrencia.setText(conecta.rs.getString("StatusLanc"));
                jDataOcorrencia.setDate(conecta.rs.getDate("DataLanc"));
                jTituloOcorrencia.setText(conecta.rs.getString("Titulo"));
                jCorpoTextoOcorrencia.setText(conecta.rs.getString("TextoArea"));
                jComboBoxCorFonte.addItem(conecta.rs.getString("Fonte"));
                jComboBoxSize.setSelectedItem(conecta.rs.getString("Tamanho"));
                // TIPO DA FONTE
                jCorpoTextoOcorrencia.setFont(new Font(jComboBoxCorFonte.getSelectedItem().toString(),
                        Font.PLAIN, Integer.parseInt(jComboBoxSize.getSelectedItem().toString())));
                // TAMANHO DA FONTE
                String getSize = jComboBoxSize.getSelectedItem().toString();
                Font f = jCorpoTextoOcorrencia.getFont();
                // setting new size
                jCorpoTextoOcorrencia.setFont(new Font(f.getFontName(),
                        f.getStyle(), Integer.parseInt(getSize)));
                //
                pBtEsq = conecta.rs.getInt("BtEsq");
                pBtCen = conecta.rs.getInt("BtCen");
                pBtDir = conecta.rs.getInt("BtDir");
                pBtJus = conecta.rs.getInt("BtJus");
                if (pBtEsq == 1) {
                    StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
                    SimpleAttributeSet attribs = new SimpleAttributeSet();
                    StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_LEFT);
                    doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
                } else if (pBtCen == 1) {
                    StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
                    SimpleAttributeSet attribs = new SimpleAttributeSet();
                    StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_CENTER);
                    doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
                } else if (pBtDir == 1) {
                    StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
                    SimpleAttributeSet attribs = new SimpleAttributeSet();
                    StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_RIGHT);
                    doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
                } else if (pBtJus == 1) {
                    StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
                    SimpleAttributeSet attribs = new SimpleAttributeSet();
                    StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_JUSTIFIED);
                    doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
                }
                //
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERROR: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaOcorrenciaPortariaMouseClicked

    private void jComboBoxCorFonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCorFonteActionPerformed
        // TODO add your handling code here:       
        // Change font of text
        jCorpoTextoOcorrencia.setFont(new Font(jComboBoxCorFonte.getSelectedItem().toString(),
                Font.PLAIN, Integer.parseInt(jComboBoxSize.getSelectedItem().toString())));
    }//GEN-LAST:event_jComboBoxCorFonteActionPerformed

    private void jComboBoxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSizeActionPerformed
        // TODO add your handling code here:   
        // Select size of text
        String getSize = jComboBoxSize.getSelectedItem().toString();
        Font f = jCorpoTextoOcorrencia.getFont();
        // setting new size
        jCorpoTextoOcorrencia.setFont(new Font(f.getFontName(),
                f.getStyle(), Integer.parseInt(getSize)));
    }//GEN-LAST:event_jComboBoxSizeActionPerformed

    private void jBtCentralizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCentralizarActionPerformed
        // TODO add your handling code here:
        StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
        SimpleAttributeSet attribs = new SimpleAttributeSet();
        StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
        //
        pBtEsq = 0;
        pBtCen = 1;
        pBtDir = 0;
        pBtJus = 0;
    }//GEN-LAST:event_jBtCentralizarActionPerformed

    private void jBtEsquerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEsquerdaActionPerformed
        // TODO add your handling code here:
        StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
        SimpleAttributeSet attribs = new SimpleAttributeSet();
        StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_LEFT);
        doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
        //
        pBtEsq = 1;
        pBtCen = 0;
        pBtDir = 0;
        pBtJus = 0;
    }//GEN-LAST:event_jBtEsquerdaActionPerformed

    private void jBtDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDireitaActionPerformed
        // TODO add your handling code here:
        StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
        SimpleAttributeSet attribs = new SimpleAttributeSet();
        StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_RIGHT);
        doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
        //
        pBtEsq = 0;
        pBtCen = 0;
        pBtDir = 1;
        pBtJus = 0;
    }//GEN-LAST:event_jBtDireitaActionPerformed

    private void jBtJustificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtJustificarActionPerformed
        // TODO add your handling code here:
        StyledDocument doc = jCorpoTextoOcorrencia.getStyledDocument();
        SimpleAttributeSet attribs = new SimpleAttributeSet();
        StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_JUSTIFIED);
        doc.setParagraphAttributes(0, doc.getLength(), attribs, false);
        //        
        pBtEsq = 0;
        pBtCen = 0;
        pBtDir = 0;
        pBtJus = 1;
    }//GEN-LAST:event_jBtJustificarActionPerformed

    private void jBtPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPDFActionPerformed
        // TODO add your handling code here:
        if (jCorpoTextoOcorrencia.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não existe conteúdo a ser gerado em PDF.");
        } else {
            JFileChooser file = new JFileChooser();
            FileNameExtensionFilter tipoExtensao = new FileNameExtensionFilter("Arquivos em PDF", "pdf");
            file.setAcceptAllFileFilterUsed(false);
            file.setMultiSelectionEnabled(false);
            file.setFileFilter(tipoExtensao);
            String fileName = "";
            if (file.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                fileName = file.getSelectedFile().getAbsolutePath();
                Document document = new Document();
                try {
                    PdfWriter.getInstance(document, new FileOutputStream(fileName));
                    document.open();
                    // adicionando um parágrafo ao documento
                    document.add(new Paragraph(jCorpoTextoOcorrencia.getText()));
                    JOptionPane.showMessageDialog(rootPane, "Arquivo PDF gerado com sucesso.");
                } catch (DocumentException de) {
                    System.err.println(de.getMessage());
                } catch (IOException ioe) {
                    System.err.println(ioe.getMessage());
                }
                document.close();
            }
        }
    }//GEN-LAST:event_jBtPDFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCentralizar;
    private javax.swing.JButton jBtDireita;
    private javax.swing.JButton jBtEsquerda;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImpressao;
    private javax.swing.JButton jBtJustificar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPDF;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqTituloOcorrrencia;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jCodigo;
    private javax.swing.JComboBox<String> jComboBoxCorFonte;
    private javax.swing.JComboBox<String> jComboBoxSize;
    private javax.swing.JTextPane jCorpoTextoOcorrencia;
    private com.toedter.calendar.JDateChooser jDataOcorrencia;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    private javax.swing.JEditorPane jEditorPane1;
    public static javax.swing.JTextField jIdOcorrencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqTituloOcorrencia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jStatusOcorrencia;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaOcorrenciaPortaria;
    private javax.swing.JTextField jTituloOcorrencia;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void gerarPDF() {
        // DATA DE FINALIZAÇÃO DO DOCUMENTO
        dataPDF = jDataSistema.getText();
        String dia = dataPDF.substring(0, 2);
        String mes = dataPDF.substring(3, 5);
        String ano = dataPDF.substring(6, 10);
        dataPDF = dia + mes + ano;
        // HORÁRIO DE FINALIZAÇÃO DO DOCUMENTO
        horaPDF = jHoraSistema.getText();
        String hora = horaPDF.substring(0, 2);
        String minutos = horaPDF.substring(3, 5);
        String segundos = horaPDF.substring(6, 8);
        horaPDF = hora + minutos + segundos;
        //        
        Document document = new Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream(caminhoPDF + tituloOcorrencia + "_" + dataPDF + "_" + horaPDF + ".pdf"));
            document.open();
            // adicionando um parágrafo ao documento
            document.add(new Paragraph(jCorpoTextoOcorrencia.getText()));
        } catch (DocumentException de) {
            System.err.println(de.getMessage());
        } catch (IOException ioe) {
            System.err.println(ioe.getMessage());
        }
        document.close();
    }

    public void buscarParametroPDF() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PARAMETROSCRC");
            conecta.rs.first();
            caminhoPDF = conecta.rs.getString("LocalPDF_B2");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void formatarCampos() {

//        jCorpoTextoOcorrencia.setLineWrap(true);
//        jCorpoTextoOcorrencia.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdOcorrencia.setBackground(Color.white);
        jStatusOcorrencia.setBackground(Color.white);
        jDataOcorrencia.setBackground(Color.white);
        jTituloOcorrencia.setBackground(Color.white);
        jCorpoTextoOcorrencia.setBackground(Color.white);
    }

    private void loadFont() {
        GraphicsEnvironment gEnv = GraphicsEnvironment.getLocalGraphicsEnvironment();
        // get all font name&amp;amp;amp;amp;nbsp;
        String[] fontNames = gEnv.getAvailableFontFamilyNames();
        // load to combobox
        ComboBoxModel model = new DefaultComboBoxModel(fontNames);
        jComboBoxCorFonte.setModel(model);
    }

    public void Novo() {
        //
        jIdOcorrencia.setText("");
        jStatusOcorrencia.setText("ABERTO");
        jDataOcorrencia.setCalendar(Calendar.getInstance());
        jTituloOcorrencia.setText("");
        jCorpoTextoOcorrencia.setText("");
        //
        jDataOcorrencia.setEnabled(true);
        jTituloOcorrencia.setEnabled(true);
        jCorpoTextoOcorrencia.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtImpressao.setEnabled(!true);
        //
        jComboBoxCorFonte.setEnabled(true);
        jComboBoxSize.setEnabled(true);
        jBtEsquerda.setEnabled(true);
        jBtCentralizar.setEnabled(true);
        jBtDireita.setEnabled(true);
        jBtJustificar.setEnabled(true);
        jBtPDF.setEnabled(!true);
    }

    public void Alterar() {
        //
        jDataOcorrencia.setEnabled(true);
        jTituloOcorrencia.setEnabled(true);
        jCorpoTextoOcorrencia.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtImpressao.setEnabled(!true);
        //
        jComboBoxCorFonte.setEnabled(true);
        jComboBoxSize.setEnabled(true);
        jBtEsquerda.setEnabled(true);
        jBtCentralizar.setEnabled(true);
        jBtDireita.setEnabled(true);
        jBtJustificar.setEnabled(true);
        jBtPDF.setEnabled(!true);
    }

    public void Excluir() {
        //
        jIdOcorrencia.setText("");
        jStatusOcorrencia.setText("");
        jDataOcorrencia.setDate(null);
        jTituloOcorrencia.setText("");
        jCorpoTextoOcorrencia.setText("");
        //
        jDataOcorrencia.setEnabled(!true);
        jTituloOcorrencia.setEnabled(!true);
        jCorpoTextoOcorrencia.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtImpressao.setEnabled(!true);
        //
        jComboBoxCorFonte.setEnabled(!true);
        jComboBoxSize.setEnabled(!true);
        jBtEsquerda.setEnabled(!true);
        jBtCentralizar.setEnabled(!true);
        jBtDireita.setEnabled(!true);
        jBtJustificar.setEnabled(!true);
        jBtPDF.setEnabled(!true);
    }

    public void Salvar() {
        //
        jDataOcorrencia.setEnabled(!true);
        jTituloOcorrencia.setEnabled(!true);
        jCorpoTextoOcorrencia.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        jBtImpressao.setEnabled(true);
        //
        jComboBoxCorFonte.setEnabled(!true);
        jComboBoxSize.setEnabled(!true);
        jBtEsquerda.setEnabled(!true);
        jBtCentralizar.setEnabled(!true);
        jBtDireita.setEnabled(!true);
        jBtJustificar.setEnabled(!true);
        jBtPDF.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdOcorrencia.getText().equals("")) {
            jIdOcorrencia.setText("");
            jStatusOcorrencia.setText("");
            jDataOcorrencia.setDate(null);
            jTituloOcorrencia.setText("");
            jCorpoTextoOcorrencia.setText("");
            //
            jDataOcorrencia.setEnabled(!true);
            jTituloOcorrencia.setEnabled(!true);
            jCorpoTextoOcorrencia.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            jBtImpressao.setEnabled(!true);
            //
            jComboBoxCorFonte.setEnabled(!true);
            jComboBoxSize.setEnabled(!true);
            jBtEsquerda.setEnabled(!true);
            jBtCentralizar.setEnabled(!true);
            jBtDireita.setEnabled(!true);
            jBtJustificar.setEnabled(!true);
            jBtPDF.setEnabled(true);
        } else {
            jDataOcorrencia.setEnabled(!true);
            jTituloOcorrencia.setEnabled(!true);
            jCorpoTextoOcorrencia.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtImpressao.setEnabled(true);
            //
            jComboBoxCorFonte.setEnabled(!true);
            jComboBoxSize.setEnabled(!true);
            jBtEsquerda.setEnabled(!true);
            jBtCentralizar.setEnabled(!true);
            jBtDireita.setEnabled(!true);
            jBtJustificar.setEnabled(!true);
            jBtPDF.setEnabled(!true);
        }
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se essa ocorrência for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR a OCORRÊNCIA selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objOcorr.setStatusLanc(statusEntrada);
            objOcorr.setIdLanc(Integer.parseInt(jIdOcorrencia.getText()));
            control.finalizarOcorrenciaP1(objOcorr);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            jStatusOcorrencia.setText(statusEntrada);
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jDataOcorrencia.setEnabled(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
        }
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM OCORRENCIAS_BASE_SEGURANCA");
            conecta.rs.last();
            jIdOcorrencia.setText(conecta.rs.getString("IdLanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código da ocorrência.");
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdOcorrencia.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void pesquisarOcorrrencias(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data ", "Status", "Titulo Ocorrência"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataLanc");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataBrasil, conecta.rs.getString("StatusLanc"), conecta.rs.getString("Titulo")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaOcorrenciaPortaria.setModel(modelo);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setResizable(false);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setResizable(false);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setResizable(false);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(3).setPreferredWidth(380);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(3).setResizable(false);
        jTabelaOcorrenciaPortaria.getTableHeader().setReorderingAllowed(false);
        jTabelaOcorrenciaPortaria.setAutoResizeMode(jTabelaOcorrenciaPortaria.AUTO_RESIZE_OFF);
        jTabelaOcorrenciaPortaria.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data ", "Status", "Titulo Ocorrência"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaOcorrenciaPortaria.setModel(modelo);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setResizable(false);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setResizable(false);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setResizable(false);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(3).setPreferredWidth(380);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(3).setResizable(false);
        jTabelaOcorrenciaPortaria.getTableHeader().setReorderingAllowed(false);
        jTabelaOcorrenciaPortaria.setAutoResizeMode(jTabelaOcorrenciaPortaria.AUTO_RESIZE_OFF);
        jTabelaOcorrenciaPortaria.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaOcorrenciaPortaria.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserB2 = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserB2 + "'");
            conecta.rs.first();
            codigoUserGroupB2 = conecta.rs.getInt("IdUsuario");
            codigoGrupoB2 = conecta.rs.getInt("IdGrupo");
            nomeGrupoB2 = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserB2 + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoB2 = conecta.rs.getInt("IdUsuario");
            codAbrirB2 = conecta.rs.getInt("Abrir");
            codIncluirB2 = conecta.rs.getInt("Incluir");
            codAlterarB2 = conecta.rs.getInt("Alterar");
            codExcluirB2 = conecta.rs.getInt("Excluir");
            codGravarB2 = conecta.rs.getInt("Gravar");
            codConsultarB2 = conecta.rs.getInt("Consultar");
            nomeTelaB2 = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    private void save() {
        JFileChooser file = new JFileChooser();
        String fileName = "";
        // show save file dialog
        if (file.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            // get full path of selected file
            fileName = file.getSelectedFile().getAbsolutePath();
            // get meta of text
            StyledDocument doc = (StyledDocument) jCorpoTextoOcorrencia.getDocument();
            // convert to richtext format
            RTFEditorKit kit = new RTFEditorKit();
            BufferedOutputStream out;
            try {
                out = new BufferedOutputStream(new FileOutputStream(fileName));
                // save content to file
                kit.write(out, doc, doc.getStartPosition().getOffset(), doc.getLength());
                out.flush();
                out.close();
            } catch (Exception e) {
                System.out.println("Err:" + e.toString());
            }
        } else {
            return;
        }
    }
}
