/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEntradaSaidaVeiculos;
import gestor.Controle.ControleItensEntradaSaidaVeiculos;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.LimiteDigitos;
import Utilitarios.ModeloTabela;
import gestor.Modelo.EntradaSaidaVeiculos;
import gestor.Modelo.ItensEntradaSaidaVeiculos;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortarias.codigoUserGroupP1;
import static gestor.Visao.TelaModuloPortarias.codigoGrupoP1;
import static gestor.Visao.TelaModuloPortarias.codAbrirP1;
import static gestor.Visao.TelaModuloPortarias.codAlterarP1;
import static gestor.Visao.TelaModuloPortarias.codExcluirP1;
import static gestor.Visao.TelaModuloPortarias.codGravarP1;
import static gestor.Visao.TelaModuloPortarias.codConsultarP1;
import static gestor.Visao.TelaModuloPortarias.codIncluirP1;
import static gestor.Visao.TelaModuloPortarias.codUserAcessoP1;
import static gestor.Visao.TelaModuloPortarias.codigoUserP1;
import static gestor.Visao.TelaModuloPortarias.nomeGrupoP1;
import static gestor.Visao.TelaModuloPortarias.nomeTelaP1;
import static gestor.Visao.TelaModuloPortarias.telaEntradaSaidaESVTManuP1;
import static gestor.Visao.TelaModuloPortarias.telaEntradaSaidaESVTVP1;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author user
 */
public class TelaEntradaSaidaVeiculosTerceiros extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EntradaSaidaVeiculos objEntSaiVei = new EntradaSaidaVeiculos();
    ItensEntradaSaidaVeiculos objItensVeiculosTer = new ItensEntradaSaidaVeiculos();
    ControleEntradaSaidaVeiculos control = new ControleEntradaSaidaVeiculos();
    ControleItensEntradaSaidaVeiculos controle = new ControleItensEntradaSaidaVeiculos();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria:Entrada/Saida de Veiculos/Terceiro:Manutenção";
    String nomeModuloTela2 = "Portaria:Entrada/Saida de Veiculos/Terceiro:Veiculos/Visitantes";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String statusEnt = "ABERTO";
    String dataEntrada;
    String dataSaida;
    public static String idItem;
    String dataInicial;
    String dataFinal;
    String codLanc;
    String caminho;
    String caminhoVei;
    int count = 0;
    // VARIAVEIS PARA BLOQUEAR O REGISTRO CASO NÃO ESTEJA COM OS HORÁRIOS PREENCHIDOS COM AS HORAS.
    String verHorarioSaida = "00:00";
    String verHorarioEntrada = "00:00";
    String horaEntradaEncontrada, codigoRegistro, horaSaidaEncontrado;

    /**
     * Creates new form TelaEntradaSaidaVeiculosTerceiros
     */
    public TelaEntradaSaidaVeiculosTerceiros() {
        initComponents();
        corCampo();
        formatarCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jBtID = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jPesqNomeVisita = new javax.swing.JTextField();
        jBtPesqNomeVisita = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaVeiculosTerceiros = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jStatusEnt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jDataLancamento = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        DadosVisita = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jIdVisita = new javax.swing.JTextField();
        jNomeVisitante = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jRG = new javax.swing.JFormattedTextField();
        jCPF = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        jFotoVisitaDiv = new javax.swing.JLabel();
        jBtPesqVisitante = new javax.swing.JButton();
        DadosVeiculo = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jIdVeiculo = new javax.swing.JTextField();
        jModeloVeiculo = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPlaca = new javax.swing.JFormattedTextField();
        jMarcaVeiculo = new javax.swing.JFormattedTextField();
        jPanel13 = new javax.swing.JPanel();
        jFotoVeiculoDiv = new javax.swing.JLabel();
        jBtPesqVeiculos = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jDataEntrada = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jHorarioEntrada = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jHorarioSaida = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jOrigem = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jDestino = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaVeiculos = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jBtNovoVeiculo = new javax.swing.JButton();
        jBtAlterarVeiculo = new javax.swing.JButton();
        jBtExcluirVeiculo = new javax.swing.JButton();
        jBtSalvarVeiculo = new javax.swing.JButton();
        jBtCancelarVeiculo = new javax.swing.JButton();
        jBtSairVeiculo = new javax.swing.JButton();
        jBtBuscar = new javax.swing.JButton();
        jBtAuditoriaItens = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Controle Veiculos Terceiros - {P1} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 0, 255)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtID.setContentAreaFilled(false);
        jBtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIDActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome da Visita:");

        jPesqNomeVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeVisita.setContentAreaFilled(false);
        jBtPesqNomeVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeVisitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPesqNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel23)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtID)
                    .addComponent(jLabel21)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqNomeVisita)
                    .addComponent(jCheckBox1)
                    .addComponent(jPesqNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabelaVeiculosTerceiros.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVeiculosTerceiros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Obervação"
            }
        ));
        jTabelaVeiculosTerceiros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVeiculosTerceirosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaVeiculosTerceiros);
        if (jTabelaVeiculosTerceiros.getColumnModel().getColumnCount() > 0) {
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setMinWidth(490);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setMaxWidth(490);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cabeçalho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Status");

        jStatusEnt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEnt.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Data Cadastro");

        jDataLancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLancamento.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jStatusEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoria.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBtAuditoria, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtCancelar)
                            .addComponent(jBtFinalizar)))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo)
                        .addComponent(jBtAlterar)
                        .addComponent(jBtExcluir)
                        .addComponent(jBtSalvar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 255));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Código");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Nome do Visitante");

        jIdVisita.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdVisita.setEnabled(false);

        jNomeVisitante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisitante.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("RG");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("CPF");

        jRG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRG.setEnabled(false);

        jCPF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCPF.setEnabled(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Visita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVisitaDiv, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVisitaDiv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jBtPesqVisitante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqVisitante.setText("Pesquisar");
        jBtPesqVisitante.setEnabled(false);
        jBtPesqVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqVisitanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jIdVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtPesqVisitante))
                    .addComponent(jNomeVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jRG, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jCPF))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jIdVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqVisitante))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout DadosVisitaLayout = new javax.swing.GroupLayout(DadosVisita);
        DadosVisita.setLayout(DadosVisitaLayout);
        DadosVisitaLayout.setHorizontalGroup(
            DadosVisitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosVisitaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DadosVisitaLayout.setVerticalGroup(
            DadosVisitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosVisitaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados da Visita", DadosVisita);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Código");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Descrição do Veiculo");

        jIdVeiculo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdVeiculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdVeiculo.setEnabled(false);

        jModeloVeiculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jModeloVeiculo.setEnabled(false);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Placa");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Marca do Veiculo");

        jPlaca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPlaca.setEnabled(false);

        jMarcaVeiculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMarcaVeiculo.setEnabled(false);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Veiculo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVeiculoDiv, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVeiculoDiv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jBtPesqVeiculos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqVeiculos.setText("Pesquisar");
        jBtPesqVeiculos.setEnabled(false);
        jBtPesqVeiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqVeiculosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jIdVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtPesqVeiculos))
                    .addComponent(jModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jMarcaVeiculo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jIdVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqVeiculos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jMarcaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout DadosVeiculoLayout = new javax.swing.GroupLayout(DadosVeiculo);
        DadosVeiculo.setLayout(DadosVeiculoLayout);
        DadosVeiculoLayout.setHorizontalGroup(
            DadosVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosVeiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        DadosVeiculoLayout.setVerticalGroup(
            DadosVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosVeiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados do Veiculo", DadosVeiculo);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Entrada/Saida", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(102, 204, 0))); // NOI18N

        jDataEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntrada.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 255));
        jLabel11.setText("Data Entrada");

        jHorarioEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioEntrada.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 0, 255));
        jLabel12.setText("Horário");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 0));
        jLabel13.setText("Data Saída");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jHorarioSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioSaida.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 51, 0));
        jLabel14.setText("Horário");

        jOrigem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jOrigem.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Origem");

        jDestino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDestino.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Destino");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(24, 24, 24))
                            .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDestino, jOrigem});

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHorarioEntrada, jHorarioSaida});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDestino, jOrigem});

        jTabelaVeiculos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Nome do Visitante", "Placa", "Data Entrada", "Horário", "Data Saída", "Horário"
            }
        ));
        jTabelaVeiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVeiculosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaVeiculos);
        if (jTabelaVeiculos.getColumnModel().getColumnCount() > 0) {
            jTabelaVeiculos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaVeiculos.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaVeiculos.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(5).setMaxWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(6).setMinWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(6).setMaxWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(7).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(7).setMaxWidth(50);
        }

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovoVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoVeiculo.setText("Novo");
        jBtNovoVeiculo.setEnabled(false);
        jBtNovoVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoVeiculoActionPerformed(evt);
            }
        });

        jBtAlterarVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarVeiculo.setText("Alterar");
        jBtAlterarVeiculo.setEnabled(false);
        jBtAlterarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarVeiculoActionPerformed(evt);
            }
        });

        jBtExcluirVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirVeiculo.setText("Excluir");
        jBtExcluirVeiculo.setEnabled(false);
        jBtExcluirVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirVeiculoActionPerformed(evt);
            }
        });

        jBtSalvarVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarVeiculo.setText("Gravar");
        jBtSalvarVeiculo.setEnabled(false);
        jBtSalvarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarVeiculoActionPerformed(evt);
            }
        });

        jBtCancelarVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarVeiculo.setText("Cancelar");
        jBtCancelarVeiculo.setEnabled(false);
        jBtCancelarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarVeiculoActionPerformed(evt);
            }
        });

        jBtSairVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairVeiculo.setText("Sair");
        jBtSairVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairVeiculoActionPerformed(evt);
            }
        });

        jBtBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscar.setText("Buscar");
        jBtBuscar.setEnabled(false);
        jBtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarActionPerformed(evt);
            }
        });

        jBtAuditoriaItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaItens.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaItens.setText("Auditoria");
        jBtAuditoriaItens.setEnabled(false);
        jBtAuditoriaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaItensActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jBtExcluirVeiculo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSairVeiculo))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jBtNovoVeiculo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelarVeiculo))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jBtAlterarVeiculo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jBtSalvarVeiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAuditoriaItens)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarVeiculo, jBtAuditoriaItens, jBtBuscar, jBtCancelarVeiculo, jBtExcluirVeiculo, jBtNovoVeiculo, jBtSairVeiculo, jBtSalvarVeiculo});

        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtNovoVeiculo)
                    .addComponent(jBtCancelarVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAlterarVeiculo)
                    .addComponent(jBtBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtExcluirVeiculo)
                    .addComponent(jBtSairVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtSalvarVeiculo)
                    .addComponent(jBtAuditoriaItens)))
        );

        jPanel16Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarVeiculo, jBtAuditoriaItens, jBtBuscar, jBtCancelarVeiculo, jBtExcluirVeiculo, jBtNovoVeiculo, jBtSairVeiculo, jBtSalvarVeiculo});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(250, 10, 745, 549);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTManuP1) && codIncluirP1 == 1) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTManuP1) && codAlterarP1 == 1) {
            objEntSaiVei.setStatusLanc(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTManuP1) && codExcluirP1 == 1) {
            objEntSaiVei.setStatusLanc(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItens();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTManuP1) && codGravarP1 == 1) {
            if (jDataLancamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de lançamento");
                jDataLancamento.requestFocus();
                jDataLancamento.setBackground(Color.red);
            } else {
                objEntSaiVei.setStatusLanc(statusEnt);
                objEntSaiVei.setDataLanc(jDataLancamento.getDate());
                objEntSaiVei.setObsLanc(jObservacao.getText());
                // log de usuario
                objEntSaiVei.setUsuarioInsert(nameUser);
                objEntSaiVei.setDataInsert(dataModFinal);
                objEntSaiVei.setHoraInsert(horaMov);
                if (acao == 1) {
                    control.incluirVeiculosTerceiros(objEntSaiVei);
                    buscarID();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravadocom sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    // log de usuario
                    objEntSaiVei.setUsuarioUp(nameUser);
                    objEntSaiVei.setDataUp(dataModFinal);
                    objEntSaiVei.setHoraUp(horaMov);
                    objEntSaiVei.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                    control.alterarVeiculosTerceiros(objEntSaiVei);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravadocom sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        verificarHoraEntrada();
        if (jHorarioSaida.getText().equals(horaSaidaEncontrado) && jIdLanc.getText().equals(codigoRegistro) || jHorarioEntrada.getText().equals(horaEntradaEncontrada) && jIdLanc.getText().equals(codigoRegistro)) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível FINALIZAR esse registro, existe(m) horário(s) de entrada de veiculo(s) em aberto.\nCorrija os horários com divergências e então poderá FINALIZAR o documento. ");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAVEICULOSTERCEIRO WHERE IdLanc='" + jIdLanc.getText() + "'");
                conecta.rs.first();
                jStatusEnt.setText(conecta.rs.getString("StatusLanc"));
                if (jStatusEnt.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIDActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa");
            jIDPesqLanc.requestFocus();
        } else {
            preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOSTERCEIRO WHERE IdLanc='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtIDActionPerformed

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesqFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOSTERCEIRO "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtNovoVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoVeiculoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTVP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTVP1) && codIncluirP1 == 1) {
            objEntSaiVei.setStatusLanc(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoVeiculo();
                corCampo();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoVeiculoActionPerformed

    private void jBtAlterarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarVeiculoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTVP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTVP1) && codAlterarP1 == 1) {
            objEntSaiVei.setStatusLanc(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                AlterarVeiculo();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarVeiculoActionPerformed

    private void jBtExcluirVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirVeiculoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTVP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTVP1) && codExcluirP1 == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEntSaiVei.setStatusLanc(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse movimento não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o lancamento selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensVeiculosTer.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensVeiculo(objItensVeiculosTer);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirVeiculo();
                    preencherTabelaItens("SELECT * FROM ITENSVEICULOSTERCEIRO "
                            + "INNER JOIN VISITASDIVERSAS "
                            + "ON ITENSVEICULOSTERCEIRO.IdVisita=VISITASDIVERSAS.IdVisita "
                            + "INNER JOIN VEICULOS "
                            + "ON ITENSVEICULOSTERCEIRO.IdVeiculo=VEICULOS.IdVeiculo "
                            + "WHERE IdLanc='" + jIdLanc.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirVeiculoActionPerformed

    private void jBtSalvarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarVeiculoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVTVP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaESVTVP1) && codGravarP1 == 1) {
            horaEntradaEncontrada = "";
            horaSaidaEncontrado = "";
            if (jNomeVisitante.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Infome o nome do visitante.");
                jNomeVisitante.requestFocus();
                jNomeVisitante.setBackground(Color.red);
            } else {
                if (jModeloVeiculo.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe qual é o veiculo.");
                    jModeloVeiculo.requestFocus();
                    jModeloVeiculo.setBackground(Color.red);
                } else {
                    if (jDataEntrada.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe qual a data de entrada.");
                        jDataEntrada.requestFocus();
                        jDataEntrada.setBackground(Color.red);
                    } else {
                        if (jHorarioEntrada.getText().equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Informe qual o horário de entrada.");
                            jHorarioEntrada.requestFocus();
                            jHorarioEntrada.setBackground(Color.red);
                        } else {
                            if (jDataSaida.getDate() == null) {
                                JOptionPane.showMessageDialog(rootPane, "Informe qual a data de saída.");
                                jDataSaida.requestFocus();
                                jDataSaida.setBackground(Color.red);
                            } else {
                                if (jHorarioSaida.getText().equals("")) {
                                    JOptionPane.showMessageDialog(rootPane, "Informe qual é o horário de saida");
                                    jHorarioSaida.requestFocus();
                                    jHorarioSaida.setBackground(Color.red);
                                } else {
                                    objItensVeiculosTer.setDataEntrada(jDataEntrada.getDate());
                                    objItensVeiculosTer.setDataSaida(jDataSaida.getDate());
                                    objItensVeiculosTer.setHorarioEntrada(jHorarioEntrada.getText());
                                    objItensVeiculosTer.setHorarioSaida(jHorarioSaida.getText());
                                    objItensVeiculosTer.setOrigemEntrada(jOrigem.getText());
                                    objItensVeiculosTer.setDestinoEntrada(jDestino.getText());
                                    objItensVeiculosTer.setIdlanc(Integer.valueOf(jIdLanc.getText()));
                                    if (acao == 3) {
                                        // Para o log do registro
                                        objItensVeiculosTer.setUsuarioInsert(nameUser);
                                        objItensVeiculosTer.setDataInsert(dataModFinal);
                                        objItensVeiculosTer.setHoraInsert(horaMov);
                                        //
                                        objItensVeiculosTer.setIdVisita(Integer.valueOf(jIdVisita.getText()));
                                        objItensVeiculosTer.setNomeVisita(jNomeVisitante.getText());
                                        objItensVeiculosTer.setIdVeiculo(Integer.valueOf(jIdVeiculo.getText()));
                                        objItensVeiculosTer.setModeloVeiculo(jModeloVeiculo.getText());
                                        objItensVeiculosTer.setIdlanc(Integer.valueOf(jIdLanc.getText()));
                                        controle.incluirItensVeiculo(objItensVeiculosTer);
                                        objLog2();
                                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                        preencherTabelaItens("SELECT * FROM ITENSVEICULOSTERCEIRO "
                                                + "INNER JOIN VISITASDIVERSAS "
                                                + "ON ITENSVEICULOSTERCEIRO.IdVisita=VISITASDIVERSAS.IdVisita "
                                                + "INNER JOIN VEICULOS "
                                                + "ON ITENSVEICULOSTERCEIRO.IdVeiculo=VEICULOS.IdVeiculo "
                                                + "WHERE IdLanc='" + jIdLanc.getText() + "'");
                                        SalvarVeiculo();
                                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    }
                                    if (acao == 4) {
                                        // Para o log do registro
                                        objItensVeiculosTer.setUsuarioUp(nameUser);
                                        objItensVeiculosTer.setDataUp(jDataSistema.getText());
                                        objItensVeiculosTer.setHoraUp(jHoraSistema.getText());
                                        //
                                        objItensVeiculosTer.setIdVisita(Integer.valueOf(jIdVisita.getText()));
                                        objItensVeiculosTer.setNomeVisita(jNomeVisitante.getText());
                                        objItensVeiculosTer.setIdVeiculo(Integer.valueOf(jIdVeiculo.getText()));
                                        objItensVeiculosTer.setModeloVeiculo(jModeloVeiculo.getText());
                                        objItensVeiculosTer.setIdlanc(Integer.valueOf(jIdLanc.getText()));
                                        objItensVeiculosTer.setIdItem(Integer.valueOf(idItem));
                                        controle.alterarItensVeiculo(objItensVeiculosTer);
                                        objLog2();
                                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                        preencherTabelaItens("SELECT * FROM ITENSVEICULOSTERCEIRO "
                                                + "INNER JOIN VISITASDIVERSAS "
                                                + "ON ITENSVEICULOSTERCEIRO.IdVisita=VISITASDIVERSAS.IdVisita "
                                                + "INNER JOIN VEICULOS "
                                                + "ON ITENSVEICULOSTERCEIRO.IdVeiculo=VEICULOS.IdVeiculo "
                                                + "WHERE IdLanc='" + jIdLanc.getText() + "'");
                                        SalvarVeiculo();
                                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarVeiculoActionPerformed

    private void jBtCancelarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarVeiculoActionPerformed
        // TODO add your handling code here:
        CancelarVeiculo();
    }//GEN-LAST:event_jBtCancelarVeiculoActionPerformed

    private void jBtSairVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairVeiculoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairVeiculoActionPerformed

    private void jTabelaVeiculosTerceirosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVeiculosTerceirosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaVeiculosTerceiros.getValueAt(jTabelaVeiculosTerceiros.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            jDataLancamento.setDate(jDataLancamento.getDate());
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            //jBtBuscarAdvogado.setEnabled(true);
            jBtNovoVeiculo.setEnabled(true);
            jBtAlterarVeiculo.setEnabled(!true);
            jBtExcluirVeiculo.setEnabled(!true);
            jBtSalvarVeiculo.setEnabled(!true);
            jBtCancelarVeiculo.setEnabled(!true);
            jBtBuscar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            bloquearCamposPesquisa();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAVEICULOSTERCEIRO WHERE IdLanc='" + IdLanc + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusEnt.setText(conecta.rs.getString("StatusLanc"));
                jDataLancamento.setDate(conecta.rs.getDate("DataLanc"));
                jObservacao.setText(conecta.rs.getString("ObsLanc"));
                conecta.desconecta();
                preencherTabelaItens("SELECT * FROM ITENSVEICULOSTERCEIRO "
                        + "INNER JOIN VISITASDIVERSAS "
                        + "ON ITENSVEICULOSTERCEIRO.IdVisita=VISITASDIVERSAS.IdVisita "
                        + "INNER JOIN VEICULOS "
                        + "ON ITENSVEICULOSTERCEIRO.IdVeiculo=VEICULOS.IdVeiculo "
                        + "WHERE IdLanc='" + jIdLanc.getText() + "'");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
        }
    }//GEN-LAST:event_jTabelaVeiculosTerceirosMouseClicked

    private void jTabelaVeiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVeiculosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeVisitante = "" + jTabelaVeiculos.getValueAt(jTabelaVeiculos.getSelectedRow(), 2);
            jNomeVisitante.setText(nomeVisitante);
            String idVisita = "" + jTabelaVeiculos.getValueAt(jTabelaVeiculos.getSelectedRow(), 1);
            jIdVisita.setText(idVisita);
            idItem = "" + jTabelaVeiculos.getValueAt(jTabelaVeiculos.getSelectedRow(), 0);
            // Habilitar os botões
            jBtNovoVeiculo.setEnabled(!true);
            jBtAlterarVeiculo.setEnabled(true);
            jBtExcluirVeiculo.setEnabled(true);
            jBtSalvarVeiculo.setEnabled(!true);
            jBtCancelarVeiculo.setEnabled(true);
            jBtAuditoriaItens.setEnabled(true);
            //  jBtBuscarVeiculo.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSVEICULOSTERCEIRO "
                        + "INNER JOIN VISITASDIVERSAS "
                        + "ON ITENSVEICULOSTERCEIRO.IdVisita=VISITASDIVERSAS.IdVisita "
                        + "INNER JOIN VEICULOS "
                        + "ON ITENSVEICULOSTERCEIRO.IdVeiculo=VEICULOS.IdVeiculo "
                        + "WHERE NomeVisita='" + jNomeVisitante.getText() + "' "
                        + "AND IdLanc='" + jIdLanc.getText() + "'AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIdVisita.setText(conecta.rs.getString("IdVisita"));//Coluna 0
                jNomeVisitante.setText(conecta.rs.getString("NomeVisita"));// Coluna 1
                idItem = conecta.rs.getString("IdItem"); // Coluna 2  
                // Capturando foto frente
                caminho = conecta.rs.getString("FotoVisita");
                if (caminho != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                    jFotoVisitaDiv.setIcon(i);
                    jFotoVisitaDiv.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoVisitaDiv.getWidth(), jFotoVisitaDiv.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVD"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(jFotoVisitaDiv.getWidth(), jFotoVisitaDiv.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    jFotoVisitaDiv.setIcon(icon);
                }
                jRG.setText(conecta.rs.getString("RgVisita"));
                jCPF.setText(conecta.rs.getString("CpfVisita"));
                jIdVeiculo.setText(conecta.rs.getString("IdVeiculo"));
                jModeloVeiculo.setText(conecta.rs.getString("ModeloVeiculo"));
                jPlaca.setText(conecta.rs.getString("PlacaVeiculo"));
                jMarcaVeiculo.setText(conecta.rs.getString("MarcaVeiculo"));
                // Capturando foto frente
                caminhoVei = conecta.rs.getString("FotoFrente");
                if (caminhoVei != null) {
                    javax.swing.ImageIcon v = new javax.swing.ImageIcon(caminhoVei);
                    jFotoVeiculoDiv.setIcon(v);
                    jFotoVeiculoDiv.setIcon(new ImageIcon(v.getImage().getScaledInstance(jFotoVeiculoDiv.getWidth(), jFotoVeiculoDiv.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] img2Bytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVE"));
                if (img2Bytes != null) {
                    ImageIcon pic2 = null;
                    pic2 = new ImageIcon(img2Bytes);
                    Image scaled2 = pic2.getImage().getScaledInstance(jFotoVeiculoDiv.getWidth(), jFotoVeiculoDiv.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon2 = new ImageIcon(scaled2);
                    jFotoVeiculoDiv.setIcon(icon2);
                }
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jHorarioEntrada.setText(conecta.rs.getString("HorarioEntrada"));
                jHorarioSaida.setText(conecta.rs.getString("HorarioSaida"));
                jOrigem.setText(conecta.rs.getString("OrigemEntrada"));
                jDestino.setText(conecta.rs.getString("DestinoEntrada"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaVeiculosMouseClicked

    private void jBtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarActionPerformed
        // TODO add your handling code here:
        TelaPesqItensVeiculosTerceiros objPesqVeicTer = new TelaPesqItensVeiculosTerceiros();
        TelaModuloPortarias.jPainelPortarias.add(objPesqVeicTer);
        objPesqVeicTer.show();
    }//GEN-LAST:event_jBtBuscarActionPerformed

    private void jBtPesqVeiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqVeiculosActionPerformed
        // TODO add your handling code here:
        TelaPesqVeiculos objPesVeic = new TelaPesqVeiculos();
        TelaModuloPortarias.jPainelPortarias.add(objPesVeic);
        objPesVeic.show();
    }//GEN-LAST:event_jBtPesqVeiculosActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOSTERCEIRO");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEntSaiVeicTerceiros objAudEntSaiVeiTer = new TelaAuditoriaEntSaiVeicTerceiros();
        TelaModuloPortarias.jPainelPortarias.add(objAudEntSaiVeiTer);
        objAudEntSaiVeiTer.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtAuditoriaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaItensActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensEntSaiVeicTerceiros objItensEtSaiVeiTer = new TelaAuditoriaItensEntSaiVeicTerceiros();
        TelaModuloPortarias.jPainelPortarias.add(objItensEtSaiVeiTer);
        objItensEtSaiVeiTer.show();
    }//GEN-LAST:event_jBtAuditoriaItensActionPerformed

    private void jBtPesqVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqVisitanteActionPerformed
        // TODO add your handling code here:
        TelaPesqVisitasVeiculos objPesVisitasVeiculoTer = new TelaPesqVisitasVeiculos();
        TelaModuloPortarias.jPainelPortarias.add(objPesVisitasVeiculoTer);
        objPesVisitasVeiculoTer.show();
    }//GEN-LAST:event_jBtPesqVisitanteActionPerformed

    private void jBtPesqNomeVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeVisitaActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeVisita.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome ou parte do nome para pesquisa.");
        } else {
            preecherTodasEntradasVisitas("SELECT * FROM ENTRADAVEICULOSTERCEIRO "
                    + "INNER JOIN ITENSVEICULOSTERCEIRO "
                    + "ON ENTRADAVEICULOSTERCEIRO.IdLanc=ITENSVEICULOSTERCEIRO.Idlanc "
                    + "INNER JOIN VISITASDIVERSAS "
                    + "ON ITENSVEICULOSTERCEIRO.IdVisita=VISITASDIVERSAS.IdVisita "
                    + "WHERE VISITASDIVERSAS.NomeVisita LIKE'%" + jPesqNomeVisita.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeVisitaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DadosVeiculo;
    private javax.swing.JPanel DadosVisita;
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarVeiculo;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaItens;
    public static javax.swing.JButton jBtBuscar;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarVeiculo;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirVeiculo;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtID;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoVeiculo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqNomeVisita;
    private javax.swing.JButton jBtPesqVeiculos;
    private javax.swing.JButton jBtPesqVisitante;
    private javax.swing.JButton jBtSairVeiculo;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarVeiculo;
    private javax.swing.JButton jButton1;
    public static javax.swing.JFormattedTextField jCPF;
    private javax.swing.JCheckBox jCheckBox1;
    public static com.toedter.calendar.JDateChooser jDataEntrada;
    private com.toedter.calendar.JDateChooser jDataLancamento;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    public static javax.swing.JTextField jDestino;
    public static javax.swing.JLabel jFotoVeiculoDiv;
    public static javax.swing.JLabel jFotoVisitaDiv;
    public static javax.swing.JFormattedTextField jHorarioEntrada;
    public static javax.swing.JFormattedTextField jHorarioSaida;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdVeiculo;
    public static javax.swing.JTextField jIdVisita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JFormattedTextField jMarcaVeiculo;
    public static javax.swing.JTextField jModeloVeiculo;
    public static javax.swing.JTextField jNomeVisitante;
    private javax.swing.JTextArea jObservacao;
    public static javax.swing.JTextField jOrigem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqNomeVisita;
    public static javax.swing.JFormattedTextField jPlaca;
    public static javax.swing.JFormattedTextField jRG;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jStatusEnt;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaVeiculos;
    private javax.swing.JTable jTabelaVeiculosTerceiros;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void bloquearCamposPesquisa() {
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jIdVisita.setEnabled(!true);
        jNomeVisitante.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jIdVeiculo.setEnabled(!true);
        jModeloVeiculo.setEnabled(!true);
        jPlaca.setEnabled(!true);
        jMarcaVeiculo.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        //
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jIdVisita.setText("");
        jNomeVisitante.setText("");
        jRG.setText("");
        jCPF.setText("");
        jIdVeiculo.setText("");
        jFotoVisitaDiv.setIcon(null);
        jFotoVeiculoDiv.setIcon(null);
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        jRG.setText("");
        jCPF.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
    }

    public void corCampo() {
        jIdLanc.setBackground(Color.white);
        jStatusEnt.setBackground(Color.white);
        jDataLancamento.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdVisita.setBackground(Color.white);
        jNomeVisitante.setBackground(Color.white);
        jRG.setBackground(Color.white);
        jCPF.setBackground(Color.white);
        jIdVeiculo.setBackground(Color.white);
        jPlaca.setBackground(Color.white);
        jModeloVeiculo.setBackground(Color.white);
        jMarcaVeiculo.setBackground(Color.white);
        jDataEntrada.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jHorarioEntrada.setBackground(Color.white);
        jHorarioSaida.setBackground(Color.white);
        jOrigem.setBackground(Color.white);
        jDestino.setBackground(Color.white);
    }

    public void formatarCampo() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
        jOrigem.setDocument(new LimiteDigitos(50));
        jDestino.setDocument(new LimiteDigitos(50));
        try {
            MaskFormatter horarioEntrada = new MaskFormatter("##:##");
            jHorarioEntrada.setFormatterFactory(new DefaultFormatterFactory(horarioEntrada));
            MaskFormatter horarioSaida = new MaskFormatter("##:##");;
            jHorarioSaida.setFormatterFactory(new DefaultFormatterFactory(horarioSaida));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar campos\nERRO :" + ex);
        }
    }

    public void Novo() {
        // Limpar campos para inclusão
        jIdLanc.setText("");
        jStatusEnt.setText("ABERTO");
        jDataLancamento.setCalendar(Calendar.getInstance());
        jObservacao.setText("");
        // Limpa os dados do visitante, veiculo e entrda e saida
        jIdVisita.setText("");
        jNomeVisitante.setText("");
        jRG.setText("");
        jCPF.setText("");
        jIdVeiculo.setText("");
        jFotoVisitaDiv.setIcon(null);
        jFotoVeiculoDiv.setIcon(null);
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        jRG.setText("");
        jCPF.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        //Habilitar/Desabilitar Campos
        jDataLancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
        limparTabelaItens();
    }

    public void Alterar() {
        //Habilitar/Desabilitar Campos
        jDataLancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
    }

    public void Excluir() {
        // Limpar campos para inclusão
        jIdLanc.setText("");
        jStatusEnt.setText("");
        jDataLancamento.setDate(null);
        jObservacao.setText("");
        // Limpa os dados do visitante, veiculo e entrda e saida
        jIdVisita.setText("");
        jFotoVisitaDiv.setIcon(null);
        jFotoVeiculoDiv.setIcon(null);
        jNomeVisitante.setText("");
        jRG.setText("");
        jCPF.setText("");
        jIdVeiculo.setText("");
        jModeloVeiculo.setText("");
        jRG.setText("");
        jCPF.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("");
        jHorarioSaida.setText("");
        jOrigem.setText("");
        jDestino.setText("");
        //Habilitar/Desabilitar Campos
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
    }

    public void Salvar() {
        //Habilitar/Desabilitar Campos
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jBtNovoVeiculo.setEnabled(true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            jStatusEnt.setText("");
            jDataLancamento.setDate(null);
            jObservacao.setText("");
            //Habilitar/Desabilitar Campos
            jDataLancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //Habilitar/Desabilitar botões
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jDataEntrada.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jHorarioEntrada.setEnabled(!true);
            jHorarioSaida.setEnabled(!true);
            jOrigem.setEnabled(!true);
            jDestino.setEnabled(!true);
            //
            jBtPesqVisitante.setEnabled(!true);
            jBtPesqVeiculos.setEnabled(!true);
            jBtNovoVeiculo.setEnabled(!true);
            jBtAlterarVeiculo.setEnabled(!true);
            jBtExcluirVeiculo.setEnabled(!true);
            jBtSalvarVeiculo.setEnabled(!true);
            jBtCancelarVeiculo.setEnabled(!true);
            jBtBuscar.setEnabled(!true);
            jBtAuditoriaItens.setEnabled(!true);
        } else {
            //Habilitar/Desabilitar Campos
            jDataLancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //Habilitar/Desabilitar botões
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jDataEntrada.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jHorarioEntrada.setEnabled(!true);
            jHorarioSaida.setEnabled(!true);
            jOrigem.setEnabled(!true);
            jDestino.setEnabled(!true);
            //
            jBtPesqVisitante.setEnabled(!true);
            jBtPesqVeiculos.setEnabled(!true);
            jBtNovoVeiculo.setEnabled(!true);
            jBtAlterarVeiculo.setEnabled(!true);
            jBtExcluirVeiculo.setEnabled(!true);
            jBtSalvarVeiculo.setEnabled(!true);
            jBtCancelarVeiculo.setEnabled(!true);
        }
    }

    public void verificarHoraEntrada() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSVEICULOSTERCEIRO WHERE HorarioSaida='" + verHorarioSaida + "' AND Idlanc='" + jIdLanc.getText() + "' "
                    + "OR HorarioEntrada='" + verHorarioEntrada + "'AND Idlanc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            horaEntradaEncontrada = conecta.rs.getString("HorarioEntrada");
            horaSaidaEncontrado = conecta.rs.getString("HorarioSaida");
            codigoRegistro = conecta.rs.getString("Idlanc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void Finalizar() {
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objEntSaiVei.setStatusLanc(statusLanc);
            objEntSaiVei.setIdLanc(Integer.parseInt(jIdLanc.getText()));
            control.finalizarVeiculosTerceiros(objEntSaiVei);
            jStatusEnt.setText("FINALIZADO");
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
        }
        //Habilitar/Desabilitar Campos
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
    }

    public void NovoVeiculo() {
        jIdVisita.setText("");
        jNomeVisitante.setText("");
        jFotoVisitaDiv.setIcon(null);
        jFotoVeiculoDiv.setIcon(null);
        jRG.setText("");
        jCPF.setText("");
        jIdVeiculo.setText("");
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        //        
        jDataEntrada.setCalendar(Calendar.getInstance());
        jDataSaida.setCalendar(Calendar.getInstance());
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        // Habilitar/Desabilitar Campos
        jDataEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jOrigem.setEnabled(true);
        jDestino.setEnabled(true);
        // Habilitar/Desabilitar botões da capa de manutenção
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões de pesquisa, Visita e Veiculos
        jBtPesqVisitante.setEnabled(true);
        jBtPesqVeiculos.setEnabled(true);
        //
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(true);
        jBtCancelarVeiculo.setEnabled(true);
    }

    public void AlterarVeiculo() {
        // Habilitar/Desabilitar Campos
        jDataEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jOrigem.setEnabled(true);
        jDestino.setEnabled(true);
        // Habilitar/Desabilitar botões da capa de manutenção
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões de pesquisa, Visita e Veiculos
        jBtPesqVisitante.setEnabled(true);
        jBtPesqVeiculos.setEnabled(true);
        //
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(true);
        jBtCancelarVeiculo.setEnabled(true);
    }

    public void ExcluirVeiculo() {
        jIdVisita.setText("");
        jNomeVisitante.setText("");
        jFotoVisitaDiv.setIcon(null);
        jFotoVeiculoDiv.setIcon(null);
        jRG.setText("");
        jCPF.setText("");
        jIdVeiculo.setText("");
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        //        
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("");
        jHorarioSaida.setText("");
        jOrigem.setText("");
        jDestino.setText("");
        // Habilitar/Desabilitar Campos
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        // Habilitar/Desabilitar botões da capa de manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões de pesquisa, Visita e Veiculos
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        //
        jBtNovoVeiculo.setEnabled(!true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(true);
    }

    public void SalvarVeiculo() {
        jIdVisita.setText("");
        jNomeVisitante.setText("");
        jFotoVisitaDiv.setIcon(null);
        jFotoVeiculoDiv.setIcon(null);
        jRG.setText("");
        jCPF.setText("");
        jIdVeiculo.setText("");
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        //        
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        // Habilitar/Desabilitar Campos
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        // Habilitar/Desabilitar botões da capa de manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões de pesquisa, Visita e Veiculos
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        //
        jBtNovoVeiculo.setEnabled(true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
        jBtBuscar.setEnabled(true);
    }

    public void CancelarVeiculo() {
        // Habilitar/Desabilitar Campos
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        // Habilitar/Desabilitar botões da capa de manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões de pesquisa, Visita e Veiculos
        jBtPesqVisitante.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        //
        jBtNovoVeiculo.setEnabled(true);
        jBtAlterarVeiculo.setEnabled(!true);
        jBtExcluirVeiculo.setEnabled(!true);
        jBtSalvarVeiculo.setEnabled(!true);
        jBtCancelarVeiculo.setEnabled(!true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADAVEICULOSTERCEIRO");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdLanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível identificar o ID do lançamento\nERRO: " + ex);
        }
    }

    public void preecherTodasEntradasVisitas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome da Visita"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeVisita")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculosTerceiros.setModel(modelo);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setPreferredWidth(500);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculosTerceiros.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculosTerceiros.setAutoResizeMode(jTabelaVeiculosTerceiros.AUTO_RESIZE_OFF);
        jTabelaVeiculosTerceiros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void preencherTodasEntSaiVeiculos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("ObsLanc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculosTerceiros.setModel(modelo);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setPreferredWidth(500);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculosTerceiros.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculosTerceiros.setAutoResizeMode(jTabelaVeiculosTerceiros.AUTO_RESIZE_OFF);
        jTabelaVeiculosTerceiros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculosTerceiros.setModel(modelo);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setPreferredWidth(490);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculosTerceiros.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculosTerceiros.setAutoResizeMode(jTabelaVeiculosTerceiros.AUTO_RESIZE_OFF);
        jTabelaVeiculosTerceiros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Visitante", "Placa", "Data Entrada", "Horário", "Data Saida", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataEntrada");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                // Formatar a data Entrada
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dias + "/" + mess + "/" + anos;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdVisita"), conecta.rs.getString("NomeVisita"), conecta.rs.getString("PlacaVeiculo"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculos.setModel(modelo);
        jTabelaVeiculos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaVeiculos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(6).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(7).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(7).setResizable(false);
        jTabelaVeiculos.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculos.setAutoResizeMode(jTabelaVeiculos.AUTO_RESIZE_OFF);
        jTabelaVeiculos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Visitante", "Placa", "Data Entrada", "Horário", "Data Saida", "Horário"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculos.setModel(modelo);
        jTabelaVeiculos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaVeiculos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(6).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(7).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(7).setResizable(false);
        jTabelaVeiculos.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculos.setAutoResizeMode(jTabelaVeiculos.AUTO_RESIZE_OFF);
        jTabelaVeiculos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVeiculos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(5).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(6).setCellRenderer(centralizado);
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSVEICULOSTERCEIRO WHERE IdLanc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codLanc = conecta.rs.getString("IdLanc");
            if (jIdLanc.getText().equals(codLanc)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objEntSaiVei.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                control.excluirVeiculosTerceiros(objEntSaiVei);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1 = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1 + "'");
            conecta.rs.first();
            codigoUserGroupP1 = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1 = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1 = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1 + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1 = conecta.rs.getInt("IdUsuario");
            codAbrirP1 = conecta.rs.getInt("Abrir");
            codIncluirP1 = conecta.rs.getInt("Incluir");
            codAlterarP1 = conecta.rs.getInt("Alterar");
            codExcluirP1 = conecta.rs.getInt("Excluir");
            codGravarP1 = conecta.rs.getInt("Gravar");
            codConsultarP1 = conecta.rs.getInt("Consultar");
            nomeTelaP1 = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
