/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtAlterar;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtAuditoria;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtAuditoriaInternos;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtCancelar;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtExcluir;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtNovo;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtPesqInternoCrc;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jBtSalvar;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jComboBoxBeneficio;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jComboBoxStatusRegistro;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jDataAgendamento;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jDataRegistro;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jIdRegistro;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jTabelaAgendaBeneficioInternos;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jTabelaAgendamentoBeneficios;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jObservacao;
import static gestor.Visao.TelaAgendamentoBeneficiosInterno.jtotalRegistros;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaAlertaAgendaBeneficio extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    int flag;
    int acao;
    String dataAgenda;
    int count = 0;
    
    

    /**
     * Creates new form TelaAlertaAgendaBeneficio
     */
    public TelaAlertaAgendaBeneficio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaAgendaInternos = new javax.swing.JTable();

        setClosable(true);
        setTitle("...::: Listagem de Agenda Benefícios de Internos :::...");

        jTabelaAgendaInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAgendaInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Código", "Nome do Interno ", "Data Agenda"
            }
        ));
        jTabelaAgendaInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAgendaInternosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaAgendaInternos);
        if (jTabelaAgendaInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaAgendaInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAgendaInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAgendaInternos.getColumnModel().getColumn(1).setMinWidth(250);
            jTabelaAgendaInternos.getColumnModel().getColumn(1).setMaxWidth(250);
            jTabelaAgendaInternos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaAgendaInternos.getColumnModel().getColumn(2).setMaxWidth(80);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabelaAgendaInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAgendaInternosMouseClicked
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (flag == 1) {
            String idInterno = "" + jTabelaAgendaInternos.getValueAt(jTabelaAgendaInternos.getSelectedRow(), 0);
            String nomeInterno = "" + jTabelaAgendaInternos.getValueAt(jTabelaAgendaInternos.getSelectedRow(), 1);
            TelaAgendamentoBeneficiosInterno objAgendaInternos = new TelaAgendamentoBeneficiosInterno();
            TelaModuloJuridico.jPainelJuridico.add(objAgendaInternos);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtPesqInternoCrc.setEnabled(true);
            jBtAuditoriaInternos.setEnabled(!true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM AGENDA_BENEFICIO_INTERNOS "
                        + "INNER JOIN ITENS_AGENDA_BENEFICIO_INTERNOS "
                        + "ON AGENDA_BENEFICIO_INTERNOS.IdReg=ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE AGENDA_BENEFICIO_INTERNOS.DataAg='" + jDataSistema.getText() + "' "
                        + "AND PRONTUARIOSCRC.IdInternoCrc='" + idInterno + "'");
                conecta.rs.first();
                jIdRegistro.setText(String.valueOf(conecta.rs.getInt("IdReg")));
                jComboBoxStatusRegistro.setSelectedItem(conecta.rs.getString("StatusReg"));
                jDataRegistro.setDate(conecta.rs.getDate("DataReg"));
                jComboBoxBeneficio.setSelectedItem(conecta.rs.getString("TipoBeneficio"));
                jDataAgendamento.setDate(conecta.rs.getDate("DataAg"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
            } catch (Exception e) {
            }
            preencherTabelaAgendaBeneficio("SELECT * FROM AGENDA_BENEFICIO_INTERNOS WHERE IdReg='" + jIdRegistro.getText() + "'");
            //
            preencherTabelaAgenda("SELECT * FROM ITENS_AGENDA_BENEFICIO_INTERNOS "
                    + "INNER JOIN AGENDA_BENEFICIO_INTERNOS "
                    + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg=AGENDA_BENEFICIO_INTERNOS.IdReg "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg='" + jIdRegistro.getText() + "'");
            objAgendaInternos.show();
        }
        conecta.desconecta();
    }//GEN-LAST:event_jTabelaAgendaInternosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTabelaAgendaInternos;
    // End of variables declaration//GEN-END:variables
 public void preencherTabelaAgendaBeneficio(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Agenda", "Benefício", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataAgenda = conecta.rs.getString("DataReg");
                String diae = dataAgenda.substring(8, 10);
                String mese = dataAgenda.substring(5, 7);
                String anoe = dataAgenda.substring(0, 4);
                dataAgenda = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count));
                dados.add(new Object[]{conecta.rs.getInt("IdReg"), dataAgenda, conecta.rs.getString("TipoBeneficio"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendamentoBeneficios.setModel(modelo);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendamentoBeneficios.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendamentoBeneficios.setAutoResizeMode(jTabelaAgendamentoBeneficios.AUTO_RESIZE_OFF);
        jTabelaAgendamentoBeneficios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgendaBeneficio();
        conecta.desconecta();
    }

    public void alinharTabelaAgendaBeneficio() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void preencherTabelaAgenda(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Benefício", "Data Agenda"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataAgenda = conecta.rs.getString("DataAg");
                String diae = dataAgenda.substring(8, 10);
                String mese = dataAgenda.substring(5, 7);
                String anoe = dataAgenda.substring(0, 4);
                dataAgenda = diae + "/" + mese + "/" + anoe;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("TipoBeneficio"), dataAgenda});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendaBeneficioInternos.setModel(modelo);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setPreferredWidth(270);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgendaBeneficioInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendaBeneficioInternos.setAutoResizeMode(jTabelaAgendaBeneficioInternos.AUTO_RESIZE_OFF);
        jTabelaAgendaBeneficioInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgenda();
        conecta.desconecta();
    }

    public void alinharTabelaAgenda() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }
}
