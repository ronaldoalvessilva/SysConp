/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAvaliacaoMedica;
import gestor.Controle.ControleItensTratamentoInterno;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.AvaliacaoMedica;
import gestor.Modelo.ItensTratamentoInterno;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloEnfermaria.codAbrir;
import static gestor.Visao.TelaModuloEnfermaria.codAlterar;
import static gestor.Visao.TelaModuloEnfermaria.codConcultar;
import static gestor.Visao.TelaModuloEnfermaria.codExcluir;
import static gestor.Visao.TelaModuloEnfermaria.codGravar;
import static gestor.Visao.TelaModuloEnfermaria.codIncluir;
import static gestor.Visao.TelaModuloEnfermaria.codUserAcesso;
import static gestor.Visao.TelaModuloEnfermaria.codigoGrupo;
import static gestor.Visao.TelaModuloEnfermaria.codigoUser;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserGroup;
import static gestor.Visao.TelaModuloEnfermaria.nomeGrupo;
import static gestor.Visao.TelaModuloEnfermaria.nomeTela;
import static gestor.Visao.TelaModuloEnfermaria.telaAvaliaSaudeMedPsiENF;
import static gestor.Visao.TelaModuloEnfermaria.telaAvaliaSaudeMedPsiTratENF;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ronaldo
 */
public class TelaAvaliacaoMedicaPsiquiatrica extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AvaliacaoMedica objAvalia = new AvaliacaoMedica();
    ControleAvaliacaoMedica control = new ControleAvaliacaoMedica();
    ItensTratamentoInterno objItensTrat = new ItensTratamentoInterno();
    ControleItensTratamentoInterno controle = new ControleItensTratamentoInterno();
    //   
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Enfermaria:Avaliação de Saúde Médica/Psiquiatrica de Internos:Manutenção";
    String nomeModuloTela1 = "Enfermaria:Avaliação de Saúde Médica/Psiquiatrica de Internos:Tratamento";
    //
    int flag;
    int acao;
    String dataInicial, dataFinal, dataEmissao, dataValidade;
    String dataEntrada;
    String statusMov;
    String horaMov;
    String dataModFinal;
    String statusProd = "Ativo";
    int count, count1 = 0;
    public static String caminho;
    String codTratamento;

    /**
     * Creates new form TelaAvaliacaoMedicaPsiquiatrica
     */
    public TelaAvaliacaoMedicaPsiquiatrica() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jCodigoAvaliacao = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jBtPesqCodigoAvaliacao = new javax.swing.JButton();
        jLabel72 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel73 = new javax.swing.JLabel();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDatas = new javax.swing.JButton();
        jCheckBoxTodosReq = new javax.swing.JCheckBox();
        jBtPesqInterno1 = new javax.swing.JButton();
        jNomeInterno = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaAvaliacaoMedicaPsiquiatrica = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdAvaliacao = new javax.swing.JTextField();
        jStatusAvaliacao = new javax.swing.JTextField();
        jDataAvaliacao = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jBtPesqInterno = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jIdInternoCrcAvaliacao = new javax.swing.JTextField();
        jMatriculaPenal = new javax.swing.JTextField();
        jNomeCompletoInternoCrc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPavilhaoInterno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCelaInterno = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jFotoInternoAvaliacao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextoAvaliacao = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jBtImprimir = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jIdRegistro = new javax.swing.JTextField();
        jDescricaoPatologia = new javax.swing.JTextField();
        jComboBoxTratamento = new javax.swing.JComboBox();
        jComboBoxNotificacao = new javax.swing.JComboBox();
        jBtPesqPatologia = new javax.swing.JButton();
        jComboBoxTipoTratamento = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jOutros = new javax.swing.JTextField();
        jBtNovoTratamento = new javax.swing.JButton();
        jBtAlterarTratamento = new javax.swing.JButton();
        jBtExcluirTratamento = new javax.swing.JButton();
        jBtSalvarTratamento = new javax.swing.JButton();
        jBtCancelarTratamento = new javax.swing.JButton();
        jBtAuditoriaTratamento = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaTratamento = new javax.swing.JTable();
        jPanel33 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jtotalRegistrosItens = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Avaliaçao de Saúde Atual do Interno - (Médica/Psiquiatrica)");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jCodigoAvaliacao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoAvaliacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel70.setText("Código:");

        jBtPesqCodigoAvaliacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigoAvaliacao.setContentAreaFilled(false);
        jBtPesqCodigoAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoAvaliacaoActionPerformed(evt);
            }
        });

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel72.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel73.setText("Data Final:");

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDatas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDatas.setContentAreaFilled(false);
        jBtPesqDatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDatasActionPerformed(evt);
            }
        });

        jCheckBoxTodosReq.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodosReq.setText("Todos");
        jCheckBoxTodosReq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosReqItemStateChanged(evt);
            }
        });

        jBtPesqInterno1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno1.setContentAreaFilled(false);
        jBtPesqInterno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInterno1ActionPerformed(evt);
            }
        });

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel74.setText("Interno:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel74)
                    .addComponent(jLabel72)
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jNomeInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqInterno1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jLabel73)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jCodigoAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqCodigoAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqDatas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodosReq)))
                .addGap(26, 26, 26))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel70)
                    .addComponent(jCodigoAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigoAvaliacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel72)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDatas)
                    .addComponent(jCheckBoxTodosReq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel74)
                    .addComponent(jBtPesqInterno1))
                .addContainerGap())
        );

        jTabelaAvaliacaoMedicaPsiquiatrica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAvaliacaoMedicaPsiquiatrica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Dt.Avaliação", "Status Avaliação", "Nome Completo do Interno"
            }
        ));
        jTabelaAvaliacaoMedicaPsiquiatrica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAvaliacaoMedicaPsiquiatricaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaAvaliacaoMedicaPsiquiatrica);
        if (jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumnCount() > 0) {
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(3).setMinWidth(380);
            jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(3).setMaxWidth(380);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data:");

        jIdAvaliacao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdAvaliacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdAvaliacao.setEnabled(false);

        jStatusAvaliacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusAvaliacao.setForeground(new java.awt.Color(153, 0, 102));
        jStatusAvaliacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusAvaliacao.setDisabledTextColor(new java.awt.Color(153, 0, 102));
        jStatusAvaliacao.setEnabled(false);

        jDataAvaliacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAvaliacao.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jIdAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jStatusAvaliacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jIdAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jStatusAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDataAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtSair)
                .addComponent(jBtCancelar)
                .addComponent(jBtSalvar)
                .addComponent(jBtExcluir)
                .addComponent(jBtAlterar)
                .addComponent(jBtNovo)
                .addComponent(jBtAuditoria))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setToolTipText("Pesquisar Interno");
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Matricula Penal");

        jIdInternoCrcAvaliacao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrcAvaliacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrcAvaliacao.setEnabled(false);

        jMatriculaPenal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jMatriculaPenal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMatriculaPenal.setEnabled(false);

        jNomeCompletoInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeCompletoInternoCrc.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome Completo do Interno");

        jPavilhaoInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPavilhaoInterno.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Pavilhão");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Cela");

        jCelaInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCelaInterno.setEnabled(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoAvaliacao, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoAvaliacao, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPavilhaoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jCelaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jIdInternoCrcAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jMatriculaPenal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(jNomeCompletoInternoCrc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jBtPesqInterno)
                            .addComponent(jMatriculaPenal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdInternoCrcAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeCompletoInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPavilhaoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCelaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextoAvaliacao.setColumns(20);
        jTextoAvaliacao.setRows(5);
        jTextoAvaliacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoAvaliacao.setEnabled(false);
        jScrollPane1.setViewportView(jTextoAvaliacao);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Apresentação do Médico Examinador");

        jBtImprimir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimir.setText("Impressão");
        jBtImprimir.setToolTipText("Impressão");
        jBtImprimir.setEnabled(false);
        jBtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirActionPerformed(evt);
            }
        });

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/low-security-breach-icone-4155-16.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jBtFinalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtImprimir))
                    .addComponent(jLabel9))
                .addGap(148, 148, 148))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jSeparator2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Registro");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Patologia Atual");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Tratamento");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Tipo de Patologia");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Notificação");

        jIdRegistro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdRegistro.setEnabled(false);

        jDescricaoPatologia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoPatologia.setEnabled(false);

        jComboBoxTratamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTratamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxTratamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTratamento.setEnabled(false);

        jComboBoxNotificacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxNotificacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxNotificacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxNotificacao.setEnabled(false);

        jBtPesqPatologia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqPatologia.setContentAreaFilled(false);
        jBtPesqPatologia.setEnabled(false);
        jBtPesqPatologia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqPatologiaActionPerformed(evt);
            }
        });

        jComboBoxTipoTratamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoTratamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione" }));
        jComboBoxTipoTratamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoTratamento.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Outros");

        jOutros.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jOutros.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxTratamento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jIdRegistro)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jDescricaoPatologia)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtPesqPatologia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jComboBoxTipoTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel9Layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel14))
                                            .addGroup(jPanel9Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jComboBoxNotificacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(jOutros, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoPatologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqPatologia))
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jComboBoxTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxTipoTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxNotificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOutros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jBtNovoTratamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoTratamento.setEnabled(false);
        jBtNovoTratamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoTratamentoActionPerformed(evt);
            }
        });

        jBtAlterarTratamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/refresh-reload-icone-6258-16.png"))); // NOI18N
        jBtAlterarTratamento.setEnabled(false);
        jBtAlterarTratamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarTratamentoActionPerformed(evt);
            }
        });

        jBtExcluirTratamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirTratamento.setEnabled(false);
        jBtExcluirTratamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirTratamentoActionPerformed(evt);
            }
        });

        jBtSalvarTratamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarTratamento.setEnabled(false);
        jBtSalvarTratamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarTratamentoActionPerformed(evt);
            }
        });

        jBtCancelarTratamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarTratamento.setEnabled(false);
        jBtCancelarTratamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarTratamentoActionPerformed(evt);
            }
        });

        jBtAuditoriaTratamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaTratamento.setToolTipText("Auditoria");
        jBtAuditoriaTratamento.setContentAreaFilled(false);
        jBtAuditoriaTratamento.setEnabled(false);
        jBtAuditoriaTratamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaTratamentoActionPerformed(evt);
            }
        });

        jTabelaTratamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaTratamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Registro", "Patologia Atual", "Tratamento", "Tipo", "Notificação"
            }
        ));
        jTabelaTratamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaTratamentoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaTratamento);
        if (jTabelaTratamento.getColumnModel().getColumnCount() > 0) {
            jTabelaTratamento.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaTratamento.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaTratamento.getColumnModel().getColumn(1).setMinWidth(200);
            jTabelaTratamento.getColumnModel().getColumn(1).setMaxWidth(200);
            jTabelaTratamento.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaTratamento.getColumnModel().getColumn(2).setMaxWidth(70);
            jTabelaTratamento.getColumnModel().getColumn(3).setMinWidth(200);
            jTabelaTratamento.getColumnModel().getColumn(3).setMaxWidth(200);
            jTabelaTratamento.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaTratamento.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel68.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel68))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel68)
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistrosItens.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistrosItens, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistrosItens, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jBtNovoTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterarTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvarTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelarTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAuditoriaTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarTratamento, jBtCancelarTratamento, jBtExcluirTratamento, jBtNovoTratamento, jBtSalvarTratamento});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAlterarTratamento)
                    .addComponent(jBtExcluirTratamento)
                    .addComponent(jBtSalvarTratamento)
                    .addComponent(jBtCancelarTratamento, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtAuditoriaTratamento, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtNovoTratamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarTratamento, jBtCancelarTratamento, jBtExcluirTratamento, jBtNovoTratamento, jBtSalvarTratamento});

        jTabbedPane1.addTab("Tratamentos", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 30, 528, 501);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoAvaliacaoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jIdAvaliacao.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            preencherTabelaAvaliacaoMedicaPsiquiatrica("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON AVALIACAO_MEDICA_PSIQUIATRICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia='" + jCodigoAvaliacao.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoAvaliacaoActionPerformed

    private void jBtPesqDatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDatasActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                    preencherTabelaAvaliacaoMedicaPsiquiatrica("SSELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON AVALIACAO_MEDICA_PSIQUIATRICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE DataAval BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDatasActionPerformed

    private void jCheckBoxTodosReqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosReqItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaAvaliacaoMedicaPsiquiatrica("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON AVALIACAO_MEDICA_PSIQUIATRICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBoxTodosReqItemStateChanged

    private void jBtPesqInterno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInterno1ActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome para pesquisa.");
        } else {
            preencherTabelaAvaliacaoMedicaPsiquiatrica("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON AVALIACAO_MEDICA_PSIQUIATRICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE PRONTUARIOSCRC.NomeInternoCrc LIKE'%" + jNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqInterno1ActionPerformed

    private void jTabelaAvaliacaoMedicaPsiquiatricaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAvaliacaoMedicaPsiquiatricaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaAvaliacaoMedicaPsiquiatrica.getValueAt(jTabelaAvaliacaoMedicaPsiquiatrica.getSelectedRow(), 0);
            jCodigoAvaliacao.setText(IdLanc);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtImprimir.setEnabled(true);
            //
            jBtNovoTratamento.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON AVALIACAO_MEDICA_PSIQUIATRICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia='" + IdLanc + "'");
                conecta.rs.first();
                jIdAvaliacao.setText(String.valueOf(conecta.rs.getInt("IdAvalia")));
                jStatusAvaliacao.setText(conecta.rs.getString("StatusAval"));
                jDataAvaliacao.setDate(conecta.rs.getDate("DataAval"));
                jIdInternoCrcAvaliacao.setText(conecta.rs.getString("IdInternoCrc"));
                jMatriculaPenal.setText(conecta.rs.getString("MatriculaCrc"));
                jNomeCompletoInternoCrc.setText(conecta.rs.getString("NomeInternoCrc"));
                jPavilhaoInterno.setText(conecta.rs.getString("DescricaoPav"));
                jCelaInterno.setText(conecta.rs.getString("EndCelaPav"));
                // FOTO DO INTERNO
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoInternoAvaliacao.setIcon(i);
                jFotoInternoAvaliacao.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInternoAvaliacao.getWidth(), jFotoInternoAvaliacao.getHeight(), Image.SCALE_DEFAULT)));
                jTextoAvaliacao.setText(conecta.rs.getString("TextoAvaliacao"));
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível exibir registro.\nERRO: " + e);
            }
            count1 = 0;
            preencherTabelaItensTratamento("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS "
                    + "INNER JOIN AVALIACAO_MEDICA_PSIQUIATRICA "
                    + "ON ITENS_TRATAMENTOS_INTERNOS.IdAvalia=AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia "
                    + "INNER JOIN DOENCAS "
                    + "ON ITENS_TRATAMENTOS_INTERNOS.IdDoenca=DOENCAS.IdDoenca "
                    + "INNER JOIN TIPOS_TRATAMENTOS "
                    + "ON ITENS_TRATAMENTOS_INTERNOS.IdTipo=TIPOS_TRATAMENTOS.IdTipo "
                    + "WHERE ITENS_TRATAMENTOS_INTERNOS.IdAvalia='" + jIdAvaliacao.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaAvaliacaoMedicaPsiquiatricaMouseClicked

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaPesqInternoAvaliacaoMedica objPesqIntAv = new TelaPesqInternoAvaliacaoMedica();
        TelaModuloEnfermaria.jPainelMedico.add(objPesqIntAv);
        objPesqIntAv.show();
    }//GEN-LAST:event_jBtPesqInternoActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiENF) && codIncluir == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 1;
            Novo();
            corCampos();
            limparTabelaTratamento();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiENF) && codAlterar == 1) {
            objAvalia.setStatusAval(jStatusAvaliacao.getText());
            if (jStatusAvaliacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiENF) && codExcluir == 1) {
            verificarItens();
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAvalia.setStatusAval(jStatusAvaliacao.getText());
            if (jStatusAvaliacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                if (jIdAvaliacao.getText().equals(codTratamento)) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, existe tratamentos para esse registro.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objAvalia.setIdAvalia(Integer.valueOf(jIdAvaliacao.getText()));
                        control.excluiAvaliacaoMedica(objAvalia);
                        Excluir();
                        JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiENF) && codGravar == 1) {
            if (jNomeCompletoInternoCrc.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno.");
            } else {
                objAvalia.setStatusAval(jStatusAvaliacao.getText());
                objAvalia.setDataAval(jDataAvaliacao.getDate());
                objAvalia.setIdInternoCrc(Integer.valueOf(jIdInternoCrcAvaliacao.getText()));
                objAvalia.setNomeInterno(jNomeCompletoInternoCrc.getText());
                objAvalia.setTextoAvaliacao(jTextoAvaliacao.getText());
                if (acao == 1) {
                    objAvalia.setUsuarioInsert(nameUser);
                    objAvalia.setDataInsert(dataModFinal);
                    objAvalia.setHorarioInsert(horaMov);
                    control.incluirAvaliacaoMedica(objAvalia);
                    buscarCodigo();
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    objAvalia.setUsuarioUp(nameUser);
                    objAvalia.setDataUp(dataModFinal);
                    objAvalia.setHorarioUp(horaMov);
                    objAvalia.setIdAvalia(Integer.valueOf(jIdAvaliacao.getText()));
                    control.alterarAvaliacaoMedica(objAvalia);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA WHERE IdAvalia='" + jIdAvaliacao.getText() + "'");
            conecta.rs.first();
            jStatusAvaliacao.setText(conecta.rs.getString("StatusAval"));
            if (jStatusAvaliacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirActionPerformed
        // TODO add your handling code here:
        if (jIdAvaliacao.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código da avaliação a ser impressa.");
        } else {
            try {
                conecta.abrirConexao();
                String path = "reports/RelatorioAvaliacaoMedicaPsiquiatrica.jasper";
                conecta.executaSQL("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON AVALIACAO_MEDICA_PSIQUIATRICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE IdAvalia='" + jIdAvaliacao.getText() + "'");
                HashMap parametros = new HashMap();
                parametros.put("codAvaliacao", jIdAvaliacao.getText());
                parametros.put("nomeUsuario", nameUser);
                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
                jv.setTitle("Avaliação Médica/Psicologica");
                jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
                jv.toFront(); // Traz o relatorio para frente da aplicação            
                conecta.desconecta();
            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
            }
        }
    }//GEN-LAST:event_jBtImprimirActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaAvaliacaoMedicaPsiquiatrica objAudiAva = new TelaAuditoriaAvaliacaoMedicaPsiquiatrica();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiAva);
        objAudiAva.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtPesqPatologiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqPatologiaActionPerformed
        // TODO add your handling code here:
        TelaPesquisarDoencaTratamento objPesqDoenca = new TelaPesquisarDoencaTratamento();
        TelaModuloEnfermaria.jPainelMedico.add(objPesqDoenca);
        objPesqDoenca.show();
    }//GEN-LAST:event_jBtPesqPatologiaActionPerformed

    private void jBtNovoTratamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoTratamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiTratENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiTratENF) && codIncluir == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAvalia.setStatusAval(jStatusAvaliacao.getText());
            if (jStatusAvaliacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoTratamento();
                preencherComboNovo();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoTratamentoActionPerformed

    private void jBtAlterarTratamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarTratamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiTratENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiTratENF) && codAlterar == 1) {
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAvalia.setStatusAval(jStatusAvaliacao.getText());
            if (jStatusAvaliacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                AlterarTratamento();
                preencherComboNovo();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarTratamentoActionPerformed

    private void jBtExcluirTratamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirTratamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiTratENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiTratENF) && codExcluir == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAvalia.setStatusAval(jStatusAvaliacao.getText());
            if (jStatusAvaliacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensTrat.setIdItemTrat(Integer.valueOf(jIdRegistro.getText()));
                    controle.excluirTratamento(objItensTrat);
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    ExcluirTratamento();
                    preencherTabelaItensTratamento("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS "
                            + "INNER JOIN AVALIACAO_MEDICA_PSIQUIATRICA "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdAvalia=AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia "
                            + "INNER JOIN DOENCAS "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdDoenca=DOENCAS.IdDoenca "
                            + "INNER JOIN TIPOS_TRATAMENTOS "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdTipo=TIPOS_TRATAMENTOS.IdTipo "
                            + "WHERE ITENS_TRATAMENTOS_INTERNOS.IdAvalia='" + jIdAvaliacao.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirTratamentoActionPerformed

    private void jBtSalvarTratamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarTratamentoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAvaliaSaudeMedPsiTratENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES") || codigoUser == codUserAcesso && nomeTela.equals(telaAvaliaSaudeMedPsiTratENF) && codGravar == 1) {
            if (jDescricaoPatologia.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a patologia do tratamento.");
            } else if (jComboBoxTipoTratamento.getSelectedItem().equals("Selecione")) {
                JOptionPane.showMessageDialog(rootPane, "Selecione o tipo de tratamento.");
            } else if (jComboBoxTipoTratamento.getSelectedItem().equals("Outros") && jOutros.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual é o outro tratamento do interno.");
            } else {
                objItensTrat.setIdAvalia(Integer.valueOf(jIdAvaliacao.getText()));
                objItensTrat.setDescricaoPatologia(jDescricaoPatologia.getText());
                objItensTrat.setDescricaoTipoTratamento((String) jComboBoxTipoTratamento.getSelectedItem());
                objItensTrat.setTratamento((String) jComboBoxTratamento.getSelectedItem());
                objItensTrat.setNotificacao((String) jComboBoxNotificacao.getSelectedItem());
                objItensTrat.setOutros(jOutros.getText());
                if (acao == 3) {
                    objItensTrat.setUsuarioInsert(nameUser);
                    objItensTrat.setDataInsert(dataModFinal);
                    objItensTrat.setHorarioInsert(horaMov);
                    controle.incluirTratamento(objItensTrat);
                    buscarCodigoTratamento();
                    //
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarTratamento();
                    preencherTabelaItensTratamento("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS "
                            + "INNER JOIN AVALIACAO_MEDICA_PSIQUIATRICA "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdAvalia=AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia "
                            + "INNER JOIN DOENCAS "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdDoenca=DOENCAS.IdDoenca "
                            + "INNER JOIN TIPOS_TRATAMENTOS "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdTipo=TIPOS_TRATAMENTOS.IdTipo "
                            + "WHERE ITENS_TRATAMENTOS_INTERNOS.IdAvalia='" + jIdAvaliacao.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objItensTrat.setUsuarioUp(nameUser);
                    objItensTrat.setDataUp(dataModFinal);
                    objItensTrat.setHorarioUp(horaMov);
                    objItensTrat.setIdItemTrat(Integer.valueOf(jIdRegistro.getText()));
                    controle.alterarTratamento(objItensTrat);
                    //
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarTratamento();
                    preencherTabelaItensTratamento("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS "
                            + "INNER JOIN AVALIACAO_MEDICA_PSIQUIATRICA "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdAvalia=AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia "
                            + "INNER JOIN DOENCAS "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdDoenca=DOENCAS.IdDoenca "
                            + "INNER JOIN TIPOS_TRATAMENTOS "
                            + "ON ITENS_TRATAMENTOS_INTERNOS.IdTipo=TIPOS_TRATAMENTOS.IdTipo "
                            + "WHERE ITENS_TRATAMENTOS_INTERNOS.IdAvalia='" + jIdAvaliacao.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarTratamentoActionPerformed

    private void jBtCancelarTratamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarTratamentoActionPerformed
        // TODO add your handling code here:
        CancelarTratamento();
    }//GEN-LAST:event_jBtCancelarTratamentoActionPerformed

    private void jBtAuditoriaTratamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaTratamentoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensTratamento objAudiItensTra = new TelaAuditoriaItensTratamento();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiItensTra);
        objAudiItensTra.show();
    }//GEN-LAST:event_jBtAuditoriaTratamentoActionPerformed

    private void jTabelaTratamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaTratamentoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String idRegistro = "" + jTabelaTratamento.getValueAt(jTabelaTratamento.getSelectedRow(), 0);
            jIdRegistro.setText(idRegistro);
            //
            jBtNovoTratamento.setEnabled(true);
            jBtAlterarTratamento.setEnabled(true);
            jBtExcluirTratamento.setEnabled(true);
            jBtSalvarTratamento.setEnabled(!true);
            jBtCancelarTratamento.setEnabled(true);
            jBtAuditoriaTratamento.setEnabled(true);
            //
            jComboBoxTipoTratamento.removeAllItems();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS "
                        + "INNER JOIN AVALIACAO_MEDICA_PSIQUIATRICA "
                        + "ON ITENS_TRATAMENTOS_INTERNOS.IdAvalia=AVALIACAO_MEDICA_PSIQUIATRICA.IdAvalia "
                        + "INNER JOIN DOENCAS "
                        + "ON ITENS_TRATAMENTOS_INTERNOS.IdDoenca=DOENCAS.IdDoenca "
                        + "INNER JOIN TIPOS_TRATAMENTOS "
                        + "ON ITENS_TRATAMENTOS_INTERNOS.IdTipo=TIPOS_TRATAMENTOS.IdTipo "
                        + "WHERE ITENS_TRATAMENTOS_INTERNOS.IdItemTrat='" + idRegistro + "'");
                conecta.rs.first();
                jIdRegistro.setText(conecta.rs.getString("IdItemTrat"));
                jDescricaoPatologia.setText(conecta.rs.getString("Descricao"));
                jComboBoxTratamento.setSelectedItem(conecta.rs.getString("Tratamento"));
                jComboBoxTipoTratamento.addItem(conecta.rs.getString("DescricaoTipo"));
                jComboBoxNotificacao.setSelectedItem(conecta.rs.getString("Notificacao"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível exibir registro.\nERRO: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaTratamentoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarTratamento;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaTratamento;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarTratamento;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirTratamento;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImprimir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoTratamento;
    private javax.swing.JButton jBtPesqCodigoAvaliacao;
    private javax.swing.JButton jBtPesqDatas;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtPesqInterno1;
    private javax.swing.JButton jBtPesqPatologia;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarTratamento;
    public static javax.swing.JTextField jCelaInterno;
    private javax.swing.JCheckBox jCheckBoxTodosReq;
    private javax.swing.JTextField jCodigoAvaliacao;
    private javax.swing.JComboBox jComboBoxNotificacao;
    private javax.swing.JComboBox jComboBoxTipoTratamento;
    private javax.swing.JComboBox jComboBoxTratamento;
    private com.toedter.calendar.JDateChooser jDataAvaliacao;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jDescricaoPatologia;
    public static javax.swing.JLabel jFotoInternoAvaliacao;
    public static javax.swing.JTextField jIdAvaliacao;
    public static javax.swing.JTextField jIdInternoCrcAvaliacao;
    public static javax.swing.JTextField jIdRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMatriculaPenal;
    public static javax.swing.JTextField jNomeCompletoInternoCrc;
    private javax.swing.JTextField jNomeInterno;
    private javax.swing.JTextField jOutros;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JTextField jPavilhaoInterno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jStatusAvaliacao;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaAvaliacaoMedicaPsiquiatrica;
    private javax.swing.JTable jTabelaTratamento;
    private javax.swing.JTextArea jTextoAvaliacao;
    private javax.swing.JLabel jtotalRegistros;
    private javax.swing.JLabel jtotalRegistrosItens;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jTextoAvaliacao.setLineWrap(true);
        jTextoAvaliacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdAvaliacao.setBackground(Color.white);
        jStatusAvaliacao.setBackground(Color.white);
        jDataAvaliacao.setBackground(Color.white);
        jIdInternoCrcAvaliacao.setBackground(Color.white);
        jMatriculaPenal.setBackground(Color.white);
        jNomeCompletoInternoCrc.setBackground(Color.white);
        jPavilhaoInterno.setBackground(Color.white);
        jCelaInterno.setBackground(Color.white);
        jTextoAvaliacao.setBackground(Color.white);
        //
        jIdRegistro.setBackground(Color.white);
        jDescricaoPatologia.setBackground(Color.white);
        jComboBoxTratamento.setBackground(Color.white);
        jComboBoxTipoTratamento.setBackground(Color.white);
        jComboBoxNotificacao.setBackground(Color.white);
        jOutros.setBackground(Color.white);
    }

    public void Novo() {
        jIdAvaliacao.setText("");
        jStatusAvaliacao.setText("ABERTO");
        jDataAvaliacao.setCalendar(Calendar.getInstance());
        jIdInternoCrcAvaliacao.setText("");
        jMatriculaPenal.setText("");
        jNomeCompletoInternoCrc.setText("");
        jPavilhaoInterno.setText("");
        jCelaInterno.setText("");
        jTextoAvaliacao.setText("");
        //
        jDataAvaliacao.setEnabled(true);
        jBtPesqInterno.setEnabled(true);
        jTextoAvaliacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtImprimir.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA TRATAMENTO
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //        
        jBtPesqPatologia.setEnabled(!true);
        jComboBoxTratamento.setEnabled(!true);
        jComboBoxTipoTratamento.setEnabled(!true);
        jComboBoxNotificacao.setEnabled(!true);
        jOutros.setEnabled(!true);
        //
        jBtNovoTratamento.setEnabled(!true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(!true);
        jBtCancelarTratamento.setEnabled(!true);
        jBtAuditoriaTratamento.setEnabled(!true);
    }

    public void Alterar() {
        jDataAvaliacao.setEnabled(true);
        jBtPesqInterno.setEnabled(true);
        jTextoAvaliacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtImprimir.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA TRATAMENTO
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //        
        jBtPesqPatologia.setEnabled(!true);
        jComboBoxTratamento.setEnabled(!true);
        jComboBoxTipoTratamento.setEnabled(!true);
        jComboBoxNotificacao.setEnabled(!true);
        jOutros.setEnabled(!true);
        //
        jBtNovoTratamento.setEnabled(!true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(!true);
        jBtCancelarTratamento.setEnabled(!true);
        jBtAuditoriaTratamento.setEnabled(!true);
    }

    public void Excluir() {
        jIdAvaliacao.setText("");
        jStatusAvaliacao.setText("");
        jDataAvaliacao.setDate(null);
        jIdInternoCrcAvaliacao.setText("");
        jMatriculaPenal.setText("");
        jNomeCompletoInternoCrc.setText("");
        jPavilhaoInterno.setText("");
        jCelaInterno.setText("");
        jTextoAvaliacao.setText("");
        //
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtImprimir.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA TRATAMENTO
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //        
        jBtPesqPatologia.setEnabled(!true);
        jComboBoxTratamento.setEnabled(!true);
        jComboBoxTipoTratamento.setEnabled(!true);
        jComboBoxNotificacao.setEnabled(!true);
        jOutros.setEnabled(!true);
        //
        jBtNovoTratamento.setEnabled(!true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(!true);
        jBtCancelarTratamento.setEnabled(!true);
        jBtAuditoriaTratamento.setEnabled(!true);
    }

    public void Salvar() {
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtImprimir.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdAvaliacao.getText().equals("")) {
            jStatusAvaliacao.setText("");
            jDataAvaliacao.setDate(null);
            jIdInternoCrcAvaliacao.setText("");
            jMatriculaPenal.setText("");
            jNomeCompletoInternoCrc.setText("");
            jPavilhaoInterno.setText("");
            jCelaInterno.setText("");
            jTextoAvaliacao.setText("");
            //
            jDataAvaliacao.setEnabled(!true);
            jBtPesqInterno.setEnabled(!true);
            jTextoAvaliacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtImprimir.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
        } else {
            jDataAvaliacao.setEnabled(!true);
            jBtPesqInterno.setEnabled(!true);
            jTextoAvaliacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtImprimir.setEnabled(true);
            jBtAuditoria.setEnabled(true);
        }

    }

    public void Finalizar() {
        String statusLanc = "FINALIZADO";
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objAvalia.setStatusAval(statusLanc);
            objAvalia.setIdAvalia(Integer.parseInt(jIdAvaliacao.getText()));
            control.finalizarAvaliacaoMedica(objAvalia);
            jStatusAvaliacao.setText("FINALIZADO");
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            //                
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM AVALIACAO_MEDICA_PSIQUIATRICA");
            conecta.rs.last();
            jIdAvaliacao.setText(conecta.rs.getString("IdAvalia"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void verificarItens() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS WHERE IdAvalia='" + jIdAvaliacao.getText() + "'");
            conecta.rs.first();
            codTratamento = conecta.rs.getString("IdAvalia");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovoTratamento() {
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //
        jBtPesqPatologia.setEnabled(true);
        jComboBoxTratamento.setEnabled(true);
        jComboBoxTipoTratamento.setEnabled(true);
        jComboBoxNotificacao.setEnabled(true);
        jOutros.setEnabled(true);
        //
        jBtNovoTratamento.setEnabled(!true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(true);
        jBtCancelarTratamento.setEnabled(true);
        jBtAuditoriaTratamento.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
    }

    public void AlterarTratamento() {
        //
        jBtPesqPatologia.setEnabled(true);
        jComboBoxTratamento.setEnabled(true);
        jComboBoxTipoTratamento.setEnabled(true);
        jComboBoxNotificacao.setEnabled(true);
        jOutros.setEnabled(true);
        //
        jBtNovoTratamento.setEnabled(!true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(true);
        jBtCancelarTratamento.setEnabled(true);
        jBtAuditoriaTratamento.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
    }

    public void ExcluirTratamento() {
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //        
        jBtPesqPatologia.setEnabled(!true);
        jComboBoxTratamento.setEnabled(!true);
        jComboBoxTipoTratamento.setEnabled(!true);
        jComboBoxNotificacao.setEnabled(!true);
        jOutros.setEnabled(!true);
        //
        jBtNovoTratamento.setEnabled(true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(!true);
        jBtCancelarTratamento.setEnabled(!true);
        jBtAuditoriaTratamento.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
    }

    public void SalvarTratamento() {
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //        
        jBtPesqPatologia.setEnabled(!true);
        jComboBoxTratamento.setEnabled(!true);
        jComboBoxTipoTratamento.setEnabled(!true);
        jComboBoxNotificacao.setEnabled(!true);
        jOutros.setEnabled(!true);
        //
        jBtNovoTratamento.setEnabled(true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(!true);
        jBtCancelarTratamento.setEnabled(!true);
        jBtAuditoriaTratamento.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
    }

    public void CancelarTratamento() {
        jIdRegistro.setText("");
        jDescricaoPatologia.setText("");
        jComboBoxTratamento.setSelectedItem("Nao");
        jComboBoxTipoTratamento.setSelectedItem("Selecione");
        jComboBoxNotificacao.setSelectedItem("Não");
        jOutros.setText("");
        //        
        jBtPesqPatologia.setEnabled(!true);
        jComboBoxTratamento.setEnabled(!true);
        jComboBoxTipoTratamento.setEnabled(!true);
        jComboBoxNotificacao.setEnabled(!true);
        jOutros.setEnabled(!true);
        //
        jBtNovoTratamento.setEnabled(true);
        jBtAlterarTratamento.setEnabled(!true);
        jBtExcluirTratamento.setEnabled(!true);
        jBtSalvarTratamento.setEnabled(!true);
        jBtCancelarTratamento.setEnabled(!true);
        jBtAuditoriaTratamento.setEnabled(!true);
        // ABA MANUTENÇÃO
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jDataAvaliacao.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jTextoAvaliacao.setEnabled(!true);
    }

    public void buscarCodigoTratamento() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_TRATAMENTOS_INTERNOS");
            conecta.rs.last();
            jIdRegistro.setText(conecta.rs.getString("IdItemTrat"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void preencherComboNovo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM TIPOS_TRATAMENTOS");
            conecta.rs.first();
            do {
                jComboBoxTipoTratamento.addItem(conecta.rs.getString("DescricaoTipo"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void preencherTabelaAvaliacaoMedicaPsiquiatrica(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Dt.Avaliação", "Status Avaliação", "Nome Completo do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data de emissão
                dataEmissao = conecta.rs.getString("DataAval");
                String dia = dataEmissao.substring(8, 10);
                String mes = dataEmissao.substring(5, 7);
                String ano = dataEmissao.substring(0, 4);
                dataEmissao = dia + "/" + mes + "/" + ano;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdAvalia"), dataEmissao, conecta.rs.getString("StatusAval"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAvaliacaoMedicaPsiquiatrica.setModel(modelo);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(3).setPreferredWidth(380);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getTableHeader().setReorderingAllowed(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.setAutoResizeMode(jTabelaAvaliacaoMedicaPsiquiatrica.AUTO_RESIZE_OFF);
        jTabelaAvaliacaoMedicaPsiquiatrica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Dt.Avaliação", "Status Avaliação", "Nome Completo do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAvaliacaoMedicaPsiquiatrica.setModel(modelo);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(3).setPreferredWidth(380);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.getTableHeader().setReorderingAllowed(false);
        jTabelaAvaliacaoMedicaPsiquiatrica.setAutoResizeMode(jTabelaAvaliacaoMedicaPsiquiatrica.AUTO_RESIZE_OFF);
        jTabelaAvaliacaoMedicaPsiquiatrica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaAvaliacaoMedicaPsiquiatrica.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItensTratamento(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Patologia Atual", "Tratamento", "Tipo", "Notificação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            count1 = 0;
            do {
                count1 = count1 + 1;
                //
                jtotalRegistrosItens.setText(Integer.toString(count1)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdItemTrat"), conecta.rs.getString("Descricao"), conecta.rs.getString("Tratamento"), conecta.rs.getString("DescricaoTipo"), conecta.rs.getString("Notificacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {

        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaTratamento.setModel(modelo);
        jTabelaTratamento.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaTratamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabelaTratamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaTratamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTabelaTratamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaTratamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaTratamento.getTableHeader().setReorderingAllowed(false);
        jTabelaTratamento.setAutoResizeMode(jTabelaTratamento.AUTO_RESIZE_OFF);
        jTabelaTratamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaTratamento();
        conecta.desconecta();
    }

    public void limparTabelaTratamento() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Patologia Atual", "Tratamento", "Tipo", "Notificação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaTratamento.setModel(modelo);
        jTabelaTratamento.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaTratamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabelaTratamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaTratamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTabelaTratamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaTratamento.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaTratamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaTratamento.getTableHeader().setReorderingAllowed(false);
        jTabelaTratamento.setAutoResizeMode(jTabelaTratamento.AUTO_RESIZE_OFF);
        jTabelaTratamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaTratamento() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaTratamento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaTratamento.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaTratamento.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdAvaliacao.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog1() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdAvaliacao.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUser = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUser + "'");
            conecta.rs.first();
            codigoUserGroup = conecta.rs.getInt("IdUsuario");
            codigoGrupo = conecta.rs.getInt("IdGrupo");
            nomeGrupo = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUser + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcesso = conecta.rs.getInt("IdUsuario");
            codAbrir = conecta.rs.getInt("Abrir");
            codIncluir = conecta.rs.getInt("Incluir");
            codAlterar = conecta.rs.getInt("Alterar");
            codExcluir = conecta.rs.getInt("Excluir");
            codGravar = conecta.rs.getInt("Gravar");
            codConcultar = conecta.rs.getInt("Consultar");
            nomeTela = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
