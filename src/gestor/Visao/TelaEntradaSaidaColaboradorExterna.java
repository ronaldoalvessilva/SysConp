/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEntSaidFunc;
import gestor.Controle.ControleItensEntSaiFunc;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.EntradaSaidaFunc;
import gestor.Modelo.ItensEntSaiFunc;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortariaExterna.codigoUserGroupP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoGrupoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codAbrirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codAlterarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codExcluirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codGravarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codConsultarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codIncluirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codUserAcessoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoUserP1E;
import static gestor.Visao.TelaModuloPortariaExterna.nomeGrupoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.nomeTelaP1E;
import static gestor.Visao.TelaModuloPortariaExterna.telaEntradaSaidaCOLManuP1E;
import static gestor.Visao.TelaModuloPortariaExterna.telaEntradaSaidaCOLcolP1E;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author user
 */
public class TelaEntradaSaidaColaboradorExterna extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EntradaSaidaFunc objEntSaiFunc = new EntradaSaidaFunc();
    ControleEntSaidFunc control = new ControleEntSaidFunc();
    ItensEntSaiFunc objItensFunc = new ItensEntSaiFunc();
    ControleItensEntSaiFunc controle = new ControleItensEntSaiFunc();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria Externa:Entrada/Saida de Colaborador:Manutenção";
    String nomeModuloTela2 = "Portaria Externa:Entrada/Saida de Colaborador:Colaborador";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String statusEnt = "ABERTO";
    String dataEntrada;
    String dataSaida;
    public static String idItem;
    String dataInicial;
    String dataFinal;
    String caminho;
    String codLanc;
    int count = 0;
    // VARIAVEIS PARA BLOQUEAR O REGISTRO CASO NÃO ESTEJA COM OS HORÁRIOS PREENCHIDOS COM AS HORAS.
    String verHorarioSaida = "00:00";
    String verHorarioEntrada = "00:00";
    String horaEntradaEncontrada, codigoRegistro, horaSaidaEncontrado;
    //
    byte[] assinaturaEntrada = null;
    String horaEntrada = "";

    /**
     * Creates new form TelaEntradaSaidaColaborador
     */
    public static TelaFotoColaboradorExterna telafotocolaboradorExt;
    public static TelaAcessoBiometriaColaboradoresPortariaExterna biometriaFunc;

    public TelaEntradaSaidaColaboradorExterna() {
        super();
        initComponents();
        setResizable(false);
        corCampo();
        formatarCampos();
    }

    public void mostrarFotoColaborador() {
        telafotocolaboradorExt = new TelaFotoColaboradorExterna(this, true);
        telafotocolaboradorExt.setVisible(true);
    }

    public void mostrarBiometriacolaborador() {
        biometriaFunc = new TelaAcessoBiometriaColaboradoresPortariaExterna(this, true);
        biometriaFunc.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jBtPesqData = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jBtPesqID = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jPesqNomeColaborador = new javax.swing.JTextField();
        jBtPesqNomeColaborador = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaEntradaSaidaCola = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIDlanc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDatalancamento = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jStatusEntCola = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIDFunc = new javax.swing.JTextField();
        jNomeFuncionario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSetorFunc = new javax.swing.JTextField();
        jBtPesqFuncionario = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jCargoFunc = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jFotoColaborador = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jHorarioSaida = new javax.swing.JFormattedTextField();
        jHorarioEntrada = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDataEntrada = new com.toedter.calendar.JDateChooser();
        jBtZoonColaborador = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaColaborador = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jBtNovoFunc = new javax.swing.JButton();
        jBtAlterarFunc = new javax.swing.JButton();
        jBtExcluirFunc = new javax.swing.JButton();
        jBtSalvarFunc = new javax.swing.JButton();
        jBtCancelarFunc = new javax.swing.JButton();
        jBtSairFunc = new javax.swing.JButton();
        jBtBuscarFunc = new javax.swing.JButton();
        jBtAuditoriaFunc = new javax.swing.JButton();
        jBtBiometria = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoriaManu = new javax.swing.JButton();

        jLabel7.setText("jLabel7");

        jTextField1.setText("jTextField1");

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("...::: Entrada/Saida de Colaboradores - {P1 Externa} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqID.setContentAreaFilled(false);
        jBtPesqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIDActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Colaborador:");

        jPesqNomeColaborador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeColaborador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeColaborador.setContentAreaFilled(false);
        jBtPesqNomeColaborador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeColaboradorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPesqNomeColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addGap(53, 53, 53))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqData)
                    .addComponent(jLabel15)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqID)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqNomeColaborador)
                    .addComponent(jPesqNomeColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jCheckBox1))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jTabelaEntradaSaidaCola.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEntradaSaidaCola.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Observação"
            }
        ));
        jTabelaEntradaSaidaCola.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEntradaSaidaColaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaEntradaSaidaCola);
        if (jTabelaEntradaSaidaCola.getColumnModel().getColumnCount() > 0) {
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setMinWidth(600);
            jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setMaxWidth(600);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cabeçalho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jIDlanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDlanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDlanc.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Cadastro");

        jDatalancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDatalancamento.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Status");

        jStatusEntCola.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEntCola.setForeground(new java.awt.Color(255, 0, 0));
        jStatusEntCola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEntCola.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jIDlanc, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 131, Short.MAX_VALUE))
                    .addComponent(jStatusEntCola))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDatalancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDlanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusEntCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDatalancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDatalancamento, jIDlanc, jStatusEntCola});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Colaborador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome do Colaborador");

        jIDFunc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDFunc.setEnabled(false);

        jNomeFuncionario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeFuncionario.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Setor");

        jSetorFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSetorFunc.setEnabled(false);

        jBtPesqFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqFuncionario.setContentAreaFilled(false);
        jBtPesqFuncionario.setEnabled(false);
        jBtPesqFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqFuncionarioActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Cargo");

        jCargoFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCargoFunc.setEnabled(false);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoColaborador, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoColaborador, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 0));
        jLabel9.setText("Data Saída");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 0));
        jLabel10.setText("Horário");

        jHorarioSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioSaida.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jHorarioSaida.setEnabled(false);

        jHorarioEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioEntrada.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jHorarioEntrada.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 255));
        jLabel8.setText("Horário");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 255));
        jLabel6.setText("Data Entrada");

        jDataEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntrada.setEnabled(false);

        jBtZoonColaborador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/11985_16x16.png"))); // NOI18N
        jBtZoonColaborador.setToolTipText("Ampliar Foto Colaborador");
        jBtZoonColaborador.setEnabled(false);
        jBtZoonColaborador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtZoonColaboradorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jIDFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel4))
                                    .addComponent(jSetorFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtZoonColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel11)
                            .addComponent(jCargoFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIDFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqFuncionario))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSetorFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCargoFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jHorarioSaida, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                                    .addComponent(jBtZoonColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtZoonColaborador, jHorarioSaida});

        jTabelaColaborador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaColaborador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Colaborador", "Data Entrada", "Horário", "Data Saída", "Horário"
            }
        ));
        jTabelaColaborador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaColaboradorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaColaborador);
        if (jTabelaColaborador.getColumnModel().getColumnCount() > 0) {
            jTabelaColaborador.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaColaborador.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaColaborador.getColumnModel().getColumn(1).setMinWidth(250);
            jTabelaColaborador.getColumnModel().getColumn(1).setMaxWidth(250);
            jTabelaColaborador.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaColaborador.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaColaborador.getColumnModel().getColumn(3).setMinWidth(50);
            jTabelaColaborador.getColumnModel().getColumn(3).setMaxWidth(50);
            jTabelaColaborador.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaColaborador.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaColaborador.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaColaborador.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 204, 0))); // NOI18N

        jBtNovoFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoFunc.setText("Novo");
        jBtNovoFunc.setEnabled(false);
        jBtNovoFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoFuncActionPerformed(evt);
            }
        });

        jBtAlterarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarFunc.setText("Alterar");
        jBtAlterarFunc.setEnabled(false);
        jBtAlterarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarFuncActionPerformed(evt);
            }
        });

        jBtExcluirFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirFunc.setText("Excluir");
        jBtExcluirFunc.setEnabled(false);
        jBtExcluirFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirFuncActionPerformed(evt);
            }
        });

        jBtSalvarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarFunc.setText("Gravar");
        jBtSalvarFunc.setEnabled(false);
        jBtSalvarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarFuncActionPerformed(evt);
            }
        });

        jBtCancelarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarFunc.setText("Cancelar");
        jBtCancelarFunc.setEnabled(false);
        jBtCancelarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarFuncActionPerformed(evt);
            }
        });

        jBtSairFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairFunc.setText("Sair");
        jBtSairFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairFuncActionPerformed(evt);
            }
        });

        jBtBuscarFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarFunc.setText("Buscar");
        jBtBuscarFunc.setEnabled(false);
        jBtBuscarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarFuncActionPerformed(evt);
            }
        });

        jBtAuditoriaFunc.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaFunc.setToolTipText("Auditoria");
        jBtAuditoriaFunc.setContentAreaFilled(false);
        jBtAuditoriaFunc.setEnabled(false);
        jBtAuditoriaFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaFuncActionPerformed(evt);
            }
        });

        jBtBiometria.setForeground(new java.awt.Color(0, 102, 0));
        jBtBiometria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/191216082320_16.png"))); // NOI18N
        jBtBiometria.setText("Biometria");
        jBtBiometria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBiometriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtBiometria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtExcluirFunc)
                            .addComponent(jBtSalvarFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtNovoFunc)
                            .addComponent(jBtAlterarFunc)
                            .addComponent(jBtSairFunc)
                            .addComponent(jBtCancelarFunc)
                            .addComponent(jBtBuscarFunc))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarFunc, jBtBuscarFunc, jBtCancelarFunc, jBtExcluirFunc, jBtNovoFunc, jBtSairFunc, jBtSalvarFunc});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtNovoFunc)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jBtAlterarFunc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirFunc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvarFunc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarFunc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtBuscarFunc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairFunc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtBiometria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaFunc)
                .addContainerGap())
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarFunc, jBtAuditoriaFunc, jBtBuscarFunc, jBtCancelarFunc, jBtExcluirFunc, jBtNovoFunc, jBtSairFunc, jBtSalvarFunc});

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoriaManu.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setToolTipText("Auditoria");
        jBtAuditoriaManu.setContentAreaFilled(false);
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAuditoriaManu)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo)
                        .addComponent(jBtAlterar)
                        .addComponent(jBtExcluir)
                        .addComponent(jBtSalvar)
                        .addComponent(jBtCancelar)
                        .addComponent(jBtFinalizar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtAuditoriaManu, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 30, 754, 568);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLManuP1E) && codIncluirP1E == 1) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLManuP1E) && codAlterarP1E == 1) {
            objEntSaiFunc.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de colaboradores não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:  
        buscarAcessoUsuario(telaEntradaSaidaCOLManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLManuP1E) && codExcluirP1E == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEntSaiFunc.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de colaboradores não poderá ser excluída, o mesmo encontra-se FINALIZADO");
            } else {
                verificarColaborador();
                if (jIDlanc.getText().equals(codLanc)) {
                    JOptionPane.showMessageDialog(rootPane, "Exclua os Colaboradores primeiros para depois excluir o documento.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objEntSaiFunc.setIdLanc(Integer.valueOf(jIDlanc.getText()));
                        control.excluirEntradaSaiFunc(objEntSaiFunc);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Excluir();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLManuP1E) && codGravarP1E == 1) {
            if (jDatalancamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do lancamento.");
                jDatalancamento.requestFocus();
                jDatalancamento.setBackground(Color.white);
            } else {
                objEntSaiFunc.setDataLanc(jDatalancamento.getDate());
                objEntSaiFunc.setObsLanc(jObservacao.getText());
                objEntSaiFunc.setStatusLanc(statusEnt);
                objEntSaiFunc.setUsuarioInsert(nameUser);
                objEntSaiFunc.setDataInsert(dataModFinal);
                objEntSaiFunc.setHoraInsert(horaMov);
                if (acao == 1) {
                    control.incluirEntradaSaiFunc(objEntSaiFunc);
                    buscarID();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    objEntSaiFunc.setUsuarioUp(nameUser);
                    objEntSaiFunc.setDataUp(dataModFinal);
                    objEntSaiFunc.setHoraUp(horaMov);
                    objEntSaiFunc.setIdLanc(Integer.valueOf(jIDlanc.getText()));
                    control.alterarEntradaSaiFunc(objEntSaiFunc);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        verificarHoraEntrada();
        if (jHorarioSaida.getText().equals(horaSaidaEncontrado) && jIDlanc.getText().equals(codigoRegistro) || jHorarioEntrada.getText().equals(horaEntradaEncontrada) && jIDlanc.getText().equals(codigoRegistro)) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível FINALIZAR esse registro, existe(m) horário(s) de entrada de colaborador(s) em aberto.\nCorrija os horários com divergências e então poderá FINALIZAR o documento. ");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADASFUNC WHERE IdLanc='" + jIDlanc.getText() + "'");
                conecta.rs.first();
                jStatusEntCola.setText(conecta.rs.getString("StatusLanc"));
                if (jStatusEntCola.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        jTabelaEntradaSaidaCola.setVisible(true);
                        pesquisarTodasEntSai("SELECT * FROM ENTRADASFUNC WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        jTabelaEntradaSaidaCola.setVisible(true);
                        pesquisarTodasEntSai("SELECT * FROM ENTRADASFUNC WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtNovoFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoFuncActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLcolP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLcolP1E) && codIncluirP1E == 1) {
            objEntSaiFunc.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de colaboradores não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoFunc();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoFuncActionPerformed

    private void jBtAlterarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarFuncActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLcolP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLcolP1E) && codAlterarP1E == 1) {
            verificarBiometriaFunc();
            objEntSaiFunc.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de colaboradores não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                if (assinaturaEntrada != null && !nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, registro contabilizado através da biometria.");
                } else if (assinaturaEntrada != null && nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
                    acao = 4;
                    AlterarFunc();
                    statusMov = "Alterou";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();
                } else if (assinaturaEntrada == null && !horaEntrada.equals("")) {
                    acao = 4;
                    AlterarFunc();
                    statusMov = "Alterou";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarFuncActionPerformed

    private void jBtExcluirFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirFuncActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLcolP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLcolP1E) && codExcluirP1E == 1) {
            verificarBiometriaFunc();
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEntSaiFunc.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  colaborador não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                if (assinaturaEntrada != null) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, registro contabilizado através da biometria.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o COLABORADOR selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objItensFunc.setIdItem(Integer.valueOf(idItem));
                        controle.excluirItensFunc(objItensFunc);
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        ExcluirFunc();
                        preencherTabelaItens("SELECT * FROM ITENSENTRADASFUNC "
                                + "INNER JOIN COLABORADOR "
                                + "ON ITENSENTRADASFUNC.IdFunc=COLABORADOR.IdFunc "
                                + "WHERE IdLanc='" + jIDlanc.getText() + "'");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirFuncActionPerformed

    private void jBtSalvarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarFuncActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLcolP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLcolP1E) && codGravarP1E == 1) {
            horaEntradaEncontrada = "";
            horaSaidaEncontrado = "";
            if (jNomeFuncionario.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do colaborador.");
                jNomeFuncionario.setBackground(Color.red);
            } else {
                if (jDataEntrada.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data de entrada do colaborador.");
                    jDataEntrada.requestFocus();
                    jDataEntrada.setBackground(Color.red);
                } else {
                    if (jHorarioEntrada.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "É necessário informar um horário de entrada.");
                        jHorarioEntrada.requestFocus();
                        jHorarioEntrada.setBackground(Color.red);
                    } else {
                        if (jDataSaida.getDate() == null) {
                            JOptionPane.showMessageDialog(rootPane, "É necessário informar uma data de saida.");
                            jDataSaida.requestFocus();
                            jDataSaida.setBackground(Color.red);
                        } else {
                            if (jHorarioSaida.getText().equals("")) {
                                jHorarioSaida.setText("00:00");
                            } else {
                                objItensFunc.setIdlanc(Integer.valueOf(jIDlanc.getText()));
                                objItensFunc.setIdFunc(Integer.valueOf(jIDFunc.getText()));
                                objItensFunc.setDataEntrada(jDataEntrada.getDate());
                                objItensFunc.setHorarioEntrada(jHorarioEntrada.getText());
                                objItensFunc.setDataSaida(jDataSaida.getDate());
                                objItensFunc.setHorarioSaida(jHorarioSaida.getText());
                                // Log de usuário
                                objItensFunc.setUsuarioInsert(nameUser);
                                objItensFunc.setDataInsert(dataModFinal);
                                objItensFunc.setHoraInsert(horaMov);
                                if (acao == 3) {
                                    objItensFunc.setIdlanc(Integer.valueOf(jIDlanc.getText()));
                                    objItensFunc.setIdFunc(Integer.valueOf(jIDFunc.getText()));
                                    objItensFunc.setNomeColaborador(jNomeFuncionario.getText());
                                    controle.incluirItensFunc(objItensFunc);
                                    objLog2();
                                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                    preencherTabelaItens("SELECT * FROM ITENSENTRADASFUNC "
                                            + "INNER JOIN COLABORADOR "
                                            + "ON ITENSENTRADASFUNC.IdFunc=COLABORADOR.IdFunc "
                                            + "WHERE IdLanc='" + jIDlanc.getText() + "'");
                                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    SalvarFunc();
                                }
                                if (acao == 4) {
                                    // Log de usuário
                                    objItensFunc.setUsuarioUp(nameUser);
                                    objItensFunc.setDataUp(dataModFinal);
                                    objItensFunc.setHoraUp(horaMov);
                                    objItensFunc.setIdlanc(Integer.valueOf(jIDlanc.getText()));
                                    objItensFunc.setIdFunc(Integer.valueOf(jIDFunc.getText()));
                                    objItensFunc.setNomeColaborador(jNomeFuncionario.getText());
                                    objItensFunc.setIdItem(Integer.valueOf(idItem));
                                    controle.alterarItensFunc(objItensFunc);
                                    objLog2();
                                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    SalvarFunc();
                                }
                                preencherTabelaItens("SELECT * FROM ITENSENTRADASFUNC "
                                        + "INNER JOIN COLABORADOR "
                                        + "ON ITENSENTRADASFUNC.IdFunc=COLABORADOR.IdFunc "
                                        + "WHERE IdLanc='" + jIDlanc.getText() + "'");
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarFuncActionPerformed

    private void jBtCancelarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarFuncActionPerformed
        // TODO add your handling code here:
        CancelarFunc();
    }//GEN-LAST:event_jBtCancelarFuncActionPerformed

    private void jBtBuscarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarFuncActionPerformed
        // TODO add your handling code here:
        TelaPesqItensColaboradorExterna objPesqItensColaExt = new TelaPesqItensColaboradorExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objPesqItensColaExt);
        objPesqItensColaExt.show();
    }//GEN-LAST:event_jBtBuscarFuncActionPerformed

    private void jBtSairFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairFuncActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairFuncActionPerformed

    private void jBtPesqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIDActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um ID para pesquisa.");
        } else {
            jTabelaEntradaSaidaCola.setVisible(true);
            pesquisarTodasEntSai("SELECT * FROM ENTRADASFUNC WHERE IdLanc='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIDActionPerformed

    private void jTabelaEntradaSaidaColaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEntradaSaidaColaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaEntradaSaidaCola.getValueAt(jTabelaEntradaSaidaCola.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            jDatalancamento.setDate(jDatalancamento.getDate());
            //
            jBtZoonColaborador.setEnabled(!true);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtNovoFunc.setEnabled(true);
            jBtBuscarFunc.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            //
            bloquearCamposPesquisa();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADASFUNC WHERE IdLanc='" + IdLanc + "'");
                conecta.rs.first();
                jIDlanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusEntCola.setText(conecta.rs.getString("Statuslanc"));
                jDatalancamento.setDate(conecta.rs.getDate("DataLanc"));
                jObservacao.setText(conecta.rs.getString("ObsLanc"));
                conecta.desconecta();
                preencherTabelaItens("SELECT * FROM ITENSENTRADASFUNC "
                        + "INNER JOIN COLABORADOR "
                        + "ON ITENSENTRADASFUNC.IdFunc=COLABORADOR.IdFunc "
                        + "WHERE IdLanc='" + IdLanc + "'");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
        }
    }//GEN-LAST:event_jTabelaEntradaSaidaColaMouseClicked

    private void jBtPesqFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqFuncionarioActionPerformed
        // TODO add your handling code here:        
        TelaPesqColaboradorExterna objPesColaExt = new TelaPesqColaboradorExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objPesColaExt);
        objPesColaExt.show();
    }//GEN-LAST:event_jBtPesqFuncionarioActionPerformed

    private void jTabelaColaboradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaColaboradorMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeColaborador = "" + jTabelaColaborador.getValueAt(jTabelaColaborador.getSelectedRow(), 1);
            jNomeFuncionario.setText(nomeColaborador);
            idItem = "" + jTabelaColaborador.getValueAt(jTabelaColaborador.getSelectedRow(), 2);
            String horarioEntrada = "" + jTabelaColaborador.getValueAt(jTabelaColaborador.getSelectedRow(), 3);
            jHorarioEntrada.setText(horarioEntrada);
            String horarioSaida = "" + jTabelaColaborador.getValueAt(jTabelaColaborador.getSelectedRow(), 5);
            jHorarioSaida.setText(horarioSaida);
            // Habilitar os botões
            jBtZoonColaborador.setEnabled(true);
            jBtNovoFunc.setEnabled(!true);
            jBtAlterarFunc.setEnabled(true);
            jBtExcluirFunc.setEnabled(true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(true);
            jBtAuditoriaFunc.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSENTRADASFUNC "
                        + "INNER JOIN COLABORADOR "
                        + "ON ITENSENTRADASFUNC.IdFunc=COLABORADOR.IdFunc "
                        + "INNER JOIN DEPARTAMENTOS "
                        + "ON COLABORADOR.IdDepartamento=DEPARTAMENTOS.IdDepartamento "
                        + "INNER JOIN CARGOS "
                        + "ON COLABORADOR.IdCargo=CARGOS.IdCargo "
                        + "WHERE NomeFunc='" + jNomeFuncionario.getText() + "' "
                        + "AND IdLanc='" + jIDlanc.getText() + "' "
                        + "AND HorarioEntrada='" + jHorarioEntrada.getText() + "' "
                        + "AND HorarioSaida='" + jHorarioSaida.getText() + "'");
                conecta.rs.first();
                jIDFunc.setText(conecta.rs.getString("IdFunc")); //Coluna 0
                jNomeFuncionario.setText(conecta.rs.getString("NomeFunc")); // Coluna 1
                // Capturando foto
                caminho = conecta.rs.getString("ImagemFunc");
                if (caminho != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                    jFotoColaborador.setIcon(i);
                    jFotoColaborador.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoColaborador.getWidth(), jFotoColaborador.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] img2Bytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteCO"));
                if (img2Bytes != null) {
                    ImageIcon pic2 = null;
                    pic2 = new ImageIcon(img2Bytes);
                    Image scaled2 = pic2.getImage().getScaledInstance(jFotoColaborador.getWidth(), jFotoColaborador.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon2 = new ImageIcon(scaled2);
                    jFotoColaborador.setIcon(icon2);
                }
                idItem = conecta.rs.getString("IdItem");
                jSetorFunc.setText(conecta.rs.getString("NomeDepartamento"));
                jCargoFunc.setText(conecta.rs.getString("NomeCargo"));
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jHorarioEntrada.setText(conecta.rs.getString("HorarioEntrada"));
                jHorarioSaida.setText(conecta.rs.getString("HorarioSaida"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem exibidos!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaColaboradorMouseClicked

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.pesquisarTodasEntSai("SELECT * FROM ENTRADASFUNC");
        } else {
            jtotalRegistros.setText("");
            limparTabelaEntradas();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAudEntSaiColaboradorExterna objAudEntSaiFuncExt = new TelaAudEntSaiColaboradorExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objAudEntSaiFuncExt);
        objAudEntSaiFuncExt.show();

    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jBtAuditoriaFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaFuncActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensEntSaiFuncExterna objAudItensEntSaiFuncExt = new TelaAuditoriaItensEntSaiFuncExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objAudItensEntSaiFuncExt);
        objAudItensEntSaiFuncExt.show();
    }//GEN-LAST:event_jBtAuditoriaFuncActionPerformed

    private void jBtPesqNomeColaboradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeColaboradorActionPerformed
        // TODO add your handling code here:
        if (jPesqNomeColaborador.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do Colaborador para pesquisar.");
        } else {
            jTabelaEntradaSaidaCola.setVisible(true);
            preencherTodasEntSai("SELECT * FROM ENTRADASFUNC "
                    + "INNER JOIN ITENSENTRADASFUNC "
                    + "ON ENTRADASFUNC.IdLanc=ITENSENTRADASFUNC.Idlanc "
                    + "INNER JOIN COLABORADOR "
                    + "ON ITENSENTRADASFUNC.IdFunc=COLABORADOR.IdFunc "
                    + "WHERE NomeFunc LIKE'" + jPesqNomeColaborador.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeColaboradorActionPerformed

    private void jBtZoonColaboradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtZoonColaboradorActionPerformed
        // TODO add your handling code here:
        mostrarFotoColaborador();
    }//GEN-LAST:event_jBtZoonColaboradorActionPerformed

    private void jBtBiometriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBiometriaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaCOLManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaCOLManuP1E) && codAbrirP1E == 1) {
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível acessar a biomeria com o regisro finalizado.");
            } else {
                mostrarBiometriacolaborador();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtBiometriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarFunc;
    private javax.swing.JButton jBtAuditoriaFunc;
    private javax.swing.JButton jBtAuditoriaManu;
    private javax.swing.JButton jBtBiometria;
    private javax.swing.JButton jBtBuscarFunc;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarFunc;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirFunc;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoFunc;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqFuncionario;
    private javax.swing.JButton jBtPesqID;
    private javax.swing.JButton jBtPesqNomeColaborador;
    private javax.swing.JButton jBtSairFunc;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarFunc;
    public static javax.swing.JButton jBtZoonColaborador;
    public static javax.swing.JTextField jCargoFunc;
    private javax.swing.JCheckBox jCheckBox1;
    public static com.toedter.calendar.JDateChooser jDataEntrada;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    private com.toedter.calendar.JDateChooser jDatalancamento;
    public static javax.swing.JLabel jFotoColaborador;
    public static javax.swing.JFormattedTextField jHorarioEntrada;
    public static javax.swing.JFormattedTextField jHorarioSaida;
    public static javax.swing.JTextField jIDFunc;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIDlanc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeFuncionario;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jPesqNomeColaborador;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTextField jSetorFunc;
    private javax.swing.JTextField jStatusEntCola;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTabelaColaborador;
    private javax.swing.JTable jTabelaEntradaSaidaCola;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
//        try {
//            MaskFormatter horarioEntrada = new MaskFormatter("##:##:##");
//            jHorarioEntrada.setFormatterFactory(new DefaultFormatterFactory(horarioEntrada));
//            MaskFormatter horarioSaida = new MaskFormatter("##:##:##");
//            jHorarioSaida.setFormatterFactory(new DefaultFormatterFactory(horarioSaida));
//        } catch (ParseException ex) {
//            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar campos de Horário.\nERRO: " + ex);
//        }
    }

    public void bloquearCamposPesquisa() {
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jIDFunc.setText("");
        jNomeFuncionario.setText("");
        jFotoColaborador.setIcon(null);
        jSetorFunc.setText("");
        jCargoFunc.setText("");
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        //                      
        jSetorFunc.setEnabled(!true);
        jCargoFunc.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtPesqFuncionario.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void corCampo() {

        jIDlanc.setBackground(Color.white);
        jStatusEntCola.setBackground(Color.white);
        jDatalancamento.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIDFunc.setBackground(Color.white);
        jNomeFuncionario.setBackground(Color.white);
        jSetorFunc.setBackground(Color.white);
        jCargoFunc.setBackground(Color.white);
        jDataEntrada.setBackground(Color.white);
        jHorarioEntrada.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jHorarioSaida.setBackground(Color.white);
    }

    public void Novo() {
        if (!jIDlanc.getText().equals("")) {
            // Limpar campos
            jIDlanc.setText("");
            jStatusEntCola.setText("ABERTO");
            jDatalancamento.setCalendar(Calendar.getInstance());
            jObservacao.setText("");
            //Habilitar/Desabilitar campos           
            jDatalancamento.setEnabled(true);
            jObservacao.setEnabled(true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            //
            jIDFunc.setText("");
            jNomeFuncionario.setText("");
            jFotoColaborador.setIcon(null);
            jSetorFunc.setText("");
            jCargoFunc.setText("");
            jDataEntrada.setDate(null);
            jHorarioEntrada.setText("");
            jDataSaida.setDate(null);
            jHorarioSaida.setText("");
            //
            jBtNovoFunc.setEnabled(!true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtBuscarFunc.setEnabled(!true);
            jBtZoonColaborador.setEnabled(!true);
            limparTabelaItens();
        }
        // Limpar campos
        jIDlanc.setText("");
        jStatusEntCola.setText("ABERTO");
        jDatalancamento.setCalendar(Calendar.getInstance());
        jObservacao.setText("");
        //Habilitar/Desabilitar campos       
        jDatalancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        //
        jIDFunc.setText("");
        jNomeFuncionario.setText("");
        jFotoColaborador.setIcon(null);
        jSetorFunc.setText("");
        jCargoFunc.setText("");
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("");
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtBuscarFunc.setEnabled(!true);
        limparTabelaItens();
    }

    public void Alterar() {

        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(!true);
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtBuscarFunc.setEnabled(!true);
        jBtZoonColaborador.setEnabled(!true);
    }

    public void Excluir() {

        // Limpar campos
        jIDlanc.setText("");
        jDatalancamento.setDate(null);
        jObservacao.setText("");
        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        //
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtBuscarFunc.setEnabled(!true);
        jBtZoonColaborador.setEnabled(!true);
    }

    public void Salvar() {

        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
        //
        jBtNovoFunc.setEnabled(true);
    }

    public void Cancelar() {

        if (!jIDlanc.getText().equals("")) {
            jDatalancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            //
            jBtNovoFunc.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtBuscarFunc.setEnabled(!true);
            jBtZoonColaborador.setEnabled(!true);
        }
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objEntSaiFunc.setStatusLanc(statusLanc);
            objEntSaiFunc.setIdLanc(Integer.parseInt(jIDlanc.getText()));
            control.finalizarEntradaSaiVisitas(objEntSaiFunc);
            jStatusEntCola.setText("FINALIZADO");
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            //
            jDatalancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(true);
            //
            jBtNovoFunc.setEnabled(!true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
        }
    }

    public void verificarHoraEntrada() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSENTRADASFUNC WHERE HorarioSaida='" + verHorarioSaida + "'AND Idlanc='" + jIDlanc.getText() + "'OR HorarioEntrada='" + verHorarioEntrada + "'AND Idlanc='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            horaEntradaEncontrada = conecta.rs.getString("HorarioEntrada");
            horaSaidaEncontrado = conecta.rs.getString("HorarioSaida");
            codigoRegistro = conecta.rs.getString("Idlanc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovoFunc() {
        // Limpar os campos
        jIDFunc.setText("");
        jNomeFuncionario.setText("");
        jFotoColaborador.setIcon(null);
        jSetorFunc.setText("");
        jCargoFunc.setText("");
        jDataEntrada.setCalendar(Calendar.getInstance());
        jHorarioEntrada.setText("00:00");
        jDataSaida.setCalendar(Calendar.getInstance());
        jHorarioSaida.setText("00:00");
        // Habilitar/Desabilitar campos
        jBtPesqFuncionario.setEnabled(true);
        jBtZoonColaborador.setEnabled(!true);
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        // Botões
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(true);
        jBtCancelarFunc.setEnabled(true);
        jBtBuscarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
    }

    public void AlterarFunc() {

        // Habilitar/Desabilitar campos
        jBtPesqFuncionario.setEnabled(true);
        jBtZoonColaborador.setEnabled(true);
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        // Botões
        jBtNovoFunc.setEnabled(!true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(true);
        jBtCancelarFunc.setEnabled(true);
        jBtBuscarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void ExcluirFunc() {

        // Limpar os campos
        jIDFunc.setText("");
        jNomeFuncionario.setText("");
        jFotoColaborador.setIcon(null);
        jSetorFunc.setText("");
        jCargoFunc.setText("");
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        // Habilitar/Desabilitar campos
        jBtPesqFuncionario.setEnabled(!true);
        jBtZoonColaborador.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        // Botões
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtBuscarFunc.setEnabled(!true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void SalvarFunc() {

        // Limpar os campos
        jIDFunc.setText("");
        jFotoColaborador.setIcon(null);
        jNomeFuncionario.setText("");
        jSetorFunc.setText("");
        jCargoFunc.setText("");
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        // Habilitar/Desabilitar campos
        jBtPesqFuncionario.setEnabled(!true);
        jBtZoonColaborador.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        // Botões
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtBuscarFunc.setEnabled(true);
        jBtAuditoriaFunc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void CancelarFunc() {
        if (!jIDlanc.getText().equals("")) {
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            // Habilitar/Desabilitar campos
            jBtPesqFuncionario.setEnabled(!true);
            jBtZoonColaborador.setEnabled(!true);
            jDataEntrada.setEnabled(!true);
            jHorarioEntrada.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jHorarioSaida.setEnabled(!true);
            // Botões
            jBtNovoFunc.setEnabled(true);
            jBtAlterarFunc.setEnabled(!true);
            jBtExcluirFunc.setEnabled(!true);
            jBtSalvarFunc.setEnabled(!true);
            jBtCancelarFunc.setEnabled(!true);
            jBtBuscarFunc.setEnabled(true);
            jBtAuditoriaFunc.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
        }
        // Habilitar/Desabilitar campos
        jBtPesqFuncionario.setEnabled(!true);
        jBtZoonColaborador.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        // Botões
        jBtNovoFunc.setEnabled(true);
        jBtAlterarFunc.setEnabled(!true);
        jBtExcluirFunc.setEnabled(!true);
        jBtSalvarFunc.setEnabled(!true);
        jBtCancelarFunc.setEnabled(!true);
        jBtBuscarFunc.setEnabled(true);
        jBtAuditoriaFunc.setEnabled(!true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADASFUNC");
            conecta.rs.last();
            jIDlanc.setText(conecta.rs.getString("IdLanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o ID do lancamento.\nERRO: " + ex);
        }
    }

    public void verificarBiometriaFunc() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSENTRADASFUNC "
                    + "WHERE IdLanc='" + jIDlanc.getText() + "' "
                    + "AND IdFunc='" + jIDFunc.getText() + "'");
            conecta.rs.first();
            assinaturaEntrada = conecta.rs.getBytes("AssinaturaEntrada");
            horaEntrada = conecta.rs.getString("HorarioEntrada");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    //Preencher tabela com todos os dados de entrada/saída COLABORADOR
    public void pesquisarTodasEntSai(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("ObsLanc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaCola.setModel(modelo);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setPreferredWidth(600);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaCola.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaCola.setAutoResizeMode(jTabelaEntradaSaidaCola.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaCola.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCamposTabelaTodasEntSai();
        conecta.desconecta();
    }

    public void alinhaCamposTabelaTodasEntSai() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparTabelaEntradas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaCola.setModel(modelo);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setPreferredWidth(600);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaCola.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaCola.setAutoResizeMode(jTabelaEntradaSaidaCola.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaCola.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    //Preencher tabela com todos os dados de entrada/saída COLABORADOR
    public void preencherTodasEntSai(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Colaborador", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeFunc"), conecta.rs.getString("ObsLanc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaCola.setModel(modelo);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setPreferredWidth(380);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(4).setPreferredWidth(370);
        jTabelaEntradaSaidaCola.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaCola.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaCola.setAutoResizeMode(jTabelaEntradaSaidaCola.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaCola.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCamposTabelaTodasEntSai();
        conecta.desconecta();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Colaborador", "Data Entrada", "Horário", "Data Saida", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataEntrada");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                // Data de Saida
                // Formatar a data Entrada
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dias + "/" + mess + "/" + anos;
                dados.add(new Object[]{conecta.rs.getInt("IdFunc"), conecta.rs.getString("NomeFunc"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaColaborador.setModel(modelo);
        jTabelaColaborador.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaColaborador.getColumnModel().getColumn(0).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaColaborador.getColumnModel().getColumn(1).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaColaborador.getColumnModel().getColumn(2).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaColaborador.getColumnModel().getColumn(3).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaColaborador.getColumnModel().getColumn(4).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaColaborador.getColumnModel().getColumn(5).setResizable(false);
        jTabelaColaborador.getTableHeader().setReorderingAllowed(false);
        jTabelaColaborador.setAutoResizeMode(jTabelaColaborador.AUTO_RESIZE_OFF);
        jTabelaColaborador.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Colaborador", "Data Entrada", "Horário", "Data Saida", "Horário"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaColaborador.setModel(modelo);
        jTabelaColaborador.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaColaborador.getColumnModel().getColumn(0).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaColaborador.getColumnModel().getColumn(1).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaColaborador.getColumnModel().getColumn(2).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaColaborador.getColumnModel().getColumn(3).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaColaborador.getColumnModel().getColumn(4).setResizable(false);
        jTabelaColaborador.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaColaborador.getColumnModel().getColumn(5).setResizable(false);
        jTabelaColaborador.getTableHeader().setReorderingAllowed(false);
        jTabelaColaborador.setAutoResizeMode(jTabelaColaborador.AUTO_RESIZE_OFF);
        jTabelaColaborador.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinhaCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaColaborador.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaColaborador.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaColaborador.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaColaborador.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaColaborador.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDlanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDlanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void verificarColaborador() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSENTRADASFUNC WHERE IdLanc='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            codLanc = conecta.rs.getString("IdLanc");
        } catch (SQLException ex) {
        }
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1E = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1E + "'");
            conecta.rs.first();
            codigoUserGroupP1E = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1E = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1E = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1E + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1E = conecta.rs.getInt("IdUsuario");
            codAbrirP1E = conecta.rs.getInt("Abrir");
            codIncluirP1E = conecta.rs.getInt("Incluir");
            codAlterarP1E = conecta.rs.getInt("Alterar");
            codExcluirP1E = conecta.rs.getInt("Excluir");
            codGravarP1E = conecta.rs.getInt("Gravar");
            codConsultarP1E = conecta.rs.getInt("Consultar");
            nomeTelaP1E = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
