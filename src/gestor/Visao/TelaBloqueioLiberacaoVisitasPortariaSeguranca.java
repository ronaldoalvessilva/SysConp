/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleBloqueioOcorrenciaSeguranca;
import gestor.Controle.ControleBloqueioOcorrenciaSegurancaVisitaInterna;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.LogSistema;
import gestor.Modelo.RegistroIndisciplinarPortaria;
import gestor.Modelo.VisitasOcorrenciaPortaria;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloSeguranca.codAlterar;
import static gestor.Visao.TelaModuloSeguranca.codExcluir;
import static gestor.Visao.TelaModuloSeguranca.codIncluir;
import static gestor.Visao.TelaModuloSeguranca.codUserAcesso;
import static gestor.Visao.TelaModuloSeguranca.codigoUser;
import static gestor.Visao.TelaModuloSeguranca.nomeGrupo;
import static gestor.Visao.TelaModuloSeguranca.nomeTela;
import static gestor.Visao.TelaModuloSeguranca.telaBloqueioLiberacaoVisitasPortaria;
import static gestor.Visao.TelaModuloSeguranca.telaRetirarPenalidade;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaBloqueioLiberacaoVisitasPortariaSeguranca extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    RegistroIndisciplinarPortaria objRegInd = new RegistroIndisciplinarPortaria();
    VisitasOcorrenciaPortaria objOcrPort = new VisitasOcorrenciaPortaria();
    ControleBloqueioOcorrenciaSeguranca control = new ControleBloqueioOcorrenciaSeguranca();
    ControleBloqueioOcorrenciaSegurancaVisitaInterna controle = new ControleBloqueioOcorrenciaSegurancaVisitaInterna();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Aprovaçã Segurançao:Ocorrência Disciplinar Visitas:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag, acao;
    int count = 0;
    String dataEntrada, dataValidade;
    int codUsuario, codUserAutoriza;
    String idItem;
    int bloqueioLiberado;
    int tipoBloqueioLiberacao;
    int codBloqueio, codBloqueio1;
    String statusAprovando = "Autorizado na Coordenação";
    int tipoBloq;
    String concluirRegistro = "Sim";
    String statusReg = "FINALIZADO";
    String tipoVisita;
    String senhaUsuario;
    Date dataAprovacao1;

    /**
     * Creates new form TelaBloqueioLiberacaoVisitasPortariaSeguranca
     */
    public TelaBloqueioLiberacaoVisitasPortariaSeguranca() {
        initComponents();
        jRadioBtBloqLibInvisivel.setVisible(!true);
        jRadioBtInvisivel.setVisible(!true);
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btBloqueaLibera = new javax.swing.ButtonGroup();
        tipoBloqueio = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCodigoPesqOcr = new javax.swing.JTextField();
        jNomeInternoPesquisa = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaOcorrenciaVisitasInternosPortaria = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jBtAutorizar = new javax.swing.JButton();
        jBtLiberar = new javax.swing.JButton();
        jBtBloquear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaVisita = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jNomeInternoCrc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jIdInternoCrc = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jRadioBtTipoIndeterminado = new javax.swing.JRadioButton();
        jRadioBtParcial = new javax.swing.JRadioButton();
        jRadioBtInvisivel = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jDataLiberacao = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jCodigoOcorrencia = new javax.swing.JTextField();
        jDataAprovacao = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jColaboradorAutorizador = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jCodigoUsuário = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jRadioBtBloquear = new javax.swing.JRadioButton();
        jRadioBtLiberar = new javax.swing.JRadioButton();
        jRadioBtBloqLibInvisivel = new javax.swing.JRadioButton();
        jBtConcluir = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextoOcorrencia = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jNomeVisita = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Bloqueio/Liberação Visitas na Portaria :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Ocorrência:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Nome do Interno");

        jCodigoPesqOcr.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoPesqOcr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jNomeInternoPesquisa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCodigoPesqOcr, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodos))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jNomeInternoPesquisa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxTodos)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jCodigoPesqOcr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jNomeInternoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInterno))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabelaOcorrenciaVisitasInternosPortaria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaOcorrenciaVisitasInternosPortaria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Ocorrência", "Data", "Código", "Nome do Interno"
            }
        ));
        jTabelaOcorrenciaVisitasInternosPortaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaOcorrenciaVisitasInternosPortariaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaOcorrenciaVisitasInternosPortaria);
        if (jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumnCount() > 0) {
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setMinWidth(80);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setMaxWidth(80);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jBtAutorizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtAutorizar.setText("Autorizar");
        jBtAutorizar.setToolTipText("Novo");
        jBtAutorizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAutorizar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAutorizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAutorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAutorizarActionPerformed(evt);
            }
        });

        jBtLiberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/high-security-icone-8352-16.png"))); // NOI18N
        jBtLiberar.setText("Liberar");
        jBtLiberar.setToolTipText("Alterar");
        jBtLiberar.setEnabled(false);
        jBtLiberar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtLiberar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtLiberar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtLiberarActionPerformed(evt);
            }
        });

        jBtBloquear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/low-security-breach-icone-4155-16.png"))); // NOI18N
        jBtBloquear.setText("Bloquear");
        jBtBloquear.setToolTipText("Grava");
        jBtBloquear.setEnabled(false);
        jBtBloquear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtBloquear.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtBloquear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtBloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBloquearActionPerformed(evt);
            }
        });

        jTabelaVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVisita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Ocorrência", "Código", "Nome do Visitante", "Grau de Parentesco"
            }
        ));
        jTabelaVisita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVisitaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaVisita);
        if (jTabelaVisita.getColumnModel().getColumnCount() > 0) {
            jTabelaVisita.getColumnModel().getColumn(0).setMinWidth(65);
            jTabelaVisita.getColumnModel().getColumn(0).setMaxWidth(65);
            jTabelaVisita.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaVisita.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaVisita.getColumnModel().getColumn(2).setMinWidth(300);
            jTabelaVisita.getColumnModel().getColumn(2).setMaxWidth(300);
            jTabelaVisita.getColumnModel().getColumn(3).setMinWidth(150);
            jTabelaVisita.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dados do Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nome do Interno");

        jNomeInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoCrc.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jIdInternoCrc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrc.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jNomeInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Tipo Bloqueio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        tipoBloqueio.add(jRadioBtTipoIndeterminado);
        jRadioBtTipoIndeterminado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtTipoIndeterminado.setText("Indeterminado");
        jRadioBtTipoIndeterminado.setEnabled(false);
        jRadioBtTipoIndeterminado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioBtTipoIndeterminadoMouseClicked(evt);
            }
        });

        tipoBloqueio.add(jRadioBtParcial);
        jRadioBtParcial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtParcial.setText("Parcial");
        jRadioBtParcial.setEnabled(false);
        jRadioBtParcial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioBtParcialMouseClicked(evt);
            }
        });

        tipoBloqueio.add(jRadioBtInvisivel);
        jRadioBtInvisivel.setSelected(true);
        jRadioBtInvisivel.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioBtTipoIndeterminado)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jRadioBtParcial)
                        .addGap(10, 10, 10)
                        .addComponent(jRadioBtInvisivel))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jRadioBtTipoIndeterminado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioBtParcial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioBtInvisivel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Período de Bloqueio/Liberação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInicial.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Final");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Data Inicial");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataFinal.setEnabled(false);

        jDataLiberacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLiberacao.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 0));
        jLabel5.setText("Data Liberação");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataLiberacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(6, 6, 6))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataLiberacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Código");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data Aprovação");

        jCodigoOcorrencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoOcorrencia.setEnabled(false);

        jDataAprovacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAprovacao.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Usuário Autorizador");

        jColaboradorAutorizador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jColaboradorAutorizador.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Código");

        jCodigoUsuário.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoUsuário.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoUsuário.setEnabled(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        btBloqueaLibera.add(jRadioBtBloquear);
        jRadioBtBloquear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtBloquear.setForeground(new java.awt.Color(255, 0, 0));
        jRadioBtBloquear.setText("Bloquear");
        jRadioBtBloquear.setEnabled(false);

        btBloqueaLibera.add(jRadioBtLiberar);
        jRadioBtLiberar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtLiberar.setForeground(new java.awt.Color(0, 153, 0));
        jRadioBtLiberar.setText("Liberar");
        jRadioBtLiberar.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioBtBloquear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioBtLiberar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRadioBtBloquear)
                    .addComponent(jRadioBtLiberar))
                .addContainerGap())
        );

        btBloqueaLibera.add(jRadioBtBloqLibInvisivel);
        jRadioBtBloqLibInvisivel.setContentAreaFilled(false);
        jRadioBtBloqLibInvisivel.setEnabled(false);

        jBtConcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtConcluir.setToolTipText("Concluir");
        jBtConcluir.setEnabled(false);
        jBtConcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtConcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11)
                    .addComponent(jCodigoOcorrencia, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(jCodigoUsuário))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jDataAprovacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioBtBloqLibInvisivel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtConcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jColaboradorAutorizador)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(219, 219, 219)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jCodigoOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDataAprovacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRadioBtBloqLibInvisivel)))
                            .addComponent(jLabel11)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jBtConcluir)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCodigoUsuário, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jColaboradorAutorizador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtAutorizar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtBloquear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtLiberar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jBtCancelar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAutorizar, jBtBloquear, jBtCancelar, jBtLiberar, jBtSair});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair)
                    .addComponent(jBtLiberar)
                    .addComponent(jBtBloquear)
                    .addComponent(jBtAutorizar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAutorizar, jBtBloquear, jBtCancelar, jBtLiberar, jBtSair});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel13, jPanel4});

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Texto da Ocorrência", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jTextoOcorrencia.setColumns(20);
        jTextoOcorrencia.setRows(5);
        jTextoOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoOcorrencia.setEnabled(false);
        jScrollPane2.setViewportView(jTextoOcorrencia);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dados da Visita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome da Visita");

        jNomeVisita.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jNomeVisita.setForeground(new java.awt.Color(153, 0, 153));
        jNomeVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisita.setDisabledTextColor(new java.awt.Color(153, 0, 153));
        jNomeVisita.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ocorrência", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        setBounds(300, 30, 485, 483);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        if (jCodigoPesqOcr.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código do registro para pesquisa.");
        } else {
            preencherTodasOcorrenciaVisitas("SELECT * FROM REGISTRO_INDISCIPLINA_PORTARIA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON REGISTRO_INDISCIPLINA_PORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE REGISTRO_INDISCIPLINA_PORTARIA.IdReg='" + jCodigoPesqOcr.getText() + "' "
                    + "AND REGISTRO_INDISCIPLINA_PORTARIA.StatusReg='" + statusReg + "'");

        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTodasOcorrenciaVisitas("SELECT * FROM REGISTRO_INDISCIPLINA_PORTARIA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON REGISTRO_INDISCIPLINA_PORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE REGISTRO_INDISCIPLINA_PORTARIA.StatusReg='" + statusReg + "'");
        } else {
            jtotalRegistros.setText("");
            limparTabelaOcorrenciaVisitas();
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        if (jNomeInternoPesquisa.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para pesquisa.");
        } else {
            preencherTodasOcorrenciaVisitas("SELECT * FROM REGISTRO_INDISCIPLINA_PORTARIA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON REGISTRO_INDISCIPLINA_PORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE PRONTUARIOSCRC.NomeInternoCrc LIKE'%" + jNomeInternoPesquisa.getText() + "%' "
                    + "AND REGISTRO_INDISCIPLINA_PORTARIA.StatusReg='" + statusReg + "'");

        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jTabelaOcorrenciaVisitasInternosPortariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaOcorrenciaVisitasInternosPortariaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String codigoReg = "" + jTabelaOcorrenciaVisitasInternosPortaria.getValueAt(jTabelaOcorrenciaVisitasInternosPortaria.getSelectedRow(), 0);
            jCodigoPesqOcr.setText(codigoReg);
            //
            jBtAutorizar.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM REGISTRO_INDISCIPLINA_PORTARIA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON REGISTRO_INDISCIPLINA_PORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE REGISTRO_INDISCIPLINA_PORTARIA.IdReg='" + codigoReg + "'");
                conecta.rs.first();
                jCodigoOcorrencia.setText(String.valueOf(conecta.rs.getInt("IdReg")));
                tipoVisita = conecta.rs.getString("TipoVisita");
                jIdInternoCrc.setText(String.valueOf(conecta.rs.getInt("IdInternoCrc")));
                jNomeInternoCrc.setText(conecta.rs.getString("NomeInternoCrc"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERRO: " + ex);
            }
        }
        if (tipoVisita.equals("Externa")) {
            preencherTabelaVisitas("SELECT * FROM VISITAS_OCORRENCIA_PORTARIA "
                    + "INNER JOIN REGISTRO_INDISCIPLINA_PORTARIA "
                    + "ON VISITAS_OCORRENCIA_PORTARIA.IdReg=REGISTRO_INDISCIPLINA_PORTARIA.IdReg "
                    + "INNER JOIN VISITASINTERNO "
                    + "ON VISITAS_OCORRENCIA_PORTARIA.IdVisita=VISITASINTERNO.IdVisita "
                    + "WHERE VISITAS_OCORRENCIA_PORTARIA.IdReg='" + jCodigoOcorrencia.getText() + "'");
        } else if (tipoVisita.equals("Interna")) {
            preencherTabelaVisitasInternas("SELECT * FROM VISITAS_INTERNAS_OCORRENCIA_PORTARIA "
                    + "INNER JOIN REGISTRO_INDISCIPLINA_PORTARIA "
                    + "ON VISITAS_INTERNAS_OCORRENCIA_PORTARIA.IdReg=REGISTRO_INDISCIPLINA_PORTARIA.IdReg "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON VISITAS_INTERNAS_OCORRENCIA_PORTARIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN ITENS_LISTA_ROL "
                    + "ON PRONTUARIOSCRC.IdInternoCrc=ITENS_LISTA_ROL.IdInternoCrc "
                    + "WHERE VISITAS_INTERNAS_OCORRENCIA_PORTARIA.IdReg='" + jCodigoOcorrencia.getText() + "'");
        }

    }//GEN-LAST:event_jTabelaOcorrenciaVisitasInternosPortariaMouseClicked

    private void jBtAutorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAutorizarActionPerformed
        // TODO add your handling code here: 
        if (codigoUser == codUserAcesso && nomeTela.equals(telaBloqueioLiberacaoVisitasPortaria) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            acao = 1;
            buscarUsuario();
            verificarUsuarioAutorizados();
            verificarBloqueioLiberacao();
            verificarBloqueioLiberacaoVisitasInternas();
            verificarLiberacao(); // TABELA REGISTRO_INDISCIPLINA_PORTARIA
            jBtAutorizar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            if (jNomeInternoCrc.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Pesquise o interno para realizar o procedimento.");
            } else {
                if (codUserAutoriza == codUsuario) {
                    jDataAprovacao.setCalendar(Calendar.getInstance());
                    jDataAprovacao.setEnabled(true);
                    jColaboradorAutorizador.setText(nameUser);
                    if (codBloqueio == 0) { // SERÁ BLOQUEIO VISITA EXTERNA
                        jBtBloquear.setEnabled(true);
                        jBtLiberar.setEnabled(!true);
                        //
                        jRadioBtBloquear.setEnabled(true);
                        jRadioBtBloquear.setSelected(true);
                        jRadioBtLiberar.setEnabled(!true);
                        jRadioBtLiberar.setSelected(!true);
                    } else if (codBloqueio == 1) { // SERÁ LIBERAÇÃO VISITA EXTERNA
                        jBtLiberar.setEnabled(true);
                        jBtBloquear.setEnabled(!true);
                        //
                        jRadioBtBloquear.setEnabled(!true);
                        jRadioBtBloquear.setSelected(!true);
                        jRadioBtLiberar.setEnabled(true);
                        jRadioBtLiberar.setSelected(true);
                    } else if (codBloqueio1 == 0) { // SERÁ BLOQUEIO VISITA INTERNA
                        jBtBloquear.setEnabled(true);
                        jBtLiberar.setEnabled(!true);
                        //
                        jRadioBtBloquear.setEnabled(true);
                        jRadioBtBloquear.setSelected(true);
                        jRadioBtLiberar.setEnabled(!true);
                        jRadioBtLiberar.setSelected(!true);
                    } else if (codBloqueio1 == 1) { // SERÁ LIBERAR VISITA INTERNA
                        jBtLiberar.setEnabled(true);
                        jBtBloquear.setEnabled(!true);
                        //
                        jRadioBtBloquear.setEnabled(!true);
                        jRadioBtBloquear.setSelected(!true);
                        jRadioBtLiberar.setEnabled(true);
                        jRadioBtLiberar.setSelected(true);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Usuário não tem autorização para bloquear/Liberar registro..");
                    jBtAutorizar.setEnabled(true);
                    jBtCancelar.setEnabled(!true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem autorização para liberar registro.");
        }
    }//GEN-LAST:event_jBtAutorizarActionPerformed

    private void jBtBloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBloquearActionPerformed
        // TODO add your handling code here:
        if (codigoUser == codUserAcesso && nomeTela.equals(telaBloqueioLiberacaoVisitasPortaria) && codAlterar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            if (concluirRegistro.equals("Sim")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, já foi concluído.");
            } else {
                bloquearVisita();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem autorização para bloquear registro.");
        }
    }//GEN-LAST:event_jBtBloquearActionPerformed

    private void jBtLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtLiberarActionPerformed
        // TODO add your handling code here:
        if (codigoUser == codUserAcesso && nomeTela.equals(telaBloqueioLiberacaoVisitasPortaria) && codExcluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            acao = 2;
            liberarVisita();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem autorização para liberar registro.");
        }
    }//GEN-LAST:event_jBtLiberarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jTabelaVisitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVisitaMouseClicked
        // TODO add your handling code here:
        if (acao == 1 || acao == 2) {
            if (flag == 1) {
                idItem = "" + jTabelaVisita.getValueAt(jTabelaVisita.getSelectedRow(), 0);
                String idVisita = "" + jTabelaVisita.getValueAt(jTabelaVisita.getSelectedRow(), 1);
                String nomeVisitante = "" + jTabelaVisita.getValueAt(jTabelaVisita.getSelectedRow(), 2);
                jNomeVisita.setText(nomeVisitante);
                //           
                conecta.abrirConexao();
                if (tipoVisita.equals("Externa")) {
                    try {
                        conecta.executaSQL("SELECT * FROM VISITASINTERNO "
                                + "INNER JOIN OCORRENCIA_INDISCIPLINA_PORTARIA "
                                + "ON VISITASINTERNO.IdVisita=OCORRENCIA_INDISCIPLINA_PORTARIA.IdVisita "
                                + "INNER JOIN VISITAS_OCORRENCIA_PORTARIA "
                                + "ON OCORRENCIA_INDISCIPLINA_PORTARIA.IdVisita=VISITAS_OCORRENCIA_PORTARIA.IdVisita "
                                + "WHERE VISITASINTERNO.NomeVisita='" + nomeVisitante + "' "
                                + "AND VISITASINTERNO.IdVisita='" + idVisita + "'");
                        conecta.rs.first();
                        jNomeVisita.setText(conecta.rs.getString("NomeVisita"));
                        jTextoOcorrencia.setText(conecta.rs.getString("TextoOcorrencia"));
                        jDataInicial.setDate(conecta.rs.getDate("DataBloq"));
                        tipoBloq = conecta.rs.getInt("TipoBloq");
                        jDataFinal.setDate(conecta.rs.getDate("DataBloq1"));
                        jDataLiberacao.setDate(conecta.rs.getDate("DataLib"));
                        concluirRegistro = conecta.rs.getString("Confirmar");
                        if (jRadioBtTipoIndeterminado.isSelected() && tipoBloq == 0 && jDataInicial.getDate() == null) {
                            jDataInicial.setEnabled(true);
                            jDataFinal.setEnabled(!true);
                        } else if (jRadioBtParcial.isSelected() && tipoBloq == 1 && jDataInicial.getDate() == null) {
                            jDataInicial.setEnabled(true);
                            jDataFinal.setEnabled(true);
                        }
                    } catch (SQLException ex) {
                    }
                } else if (tipoVisita.equals("Interna")) {
                    try {
                        conecta.executaSQL("SELECT * FROM PRONTUARIOSCRC "
                                + "INNER JOIN OCORRENCIA_INDISCIPLINA_PORTARIA_INTERNOS "
                                + "ON PRONTUARIOSCRC.IdInternoCrc=OCORRENCIA_INDISCIPLINA_PORTARIA_INTERNOS.IdInternoCrc "
                                + "INNER JOIN VISITAS_INTERNAS_OCORRENCIA_PORTARIA "
                                + "ON OCORRENCIA_INDISCIPLINA_PORTARIA_INTERNOS.IdInternoCrc=VISITAS_INTERNAS_OCORRENCIA_PORTARIA.IdInternoCrc "
                                + "WHERE PRONTUARIOSCRC.NomeInternoCrc='" + nomeVisitante + "' "
                                + "AND PRONTUARIOSCRC.IdInternoCrc='" + idVisita + "'");
                        conecta.rs.first();
                        jNomeVisita.setText(conecta.rs.getString("NomeInternoCrc"));
                        jTextoOcorrencia.setText(conecta.rs.getString("TextoOcorrencia"));
                        jDataInicial.setDate(conecta.rs.getDate("DataBloq"));
                        tipoBloq = conecta.rs.getInt("TipoBloq");
                        jDataFinal.setDate(conecta.rs.getDate("DataBloq1"));
                        jDataLiberacao.setDate(conecta.rs.getDate("DataLib"));
                        concluirRegistro = conecta.rs.getString("Confirmar");
                        if (jRadioBtTipoIndeterminado.isSelected() && tipoBloq == 0 && jDataInicial.getDate() == null) {
                            jDataInicial.setEnabled(true);
                            jDataFinal.setEnabled(!true);
                        } else if (jRadioBtParcial.isSelected() && tipoBloq == 0 && jDataInicial.getDate() == null) {
                            jDataInicial.setEnabled(true);
                            jDataFinal.setEnabled(true);
                        } else if (jRadioBtTipoIndeterminado.isSelected() && tipoBloq == 1) {
                            jDataInicial.setEnabled(!true);
                            jDataFinal.setEnabled(!true);
                        } else if (jRadioBtParcial.isSelected() && tipoBloq == 1) {
                            jDataInicial.setEnabled(!true);
                            jDataFinal.setEnabled(!true);
                        }
                    } catch (SQLException ex) {
                    }
                }
                conecta.desconecta();
            }
            // 0 - BLOQUEAR 1 - LIBERAR
            if (tipoBloq == 0 && jDataInicial.getDate() != null || tipoBloq == 0 && jDataLiberacao.getDate() != null) {
                jBtBloquear.setEnabled(true);
                jBtLiberar.setEnabled(!true);
                jDataAprovacao.setEnabled(true);
                jRadioBtBloquear.setEnabled(true);
                jRadioBtLiberar.setSelected(!true);
                jRadioBtTipoIndeterminado.setEnabled(true);
                jRadioBtParcial.setEnabled(true);
                jDataLiberacao.setEnabled(!true);
                jBtConcluir.setEnabled(true);
            } else if (tipoBloq == 1 && dataAprovacao1 != null) {
                jBtBloquear.setEnabled(!true);
                jRadioBtBloquear.setEnabled(!true);
                jBtLiberar.setEnabled(true);
                jDataLiberacao.setEnabled(true);
                jBtConcluir.setEnabled(true);
                jDataLiberacao.setCalendar(Calendar.getInstance());
            }
        }
    }//GEN-LAST:event_jTabelaVisitaMouseClicked

    private void jRadioBtTipoIndeterminadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioBtTipoIndeterminadoMouseClicked
        // TODO add your handling code here:
        if (jRadioBtBloquear.isSelected()) {
            jRadioBtParcial.setEnabled(!true);
            jRadioBtTipoIndeterminado.setSelected(true);
            jRadioBtTipoIndeterminado.setEnabled(true);
            jDataInicial.setEnabled(true);
            jDataFinal.setEnabled(!true);
            jDataFinal.setDate(null);
        }
    }//GEN-LAST:event_jRadioBtTipoIndeterminadoMouseClicked

    private void jRadioBtParcialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioBtParcialMouseClicked
        // TODO add your handling code here:
        if (jRadioBtBloquear.isSelected()) {
            jRadioBtParcial.setEnabled(true);
            jRadioBtParcial.setSelected(true);
            jRadioBtTipoIndeterminado.setEnabled(!true);
            jDataInicial.setEnabled(true);
            jDataFinal.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioBtParcialMouseClicked

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        acao = 0;
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConcluirActionPerformed
        // TODO add your handling code here:
        if (concluirRegistro.equals("Sim")) {
            JOptionPane.showMessageDialog(rootPane, "Registro já foi concluído.");
        } else {
            concluirRegistro = "Sim";
            objOcrPort.setConfirmar(concluirRegistro);
            objOcrPort.setIdReg(Integer.valueOf(jCodigoOcorrencia.getText()));
            control.confirmarLiberacaoVisitasSeguranca(objOcrPort);
            Salvar();
            JOptionPane.showMessageDialog(rootPane, "Registro concluído com sucesso.");
        }
    }//GEN-LAST:event_jBtConcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btBloqueaLibera;
    private javax.swing.JButton jBtAutorizar;
    private javax.swing.JButton jBtBloquear;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtConcluir;
    private javax.swing.JButton jBtLiberar;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JCheckBox jCheckBoxTodos;
    public static javax.swing.JTextField jCodigoOcorrencia;
    private javax.swing.JTextField jCodigoPesqOcr;
    private javax.swing.JTextField jCodigoUsuário;
    private javax.swing.JTextField jColaboradorAutorizador;
    private com.toedter.calendar.JDateChooser jDataAprovacao;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    private com.toedter.calendar.JDateChooser jDataLiberacao;
    private javax.swing.JTextField jIdInternoCrc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNomeInternoCrc;
    private javax.swing.JTextField jNomeInternoPesquisa;
    private javax.swing.JTextField jNomeVisita;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioBtBloqLibInvisivel;
    private javax.swing.JRadioButton jRadioBtBloquear;
    private javax.swing.JRadioButton jRadioBtInvisivel;
    private javax.swing.JRadioButton jRadioBtLiberar;
    private javax.swing.JRadioButton jRadioBtParcial;
    private javax.swing.JRadioButton jRadioBtTipoIndeterminado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaOcorrenciaVisitasInternosPortaria;
    private javax.swing.JTable jTabelaVisita;
    private javax.swing.JTextArea jTextoOcorrencia;
    private javax.swing.JLabel jtotalRegistros;
    private javax.swing.ButtonGroup tipoBloqueio;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jTextoOcorrencia.setLineWrap(true);
        jTextoOcorrencia.setWrapStyleWord(true);
    }

    public void corCampos() {
        jCodigoOcorrencia.setBackground(Color.white);
        jDataAprovacao.setBackground(Color.white);
        jCodigoUsuário.setBackground(Color.white);
        jColaboradorAutorizador.setBackground(Color.white);
        jIdInternoCrc.setBackground(Color.white);
        jNomeInternoCrc.setBackground(Color.white);
        jDataInicial.setBackground(Color.white);
        jDataFinal.setBackground(Color.white);
        jDataLiberacao.setBackground(Color.white);
        jNomeVisita.setBackground(Color.white);
        jTextoOcorrencia.setBackground(Color.white);
    }

    public void Salvar() {
        jDataAprovacao.setEnabled(!true);
        jRadioBtBloquear.setEnabled(!true);
        jRadioBtLiberar.setEnabled(!true);
        jRadioBtTipoIndeterminado.setEnabled(!true);
        jRadioBtParcial.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jDataLiberacao.setEnabled(!true);
        jBtBloquear.setEnabled(!true);
        jBtLiberar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Cancelar() {
        jRadioBtBloqLibInvisivel.setSelected(true);
        jCodigoUsuário.setText("");
        jColaboradorAutorizador.setText("");
        //
        jBtAutorizar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtBloquear.setEnabled(!true);
        jBtLiberar.setEnabled(!true);
        //
        jRadioBtInvisivel.setSelected(true);
        //
        jDataAprovacao.setEnabled(!true);
        jDataInicial.setDate(null);
        jDataFinal.setDate(null);
        jDataLiberacao.setDate(null);
        //
        jRadioBtBloquear.setEnabled(!true);
        jRadioBtLiberar.setEnabled(!true);
        jRadioBtTipoIndeterminado.setEnabled(!true);
        jRadioBtParcial.setEnabled(!true);
        jDataInicial.setEnabled(!true);
        jDataFinal.setEnabled(!true);
        jDataLiberacao.setEnabled(!true);
    }

    public void buscarUsuario() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codUsuario = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void verificarUsuarioAutorizados() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM APROVADORES_OCORRENCIA_PORTARIA WHERE IdUsuario='" + codUsuario + "'");
            conecta.rs.first();
            codUserAutoriza = conecta.rs.getInt("IdUsuario");
            jCodigoUsuário.setText(conecta.rs.getString("IdUsuario"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    // VISITAS EXTERNA
    public void verificarBloqueioLiberacao() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM VISITAS_OCORRENCIA_PORTARIA WHERE IdReg='" + jCodigoPesqOcr.getText() + "'");
            conecta.rs.first();
            codBloqueio = conecta.rs.getInt("TipoBloq");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    // VISITAS INTERNAS
    public void verificarBloqueioLiberacaoVisitasInternas() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM VISITAS_INTERNAS_OCORRENCIA_PORTARIA WHERE IdReg='" + jCodigoPesqOcr.getText() + "'");
            conecta.rs.first();
            codBloqueio1 = conecta.rs.getInt("TipoBloq");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    //VERIFICAR DATA DE APROVAÇÃO DO SERVIÇO SOCIAL PARA PODER LIBERAR NA COORDENAÇÃO.
    public void verificarLiberacao() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM REGISTRO_INDISCIPLINA_PORTARIA WHERE IdReg='" + jCodigoPesqOcr.getText() + "'");
            conecta.rs.first();
            dataAprovacao1 = conecta.rs.getDate("DataAprovacao1");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    // SOLICITA SENHA PARA LIBERAÇÃO/BLOQUEIO DA OCORRENCIA VISITAS
    public void bloquearVisita() {
        // Cria campo onde o usuario entra com a senha  
        JPasswordField password = new JPasswordField(10);
        password.setEchoChar('*');
        // Cria um rótulo para o campo  
        JLabel rotulo = new JLabel("Entre com a senha:");
        // Coloca o rótulo e a caixa de entrada numa JPanel:  
        JPanel entUsuario = new JPanel();
        entUsuario.add(rotulo);
        entUsuario.add(password);
        // Colocar campo chanfrado manualmente.
        password.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        JOptionPane.showMessageDialog(null, entUsuario, "Acesso restrito", JOptionPane.PLAIN_MESSAGE);
        //  JOptionPane.showConfirmDialog(this, entUsuario, "Acesso restrito", JOptionPane.YES_NO_OPTION);       
        try {
            conecta.abrirConexao();
            conecta.executaSQL("SELECT * FROM USUARIOS WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            senhaUsuario = conecta.rs.getString("SenhaUsuario");
        } catch (Exception e) {
        }
        if (password.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite a senha corretamente !!!");
        } else if (password.getText().equals(senhaUsuario)) {
            if (jColaboradorAutorizador.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do usuário autorizado a Bloquear/Liberar.");
            } else if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data Inicial do bloqueio.");
            } else if (jDataFinal.getDate() == null && jRadioBtParcial.isSelected()) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data Final do bloqueio.");
            } else {
                if (jRadioBtBloquear.isSelected()) {
                    bloqueioLiberado = 0; // BLOQUEIO INDETERMINADO
                } else if (jRadioBtParcial.isSelected()) {
                    bloqueioLiberado = 1; // BLOQUEIO PARCIAL
                }
                codBloqueio = 1; //INSERI 1 PARA BLOQUEIO
                if (tipoVisita.equals("Externa")) {
                    objRegInd.setStatusAprovacao(statusAprovando);
                    objRegInd.setDataAprovacao(jDataAprovacao.getDate());
                    objRegInd.setUsuarioAprovador(jColaboradorAutorizador.getText());
                    objRegInd.setIdReg(Integer.valueOf(jCodigoOcorrencia.getText()));
                    control.atualizarBloqueioVisitasSeguranca(objRegInd); // TABELA REGISTRO_INDISCIPLINA_PORTARIA
                    //
                    objOcrPort.setDataBloq(jDataInicial.getDate());
                    objOcrPort.setDataBloq1(jDataFinal.getDate());
                    objOcrPort.setBloqueioLiberacao(bloqueioLiberado);
                    objOcrPort.setTipoBloqueio(codBloqueio);
                    objOcrPort.setIdItem(Integer.valueOf(idItem));
                    control.atualizarBloqueioVisitasSegurancaDatas(objOcrPort); // TABELA VISITAS_OCORRENCIA_PORTARIA
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro atualizado com sucesso.");
                } else if (tipoVisita.equals("Interna")) {
                    objRegInd.setStatusAprovacao(statusAprovando);
                    objRegInd.setDataAprovacao(jDataAprovacao.getDate());
                    objRegInd.setUsuarioAprovador(jColaboradorAutorizador.getText());
                    objRegInd.setIdReg(Integer.valueOf(jCodigoOcorrencia.getText()));
                    controle.atualizarBloqueioVisitasSegurancaInterna(objRegInd); // TABELA REGISTRO_INDISCIPLINA_PORTARIA
                    //
                    objOcrPort.setDataBloq(jDataInicial.getDate());
                    objOcrPort.setDataBloq1(jDataFinal.getDate());
                    objOcrPort.setBloqueioLiberacao(bloqueioLiberado);
                    objOcrPort.setIdItem(Integer.valueOf(idItem));
                    controle.atualizarBloqueioVisitasSegurancaDatasInterna(objOcrPort); // TABELA VISITAS_INTERNAS_OCORRENCIA_PORTARIA
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro atualizado com sucesso.");
                }
            }
        } else if (!password.getText().equals(senhaUsuario)) {
            JOptionPane.showMessageDialog(rootPane, "Senha Inválida...");
        }
        conecta.desconecta();
    }

    public void liberarVisita() {
        // Cria campo onde o usuario entra com a senha  
        JPasswordField password = new JPasswordField(10);
        password.setEchoChar('*');
        // Cria um rótulo para o campo  
        JLabel rotulo = new JLabel("Entre com a senha:");
        // Coloca o rótulo e a caixa de entrada numa JPanel:  
        JPanel entUsuario = new JPanel();
        entUsuario.add(rotulo);
        entUsuario.add(password);
        // Colocar campo chanfrado manualmente.
        password.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        JOptionPane.showMessageDialog(null, entUsuario, "Acesso restrito", JOptionPane.PLAIN_MESSAGE);
        //  JOptionPane.showConfirmDialog(this, entUsuario, "Acesso restrito", JOptionPane.YES_NO_OPTION);       
        try {
            conecta.abrirConexao();
            conecta.executaSQL("SELECT * FROM USUARIOS WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            senhaUsuario = conecta.rs.getString("SenhaUsuario");
        } catch (Exception e) {
        }
        if (password.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite a senha corretamente !!!");
        } else if (password.getText().equals(senhaUsuario)) {
            if (concluirRegistro.equals("Sim")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, já foi concluído.");
            } else {
                if (jDataLiberacao.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data de liberação da visita.");
                } else {
                    if (jRadioBtBloquear.isSelected()) {
                        bloqueioLiberado = 0;
                    } else if (jRadioBtParcial.isSelected()) {
                        bloqueioLiberado = 1;
                    }
                    if (tipoVisita.equals("Externa")) {
                        objOcrPort.setDataLib(jDataLiberacao.getDate());
                        objOcrPort.setBloqueioLiberacao(bloqueioLiberado);
                        objOcrPort.setIdItem(Integer.valueOf(idItem));
                        control.atualizarLiberacaoVisitasSeguranca(objOcrPort);
                        Salvar();
                        JOptionPane.showMessageDialog(rootPane, "Registro atualizado com sucesso.");
                    } else if (tipoVisita.equals("Interna")) {
                        objOcrPort.setDataLib(jDataLiberacao.getDate());
                        objOcrPort.setBloqueioLiberacao(bloqueioLiberado);
                        objOcrPort.setIdItem(Integer.valueOf(idItem));
                        controle.atualizarLiberacaoVisitasSegurancaInterna(objOcrPort);
                        Salvar();
                        JOptionPane.showMessageDialog(rootPane, "Registro atualizado com sucesso.");
                    }
                }
            }
        } else if (!password.getText().equals(senhaUsuario)) {
            JOptionPane.showMessageDialog(rootPane, "Senha Inválida...");
        }

        conecta.desconecta();
    }

    public void preencherTodasOcorrenciaVisitas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Código", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataReg");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdReg"), dataEntrada, conecta.rs.getString("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaOcorrenciaVisitasInternosPortaria.setModel(modelo);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(3).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getTableHeader().setReorderingAllowed(false);
        jTabelaOcorrenciaVisitasInternosPortaria.setAutoResizeMode(jTabelaOcorrenciaVisitasInternosPortaria.AUTO_RESIZE_OFF);
        jTabelaOcorrenciaVisitasInternosPortaria.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaOcorrenciaVisitas();
        conecta.desconecta();
    }

    public void limparTabelaOcorrenciaVisitas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Código", "Nome do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaOcorrenciaVisitasInternosPortaria.setModel(modelo);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(3).setResizable(false);
        jTabelaOcorrenciaVisitasInternosPortaria.getTableHeader().setReorderingAllowed(false);
        jTabelaOcorrenciaVisitasInternosPortaria.setAutoResizeMode(jTabelaOcorrenciaVisitasInternosPortaria.AUTO_RESIZE_OFF);
        jTabelaOcorrenciaVisitasInternosPortaria.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaOcorrenciaVisitas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaOcorrenciaVisitasInternosPortaria.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaVisitas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Visitante", "Grau Parentesco"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                bloqueioLiberado = conecta.rs.getInt("BloqLib");
                //
                dados.add(new Object[]{conecta.rs.getString("IdItem"), conecta.rs.getString("IdVisita"), conecta.rs.getString("NomeVisita"), conecta.rs.getString("ParentescoVisita")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisita.setModel(modelo);
        jTabelaVisita.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaVisita.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaVisita.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaVisita.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTabelaVisita.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisita.getTableHeader().setReorderingAllowed(false);
        jTabelaVisita.setAutoResizeMode(jTabelaVisita.AUTO_RESIZE_OFF);
        jTabelaVisita.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaVisitas();
        conecta.desconecta();
    }

    public void preencherTabelaVisitasInternas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Visitante", "Data Validade"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                bloqueioLiberado = conecta.rs.getInt("BloqLib");
                //
                dataValidade = conecta.rs.getString("DataValidade");
                String diae = dataValidade.substring(8, 10);
                String mese = dataValidade.substring(5, 7);
                String anoe = dataValidade.substring(0, 4);
                dataValidade = diae + "/" + mese + "/" + anoe;
                dados.add(new Object[]{conecta.rs.getString("IdItem"), conecta.rs.getString("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), dataValidade});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisita.setModel(modelo);
        jTabelaVisita.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaVisita.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaVisita.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaVisita.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisita.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTabelaVisita.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisita.getTableHeader().setReorderingAllowed(false);
        jTabelaVisita.setAutoResizeMode(jTabelaVisita.AUTO_RESIZE_OFF);
        jTabelaVisita.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaVisitas();
        conecta.desconecta();
    }

    public void alinharTabelaVisitas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVisita.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVisita.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jCodigoOcorrencia.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
