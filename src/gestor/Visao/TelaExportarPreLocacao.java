/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControlePreLocacaoInternos;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensPreLocacao;
import gestor.Modelo.PreLocacao;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaPreLocaoInternos.jCodigoReg;
import java.awt.Rectangle;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronal
 */
public class TelaExportarPreLocacao extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    PreLocacao objPreLocacao = new PreLocacao();
    ItensPreLocacao objItensPreLocacao = new ItensPreLocacao();
    ControlePreLocacaoInternos controle = new ControlePreLocacaoInternos();
    //
    int count = 0;
    int flag = 1;
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    String idInterno;
    String nomeInterno;
    String descricaoPavilhao;
    //
    int tipoPesq = 0;
    String confirmacao = "Não"; // PARA PESQUISAR OS INTERNOS E AS BASES PODEREM PESQUISAR
    String confirmacaoExp = "Sim"; // PARA GRAVAR O USO DO INTERNO

    /**
     * Creates new form TelaExportarPreLocacao
     */
    public static TelaPreLocaoInternos telaPreLocacao;

    public TelaExportarPreLocacao(TelaPreLocaoInternos parent, boolean modal) {
        this.telaPreLocacao = parent;
        this.setModal(modal);
        setLocationRelativeTo(telaPreLocacao);
        initComponents();
        inicializarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCodigoRegistroExp = new javax.swing.JTextField();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdInternoExp = new javax.swing.JTextField();
        jNomeInternoExp = new javax.swing.JTextField();
        jBtPesqNomeInternoExp = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jDescricaoPavilhaoExp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaExportarInterno = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jBtConfirmar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRBtUm = new javax.swing.JRadioButton();
        jRBtTodos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Exportar Internos para Locação :::...");

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jProgressBar1.setStringPainted(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dados do Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(153, 0, 51))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Registro");

        jCodigoRegistroExp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCodigoRegistroExp.setForeground(new java.awt.Color(204, 0, 0));
        jCodigoRegistroExp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoRegistroExp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.setToolTipText("Selecionar Todos Registros");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Código");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nome Completo do Interno");

        jIdInternoExp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoExp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jNomeInternoExp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInternoExp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInternoExp.setToolTipText("Pesquisar Interno por Nome");
        jBtPesqNomeInternoExp.setContentAreaFilled(false);
        jBtPesqNomeInternoExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoExpActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Pavilhão");

        jDescricaoPavilhaoExp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCodigoRegistroExp, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jDescricaoPavilhaoExp, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxTodos))
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jIdInternoExp, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jNomeInternoExp, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtPesqNomeInternoExp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCodigoRegistroExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoPavilhaoExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jNomeInternoExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInternoExp)
                    .addComponent(jIdInternoExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaExportarInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaExportarInterno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome Completo do Interno", "Pavilhão", "Regime"
            }
        ));
        jTabelaExportarInterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaExportarInternoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaExportarInterno);
        if (jTabelaExportarInterno.getColumnModel().getColumnCount() > 0) {
            jTabelaExportarInterno.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaExportarInterno.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaExportarInterno.getColumnModel().getColumn(1).setMinWidth(400);
            jTabelaExportarInterno.getColumnModel().getColumn(1).setMaxWidth(400);
            jTabelaExportarInterno.getColumnModel().getColumn(2).setMinWidth(200);
            jTabelaExportarInterno.getColumnModel().getColumn(2).setMaxWidth(200);
            jTabelaExportarInterno.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaExportarInterno.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Escolhas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jBtConfirmar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtConfirmar.setForeground(new java.awt.Color(0, 0, 255));
        jBtConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Botoes_Site_5745_Knob_Valid_Green(1).png"))); // NOI18N
        jBtConfirmar.setText("Confirmar");
        jBtConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtConfirmarActionPerformed(evt);
            }
        });

        jBtSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSair.setForeground(new java.awt.Color(255, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-32.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtSair)
                    .addComponent(jBtConfirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Opções", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        buttonGroup1.add(jRBtUm);
        jRBtUm.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtUm.setForeground(new java.awt.Color(204, 0, 0));
        jRBtUm.setText("Um");

        buttonGroup1.add(jRBtTodos);
        jRBtTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtTodos.setForeground(new java.awt.Color(0, 0, 255));
        jRBtTodos.setText("Todos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBtTodos)
                    .addComponent(jRBtUm))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jRBtUm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBtTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel30, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        count = 0;
        if (jCodigoRegistroExp.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar o número do registro para pooder exportar os dados.");
        } else {
            if (evt.getStateChange() == evt.SELECTED) {
                this.preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN PRE_LOCACAO_INTERNOS "
                        + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                        + "INNER JOIN PAVILHAO "
                        + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                        + "INNER JOIN DADOSPENAISINTERNOS "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=DADOSPENAISINTERNOS.IdInternoCrc "
                        + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoRegistroExp.getText() + "' "
                        + "AND ITENS_PRE_LOCACAO_INTERNOS.Confirmacao='" + confirmacao + "'");
            } else {
                jtotalRegistros.setText("");
                limparTabelaItens();
            }
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConfirmarActionPerformed
        // TODO add your handling code here:
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        if (jRBtUm.isSelected()) {
            tipoPesq = 1;
        } else if (!jRBtUm.isSelected()) {
            tipoPesq = 0;
        }
        if (jRBtTodos.isSelected()) {
            tipoPesq = 1;
            limparCampos();
        } else if (jRBtTodos.isSelected()) {
            tipoPesq = 0;
        }
        Integer rows = jTabelaExportarInterno.getModel().getRowCount();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não existe dados a ser exportador.");
        } else if (jCodigoRegistroExp.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar o número do registro primeiro");
        } else if (!jIdInternoExp.getText().equals("") && !jNomeInternoExp.getText().equals("") && jRBtUm.isSelected()) {
            objItensPreLocacao.setCodigoReg(Integer.valueOf(jCodigoRegistroExp.getText()));
            objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoExp.getText()));
            objItensPreLocacao.setNomeInternoCrc(jNomeInternoExp.getText());
            objItensPreLocacao.setDescricaoPavilhao(jDescricaoPavilhaoExp.getText());
            objItensPreLocacao.setTipoPesquisa(tipoPesq);
            objItensPreLocacao.setConfirmacao(confirmacao);
            // LOG DO USUÁRIO
            objItensPreLocacao.setUsuarioInsert(nameUser);
            objItensPreLocacao.setDataInsert(dataModFinal);
            objItensPreLocacao.setHorarioInsert(horaMov);
            // PERSISTÊNCIA NO BANCO DE DADOS.
            controle.incluirItensExportacaoLocacaoInternos(objItensPreLocacao);
            // CONFIRMAR A EXPORTAÇÃO E RETIRAR DA PESQUISA.
            objItensPreLocacao.setIdEntrada(Integer.valueOf(jCodigoRegistroExp.getText()));
            objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoExp.getText()));
            objItensPreLocacao.setConfirmacao(confirmacaoExp);
            controle.confirmcaoPreLocacaoInternos(objItensPreLocacao);
            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
        } else if (jIdInternoExp.getText().equals("") && jNomeInternoExp.getText().equals("") && jRBtTodos.isSelected()) {
            try {
                for (int p = 0; p < jTabelaExportarInterno.getRowCount(); p++) {
                    objItensPreLocacao.setCodigoReg(Integer.valueOf(jCodigoRegistroExp.getText()));
                    objItensPreLocacao.setIdInternoCrc((int) jTabelaExportarInterno.getValueAt(p, 0));
                    objItensPreLocacao.setNomeInternoCrc((String) jTabelaExportarInterno.getValueAt(p, 1));
                    objItensPreLocacao.setDescricaoPavilhao((String) jTabelaExportarInterno.getValueAt(p, 2));
                    objItensPreLocacao.setTipoPesquisa(tipoPesq);
                    objItensPreLocacao.setConfirmacao(confirmacao);
                    // LOG DO USUÁRIO
                    objItensPreLocacao.setUsuarioInsert(nameUser);
                    objItensPreLocacao.setDataInsert(dataModFinal);
                    objItensPreLocacao.setHorarioInsert(horaMov);
                    // PERSISTÊNCIA NO BANCO DE DADOS.
                    controle.incluirItensExportacaoLocacaoInternos(objItensPreLocacao);
                    // CONFIRMAR A EXPORTAÇÃO E RETIRAR DA PESQUISA.
                    objItensPreLocacao.setIdEntrada(Integer.valueOf(jCodigoRegistroExp.getText()));
                    objItensPreLocacao.setIdInternoCrc((int) jTabelaExportarInterno.getValueAt(p, 0));
                    objItensPreLocacao.setNomeInternoCrc((String) jTabelaExportarInterno.getValueAt(p, 1));
                    objItensPreLocacao.setConfirmacao(confirmacaoExp);
                    controle.confirmcaoPreLocacaoInternos(objItensPreLocacao);
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaExportacaoInternos.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                Thread t = new Thread() {
                    public void run() {
                        jProgressBar1.setMaximum(jTabelaExportarInterno.getRowCount());
                        Rectangle rect;
                        for (int i = 0; i < jTabelaExportarInterno.getRowCount(); i++) {
                            rect = jTabelaExportarInterno.getCellRect(i, 0, true);
                            try {
                                jTabelaExportarInterno.scrollRectToVisible(rect);
                            } catch (java.lang.ClassCastException e) {
                            }
                            jTabelaExportarInterno.setRowSelectionInterval(i, 1);
                            jProgressBar1.setValue((i + 1));
                            try {
                                Thread.sleep(20);
                            } catch (InterruptedException ex) {
                            }
                        }
                        jProgressBar1.setValue(0);
                        try {
                            preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                                    + "INNER JOIN PRONTUARIOSCRC "
                                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                    + "INNER JOIN PRE_LOCACAO_INTERNOS "
                                    + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                                    + "INNER JOIN PAVILHAO "
                                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                                    + "INNER JOIN DADOSPENAISINTERNOS "
                                    + "ON PRONTUARIOSCRC.IdInternoCrc=DADOSPENAISINTERNOS.IdInternoCrc "
                                    + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoRegistroExp.getText() + "' "
                                    + "AND PRONTUARIOSCRC.NomeInternoCrc LIKE'%" + jNomeInternoExp.getText() + "%' "
                                    + "AND ITENS_PRE_LOCACAO_INTERNOS.Confirmacao='" + confirmacao + "'");
                            JOptionPane.showMessageDialog(rootPane, "Dados exportado com sucesso.");
                        } catch (Exception e) {
                        }
                    }
                };
                t.start();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jBtConfirmarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqNomeInternoExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoExpActionPerformed
        // TODO add your handling code here:
        if (jNomeInternoExp.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para pesquisa.");
        } else {
            preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN PRE_LOCACAO_INTERNOS "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                    + "INNER JOIN PAVILHAO "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                    + "INNER JOIN DADOSPENAISINTERNOS "
                    + "ON PRONTUARIOSCRC.IdInternoCrc=DADOSPENAISINTERNOS.IdInternoCrc "
                    + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoRegistroExp.getText() + "' "
                    + "AND PRONTUARIOSCRC.NomeInternoCrc LIKE'%" + jNomeInternoExp.getText() + "%' "
                    + "AND ITENS_PRE_LOCACAO_INTERNOS.Confirmacao='" + confirmacao + "'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoExpActionPerformed

    private void jTabelaExportarInternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaExportarInternoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            descricaoPavilhao = "" + jTabelaExportarInterno.getValueAt(jTabelaExportarInterno.getSelectedRow(), 2);
            jDescricaoPavilhaoExp.setText(descricaoPavilhao);
            nomeInterno = "" + jTabelaExportarInterno.getValueAt(jTabelaExportarInterno.getSelectedRow(), 1);
            jNomeInternoExp.setText(nomeInterno);
            idInterno = "" + jTabelaExportarInterno.getValueAt(jTabelaExportarInterno.getSelectedRow(), 0);
            jIdInternoExp.setText(idInterno);
        }
    }//GEN-LAST:event_jTabelaExportarInternoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaExportarPreLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaExportarPreLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaExportarPreLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaExportarPreLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaExportarPreLocacao dialog = new TelaExportarPreLocacao(telaPreLocacao, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtConfirmar;
    private javax.swing.JButton jBtPesqNomeInternoExp;
    private javax.swing.JButton jBtSair;
    private javax.swing.JCheckBox jCheckBoxTodos;
    private javax.swing.JTextField jCodigoRegistroExp;
    private javax.swing.JTextField jDescricaoPavilhaoExp;
    private javax.swing.JTextField jIdInternoExp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JTextField jNomeInternoExp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRBtTodos;
    private javax.swing.JRadioButton jRBtUm;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelaExportarInterno;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void inicializarCampos() {
        jCodigoRegistroExp.setText(jCodigoReg.getText());
    }

    public void limparCampos() {
        jDescricaoPavilhaoExp.setText("");
        jIdInternoExp.setText("");
        jNomeInternoExp.setText("");
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome Completo do Interno", "Pavilhão", "Regime"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            count = 0;
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("DescricaoPav"), conecta.rs.getString("Regime")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem exibidos.");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaExportarInterno.setModel(modelo);
        jTabelaExportarInterno.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaExportarInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaExportarInterno.getColumnModel().getColumn(1).setPreferredWidth(400);
        jTabelaExportarInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaExportarInterno.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabelaExportarInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaExportarInterno.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaExportarInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaExportarInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaExportarInterno.setAutoResizeMode(jTabelaExportarInterno.AUTO_RESIZE_OFF);
        jTabelaExportarInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome Completo do Interno", "Pavilhão", "Regime"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaExportarInterno.setModel(modelo);
        jTabelaExportarInterno.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaExportarInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaExportarInterno.getColumnModel().getColumn(1).setPreferredWidth(400);
        jTabelaExportarInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaExportarInterno.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabelaExportarInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaExportarInterno.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaExportarInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaExportarInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaExportarInterno.setAutoResizeMode(jTabelaExportarInterno.AUTO_RESIZE_OFF);
        jTabelaExportarInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaExportarInterno.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

}
