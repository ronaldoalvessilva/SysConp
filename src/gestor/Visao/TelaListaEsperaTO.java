/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleInclusaoListaEspera;
import gestor.Controle.ControleItensListaEsperaInternos;
import gestor.Controle.ControleListaEsperaInternos;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitos;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensListaEspera;
import gestor.Modelo.ListaEsperaLaborativa;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class TelaListaEsperaTO extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ListaEsperaLaborativa objLista = new ListaEsperaLaborativa();
    ItensListaEspera objItensLista = new ItensListaEspera();
    ControleListaEsperaInternos control = new ControleListaEsperaInternos();
    ControleItensListaEsperaInternos controle = new ControleItensListaEsperaInternos();
    ControleInclusaoListaEspera controleOcupaCursos = new ControleInclusaoListaEspera();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Terapia Ocupacional:Lista de Espera de Internos:Manutenção";
    String nomeModuloTela2 = "Terapia Ocupacional:Lista de Espera de Internos:Internos";
    String nomeModuloTela3 = "Terapia Ocupacional:Lista de Espera de Internos:Ocupação";
    String nomeModuloTela4 = "Terapia Ocupacional:Lista de Espera de Internos:Cursos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao, flag;
    String dataEntrada, dataInicial, dataFinal;
    public static String idItem;
    String caminho;
    int count = 0;
    public static String idCela;
    String tipoListaEspera = "";
    String classificacao = "";
    // OCUPAÇÃO
    int idItemOcupa;
    String codigoOcupacao;
    String letraPrioridade;
    // CURSOS
    String codigoCurso;
    int idItemCurso;
    String codigoInterno; // CÓDIGO DO INTERNO PARA SER BLOQUEADO QUANDO CADASTRADO MAIS DE UMA VEZ.

    /**
     * Creates new form TelaListaEsperaTO
     */
    public static TelaFotoCrcListaPassagem telaFotoCrcListaPassagem;

    public TelaListaEsperaTO() {
        super();
        initComponents();
        setResizable(false);
        formatarCampos();
        corCampos();
        TabelaOperacao();
        TabelaCursos();
    }

    public void mostraTelaFotoCrc() {
        telaFotoCrcListaPassagem = new TelaFotoCrcListaPassagem(this, true);
        telaFotoCrcListaPassagem.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaListaEspera = new javax.swing.JTable();
        jPanel36 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIDLanc = new javax.swing.JTextField();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxStautus = new javax.swing.JComboBox();
        jComboBoxTipoListaEspera = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxClassificacao = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jBtAuditoriaManu = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSairInterno = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jDescricaoCela = new javax.swing.JTextField();
        jIdInterno = new javax.swing.JTextField();
        jNomeInterno = new javax.swing.JTextField();
        jBtPesqInterno = new javax.swing.JButton();
        jDescricaoPavilhao = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProfissaoInterno = new javax.swing.JTextField();
        jBtFoto = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxDescricaoOcupacao = new javax.swing.JComboBox();
        jComboBoxEncaminharAtividade = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTabelaOcupacao = new javax.swing.JTable();
        jBtNovaOcupacao = new javax.swing.JButton();
        jBtExcluirOcupacao = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jComboBoxDescricaoCurso = new javax.swing.JComboBox();
        jComboBoxEncaminhamentoCurso = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTabelaCursos = new javax.swing.JTable();
        jBtNovoCurso = new javax.swing.JButton();
        jBtExcluirCurso = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jObservacaoInterno = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaInternos = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jBtNovoInterno = new javax.swing.JButton();
        jBtAlterarInterno = new javax.swing.JButton();
        jBtExcluirInterno = new javax.swing.JButton();
        jBtSalvarInterno = new javax.swing.JButton();
        jBtCancelarInterno = new javax.swing.JButton();
        jBtBuscar = new javax.swing.JButton();
        jBtAuditoriaItens = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Lista de Espera {TO} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxTodos)))
                .addGap(30, 30, 30))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxTodos)
                    .addComponent(jBtPesqData)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaListaEspera.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaListaEspera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Status", "Data Cadastro", "Observação"
            }
        ));
        jTabelaListaEspera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaListaEsperaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaListaEspera);
        if (jTabelaListaEspera.getColumnModel().getColumnCount() > 0) {
            jTabelaListaEspera.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaListaEspera.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaListaEspera.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaListaEspera.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaListaEspera.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaListaEspera.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaListaEspera.getColumnModel().getColumn(3).setMinWidth(550);
            jTabelaListaEspera.getColumnModel().getColumn(3).setMaxWidth(550);
        }

        jPanel36.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel37.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel65.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel65))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel65)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Data Lista");

        jIDLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDLanc.setEnabled(false);

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Status");

        jComboBoxStautus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStautus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jComboBoxStautus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStautus.setEnabled(false);

        jComboBoxTipoListaEspera.setEditable(true);
        jComboBoxTipoListaEspera.setForeground(new java.awt.Color(153, 0, 153));
        jComboBoxTipoListaEspera.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - Lista de Espera para Trabalho (Trabalho Interno e Externo)", "2 - Lista de Espera para Profissionalização (Profissionalização Interna e Externa)", "3 - Lista de Espera para Cursos(Cursos Internos e Externos)" }));
        jComboBoxTipoListaEspera.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoListaEspera.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Tipo de Lista Espera");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Classificação");

        jComboBoxClassificacao.setEditable(true);
        jComboBoxClassificacao.setForeground(new java.awt.Color(153, 0, 153));
        jComboBoxClassificacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - Lista de passagem (INTERNA)", "2 - Lista de passagem (EXTERNA)" }));
        jComboBoxClassificacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxClassificacao.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel16)
                            .addComponent(jIDLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBoxClassificacao, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxTipoListaEspera, javax.swing.GroupLayout.Alignment.LEADING, 0, 447, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jComboBoxStautus, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDataLanc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxTipoListaEspera, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(25, 25, 25))
                    .addComponent(jComboBoxClassificacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(11, 11, 11)
                        .addComponent(jIDLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxStautus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtAuditoriaManu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaManu.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setToolTipText("Auditoria");
        jBtAuditoriaManu.setContentAreaFilled(false);
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Alterar Registro");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir Registro");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Gravar Registro");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSairInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairInterno.setText("Sair");
        jBtSairInterno.setToolTipText("Sair da Tela");
        jBtSairInterno.setContentAreaFilled(false);
        jBtSairInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSairInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSairInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSairInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairInternoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSairInterno))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoriaManu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSalvar});

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Lista de Espera para Atividade Laborativa Interna e Externa");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Código");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Descrição da Cela");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Nome Completo do Interno");

        jDescricaoCela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoCela.setEnabled(false);

        jIdInterno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInterno.setEnabled(false);

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInterno.setEnabled(false);

        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jDescricaoPavilhao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoPavilhao.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Descrição do Pavilhão");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Profissão");

        jProfissaoInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jProfissaoInterno.setEnabled(false);

        jBtFoto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFoto.setForeground(new java.awt.Color(255, 0, 0));
        jBtFoto.setText("Foto");
        jBtFoto.setToolTipText("Foto do Interno");
        jBtFoto.setEnabled(false);
        jBtFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNomeInterno)
                            .addComponent(jProfissaoInterno)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jIdInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtFoto))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(jLabel9))
                                            .addComponent(jDescricaoPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(151, 151, 151))
                                            .addComponent(jDescricaoCela))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIdInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqInterno)
                            .addComponent(jBtFoto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoCela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProfissaoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Dados do Interno", jPanel6);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Descrição da Ocupação");

        jComboBoxDescricaoOcupacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxDescricaoOcupacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione..." }));
        jComboBoxDescricaoOcupacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxDescricaoOcupacao.setEnabled(false);

        jComboBoxEncaminharAtividade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxEncaminharAtividade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Aguardando", "Encaminhado", "Apto", "Inapto" }));
        jComboBoxEncaminharAtividade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxEncaminharAtividade.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Encaminhamento");

        jTabelaOcupacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaOcupacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição da Ocupação", "Encaminhamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaOcupacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaOcupacaoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTabelaOcupacao);
        if (jTabelaOcupacao.getColumnModel().getColumnCount() > 0) {
            jTabelaOcupacao.getColumnModel().getColumn(0).setMinWidth(65);
            jTabelaOcupacao.getColumnModel().getColumn(0).setMaxWidth(65);
            jTabelaOcupacao.getColumnModel().getColumn(1).setMinWidth(300);
            jTabelaOcupacao.getColumnModel().getColumn(1).setMaxWidth(300);
            jTabelaOcupacao.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaOcupacao.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jBtNovaOcupacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovaOcupacao.setToolTipText("Nova Ocupação");
        jBtNovaOcupacao.setEnabled(false);
        jBtNovaOcupacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovaOcupacao.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovaOcupacao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovaOcupacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaOcupacaoActionPerformed(evt);
            }
        });

        jBtExcluirOcupacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirOcupacao.setToolTipText("Excluir Ocupação");
        jBtExcluirOcupacao.setEnabled(false);
        jBtExcluirOcupacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirOcupacao.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirOcupacao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirOcupacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirOcupacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxDescricaoOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxEncaminharAtividade, 0, 137, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBtNovaOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtExcluirOcupacao, jBtNovaOcupacao});

        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxDescricaoOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEncaminharAtividade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovaOcupacao, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtExcluirOcupacao, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtExcluirOcupacao, jBtNovaOcupacao});

        jTabbedPane2.addTab("Ocupação", jPanel17);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Descrição do Curso");

        jComboBoxDescricaoCurso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxDescricaoCurso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione..." }));
        jComboBoxDescricaoCurso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxDescricaoCurso.setEnabled(false);

        jComboBoxEncaminhamentoCurso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxEncaminhamentoCurso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Aguardando", "Encaminhado", "Apto", "Inapto" }));
        jComboBoxEncaminhamentoCurso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxEncaminhamentoCurso.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Encaminhamento");

        jTabelaCursos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição do Curso", "Encaminhamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTabelaCursos);
        if (jTabelaCursos.getColumnModel().getColumnCount() > 0) {
            jTabelaCursos.getColumnModel().getColumn(0).setMinWidth(65);
            jTabelaCursos.getColumnModel().getColumn(0).setMaxWidth(65);
            jTabelaCursos.getColumnModel().getColumn(1).setMinWidth(300);
            jTabelaCursos.getColumnModel().getColumn(1).setMaxWidth(300);
            jTabelaCursos.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaCursos.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jBtNovoCurso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoCurso.setToolTipText("Novo Curso");
        jBtNovoCurso.setEnabled(false);
        jBtNovoCurso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoCurso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoCurso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoCursoActionPerformed(evt);
            }
        });

        jBtExcluirCurso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirCurso.setToolTipText("Excluir Curso");
        jBtExcluirCurso.setEnabled(false);
        jBtExcluirCurso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirCurso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirCurso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxDescricaoCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(0, 198, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jComboBoxEncaminhamentoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtExcluirCurso, jBtNovoCurso});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxDescricaoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEncaminhamentoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovoCurso)
                    .addComponent(jBtExcluirCurso, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtExcluirCurso, jBtNovoCurso});

        jTabbedPane2.addTab("Cursos", jPanel7);

        jObservacaoInterno.setColumns(20);
        jObservacaoInterno.setRows(5);
        jObservacaoInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacaoInterno.setEnabled(false);
        jScrollPane4.setViewportView(jObservacaoInterno);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Observação", jPanel8);

        jTabelaInternos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome do Interno", "Pavilhão", "Cela"
            }
        ));
        jTabelaInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaInternosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaInternos);
        if (jTabelaInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaInternos.getColumnModel().getColumn(1).setMinWidth(350);
            jTabelaInternos.getColumnModel().getColumn(1).setMaxWidth(350);
            jTabelaInternos.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaInternos.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaInternos.getColumnModel().getColumn(3).setMinWidth(140);
            jTabelaInternos.getColumnModel().getColumn(3).setMaxWidth(140);
        }

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovoInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoInterno.setText("Novo");
        jBtNovoInterno.setToolTipText("Novo Interno");
        jBtNovoInterno.setContentAreaFilled(false);
        jBtNovoInterno.setEnabled(false);
        jBtNovoInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoInternoActionPerformed(evt);
            }
        });

        jBtAlterarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarInterno.setText("Alterar");
        jBtAlterarInterno.setToolTipText("Alterar Interno");
        jBtAlterarInterno.setContentAreaFilled(false);
        jBtAlterarInterno.setEnabled(false);
        jBtAlterarInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarInternoActionPerformed(evt);
            }
        });

        jBtExcluirInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirInterno.setText("Excluir");
        jBtExcluirInterno.setToolTipText("Excluir Interno");
        jBtExcluirInterno.setContentAreaFilled(false);
        jBtExcluirInterno.setEnabled(false);
        jBtExcluirInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirInternoActionPerformed(evt);
            }
        });

        jBtSalvarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarInterno.setText("Gravar");
        jBtSalvarInterno.setToolTipText("Gravar Interno");
        jBtSalvarInterno.setContentAreaFilled(false);
        jBtSalvarInterno.setEnabled(false);
        jBtSalvarInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarInternoActionPerformed(evt);
            }
        });

        jBtCancelarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarInterno.setText("Cancelar");
        jBtCancelarInterno.setToolTipText("Cancelar Operação");
        jBtCancelarInterno.setContentAreaFilled(false);
        jBtCancelarInterno.setEnabled(false);
        jBtCancelarInterno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarInterno.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarInterno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarInternoActionPerformed(evt);
            }
        });

        jBtBuscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtBuscar.setForeground(new java.awt.Color(255, 0, 0));
        jBtBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscar.setToolTipText("Buscar Registro de Interno");
        jBtBuscar.setEnabled(false);
        jBtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarActionPerformed(evt);
            }
        });

        jBtAuditoriaItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaItens.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaItens.setToolTipText("Auditoria");
        jBtAuditoriaItens.setContentAreaFilled(false);
        jBtAuditoriaItens.setEnabled(false);
        jBtAuditoriaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaItensActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jBtNovoInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarInterno)
                .addGap(30, 30, 30)
                .addComponent(jBtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaItens, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBtAuditoriaItens, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtBuscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtNovoInterno)
                    .addComponent(jBtAlterarInterno)
                    .addComponent(jBtExcluirInterno)
                    .addComponent(jBtSalvarInterno)
                    .addComponent(jBtCancelarInterno))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Internos", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 10, 512, 502);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtAuditoriaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaItensActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensListaEspera objAudItensListaEsp = new TelaAuditoriaItensListaEspera();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objAudItensListaEsp);
        objAudItensListaEsp.show();
    }//GEN-LAST:event_jBtAuditoriaItensActionPerformed

    private void jBtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarActionPerformed
        // TODO add your handling code here:
        TelaBuscarInternosListaEspera objBuscarIntLista = new TelaBuscarInternosListaEspera();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objBuscarIntLista);
        objBuscarIntLista.show();
    }//GEN-LAST:event_jBtBuscarActionPerformed

    private void jBtCancelarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarInternoActionPerformed
        // TODO add your handling code here:
        limparTabelaOcupacao();
        limparTabelaCursos();
        CancelarInterno();
    }//GEN-LAST:event_jBtCancelarInternoActionPerformed

    private void jBtSalvarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarInternoActionPerformed
        // TODO add your handling code here:
        Integer rows = jTabelaOcupacao.getModel().getRowCount();
        Integer rows1 = jTabelaCursos.getModel().getRowCount();
        verificarInterno();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Informe pelo menos um tipo de Ocupação.");
        } else if (rows1 == 0) {
            JOptionPane.showMessageDialog(rootPane, "Informe pelo menos um tipo de Curso.");
        } else {
            if (jNomeInterno.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para lista de espera.");
            } else {
                objItensLista.setIdLanc(Integer.valueOf(jIDLanc.getText()));
                objItensLista.setIdCela(Integer.valueOf(idCela));
                objItensLista.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
                objItensLista.setNomeInterno(jNomeInterno.getText());
                objItensLista.setObsInt(jObservacaoInterno.getText());
                objItensLista.setProfissaoInterno(jProfissaoInterno.getText());
                if (acao == 3) {
                    // IMPEDE QUE SEJA CADASTRADO O INTERNO MAIS DE UMA VEZ.
                    if (jIdInterno.getText().equals(codigoInterno)) {
                        JOptionPane.showMessageDialog(rootPane, "Esse interno já foi incluído em uma lista de espera.");
                    } else {
                        // log de usuario
                        objItensLista.setUsuarioInsert(nameUser);
                        objItensLista.setDataInsert(dataModFinal);
                        objItensLista.setHoraInsert(horaMov);
                        controle.incluirItensListaEspera(objItensLista);
                        //
                        buscarCodigoItem();
                        // OCUPAÇÃO DO INTERNO
                        incluirOcupacao();
                        // CURSOS
                        incluirCursos();
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        SalvarInterno();
                        limparTabelaOcupacao();
                        limparTabelaCursos();
                        preencherTabelaItens("SELECT * FROM ITENSLISTAESPERA "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENSLISTAESPERA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "INNER JOIN CELAS "
                                + "ON ITENSLISTAESPERA.IdCela=CELAS.IdCela "
                                + "INNER JOIN PAVILHAO "
                                + "ON CELAS.IdPav=PAVILHAO.IdPav WHERE IdLanc='" + jIDLanc.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                }
                if (acao == 4) {
                    objItensLista.setUsuarioUp(nameUser);
                    objItensLista.setDataUp(dataModFinal);
                    objItensLista.setHoraUp(horaMov);
                    //
                    objItensLista.setIdItem(Integer.valueOf(idItem));
                    controle.alterarItensListaEspera(objItensLista);
                    //EXCLUIR TODOS OS ITENS TABELA PARA INCLUIR DEPOIS
                    objItensLista.setIdItemOcupa(idItemOcupa);
                    controleOcupaCursos.excluirListaEsperaOcupa(objItensLista);
                    // GRAVAR AS OCUPAÇÕES DO INTERNOS INDIVIDUALMENTE.
                    incluirOcupacao();
                    controleOcupaCursos.excluirListaEsperaCurso(objItensLista);
                    // GRAVAR OS CURSOS DO INTERNOS INDIVIDUALMENTE.
                    incluirCursos();
                    //
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarInterno();
                    limparTabelaOcupacao();
                    limparTabelaCursos();
                    preencherTabelaItens("SELECT * FROM ITENSLISTAESPERA "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ITENSLISTAESPERA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN CELAS "
                            + "ON ITENSLISTAESPERA.IdCela=CELAS.IdCela "
                            + "INNER JOIN PAVILHAO "
                            + "ON CELAS.IdPav=PAVILHAO.IdPav WHERE IdLanc='" + jIDLanc.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        }
    }//GEN-LAST:event_jBtSalvarInternoActionPerformed

    private void jBtExcluirInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirInternoActionPerformed
        // TODO add your handling code here:
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o lancamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objItensLista.setIdItem(Integer.valueOf(idItem));
            controle.excluirItensListaEspera(objItensLista);
            objLog2();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
            ExcluirInterno();
            preencherTabelaItens("SELECT * FROM ITENSLISTAESPERA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSLISTAESPERA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN CELAS "
                    + "ON ITENSLISTAESPERA.IdCela=CELAS.IdCela "
                    + "INNER JOIN PAVILHAO "
                    + "ON CELAS.IdPav=PAVILHAO.IdPav WHERE IdLanc='" + jIDLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtExcluirInternoActionPerformed

    private void jBtAlterarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarInternoActionPerformed
        // TODO add your handling code here:
        acao = 4;
        statusMov = "Alterou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        bloquearCampos();
        AlterarInterno();
        preencherComboOcupacao();
        preencherComboCurso();
    }//GEN-LAST:event_jBtAlterarInternoActionPerformed

    private void jBtNovoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoInternoActionPerformed
        // TODO add your handling code here:
        acao = 3;
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        bloquearCampos();
        NovoInterno();
        preencherComboOcupacao();
        preencherComboCurso();
        limparTabelaOcupacao();
        limparTabelaCursos();
    }//GEN-LAST:event_jBtNovoInternoActionPerformed

    private void jTabelaInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaInternosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeInterno = "" + jTabelaInternos.getValueAt(jTabelaInternos.getSelectedRow(), 1);
            jNomeInterno.setText(nomeInterno);
            String idInterno = "" + jTabelaInternos.getValueAt(jTabelaInternos.getSelectedRow(), 0);
            jIdInterno.setText(idInterno);
            idItem = "" + jTabelaInternos.getValueAt(jTabelaInternos.getSelectedRow(), 2);
            // Habilitar os botões
            jBtNovoInterno.setEnabled(!true);
            jBtAlterarInterno.setEnabled(true);
            jBtExcluirInterno.setEnabled(true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(true);
            jBtBuscar.setEnabled(true);
            jBtAuditoriaItens.setEnabled(true);
            jBtFoto.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSLISTAESPERA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSLISTAESPERA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLISTAESPERA.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE NomeInternoCrc='" + jNomeInterno.getText() + "' "
                        + "AND IdLanc='" + jIDLanc.getText() + "'");
                conecta.rs.first();
                jIdInterno.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc"));
                idItem = conecta.rs.getString("IdItem");
                idCela = conecta.rs.getString("IdCela");
                jDescricaoCela.setText(conecta.rs.getString("EndCelaPav"));
                jDescricaoPavilhao.setText(conecta.rs.getString("DescricaoPav"));
                jProfissaoInterno.setText(conecta.rs.getString("ProfissaoInterno"));
                jObservacaoInterno.setText(conecta.rs.getString("ObsInt"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
            // OCUPAÇÃO
            limparTabelaOcupacao();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_OCUPACAO_LISTAESPERA "
                        + "INNER JOIN OCUPACAO "
                        + "ON ITENS_OCUPACAO_LISTAESPERA.IdCodigoOcupa=OCUPACAO.IdCodigoOcupa "
                        + "WHERE ITENS_OCUPACAO_LISTAESPERA.IdLanc='" + jIDLanc.getText() + "'AND IdInternoCrc='" + jIdInterno.getText() + "'");
                conecta.rs.first();
                idItemOcupa = conecta.rs.getInt("IdItemOcupa");
                DefaultTableModel tabOcupa = (DefaultTableModel) jTabelaOcupacao.getModel();
                tabOcupa.getDataVector().clear(); // limpa a tabela 
                do {
                    tabOcupa.addRow(new Object[]{conecta.rs.getInt("IdCodigoOcupa"), conecta.rs.getString("DescricaoOcupa"), conecta.rs.getString("Encaminhamento")});
                } while (conecta.rs.next());
            } catch (SQLException ex) {
            }
            // CURSOS
            limparTabelaCursos();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_CURSOS_LISTAESPERA "
                        + "INNER JOIN CURSOS "
                        + "ON ITENS_CURSOS_LISTAESPERA.IdCurso=CURSOS.IdCurso "
                        + "WHERE ITENS_CURSOS_LISTAESPERA.IdLanc='" + jIDLanc.getText() + "'AND IdInternoCrc='" + jIdInterno.getText() + "'");
                conecta.rs.first();
                idItemCurso = conecta.rs.getInt("IdItemCursos");
                DefaultTableModel tabCurso = (DefaultTableModel) jTabelaCursos.getModel();
                tabCurso.getDataVector().clear(); // limpa a tabela 
                do {
                    tabCurso.addRow(new Object[]{conecta.rs.getInt("IdCurso"), conecta.rs.getString("DescricaoCurso"), conecta.rs.getString("Encaminhamento")});
                } while (conecta.rs.next());
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_jTabelaInternosMouseClicked

    private void jBtFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFotoActionPerformed
        // TODO add your handling code here:
        mostraTelaFotoCrc();
    }//GEN-LAST:event_jBtFotoActionPerformed

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaPesquisaInternosListaEspera objPesIntListaEsp = new TelaPesquisaInternosListaEspera();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objPesIntListaEsp);
        objPesIntListaEsp.show();
    }//GEN-LAST:event_jBtPesqInternoActionPerformed

    private void jBtSairInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairInternoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairInternoActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (jComboBoxStautus.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe se a lista está Ativa ou Inativa.");
            jComboBoxStautus.requestFocus();
            jComboBoxStautus.setBackground(Color.red);
        } else if (jDataLanc.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data do lançamento.");
            jDataLanc.requestFocus();
            jDataLanc.setBackground(Color.red);
        } else if (jComboBoxTipoListaEspera.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o tipo de Lista de Espera");
        } else if (jComboBoxClassificacao.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a classificaçao de Lista de Espera");
        } else {
            objLista.setStatusLanc((String) jComboBoxStautus.getSelectedItem());
            objLista.setDataLanc(jDataLanc.getDate());
            if (jComboBoxTipoListaEspera.getSelectedItem().equals("1 - Lista de Espera para Trabalho (Trabalho Interno e Externo)")) {
                tipoListaEspera = "Trabalho";
            } else if (jComboBoxTipoListaEspera.getSelectedItem().equals("2 - Lista de Espera para Profissionalização (Profissionalização Interna e Externa)")) {
                tipoListaEspera = "Profissionalização";
            } else if (jComboBoxTipoListaEspera.getSelectedItem().equals("3 - Lista de Espera para Cursos(Cursos Internos e Externos)")) {
                tipoListaEspera = "Cursos";
            }
            objLista.setTipoListaEspera(tipoListaEspera);
            if (jComboBoxClassificacao.getSelectedItem().equals("1 - Lista de passagem (INTERNA)")) {
                classificacao = "Interna";
            } else if (jComboBoxClassificacao.getSelectedItem().equals("2 - Lista de passagem (EXTERNA)")) {
                classificacao = "Externa";
            }
            objLista.setClassificacao(classificacao);
            objLista.setObsLanc(jObservacao.getText());
            if (acao == 1) {
                // log de usuario
                objLista.setUsuarioInsert(nameUser);
                objLista.setDataInsert(dataModFinal);
                objLista.setHoraInsert(horaMov);
                control.incluirListaEspera(objLista);
                buscarID();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
            if (acao == 2) {
                // log de usuario
                objLista.setUsuarioUp(nameUser);
                objLista.setDataUp(dataModFinal);
                objLista.setHoraUp(horaMov);
                //
                objLista.setIdLanc(Integer.valueOf(jIDLanc.getText()));
                control.alterarListaEspera(objLista);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        objLog();
        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
        JOptionPane.showMessageDialog(rootPane, "Ainda não foi feito por causa dos lançamentos futuros.");
        Excluir();
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        acao = 2;
        Alterar();
        corCampos();
        statusMov = "Alterou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        limparTabelaInternos();
        limparTabelaOcupacao();
        limparTabelaCursos();
        corCampos();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaListaEspera objAudListEsp = new TelaAuditoriaListaEspera();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objAudListEsp);
        objAudListEsp.show();
    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jTabelaListaEsperaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaListaEsperaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaListaEspera.getValueAt(jTabelaListaEspera.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            //
            jBtNovoInterno.setEnabled(true);
            jBtAlterarInterno.setEnabled(!true);
            jBtExcluirInterno.setEnabled(!true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(!true);
            jBtBuscar.setEnabled(true);
            jTabelaInternos.setVisible(true);
            jBtAuditoriaManu.setEnabled(true);
            //
//            limparCampos()
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM LISTAESPERA  WHERE IdLanc='" + IdLanc + "'");
                conecta.rs.first();
                jIDLanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jComboBoxStautus.setSelectedItem(conecta.rs.getString("StatusLanc"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                tipoListaEspera = conecta.rs.getString("TipoListaEspera");
                if (tipoListaEspera.equals("Trabalho")) {
                    jComboBoxTipoListaEspera.setSelectedItem("1 - Lista de Espera para Trabalho (Trabalho Interno e Externo)");
                } else if (tipoListaEspera.equals("Profissionalização")) {
                    jComboBoxTipoListaEspera.getSelectedItem().equals("2 - Lista de Espera para Profissionalização (Profissionalização Interna e Externa)");
                } else if (tipoListaEspera.equals("Cursos")) {
                    jComboBoxTipoListaEspera.getSelectedItem().equals("3 - Lista de Espera para Cursos(Cursos Internos e Externos)");
                }
                classificacao = conecta.rs.getString("Classificacao");
                if (classificacao.equals("Interna")) {
                    jComboBoxClassificacao.getSelectedItem().equals("1 - Lista de passagem (INTERNA)");
                } else if (classificacao.equals("Externa")) {
                    jComboBoxClassificacao.getSelectedItem().equals("2 - Lista de passagem (EXTERNA)");
                }
                jObservacao.setText(conecta.rs.getString("ObsLanc"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            // INTERNOS
            preencherTabelaItens("SELECT * FROM ITENSLISTAESPERA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSLISTAESPERA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN CELAS "
                    + "ON ITENSLISTAESPERA.IdCela=CELAS.IdCela "
                    + "INNER JOIN PAVILHAO "
                    + "ON CELAS.IdPav=PAVILHAO.IdPav WHERE IdLanc='" + IdLanc + "'");
        }
        conecta.desconecta();
    }//GEN-LAST:event_jTabelaListaEsperaMouseClicked

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherListaEspera("SELECT * FROM LISTAESPERA");
        } else {
            jtotalRegistros.setText("");
            limparTelaListaEspera();
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesqFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    jTabelaListaEspera.setVisible(true);
                    preencherListaEspera("SELECT * FROM LISTAESPERA "
                            + "WHERE LISTAESPERA.DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um ID para pesquisar.");
        } else {
            preencherListaEspera("SELECT * FROM LISTAESPERA "
                    + "WHERE LISTAESPERA.IdLanc='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jBtExcluirOcupacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirOcupacaoActionPerformed
        // TODO add your handling code here:
        if (jTabelaOcupacao.getSelectedRow() != -1) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o item selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                DefaultTableModel tbOcupa = (DefaultTableModel) jTabelaOcupacao.getModel();
                tbOcupa.removeRow(jTabelaOcupacao.getSelectedRow());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione o registro que deseja excluir.");
        }
    }//GEN-LAST:event_jBtExcluirOcupacaoActionPerformed

    private void jTabelaOcupacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaOcupacaoMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTabelaOcupacaoMouseClicked

    private void jBtNovaOcupacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaOcupacaoActionPerformed
        // TODO add your handling code here:
        if (jComboBoxDescricaoOcupacao.getSelectedItem().equals("Selecione...") || jComboBoxDescricaoOcupacao.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma ocupação...");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM OCUPACAO WHERE DescricaoOcupa='" + jComboBoxDescricaoOcupacao.getSelectedItem() + "'");
                conecta.rs.first();
                codigoOcupacao = conecta.rs.getString("IdCodigoOcupa");
                DefaultTableModel tbOcupa = (DefaultTableModel) jTabelaOcupacao.getModel();
                objItensLista.setIdCodigoOcupa(Integer.valueOf(codigoOcupacao));
                objItensLista.setDescricaoOcupacao((String) jComboBoxDescricaoOcupacao.getSelectedItem());
                objItensLista.setEncaminhamentoOcupa((String) jComboBoxEncaminharAtividade.getSelectedItem());
                Object campos[] = {objItensLista.getIdCodigoOcupa(), objItensLista.getDescricaoOcupacao(), objItensLista.getEncaminhamentoOcupa()};
                tbOcupa.addRow(campos);
                //          
                jComboBoxDescricaoOcupacao.setSelectedItem("Selecione...");
                jComboBoxEncaminharAtividade.setSelectedItem("Selecione...");
                conecta.desconecta();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jBtNovaOcupacaoActionPerformed

    private void jBtNovoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoCursoActionPerformed
        // TODO add your handling code here:
        if (jComboBoxDescricaoCurso.getSelectedItem().equals("Selecione...") || jComboBoxDescricaoCurso.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um curso profissionalizante...");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM CURSOS WHERE DescricaoCurso='" + jComboBoxDescricaoCurso.getSelectedItem() + "'");
                conecta.rs.first();
                codigoCurso = conecta.rs.getString("IdCurso");
                objItensLista.setIdCurso(Integer.valueOf(codigoCurso));
            } catch (Exception e) {
            }
            DefaultTableModel descCursos = (DefaultTableModel) jTabelaCursos.getModel();
            objItensLista.setIdCurso(Integer.valueOf(codigoCurso));
            objItensLista.setDescricaoCurso((String) jComboBoxDescricaoCurso.getSelectedItem());
            objItensLista.setEncaminhamentoCurso((String) jComboBoxEncaminhamentoCurso.getSelectedItem());
            Object campos[] = {objItensLista.getIdCurso(), objItensLista.getDescricaoCurso(), objItensLista.getEncaminhamentoCurso()};
            descCursos.addRow(campos);
            //          
            jComboBoxDescricaoCurso.setSelectedItem("Selecione...");
            jComboBoxEncaminhamentoCurso.setSelectedItem("Selecione...");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtNovoCursoActionPerformed

    private void jBtExcluirCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirCursoActionPerformed
        // TODO add your handling code here:
        if (jTabelaCursos.getSelectedRow() != -1) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o item selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                DefaultTableModel dtm = (DefaultTableModel) jTabelaCursos.getModel();
                dtm.removeRow(jTabelaCursos.getSelectedRow());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione o registro que deseja excluir.");
        }
    }//GEN-LAST:event_jBtExcluirCursoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarInterno;
    private javax.swing.JButton jBtAuditoriaItens;
    private javax.swing.JButton jBtAuditoriaManu;
    public static javax.swing.JButton jBtBuscar;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarInterno;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirCurso;
    public static javax.swing.JButton jBtExcluirInterno;
    public static javax.swing.JButton jBtExcluirOcupacao;
    private javax.swing.JButton jBtFoto;
    public static javax.swing.JButton jBtNovaOcupacao;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoCurso;
    public static javax.swing.JButton jBtNovoInterno;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtSairInterno;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarInterno;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBoxTodos;
    private javax.swing.JComboBox jComboBoxClassificacao;
    private javax.swing.JComboBox jComboBoxDescricaoCurso;
    private javax.swing.JComboBox jComboBoxDescricaoOcupacao;
    private javax.swing.JComboBox jComboBoxEncaminhamentoCurso;
    private javax.swing.JComboBox jComboBoxEncaminharAtividade;
    private javax.swing.JComboBox jComboBoxStautus;
    private javax.swing.JComboBox jComboBoxTipoListaEspera;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jDescricaoCela;
    public static javax.swing.JTextField jDescricaoPavilhao;
    public static javax.swing.JTextField jIDLanc;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIdInterno;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInterno;
    private javax.swing.JTextArea jObservacao;
    public static javax.swing.JTextArea jObservacaoInterno;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JTextField jProfissaoInterno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaCursos;
    private javax.swing.JTable jTabelaInternos;
    private javax.swing.JTable jTabelaListaEspera;
    private javax.swing.JTable jTabelaOcupacao;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacaoInterno.setDocument(new LimiteDigitos(50));
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIDLanc.setBackground(Color.white);
        jComboBoxStautus.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jDescricaoCela.setBackground(Color.white);
        jDescricaoPavilhao.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdInterno.setBackground(Color.white);
        jNomeInterno.setBackground(Color.white);
        jProfissaoInterno.setBackground(Color.white);
        jObservacaoInterno.setBackground(Color.white);
        //               
        jComboBoxDescricaoOcupacao.setBackground(Color.white);
    }

    public void bloquearCampos() {
        jComboBoxStautus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxTipoListaEspera.setEnabled(!true);
        jComboBoxClassificacao.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //       
        jProfissaoInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        //        
        jComboBoxDescricaoOcupacao.setEnabled(!true);
        jComboBoxEncaminharAtividade.setEnabled(!true);
        //       
        jComboBoxDescricaoCurso.setEnabled(!true);
        jComboBoxEncaminhamentoCurso.setEnabled(!true);
    }

    public void Novo() {
        // Limpar os campos para inclusão
        jIDLanc.setText("");
        jComboBoxStautus.setSelectedItem("Ativo");
        jDataLanc.setCalendar(Calendar.getInstance());
        jComboBoxTipoListaEspera.setSelectedItem("1 - Lista de Espera para Trabalho (Trabalho Interno e Externo)");
        jComboBoxClassificacao.setSelectedItem("1 - Lista de passagem (INTERNA)");
        jObservacao.setText("");
        // Habilitar/Desabilitar campos        
        jComboBoxStautus.setEnabled(true);
        jComboBoxClassificacao.setEnabled(true);
        jDataLanc.setEnabled(true);
        jComboBoxTipoListaEspera.setEnabled(true);
        jObservacao.setEnabled(true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jIdInterno.setText("");
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jDescricaoCela.setText("");
        jDescricaoPavilhao.setText("");
        jProfissaoInterno.setText("");
        //
        jComboBoxDescricaoOcupacao.setSelectedItem("Selecione...");
        jComboBoxEncaminharAtividade.setSelectedItem("Selecione...");
        //
        jComboBoxDescricaoCurso.setSelectedItem("Selecione...");
        jComboBoxEncaminhamentoCurso.setSelectedItem("Selecione...");
        //       
        jBtPesqInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
    }

    public void Alterar() {
        // Habilitar/Desabilitar campos        
        jComboBoxStautus.setEnabled(true);
        jComboBoxClassificacao.setEnabled(true);
        jDataLanc.setEnabled(true);
        jComboBoxTipoListaEspera.setEnabled(true);
        jObservacao.setEnabled(true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jIdInterno.setText("");
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jDescricaoCela.setText("");
        jDescricaoPavilhao.setText("");
        jProfissaoInterno.setText("");
        //
        jComboBoxDescricaoOcupacao.setSelectedItem("Selecione...");
        jComboBoxEncaminharAtividade.setSelectedItem("Selecione...");
        //
        jComboBoxDescricaoCurso.setSelectedItem("Selecione...");
        jComboBoxEncaminhamentoCurso.setSelectedItem("Selecione...");
        //       
        //       
        jBtPesqInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
    }

    public void Excluir() {
        jIDLanc.setText("");
        jComboBoxStautus.setSelectedItem("Ativo");
        jDataLanc.setCalendar(Calendar.getInstance());
        jComboBoxTipoListaEspera.setSelectedItem("1 - Lista de Espera para Trabalho (Trabalho Interno e Externo)");
        jComboBoxClassificacao.setSelectedItem("1 - Lista de passagem (INTERNA)");
        jObservacao.setText("");
        // Habilitar/Desabilitar campos        
        jComboBoxStautus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxTipoListaEspera.setEnabled(!true);
        jComboBoxClassificacao.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Salvar() {
        // Habilitar/Desabilitar campos        
        jComboBoxStautus.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jComboBoxTipoListaEspera.setEnabled(!true);
        jComboBoxClassificacao.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
    }

    public void Cancelar() {
        if (jIDLanc.getText().equals("")) {
            jComboBoxStautus.setSelectedItem("Ativo");
            jDataLanc.setCalendar(Calendar.getInstance());
            jComboBoxTipoListaEspera.setSelectedItem("1 - Lista de Espera para Trabalho (Trabalho Interno e Externo)");
            jComboBoxClassificacao.setSelectedItem("1 - Lista de passagem (INTERNA)");
            jObservacao.setText("");
            //
            jComboBoxStautus.setEnabled(!true);
            jDataLanc.setEnabled(!true);
            jComboBoxTipoListaEspera.setEnabled(!true);
            jComboBoxClassificacao.setEnabled(!true);
            jObservacao.setEnabled(!true);
            // 
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            //
            jBtNovoInterno.setEnabled(!true);
        } else {
            jComboBoxStautus.setEnabled(!true);
            jDataLanc.setEnabled(!true);
            jComboBoxTipoListaEspera.setEnabled(!true);
            jComboBoxClassificacao.setEnabled(!true);
            jObservacao.setEnabled(!true);
            // 
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            //
            jBtNovoInterno.setEnabled(true);
        }
    }

    public void NovoInterno() {
        //
        jIdInterno.setText("");
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jDescricaoCela.setText("");
        jDescricaoPavilhao.setText("");
        jProfissaoInterno.setText("");
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setSelectedItem("Selecione...");
        jComboBoxEncaminharAtividade.setSelectedItem("Selecione...");
        // PROFISSIONALIZAÇÃO/CURSOS
        jComboBoxDescricaoCurso.setSelectedItem("Selecione...");
        jComboBoxEncaminhamentoCurso.setSelectedItem("Selecione...");
        //
        jBtPesqInterno.setEnabled(true);
        jProfissaoInterno.setEnabled(true);
        jObservacaoInterno.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setEnabled(true);
        jComboBoxEncaminharAtividade.setEnabled(true);
        //
        jBtNovaOcupacao.setEnabled(true);
        jBtExcluirOcupacao.setEnabled(true);
        // PROFISSIONALIZAÇÃO/CURSOS
        jComboBoxDescricaoCurso.setEnabled(true);
        jComboBoxEncaminhamentoCurso.setEnabled(true);
        //
        jBtNovoCurso.setEnabled(true);
        jBtExcluirCurso.setEnabled(true);
        // 
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void AlterarInterno() {
        jBtPesqInterno.setEnabled(true);
        jProfissaoInterno.setEnabled(true);
        jObservacaoInterno.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setEnabled(true);
        jComboBoxEncaminharAtividade.setEnabled(true);
        //
        jBtNovaOcupacao.setEnabled(true);
        jBtExcluirOcupacao.setEnabled(true);
        // PROFISSIONALIZAÇÃO/CURSOS
        jComboBoxDescricaoCurso.setEnabled(true);
        jComboBoxEncaminhamentoCurso.setEnabled(true);
        //
        jBtNovoCurso.setEnabled(true);
        jBtExcluirCurso.setEnabled(true);
        // 
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void ExcluirInterno() {
        jIdInterno.setText("");
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jDescricaoCela.setText("");
        jDescricaoPavilhao.setText("");
        jProfissaoInterno.setText("");
        //
        jBtPesqInterno.setEnabled(!true);
        jProfissaoInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setEnabled(!true);
        jComboBoxEncaminharAtividade.setEnabled(!true);
        //
        jBtNovaOcupacao.setEnabled(!true);
        jBtExcluirOcupacao.setEnabled(!true);
        // PROFISSIONALIZAÇÃO/CURSOS
        jComboBoxDescricaoCurso.setEnabled(!true);
        jComboBoxEncaminhamentoCurso.setEnabled(!true);
        //
        jBtNovoCurso.setEnabled(!true);
        jBtExcluirCurso.setEnabled(!true);
        // 
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void SalvarInterno() {
        jIdInterno.setText("");
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jDescricaoCela.setText("");
        jDescricaoPavilhao.setText("");
        jProfissaoInterno.setText("");
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setSelectedItem("Selecione...");
        jComboBoxEncaminharAtividade.setSelectedItem("Selecione...");
        // CURSOS
        jComboBoxDescricaoCurso.setSelectedItem("Selecione...");
        jComboBoxEncaminhamentoCurso.setSelectedItem("Selecione...");
        //
        jBtPesqInterno.setEnabled(!true);
        jProfissaoInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setEnabled(!true);
        jComboBoxEncaminharAtividade.setEnabled(!true);
        //
        jBtNovaOcupacao.setEnabled(!true);
        jBtExcluirOcupacao.setEnabled(!true);
        // PROFISSIONALIZAÇÃO/CURSOS
        jComboBoxDescricaoCurso.setEnabled(!true);
        jComboBoxEncaminhamentoCurso.setEnabled(!true);
        //
        jBtNovoCurso.setEnabled(!true);
        jBtExcluirCurso.setEnabled(!true);
        // 
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void CancelarInterno() {
        jIdInterno.setText("");
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jDescricaoCela.setText("");
        jDescricaoPavilhao.setText("");
        jProfissaoInterno.setText("");
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setSelectedItem("Selecione...");
        jComboBoxEncaminharAtividade.setSelectedItem("Selecione...");
        // CURSOS
        jComboBoxDescricaoCurso.setSelectedItem("Selecione...");
        jComboBoxEncaminhamentoCurso.setSelectedItem("Selecione...");
        //
        jBtPesqInterno.setEnabled(!true);
        jProfissaoInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        // OCUPAÇÃO
        jComboBoxDescricaoOcupacao.setEnabled(!true);
        jComboBoxEncaminharAtividade.setEnabled(!true);
        //
        jBtNovaOcupacao.setEnabled(!true);
        jBtExcluirOcupacao.setEnabled(!true);
        // PROFISSIONALIZAÇÃO/CURSOS
        jComboBoxDescricaoCurso.setEnabled(!true);
        jComboBoxEncaminhamentoCurso.setEnabled(!true);
        //
        jBtNovoCurso.setEnabled(!true);
        jBtExcluirCurso.setEnabled(!true);
        // 
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM LISTAESPERA");
            conecta.rs.last();
            jIDLanc.setText(conecta.rs.getString("Idlanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível identificar o código do lançamento" + ex);
        }
        conecta.desconecta();
    }

    public void buscarCodigoItem() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSLISTAESPERA");
            conecta.rs.last();
            idItem = conecta.rs.getString("IdItem");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível identificar o código do lançamento" + e);
        }
        conecta.desconecta();
    }

    public void preencherComboCurso() {
        codigoCurso = "";
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CURSOS ORDER BY DescricaoCurso");
            conecta.rs.first();
            do {
                jComboBoxDescricaoCurso.addItem(conecta.rs.getString("DescricaoCurso"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void preencherComboOcupacao() {

        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM OCUPACAO ORDER BY DescricaoOcupa");
            conecta.rs.first();
            do {
                jComboBoxDescricaoOcupacao.addItem(conecta.rs.getString("DescricaoOcupa"));
                codigoOcupacao = conecta.rs.getString("IdCodigoOcupa");
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void verificarInterno() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSLISTAESPERA WHERE IdInternoCrc='" + jIdInterno.getText() + "'");
            conecta.rs.first();
            codigoInterno = conecta.rs.getString("IdInternoCrc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void limparTabelaCursos() {

        while (jTabelaCursos.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaCursos.getModel()).removeRow(0);
        }
    }

    public void limparTabelaOcupacao() {
        while (jTabelaOcupacao.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaOcupacao.getModel()).removeRow(0);
        }
    }

    public void incluirOcupacao() {
        for (int i = 0; i < jTabelaOcupacao.getRowCount(); i++) {
            objItensLista.setIdLanc(Integer.valueOf(jIDLanc.getText()));
            objItensLista.setIdCodigoOcupa(Integer.valueOf(codigoOcupacao));
            objItensLista.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
            objItensLista.setNomeInterno(jNomeInterno.getText());
            objItensLista.setIdCodigoOcupa((int) jTabelaOcupacao.getValueAt(i, 0));
            objItensLista.setDescricaoOcupacao((String) jTabelaOcupacao.getValueAt(i, 1));
            objItensLista.setEncaminhamentoOcupa((String) jTabelaOcupacao.getValueAt(i, 2));
            objItensLista.getDescricaoOcupacao();
            controleOcupaCursos.incluirListaEsperaOcupa(objItensLista);
        }
    }

    public void incluirCursos() {
        // Grava os dados do arrayList na tabela
        for (int i = 0; i < jTabelaCursos.getRowCount(); i++) {
            objItensLista.setIdLanc(Integer.valueOf(jIDLanc.getText()));
            objItensLista.setIdCurso(Integer.valueOf(codigoOcupacao));
            objItensLista.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
            objItensLista.setNomeInterno(jNomeInterno.getText());
            objItensLista.setIdCurso((int) jTabelaCursos.getValueAt(i, 0));
            objItensLista.setDescricaoCurso((String) jTabelaCursos.getValueAt(i, 1));
            objItensLista.setEncaminhamentoCurso((String) jTabelaCursos.getValueAt(i, 2));
            objItensLista.getDescricaoCurso();
            controleOcupaCursos.incluirListaEsperaCurso(objItensLista);
        }
    }

    public void TabelaCursos() {
        jTabelaCursos.getColumnModel().getColumn(0).setPreferredWidth(65);
        jTabelaCursos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCursos.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTabelaCursos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCursos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaCursos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCursos.getTableHeader().setReorderingAllowed(false);
        jTabelaCursos.setAutoResizeMode(jTabelaCursos.AUTO_RESIZE_OFF);
        jTabelaCursos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaCursos();
    }

    public void alinharCamposTabelaCursos() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaCursos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void TabelaOperacao() {

        jTabelaOcupacao.getColumnModel().getColumn(0).setPreferredWidth(65);
        jTabelaOcupacao.getColumnModel().getColumn(0).setResizable(false);
        jTabelaOcupacao.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTabelaOcupacao.getColumnModel().getColumn(1).setResizable(false);
        jTabelaOcupacao.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaOcupacao.getColumnModel().getColumn(2).setResizable(false);
        jTabelaOcupacao.getTableHeader().setReorderingAllowed(false);
        jTabelaOcupacao.setAutoResizeMode(jTabelaOcupacao.AUTO_RESIZE_OFF);
        jTabelaOcupacao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaOcupacao();
    }

    public void alinharCamposTabelaOcupacao() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaOcupacao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void preencherListaEspera(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Data Cadastro", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), conecta.rs.getString("StatusLanc"), dataEntrada, conecta.rs.getString("ObsLanc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem exibidos.");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaListaEspera.setModel(modelo);
        jTabelaListaEspera.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaListaEspera.getColumnModel().getColumn(0).setResizable(false);
        jTabelaListaEspera.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaListaEspera.getColumnModel().getColumn(1).setResizable(false);
        jTabelaListaEspera.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaListaEspera.getColumnModel().getColumn(2).setResizable(false);
        jTabelaListaEspera.getColumnModel().getColumn(3).setPreferredWidth(550);
        jTabelaListaEspera.getTableHeader().setReorderingAllowed(false);
        jTabelaListaEspera.setAutoResizeMode(jTabelaListaEspera.AUTO_RESIZE_OFF);
        jTabelaListaEspera.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaCelulaTabelaListaEspera();
        conecta.desconecta();
    }

    public void alinhaCelulaTabelaListaEspera() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaListaEspera.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaListaEspera.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaListaEspera.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparTelaListaEspera() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Data Cadastro", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaListaEspera.setModel(modelo);
        jTabelaListaEspera.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaListaEspera.getColumnModel().getColumn(0).setResizable(false);
        jTabelaListaEspera.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaListaEspera.getColumnModel().getColumn(1).setResizable(false);
        jTabelaListaEspera.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaListaEspera.getColumnModel().getColumn(2).setResizable(false);
        jTabelaListaEspera.getColumnModel().getColumn(3).setPreferredWidth(550);
        jTabelaListaEspera.getTableHeader().setReorderingAllowed(false);
        jTabelaListaEspera.setAutoResizeMode(jTabelaListaEspera.AUTO_RESIZE_OFF);
        jTabelaListaEspera.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno", "Pavilhão", "Cela"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("DescricaoPav"), conecta.rs.getString("EndCelaPav")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternos.setModel(modelo);
        jTabelaInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(3).setPreferredWidth(140);
        jTabelaInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaInternos.setAutoResizeMode(jTabelaInternos.AUTO_RESIZE_OFF);
        jTabelaInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaInternos();
        conecta.desconecta();
    }

    public void limparTabelaInternos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno", "Pavilhão", "Cela"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternos.setModel(modelo);
        jTabelaInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(3).setPreferredWidth(140);
        jTabelaInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaInternos.setAutoResizeMode(jTabelaInternos.AUTO_RESIZE_OFF);
        jTabelaInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaInternos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog3() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela3);
        objLogSys.setIdLancMov(Integer.valueOf(jIDLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog4() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela4);
        objLogSys.setIdLancMov(Integer.valueOf(jIDLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

//    TelaPesqInternosListaEspera objPesqCelaLista = new TelaPesqInternosListaEspera();
//        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objPesqCelaLista);
//        objPesqCelaLista.show();
}
