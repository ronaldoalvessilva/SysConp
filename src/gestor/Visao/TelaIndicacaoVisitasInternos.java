/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleIndicacaoVisitasInterno;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.IndicacaoVisitas;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaAtendimentoSocial.jIDAtend;
import static gestor.Visao.TelaAtendimentoSocial.jIDInterno;
import static gestor.Visao.TelaAtendimentoSocial.jNomeInterno;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaIndicacaoVisitasInternos extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    IndicacaoVisitas objInd = new IndicacaoVisitas();
    ControleIndicacaoVisitasInterno control = new ControleIndicacaoVisitasInterno();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Serviço Social:Indicação de Visitas de Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int acao;
    int flag;
    String dataEntrada;
    int count;
    String nomeUserRegistro;

    /**
     * Creates new form TelaIndicacaoVisitasInternos
     */
    public static TelaAtendimentoSocial atendeSocial;

    public TelaIndicacaoVisitasInternos(TelaAtendimentoSocial parent, boolean modal) {
        this.atendeSocial = parent;
        this.setModal(modal);
        setLocationRelativeTo(atendeSocial);
        initComponents();
        corCampos();
        preencherTabelaIndicacao("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL "
                + "INNER JOIN ATENDIMENTOSOCIAL "
                + "ON INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL.IdAtend=ATENDIMENTOSOCIAL.IdAtend "
                + "WHERE ATENDIMENTOSOCIAL.IdAtend='" + jIDAtend.getText() + "'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jNomeVisitante = new javax.swing.JTextField();
        jIdIndicacao = new javax.swing.JTextField();
        jDataInd = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jGrauParentesco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextoArea = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jUsuarioCriador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaIndicacaoVisitas = new javax.swing.JTable();
        jBtSalvar = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Indicação de Visitas Internos :::...");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nome do Visitante");

        jNomeVisitante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisitante.setEnabled(false);

        jIdIndicacao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdIndicacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdIndicacao.setEnabled(false);

        jDataInd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataInd.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Grau de Parentesco");

        jGrauParentesco.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jGrauParentesco.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Observação");

        jTextoArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoArea.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Usuário Criador");

        jUsuarioCriador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jUsuarioCriador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jUsuarioCriador.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jUsuarioCriador.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdIndicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataInd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jUsuarioCriador)))
                    .addComponent(jNomeVisitante, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                    .addComponent(jTextoArea)
                    .addComponent(jLabel4)
                    .addComponent(jGrauParentesco))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdIndicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataInd, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jUsuarioCriador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jGrauParentesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextoArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabelaIndicacaoVisitas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaIndicacaoVisitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Nome do Visitante", "Grau de Parentesco"
            }
        ));
        jTabelaIndicacaoVisitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaIndicacaoVisitasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaIndicacaoVisitas);
        if (jTabelaIndicacaoVisitas.getColumnModel().getColumnCount() > 0) {
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(2).setMinWidth(350);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(2).setMaxWidth(350);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(3).setMinWidth(200);
            jTabelaIndicacaoVisitas.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtNovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        corCampos();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL "
                    + "WHERE IdInd='" + jIdIndicacao.getText() + "'");
            conecta.rs.first();
            nomeUserRegistro = conecta.rs.getString("UsuarioInsert");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
        }
        if (nomeUserRegistro == null ? nameUser == null : nomeUserRegistro.equals(nameUser)) {
            acao = 2;
            Alterar();
            corCampos();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserRegistro + " só esse usuário poderá modificar.");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL WHERE IdInd='" + jIdIndicacao.getText() + "'");
            conecta.rs.first();
            nomeUserRegistro = conecta.rs.getString("UsuarioInsert");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
        }
        if (nomeUserRegistro == null ? nameUser == null : nomeUserRegistro.equals(nameUser)) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objInd.setIdInd(Integer.valueOf(jIdIndicacao.getText()));
                control.excluirIndicacaoVisitas(objInd);
                Excluir();
                preencherTabelaIndicacao("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL "
                        + "INNER JOIN ATENDIMENTOSOCIAL "
                        + "ON INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL.IdAtend=ATENDIMENTOSOCIAL.IdAtend "
                        + "WHERE ATENDIMENTOSOCIAL.IdAtend='" + jIDAtend.getText() + "'");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserRegistro + " só esse usuário poderá modificar.");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (jDataInd.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data da indicação da visita.");
        } else if (jNomeVisitante.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da visita.");
        } else if (jGrauParentesco.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o grau de parentesco da visita.");
        } else {
            objInd.setDataInd(jDataInd.getDate());
            objInd.setGrauParentesco(jGrauParentesco.getText());
            objInd.setNomeVisitante(jNomeVisitante.getText());
            objInd.setTextoArea(jTextoArea.getText());
            objInd.setIdAtend(Integer.valueOf(jIDAtend.getText()));
            objInd.setNomeInternoCrc(jNomeInterno.getText());
            objInd.setIdInternoCrc(Integer.valueOf(jIDInterno.getText()));
            if (acao == 1) {
                objInd.setUsuarioInsert(nameUser);
                objInd.setDataInsert(dataModFinal);
                objInd.setHorarioInsert(horaMov);
                //
                control.incluirIndicacaoVisitas(objInd);
                buscarCodigo();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                preencherTabelaIndicacao("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL "
                        + "INNER JOIN ATENDIMENTOSOCIAL "
                        + "ON INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL.IdAtend=ATENDIMENTOSOCIAL.IdAtend "
                        + "WHERE ATENDIMENTOSOCIAL.IdAtend='" + jIDAtend.getText() + "'");
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
            if (acao == 2) {
                objInd.setUsuarioUp(nameUser);
                objInd.setDataUp(dataModFinal);
                objInd.setHorarioUp(horaMov);
                //
                objInd.setIdInd(Integer.valueOf(jIdIndicacao.getText()));
                control.alterarIndicacaoVisitas(objInd);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                preencherTabelaIndicacao("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL "
                        + "INNER JOIN ATENDIMENTOSOCIAL "
                        + "ON INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL.IdAtend=ATENDIMENTOSOCIAL.IdAtend "
                        + "WHERE ATENDIMENTOSOCIAL.IdAtend='" + jIDAtend.getText() + "'");
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jTabelaIndicacaoVisitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaIndicacaoVisitasMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idAtend = "" + jTabelaIndicacaoVisitas.getValueAt(jTabelaIndicacaoVisitas.getSelectedRow(), 0);
            jIdIndicacao.setText(idAtend);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL "
                        + "INNER JOIN ATENDIMENTOSOCIAL "
                        + "ON INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL.IdAtend=ATENDIMENTOSOCIAL.IdAtend "
                        + "WHERE ATENDIMENTOSOCIAL.IdAtend='" + jIDAtend.getText() + "' "
                        + "AND IdInd='" + idAtend + "'");
                conecta.rs.first();
                jIdIndicacao.setText(String.valueOf(conecta.rs.getInt("IdInd")));
                jDataInd.setDate(conecta.rs.getDate("DataInd"));
                jUsuarioCriador.setText(conecta.rs.getString("UsuarioInsert"));
                jNomeVisitante.setText(conecta.rs.getString("NomeVisitante"));
                jGrauParentesco.setText(conecta.rs.getString("GrauParentesco"));
                jTextoArea.setText(conecta.rs.getString("TextoArea"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa por DATA " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaIndicacaoVisitasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaIndicacaoVisitasInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaIndicacaoVisitasInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaIndicacaoVisitasInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaIndicacaoVisitasInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaIndicacaoVisitasInternos dialog = new TelaIndicacaoVisitasInternos(atendeSocial, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private com.toedter.calendar.JDateChooser jDataInd;
    private javax.swing.JTextField jGrauParentesco;
    public static javax.swing.JTextField jIdIndicacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JTextField jNomeVisitante;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTabelaIndicacaoVisitas;
    private javax.swing.JTextField jTextoArea;
    private javax.swing.JTextField jUsuarioCriador;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jGrauParentesco.setDocument(new LimiteDigitosAlfa(71));
        jNomeVisitante.setDocument(new LimiteDigitosAlfa(71));
        jTextoArea.setDocument(new LimiteDigitosAlfa(71));
//        jTextoArea.setLineWrap(true);
//        jTextoArea.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdIndicacao.setBackground(Color.white);
        jDataInd.setBackground(Color.white);
        jUsuarioCriador.setBackground(Color.white);
        jGrauParentesco.setBackground(Color.white);
        jNomeVisitante.setBackground(Color.white);
        jTextoArea.setBackground(Color.white);
    }

    public void Novo() {
        jIdIndicacao.setText("");
        jDataInd.setCalendar(Calendar.getInstance());
        jUsuarioCriador.setText("");
        jGrauParentesco.setText("");
        jNomeVisitante.setText("");
        jTextoArea.setText("");
        //
        jDataInd.setEnabled(true);
        jGrauParentesco.setEnabled(true);
        jNomeVisitante.setEnabled(true);
        jTextoArea.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        jDataInd.setEnabled(true);
        jGrauParentesco.setEnabled(true);
        jNomeVisitante.setEnabled(true);
        jTextoArea.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        jIdIndicacao.setText("");
        jDataInd.setDate(null);
        jUsuarioCriador.setText("");
        jGrauParentesco.setText("");
        jNomeVisitante.setText("");
        jTextoArea.setText("");
        //
        jDataInd.setEnabled(!true);
        jGrauParentesco.setEnabled(!true);
        jNomeVisitante.setEnabled(!true);
        jTextoArea.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Salvar() {
        count = 0;
        jIdIndicacao.setText("");
        jDataInd.setDate(null);
        jUsuarioCriador.setText("");
        jGrauParentesco.setText("");
        jNomeVisitante.setText("");
        jTextoArea.setText("");
        //
        jDataInd.setEnabled(!true);
        jGrauParentesco.setEnabled(!true);
        jNomeVisitante.setEnabled(!true);
        jTextoArea.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void Cancelar() {
        jIdIndicacao.setText("");
        jDataInd.setDate(null);
        jUsuarioCriador.setText("");
        jGrauParentesco.setText("");
        jNomeVisitante.setText("");
        jTextoArea.setText("");
        //
        jDataInd.setEnabled(!true);
        jGrauParentesco.setEnabled(!true);
        jNomeVisitante.setEnabled(!true);
        jTextoArea.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM INDICACAO_VISITA_INTERNO_SERVICO_SOCIAL");
            conecta.rs.last();
            jIdIndicacao.setText(conecta.rs.getString("IdInd"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
        conecta.desconecta();
    }

    public void preencherTabelaIndicacao(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Nome do Visitate", "Grau Parentesco"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataInd");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdInd"), dataEntrada, conecta.rs.getString("NomeVisitante"), conecta.rs.getString("GrauParentesco")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaIndicacaoVisitas.setModel(modelo);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(2).setPreferredWidth(350);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaIndicacaoVisitas.getTableHeader().setReorderingAllowed(false);
        jTabelaIndicacaoVisitas.setAutoResizeMode(jTabelaIndicacaoVisitas.AUTO_RESIZE_OFF);
        jTabelaIndicacaoVisitas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCelulasTabelaIndicacao();
        conecta.desconecta();
    }

    public void alinharCelulasTabelaIndicacao() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void limparTabelaIndicacao() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Nome do Visitate", "Grau Parentesco"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaIndicacaoVisitas.setModel(modelo);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(2).setPreferredWidth(350);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTabelaIndicacaoVisitas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaIndicacaoVisitas.getTableHeader().setReorderingAllowed(false);
        jTabelaIndicacaoVisitas.setAutoResizeMode(jTabelaIndicacaoVisitas.AUTO_RESIZE_OFF);
        jTabelaIndicacaoVisitas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdIndicacao.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
