/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEntSaiOficialJustica;
import gestor.Controle.ControleItensEntOficialJustica;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.LimiteDigitosAlfa;
import Utilitarios.ModeloTabela;
import gestor.Modelo.EntradaSaidaOficialJustica;
import gestor.Modelo.ItensOficialJustica;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortarias.codAbrirP1;
import static gestor.Visao.TelaModuloPortarias.codAlterarP1;
import static gestor.Visao.TelaModuloPortarias.codConsultarP1;
import static gestor.Visao.TelaModuloPortarias.codExcluirP1;
import static gestor.Visao.TelaModuloPortarias.codGravarP1;
import static gestor.Visao.TelaModuloPortarias.codIncluirP1;
import static gestor.Visao.TelaModuloPortarias.codUserAcessoP1;
import static gestor.Visao.TelaModuloPortarias.codigoGrupoP1;
import static gestor.Visao.TelaModuloPortarias.codigoUserGroupP1;
import static gestor.Visao.TelaModuloPortarias.codigoUserP1;
import static gestor.Visao.TelaModuloPortarias.nomeGrupoP1;
import static gestor.Visao.TelaModuloPortarias.nomeTelaP1;
import static gestor.Visao.TelaModuloPortarias.telaEntradaSaidaOJDepP1;
import static gestor.Visao.TelaModuloPortarias.telaEntradaSaidaOJManuP1;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author user
 */
public class TelaEntradaSaidaOficialJustica extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EntradaSaidaOficialJustica objEntSaiOficialJustica = new EntradaSaidaOficialJustica();
    ControleEntSaiOficialJustica control = new ControleEntSaiOficialJustica();
    //
    ItensOficialJustica objItensOficialJustica = new ItensOficialJustica();
    ControleItensEntOficialJustica controle = new ControleItensEntOficialJustica();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria Externa:Entrada/Saida de Oficial de Justiça:Manutenção";
    String nomeModuloTela2 = "Portaria Externa:Entrada/Saida de Oficial de Justiça:Oficial de Justiça";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int flag;
    int acao;
    String statusEnt = "ABERTO";
    String dataInicial;
    String dataFinal;
    String dataEntrada, dataBrasil;
    String dataSaida;
    public static String idItem;
    String codlanc;
    String caminho;
    int count = 0;
    // VARIAVEIS PARA BLOQUEAR O REGISTRO CASO NÃO ESTEJA COM OS HORÁRIOS PREENCHIDOS COM AS HORAS.
    String verHorarioSaida = "00:00";
    String verHorarioEntrada = "00:00";
    String horaEntradaEncontrada, codigoRegistro, horaSaidaEncontrado;

    /**
     * Creates new form TelaEntradaSaidaAdvogados
     */
    public static TelaFotoOficialJusticaDepartamento telaFotoOficialDepto;

    public TelaEntradaSaidaOficialJustica() {
        super();
        initComponents();
        setResizable(false);
        formatarCampos();
        corCampo();
    }

    public void mostrarFotoOficialJustica() {
        telaFotoOficialDepto = new TelaFotoOficialJusticaDepartamento(this, true);
        telaFotoOficialDepto.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jBtPesqID = new javax.swing.JButton();
        jBtPesqData = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jBtNomeAdvogado = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPesquisaNomeAdvogado = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaEntradaSaidaOficialJustica = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIDlanc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDatalancamento = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jStatusEntCola = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtImpressao = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoriaManu = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIdOficial = new javax.swing.JTextField();
        jNomeOficialJustica = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jDepartamento = new javax.swing.JTextField();
        jBtPesqAdvogado = new javax.swing.JButton();
        jBtBuscarSetor = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jIDDepto = new javax.swing.JTextField();
        jBtZoonAdvogadoDepartamento = new javax.swing.JButton();
        jMotivo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jFotoOficialJustica = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaAdvogados = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jDataEntrada = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jHorarioEntrada = new javax.swing.JFormattedTextField();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jHorarioSaida = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jBtNovoOficialJustica = new javax.swing.JButton();
        jBtAlterarOficialJustica = new javax.swing.JButton();
        jBtExcluirOficialJustica = new javax.swing.JButton();
        jBtSalvarOficialJustica = new javax.swing.JButton();
        jBtCancelarOficialJustica = new javax.swing.JButton();
        jBtSairOficialJustica = new javax.swing.JButton();
        jBtBuscarAdvogado = new javax.swing.JButton();
        jBtAudItensEntSaiOficialJustica = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setResizable(true);
        setTitle("...::: Entrada/Saida de Oficial de Justiça a Departamentos- {P1 Externa} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jBtPesqID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqID.setContentAreaFilled(false);
        jBtPesqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIDActionPerformed(evt);
            }
        });

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jBtNomeAdvogado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtNomeAdvogado.setContentAreaFilled(false);
        jBtNomeAdvogado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNomeAdvogadoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nome Oficial Justiça:");

        jPesquisaNomeAdvogado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPesquisaNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jCheckBox1)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData)
                    .addComponent(jBtPesqID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(jBtNomeAdvogado)
                    .addComponent(jCheckBox1)
                    .addComponent(jPesquisaNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaEntradaSaidaOficialJustica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEntradaSaidaOficialJustica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome do Oficial de Justiça", "Observação"
            }
        ));
        jTabelaEntradaSaidaOficialJustica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEntradaSaidaOficialJusticaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaEntradaSaidaOficialJustica);
        if (jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumnCount() > 0) {
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setMinWidth(350);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setMaxWidth(350);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setMinWidth(360);
            jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setMaxWidth(360);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cabeçalho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jIDlanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDlanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDlanc.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Cadastro");

        jDatalancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDatalancamento.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Status");

        jStatusEntCola.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEntCola.setForeground(new java.awt.Color(255, 0, 0));
        jStatusEntCola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEntCola.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jStatusEntCola.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jIDlanc, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 294, Short.MAX_VALUE))
                    .addComponent(jStatusEntCola))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDatalancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel12))
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDlanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusEntCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDatalancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressao.setText("Impressão");
        jBtImpressao.setEnabled(false);

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoriaManu.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setText("Auditoria");
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtImpressao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtAuditoriaManu, jBtCancelar, jBtExcluir, jBtFinalizar, jBtImpressao, jBtNovo, jBtSalvar});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jBtNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterar))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jBtCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtFinalizar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtAuditoriaManu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtImpressao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtAuditoriaManu, jBtCancelar, jBtExcluir, jBtFinalizar, jBtImpressao, jBtNovo, jBtSalvar});

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Oficial Justiça/Departameto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(153, 0, 102))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome do Oficial Justiça");

        jIdOficial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdOficial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdOficial.setEnabled(false);

        jNomeOficialJustica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeOficialJustica.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome do Departamento");

        jDepartamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDepartamento.setEnabled(false);

        jBtPesqAdvogado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqAdvogado.setContentAreaFilled(false);
        jBtPesqAdvogado.setEnabled(false);
        jBtPesqAdvogado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqAdvogadoActionPerformed(evt);
            }
        });

        jBtBuscarSetor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarSetor.setToolTipText("Pesquisar Setor");
        jBtBuscarSetor.setContentAreaFilled(false);
        jBtBuscarSetor.setEnabled(false);
        jBtBuscarSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarSetorActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Código");

        jIDDepto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDDepto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDDepto.setEnabled(false);

        jBtZoonAdvogadoDepartamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/11985_16x16.png"))); // NOI18N
        jBtZoonAdvogadoDepartamento.setToolTipText("Ampliar Foto Advogado");
        jBtZoonAdvogadoDepartamento.setContentAreaFilled(false);
        jBtZoonAdvogadoDepartamento.setEnabled(false);
        jBtZoonAdvogadoDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtZoonAdvogadoDepartamentoActionPerformed(evt);
            }
        });

        jMotivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMotivo.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Motivo");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jIdOficial, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtZoonAdvogadoDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jNomeOficialJustica, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtPesqAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jIDDepto, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtBuscarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jBtZoonAdvogadoDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtPesqAdvogado)
                            .addComponent(jNomeOficialJustica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIdOficial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jIDDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addComponent(jBtBuscarSetor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoOficialJustica, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoOficialJustica, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
        );

        jTabelaAdvogados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAdvogados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome do Oficial de Justiça", "Data Entrada", "Horário", "Data Saída", "Horário"
            }
        ));
        jTabelaAdvogados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAdvogadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaAdvogados);
        if (jTabelaAdvogados.getColumnModel().getColumnCount() > 0) {
            jTabelaAdvogados.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAdvogados.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAdvogados.getColumnModel().getColumn(1).setMinWidth(250);
            jTabelaAdvogados.getColumnModel().getColumn(1).setMaxWidth(250);
            jTabelaAdvogados.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaAdvogados.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaAdvogados.getColumnModel().getColumn(3).setMinWidth(50);
            jTabelaAdvogados.getColumnModel().getColumn(3).setMaxWidth(50);
            jTabelaAdvogados.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaAdvogados.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaAdvogados.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaAdvogados.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Entrada/Saida", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jDataEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntrada.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 255));
        jLabel6.setText("Data Entrada");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 255));
        jLabel8.setText("Horário");

        jHorarioEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioEntrada.setEnabled(false);

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 0));
        jLabel9.setText("Data Saída");

        jHorarioSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioSaida.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 0));
        jLabel10.setText("Horário");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jDataEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(7, 7, 7)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovoOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoOficialJustica.setText("Novo");
        jBtNovoOficialJustica.setEnabled(false);
        jBtNovoOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoOficialJusticaActionPerformed(evt);
            }
        });

        jBtAlterarOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarOficialJustica.setText("Alterar");
        jBtAlterarOficialJustica.setEnabled(false);
        jBtAlterarOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarOficialJusticaActionPerformed(evt);
            }
        });

        jBtExcluirOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirOficialJustica.setText("Excluir");
        jBtExcluirOficialJustica.setEnabled(false);
        jBtExcluirOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirOficialJusticaActionPerformed(evt);
            }
        });

        jBtSalvarOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarOficialJustica.setText("Gravar");
        jBtSalvarOficialJustica.setEnabled(false);
        jBtSalvarOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarOficialJusticaActionPerformed(evt);
            }
        });

        jBtCancelarOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarOficialJustica.setText("Cancelar");
        jBtCancelarOficialJustica.setEnabled(false);
        jBtCancelarOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarOficialJusticaActionPerformed(evt);
            }
        });

        jBtSairOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairOficialJustica.setText("Sair");
        jBtSairOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairOficialJusticaActionPerformed(evt);
            }
        });

        jBtBuscarAdvogado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarAdvogado.setText("Buscar");
        jBtBuscarAdvogado.setEnabled(false);
        jBtBuscarAdvogado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarAdvogadoActionPerformed(evt);
            }
        });

        jBtAudItensEntSaiOficialJustica.setForeground(new java.awt.Color(255, 0, 0));
        jBtAudItensEntSaiOficialJustica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAudItensEntSaiOficialJustica.setText("Auditoria");
        jBtAudItensEntSaiOficialJustica.setEnabled(false);
        jBtAudItensEntSaiOficialJustica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAudItensEntSaiOficialJusticaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAlterarOficialJustica)
                    .addComponent(jBtExcluirOficialJustica)
                    .addComponent(jBtSalvarOficialJustica)
                    .addComponent(jBtNovoOficialJustica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtSairOficialJustica, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtAudItensEntSaiOficialJustica, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtBuscarAdvogado, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtCancelarOficialJustica, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarOficialJustica, jBtAudItensEntSaiOficialJustica, jBtBuscarAdvogado, jBtCancelarOficialJustica, jBtExcluirOficialJustica, jBtNovoOficialJustica, jBtSairOficialJustica, jBtSalvarOficialJustica});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtNovoOficialJustica)
                    .addComponent(jBtCancelarOficialJustica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAlterarOficialJustica)
                    .addComponent(jBtBuscarAdvogado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtExcluirOficialJustica)
                    .addComponent(jBtAudItensEntSaiOficialJustica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtSalvarOficialJustica)
                    .addComponent(jBtSairOficialJustica))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarOficialJustica, jBtAudItensEntSaiOficialJustica, jBtBuscarAdvogado, jBtCancelarOficialJustica, jBtExcluirOficialJustica, jBtNovoOficialJustica, jBtSairOficialJustica, jBtSalvarOficialJustica});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel10, jPanel12, jPanel7});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel3, jPanel8});

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(250, 20, 816, 532);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        preencherTodasEntSai("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA "
                                + "INNER JOIN ITENS_ENTRADAS_OFICIAL_JUSTICA "
                                + "ON ENTRADAS_OFICIAL_JUSTICA.IdLanc=ITENS_ENTRADAS_OFICIAL_JUSTICA.IdLanc "
                                + "INNER JOIN OFICIAL_JUSTICA "
                                + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                                + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        preencherTodasEntSai("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA "
                                + "INNER JOIN ITENS_ENTRADAS_OFICIAL_JUSTICA "
                                + "ON ENTRADAS_OFICIAL_JUSTICA.IdLanc=ITENS_ENTRADAS_OFICIAL_JUSTICA.IdLanc "
                                + "INNER JOIN OFICIAL_JUSTICA "
                                + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                                + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIDActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um ID para pesquisa.");
        } else {
            preencherTodasEntSai("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA "
                    + "INNER JOIN ITENS_ENTRADAS_OFICIAL_JUSTICA "
                    + "ON ENTRADAS_OFICIAL_JUSTICA.IdLanc=ITENS_ENTRADAS_OFICIAL_JUSTICA.IdLanc "
                    + "INNER JOIN OFICIAL_JUSTICA "
                    + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                    + "WHERE ENTRADAS_OFICIAL_JUSTICA.IdLanc='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIDActionPerformed

    private void jTabelaEntradaSaidaOficialJusticaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEntradaSaidaOficialJusticaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaEntradaSaidaOficialJustica.getValueAt(jTabelaEntradaSaidaOficialJustica.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            jDatalancamento.setDate(jDatalancamento.getDate());
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            //
            bloquearCamposPesquisa();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA WHERE IdLanc='" + IdLanc + "'");
                conecta.rs.first();
                jIDlanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusEntCola.setText(conecta.rs.getString("Statuslanc"));
                jDatalancamento.setDate(conecta.rs.getDate("DataLanc"));
                jObservacao.setText(conecta.rs.getString("ObsLanc"));
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            preencherTabelaItens("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA "
                    + "INNER JOIN OFICIAL_JUSTICA "
                    + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                    + "WHERE IdLanc='" + IdLanc + "'");
        }
    }//GEN-LAST:event_jTabelaEntradaSaidaOficialJusticaMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJManuP1) && codIncluirP1 == 1) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJManuP1) && codAlterarP1 == 1) {
            objEntSaiOficialJustica.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de visitantes não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJManuP1) && codExcluirP1 == 1) {
            objEntSaiOficialJustica.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de visitantes não poderá ser excluída, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItens();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJManuP1) && codGravarP1 == 1) {
            if (jDatalancamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do lancamento.");
                jDatalancamento.requestFocus();
                jDatalancamento.setBackground(Color.white);
            } else {
                objEntSaiOficialJustica.setDataLanc(jDatalancamento.getDate());
                objEntSaiOficialJustica.setObsLanc(jObservacao.getText());
                objEntSaiOficialJustica.setStatusLanc(statusEnt);
                objEntSaiOficialJustica.setUsuarioInsert(nameUser);
                objEntSaiOficialJustica.setDataInsert(dataModFinal);
                objEntSaiOficialJustica.setHoraInsert(horaMov);
                if (acao == 1) {
                    control.incluirEntOficialJustica(objEntSaiOficialJustica);
                    buscarID();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    objEntSaiOficialJustica.setUsuarioUp(nameUser);
                    objEntSaiOficialJustica.setDataUp(dataModFinal);
                    objEntSaiOficialJustica.setHoraUp(horaMov);
                    objEntSaiOficialJustica.setIdLanc(Integer.valueOf(jIDlanc.getText()));
                    control.alterarEntOficialJustica(objEntSaiOficialJustica);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        verificarHoraEntrada();
        if (jHorarioSaida.getText().equals(horaSaidaEncontrado) && jIDlanc.getText().equals(codigoRegistro) || jHorarioEntrada.getText().equals(horaEntradaEncontrada) && jIDlanc.getText().equals(codigoRegistro)) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível FINALIZAR esse registro, existe(m) horário(s) de entrada de Advogado(s) em aberto.\nCorrija os horários com divergências e então poderá FINALIZAR o documento. ");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA WHERE IdLanc='" + jIDlanc.getText() + "'");
                conecta.rs.first();
                jStatusEntCola.setText(conecta.rs.getString("StatusLanc"));
                if (jStatusEntCola.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtPesqAdvogadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqAdvogadoActionPerformed
        // TODO add your handling code here:       
        TelaPesqOficialJustica objPesqOffice = new TelaPesqOficialJustica();
        TelaModuloPortarias.jPainelPortarias.add(objPesqOffice);
        objPesqOffice.show();
    }//GEN-LAST:event_jBtPesqAdvogadoActionPerformed

    private void jBtBuscarSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarSetorActionPerformed
        // TODO add your handling code here:
        TelaPesqDeptoOficialJustica objDeptoOficial = new TelaPesqDeptoOficialJustica();
        TelaModuloPortarias.jPainelPortarias.add(objDeptoOficial);
        objDeptoOficial.show();
    }//GEN-LAST:event_jBtBuscarSetorActionPerformed

    private void jTabelaAdvogadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAdvogadosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeColaborador = "" + jTabelaAdvogados.getValueAt(jTabelaAdvogados.getSelectedRow(), 1);
            jNomeOficialJustica.setText(nomeColaborador);
            idItem = "" + jTabelaAdvogados.getValueAt(jTabelaAdvogados.getSelectedRow(), 2);
            String horarioEntrada = "" + jTabelaAdvogados.getValueAt(jTabelaAdvogados.getSelectedRow(), 3);
            jHorarioEntrada.setText(horarioEntrada);
            String horarioSaida = "" + jTabelaAdvogados.getValueAt(jTabelaAdvogados.getSelectedRow(), 5);
            jHorarioSaida.setText(horarioSaida);
            // Habilitar os botões
            jBtZoonAdvogadoDepartamento.setEnabled(true);
            jBtNovoOficialJustica.setEnabled(!true);
            jBtAlterarOficialJustica.setEnabled(true);
            jBtExcluirOficialJustica.setEnabled(true);
            jBtSalvarOficialJustica.setEnabled(!true);
            jBtCancelarOficialJustica.setEnabled(true);
            jBtBuscarAdvogado.setEnabled(true);
            jBtAudItensEntSaiOficialJustica.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA "
                        + "INNER JOIN OFICIAL_JUSTICA "
                        + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                        + "INNER JOIN DEPARTAMENTOS "
                        + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdDepartamento=DEPARTAMENTOS.IdDepartamento "
                        + "WHERE NomeOficial='" + jNomeOficialJustica.getText() + "' AND IdLanc='" + jIDlanc.getText() + "' "
                        + "AND HorarioEntrada='" + jHorarioEntrada.getText() + "'");
                conecta.rs.first();
                jIdOficial.setText(conecta.rs.getString("IdOficial")); //Coluna 0
                jNomeOficialJustica.setText(conecta.rs.getString("NomeOficial")); // Coluna 1
                // Capturando foto
                caminho = conecta.rs.getString("FotoOficial");
                if (caminho != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                    jFotoOficialJustica.setIcon(i);
                    jFotoOficialJustica.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoOficialJustica.getWidth(), jFotoOficialJustica.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] img2Bytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteOF"));
                if (img2Bytes != null) {
                    ImageIcon pic2 = null;
                    pic2 = new ImageIcon(img2Bytes);
                    Image scaled2 = pic2.getImage().getScaledInstance(jFotoOficialJustica.getWidth(), jFotoOficialJustica.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon2 = new ImageIcon(scaled2);
                    jFotoOficialJustica.setIcon(icon2);
                }
                idItem = conecta.rs.getString("IdItem"); // Coluna 2
                jIDDepto.setText(conecta.rs.getString("IdDepartamento"));
                jDepartamento.setText(conecta.rs.getString("NomeDepartamento"));
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jHorarioEntrada.setText(conecta.rs.getString("HorarioEntrada"));
                jHorarioSaida.setText(conecta.rs.getString("HorarioSaida"));
                jMotivo.setText(conecta.rs.getString("Motivo"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaAdvogadosMouseClicked

    private void jBtNovoOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoOficialJusticaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJDepP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJDepP1) && codIncluirP1 == 1) {
            objEntSaiOficialJustica.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de advogado não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoAdvogado();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoOficialJusticaActionPerformed

    private void jBtAlterarOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarOficialJusticaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJDepP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJDepP1) && codAlterarP1 == 1) {
            objEntSaiOficialJustica.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de advogado não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                AlterarAdvogado();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarOficialJusticaActionPerformed

    private void jBtExcluirOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirOficialJusticaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJDepP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJDepP1) && codExcluirP1 == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEntSaiOficialJustica.setStatusLanc(jStatusEntCola.getText());
            if (jStatusEntCola.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse movimento não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o lancamento selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensOficialJustica.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensOficialJustica(objItensOficialJustica);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirAdvogado();
                    preencherTabelaItens("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA "
                            + "INNER JOIN OFICIAL_JUSTICA "
                            + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdAdvogado=OFICIAL_JUSTICA.IdOficial "
                            + "WHERE IdLanc='" + jIDlanc.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirOficialJusticaActionPerformed

    private void jBtSalvarOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarOficialJusticaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaOJDepP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaSaidaOJDepP1) && codGravarP1 == 1) {
            horaEntradaEncontrada = "";
            horaSaidaEncontrado = "";
            if (jNomeOficialJustica.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do oficial de justiça.");
                jNomeOficialJustica.setBackground(Color.red);
            } else {
                if (jDepartamento.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o nome do Departamento.");
                    jDepartamento.requestFocus();
                    jDepartamento.setBackground(Color.red);
                } else {
                    if (jDataEntrada.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data de entrada do oficial de justiça.");
                        jDataEntrada.requestFocus();
                        jDataEntrada.setBackground(Color.red);
                    } else {
                        if (jHorarioEntrada.getText().equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "É necessário informar um horário de entrada.");
                            jHorarioEntrada.requestFocus();
                            jHorarioEntrada.setBackground(Color.red);
                        } else {
                            if (jDataSaida.getDate() == null) {
                                JOptionPane.showMessageDialog(rootPane, "É necessário informar uma data de saida.");
                                jDataSaida.requestFocus();
                                jDataSaida.setBackground(Color.red);
                            } else {
                                if (jHorarioSaida.getText().equals("")) {
                                    jHorarioSaida.setText("00:00");
                                } else {
                                    objItensOficialJustica.setIdlanc(Integer.valueOf(jIDlanc.getText()));
                                    objItensOficialJustica.setIdOficial(Integer.valueOf(jIdOficial.getText()));
                                    objItensOficialJustica.setDataEntrada(jDataEntrada.getDate());
                                    objItensOficialJustica.setHorarioEntrada(jHorarioEntrada.getText());
                                    objItensOficialJustica.setDataSaida(jDataSaida.getDate());
                                    objItensOficialJustica.setHorarioSaida(jHorarioSaida.getText());
                                    objItensOficialJustica.setMotivoVisita(jMotivo.getText());
                                    if (acao == 3) {
                                        // Log usuario
                                        objItensOficialJustica.setUsuarioInsert(nameUser);
                                        objItensOficialJustica.setDataInsert(dataModFinal);
                                        objItensOficialJustica.setHoraInsert(horaMov);
                                        //
                                        objItensOficialJustica.setIdlanc(Integer.valueOf(jIDlanc.getText()));
                                        objItensOficialJustica.setIdOficial(Integer.valueOf(jIdOficial.getText()));
                                        objItensOficialJustica.setNomeOficial(jNomeOficialJustica.getText());
                                        objItensOficialJustica.setNomeDepartamento(jDepartamento.getText());
                                        controle.incluirItensOficialJustica(objItensOficialJustica);
                                        objLog2();
                                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                        SalvarAdvogado();
                                        preencherTabelaItens("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA "
                                                + "INNER JOIN OFICIAL_JUSTICA "
                                                + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                                                + "WHERE IdLanc='" + jIDlanc.getText() + "'");
                                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    }
                                    if (acao == 4) {
                                        objItensOficialJustica.setUsuarioUp(nameUser);
                                        objItensOficialJustica.setDataUp(dataModFinal);
                                        objItensOficialJustica.setHoraUp(horaMov);
                                        //
                                        objItensOficialJustica.setIdlanc(Integer.valueOf(jIDlanc.getText()));
                                        objItensOficialJustica.setIdOficial(Integer.valueOf(jIdOficial.getText()));
                                        objItensOficialJustica.setNomeOficial(jNomeOficialJustica.getText());
                                        objItensOficialJustica.setIdItem(Integer.valueOf(idItem));
                                        objItensOficialJustica.setNomeDepartamento(jDepartamento.getText());
                                        controle.alterarItensOficialJustica(objItensOficialJustica);
                                        objLog2();
                                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                        SalvarAdvogado();
                                        preencherTabelaItens("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA "
                                                + "INNER JOIN OFICIAL_JUSTICA "
                                                + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                                                + "WHERE IdLanc='" + jIDlanc.getText() + "'");
                                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarOficialJusticaActionPerformed

    private void jBtCancelarOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarOficialJusticaActionPerformed
        // TODO add your handling code here:
        CancelarAdvogado();
    }//GEN-LAST:event_jBtCancelarOficialJusticaActionPerformed

    private void jBtSairOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairOficialJusticaActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairOficialJusticaActionPerformed

    private void jBtBuscarAdvogadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarAdvogadoActionPerformed
        // TODO add your handling code here:
        TelaPesqItensOficial objPesqItensOficial = new TelaPesqItensOficial();
        TelaModuloPortarias.jPainelPortarias.add(objPesqItensOficial);
        objPesqItensOficial.show();
    }//GEN-LAST:event_jBtBuscarAdvogadoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaEntradaSaidaOficialJustica.setVisible(true);
            this.preencherTodasEntSai("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA "
                    + "INNER JOIN ITENS_ENTRADAS_OFICIAL_JUSTICA "
                    + "ON ENTRADAS_OFICIAL_JUSTICA.IdLanc=ITENS_ENTRADAS_OFICIAL_JUSTICA.IdLanc "
                    + "INNER JOIN OFICIAL_JUSTICA "
                    + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial");
        } else {
            jtotalRegistros.setText("");
            limparTabelaEntSai();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEntradaSaidaOficialJustica objAudiEntSaiOficialP1 = new TelaAuditoriaEntradaSaidaOficialJustica();
        TelaModuloPortarias.jPainelPortarias.add(objAudiEntSaiOficialP1);
        objAudiEntSaiOficialP1.show();
    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jBtAudItensEntSaiOficialJusticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAudItensEntSaiOficialJusticaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensOficialJustica objAudItensOficial = new TelaAuditoriaItensOficialJustica();
        TelaModuloPortarias.jPainelPortarias.add(objAudItensOficial);
        objAudItensOficial.show();
    }//GEN-LAST:event_jBtAudItensEntSaiOficialJusticaActionPerformed

    private void jBtZoonAdvogadoDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtZoonAdvogadoDepartamentoActionPerformed
        // TODO add your handling code here:
        if (jIdOficial.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe primeiro o oficial de justiça para ampliar a foto.");
        } else {
            mostrarFotoOficialJustica();
        }
    }//GEN-LAST:event_jBtZoonAdvogadoDepartamentoActionPerformed

    private void jBtNomeAdvogadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNomeAdvogadoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesquisaNomeAdvogado.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome de Advogado para pesquisa");
            jPesquisaNomeAdvogado.requestFocus();
        } else {
            pesquisarEntSaiAdvInterno("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA "
                    + "INNER JOIN ITENS_ENTRADAS_OFICIAL_JUSTICA "
                    + "ON ENTRADAS_OFICIAL_JUSTICA.IdLanc=ITENS_ENTRADAS_OFICIAL_JUSTICA.IdLanc "
                    + "INNER JOIN OFICIAL_JUSTICA "
                    + "ON ITENS_ENTRADAS_OFICIAL_JUSTICA.IdOficial=OFICIAL_JUSTICA.IdOficial "
                    + "WHERE NomeOficial LIKE'%" + jPesquisaNomeAdvogado.getText() + "%'");
        }
    }//GEN-LAST:event_jBtNomeAdvogadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarOficialJustica;
    private javax.swing.JButton jBtAudItensEntSaiOficialJustica;
    private javax.swing.JButton jBtAuditoriaManu;
    private javax.swing.JButton jBtBuscarAdvogado;
    private javax.swing.JButton jBtBuscarSetor;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarOficialJustica;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirOficialJustica;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImpressao;
    private javax.swing.JButton jBtNomeAdvogado;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoOficialJustica;
    private javax.swing.JButton jBtPesqAdvogado;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqID;
    private javax.swing.JButton jBtSairOficialJustica;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarOficialJustica;
    public static javax.swing.JButton jBtZoonAdvogadoDepartamento;
    private javax.swing.JCheckBox jCheckBox1;
    public static com.toedter.calendar.JDateChooser jDataEntrada;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    private com.toedter.calendar.JDateChooser jDatalancamento;
    public static javax.swing.JTextField jDepartamento;
    public static javax.swing.JLabel jFotoOficialJustica;
    public static javax.swing.JFormattedTextField jHorarioEntrada;
    public static javax.swing.JFormattedTextField jHorarioSaida;
    public static javax.swing.JTextField jIDDepto;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIDlanc;
    public static javax.swing.JTextField jIdOficial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMotivo;
    public static javax.swing.JTextField jNomeOficialJustica;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesquisaNomeAdvogado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jStatusEntCola;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaAdvogados;
    private javax.swing.JTable jTabelaEntradaSaidaOficialJustica;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jMotivo.setDocument(new LimiteDigitosAlfa(56));
        try {
            MaskFormatter horarioEntrada = new MaskFormatter("##:##");
            jHorarioEntrada.setFormatterFactory(new DefaultFormatterFactory(horarioEntrada));
            MaskFormatter horarioSaida = new MaskFormatter("##:##");;
            jHorarioSaida.setFormatterFactory(new DefaultFormatterFactory(horarioSaida));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar campos\nERRO :" + ex);
        }
    }

    public void bloquearCamposPesquisa() {
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jIdOficial.setText("");
        jNomeOficialJustica.setText("");
        jFotoOficialJustica.setIcon(null);
        jIDDepto.setText("");
        jDepartamento.setText("");
        jBtPesqAdvogado.setEnabled(!true);
        jBtZoonAdvogadoDepartamento.setEnabled(!true);
        jBtBuscarSetor.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //              
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        // Botões
        jBtNovoOficialJustica.setEnabled(true);
        jBtAlterarOficialJustica.setEnabled(!true);
        jBtExcluirOficialJustica.setEnabled(!true);
        jBtSalvarOficialJustica.setEnabled(!true);
        jBtCancelarOficialJustica.setEnabled(!true);
        jBtAudItensEntSaiOficialJustica.setEnabled(!true);
    }

    public void corCampo() {

        jIDlanc.setBackground(Color.white);
        jStatusEntCola.setBackground(Color.white);
        jDatalancamento.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdOficial.setBackground(Color.white);
        jNomeOficialJustica.setBackground(Color.white);
        jIDDepto.setBackground(Color.white);
        jDepartamento.setBackground(Color.white);
        jDataEntrada.setBackground(Color.white);
        jHorarioEntrada.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jHorarioSaida.setBackground(Color.white);
        jMotivo.setBackground(Color.white);
    }

    public void Novo() {
        if (jIDlanc.getText().equals("")) {
            // Limpar campos
            jIDlanc.setText("");
            jFotoOficialJustica.setIcon(null);
            jStatusEntCola.setText("ABERTO");
            jDatalancamento.setCalendar(Calendar.getInstance());
            jObservacao.setText("");
            //            
            jDatalancamento.setEnabled(true);
            jObservacao.setEnabled(true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            //
            jIdOficial.setText("");
            jNomeOficialJustica.setText("");
            jFotoOficialJustica.setIcon(null);
            jIDDepto.setText("");
            jDepartamento.setText("");
            jDataEntrada.setDate(null);
            jHorarioEntrada.setText("");
            jDataSaida.setDate(null);
            jHorarioSaida.setText("");
            // Habilitar/Desabilitar campos
            jBtZoonAdvogadoDepartamento.setEnabled(!true);
            jBtPesqAdvogado.setEnabled(!true);
            jDataEntrada.setEnabled(!true);
            jHorarioEntrada.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jHorarioSaida.setEnabled(!true);
            // Botões
            jBtNovoOficialJustica.setEnabled(!true);
            jBtAlterarOficialJustica.setEnabled(!true);
            jBtExcluirOficialJustica.setEnabled(!true);
            jBtSalvarOficialJustica.setEnabled(!true);
            jBtCancelarOficialJustica.setEnabled(!true);
            jBtBuscarAdvogado.setEnabled(!true);
            jBtBuscarSetor.setEnabled(!true);
            jBtAudItensEntSaiOficialJustica.setEnabled(!true);
            limparTabelaItens();
        }
        if (!jIDlanc.getText().equals("")) {
            // Limpar campos
            jIDlanc.setText("");
            jFotoOficialJustica.setIcon(null);
            jStatusEntCola.setText("ABERTO");
            jDatalancamento.setCalendar(Calendar.getInstance());
            jObservacao.setText("");
            //Habilitar/Desabilitar campos           
            jDatalancamento.setEnabled(true);
            jObservacao.setEnabled(true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            //
            jIdOficial.setText("");
            jNomeOficialJustica.setText("");
            jFotoOficialJustica.setIcon(null);
            jIDDepto.setText("");
            jDepartamento.setText("");
            jDataEntrada.setDate(null);
            jHorarioEntrada.setText("");
            jDataSaida.setDate(null);
            jHorarioSaida.setText("");
            jBtNovoOficialJustica.setEnabled(!true);
            jBtBuscarAdvogado.setEnabled(!true);
            jBtZoonAdvogadoDepartamento.setEnabled(!true);
            limparTabelaItens();
        }
    }

    public void Alterar() {

        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Excluir() {

        // Limpar campos
        jIDlanc.setText("");
        jDatalancamento.setDate(null);
        jObservacao.setText("");
        //Habilitar/Desabilitar campos        
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Salvar() {
        jDatalancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
        //
        jBtNovoOficialJustica.setEnabled(true);
    }

    public void Cancelar() {
        if (jIDlanc.getText().equals("")) {
            jStatusEntCola.setText("");
            jDatalancamento.setDate(null);
            jObservacao.setText("");
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            jBtImpressao.setEnabled(!true);
            //
            jIdOficial.setText("");
            jFotoOficialJustica.setIcon(null);
            jNomeOficialJustica.setText("");
            jDepartamento.setText("");
            jDataEntrada.setDate(null);
            jHorarioEntrada.setText("");
            jDataSaida.setDate(null);
            jHorarioSaida.setText("");
            // Habilitar/Desabilitar campos
            jBtZoonAdvogadoDepartamento.setEnabled(!true);
            jBtPesqAdvogado.setEnabled(!true);
            jDataEntrada.setEnabled(!true);
            jHorarioEntrada.setEnabled(!true);
            jDataSaida.setEnabled(!true);
            jHorarioSaida.setEnabled(!true);
            // Botões
            jBtNovoOficialJustica.setEnabled(!true);
            jBtAlterarOficialJustica.setEnabled(!true);
            jBtExcluirOficialJustica.setEnabled(!true);
            jBtSalvarOficialJustica.setEnabled(!true);
            jBtCancelarOficialJustica.setEnabled(!true);
            jBtBuscarAdvogado.setEnabled(!true);
            jBtBuscarSetor.setEnabled(!true);
            jBtAudItensEntSaiOficialJustica.setEnabled(!true);
            limparTabelaItens();
        }
        if (!jIDlanc.getText().equals("")) {
            jDatalancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            jBtImpressao.setEnabled(true);
        }
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objEntSaiOficialJustica.setStatusLanc(statusLanc);
            objEntSaiOficialJustica.setIdLanc(Integer.parseInt(jIDlanc.getText()));
            control.finalizarEntradaSaiOficialJustica(objEntSaiOficialJustica);
            jStatusEntCola.setText("FINALIZADO");
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            //
            jDatalancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoOficialJustica.setEnabled(!true);
            jBtAlterarOficialJustica.setEnabled(!true);
            jBtExcluirOficialJustica.setEnabled(!true);
            jBtSalvarOficialJustica.setEnabled(!true);
            jBtCancelarOficialJustica.setEnabled(!true);
        }
    }

    public void verificarHoraEntrada() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA "
                    + "WHERE HorarioSaida='" + verHorarioSaida + "' "
                    + "AND IdLanc='" + jIDlanc.getText() + "' "
                    + "OR HorarioEntrada='" + verHorarioEntrada + "' "
                    + "AND IdLanc='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            horaEntradaEncontrada = conecta.rs.getString("HorarioEntrada");
            horaSaidaEncontrado = conecta.rs.getString("HorarioSaida");
            codigoRegistro = conecta.rs.getString("IdLanc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovoAdvogado() {
        // Limpar os campos
        jIdOficial.setText("");
        jNomeOficialJustica.setText("");
        jFotoOficialJustica.setIcon(null);
        jDepartamento.setText("");
        jDataEntrada.setCalendar(Calendar.getInstance());
        jHorarioEntrada.setText("00:00");
        jDataSaida.setCalendar(Calendar.getInstance());
        jHorarioSaida.setText("00:00");
        jMotivo.setText("");
        // Habilitar/Desabilitar campos
        jBtPesqAdvogado.setEnabled(true);
        jBtBuscarSetor.setEnabled(true);
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jMotivo.setEnabled(true);
        // Botões
        jBtNovoOficialJustica.setEnabled(!true);
        jBtAlterarOficialJustica.setEnabled(!true);
        jBtExcluirOficialJustica.setEnabled(!true);
        jBtSalvarOficialJustica.setEnabled(true);
        jBtCancelarOficialJustica.setEnabled(true);
        jBtBuscarAdvogado.setEnabled(!true);
        jBtBuscarSetor.setEnabled(true);
        jBtAudItensEntSaiOficialJustica.setEnabled(!true);
    }

    public void AlterarAdvogado() {

        // Habilitar/Desabilitar campos
        jBtPesqAdvogado.setEnabled(true);
        jDataEntrada.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jMotivo.setEnabled(true);
        // Botões
        jBtNovoOficialJustica.setEnabled(!true);
        jBtAlterarOficialJustica.setEnabled(!true);
        jBtExcluirOficialJustica.setEnabled(!true);
        jBtSalvarOficialJustica.setEnabled(true);
        jBtCancelarOficialJustica.setEnabled(true);
        jBtBuscarAdvogado.setEnabled(!true);
        jBtBuscarSetor.setEnabled(true);
        jBtAudItensEntSaiOficialJustica.setEnabled(!true);
    }

    public void ExcluirAdvogado() {

        // Limpar os campos
        jIdOficial.setText("");
        jNomeOficialJustica.setText("");
        jFotoOficialJustica.setIcon(null);
        jDepartamento.setText("");
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        jMotivo.setText("");
        // Habilitar/Desabilitar campos
        jBtPesqAdvogado.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jMotivo.setEnabled(!true);
        // Botões
        jBtNovoOficialJustica.setEnabled(true);
        jBtAlterarOficialJustica.setEnabled(!true);
        jBtExcluirOficialJustica.setEnabled(!true);
        jBtSalvarOficialJustica.setEnabled(!true);
        jBtCancelarOficialJustica.setEnabled(!true);
        jBtBuscarAdvogado.setEnabled(!true);
        jBtBuscarSetor.setEnabled(!true);
        jBtAudItensEntSaiOficialJustica.setEnabled(!true);
    }

    public void SalvarAdvogado() {
        jIdOficial.setText("");
        jNomeOficialJustica.setText("");
        jIDDepto.setText("");
        jDepartamento.setText("");
        jFotoOficialJustica.setIcon(null);
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        jMotivo.setText("");
        // Habilitar/Desabilitar campos
        jBtPesqAdvogado.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jMotivo.setEnabled(!true);
        // Botões
        jBtNovoOficialJustica.setEnabled(true);
        jBtAlterarOficialJustica.setEnabled(!true);
        jBtExcluirOficialJustica.setEnabled(!true);
        jBtSalvarOficialJustica.setEnabled(!true);
        jBtCancelarOficialJustica.setEnabled(!true);
        jBtBuscarAdvogado.setEnabled(true);
        jBtBuscarSetor.setEnabled(!true);
        jBtAudItensEntSaiOficialJustica.setEnabled(!true);
    }

    public void CancelarAdvogado() {
        jIdOficial.setText("");
        jNomeOficialJustica.setText("");
        jIDDepto.setText("");
        jDepartamento.setText("");
        jFotoOficialJustica.setIcon(null);
        jDataEntrada.setDate(null);
        jHorarioEntrada.setText("00:00");
        jDataSaida.setDate(null);
        jHorarioSaida.setText("00:00");
        jMotivo.setText("");
        //
        jBtPesqAdvogado.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jMotivo.setEnabled(!true);
        // Botões
        jBtNovoOficialJustica.setEnabled(true);
        jBtAlterarOficialJustica.setEnabled(!true);
        jBtExcluirOficialJustica.setEnabled(!true);
        jBtSalvarOficialJustica.setEnabled(!true);
        jBtCancelarOficialJustica.setEnabled(!true);
        jBtBuscarAdvogado.setEnabled(true);
        jBtBuscarSetor.setEnabled(!true);
        jBtAudItensEntSaiOficialJustica.setEnabled(!true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADAS_OFICIAL_JUSTICA");
            conecta.rs.last();
            jIDlanc.setText(conecta.rs.getString("IdLanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o ID do lancamento.\nERRO: " + ex);
        }
    }

    //Preencher tabela com todos os dados de entrada/saída COLABORADOR
    public void preencherTodasEntSai(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Oficial de Justiça", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeOficial"), conecta.rs.getString("ObsLanc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaOficialJustica.setModel(modelo);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setPreferredWidth(360);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaOficialJustica.setAutoResizeMode(jTabelaEntradaSaidaOficialJustica.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaOficialJustica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaEntSai();
        conecta.desconecta();
    }

    public void limparTabelaEntSai() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Oficial de Justiça", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaOficialJustica.setModel(modelo);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setPreferredWidth(360);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaOficialJustica.setAutoResizeMode(jTabelaEntradaSaidaOficialJustica.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaOficialJustica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaEntSai() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void pesquisarEntSaiAdvInterno(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno ", "Dt. Entrada", "Horário", "Dt. Saída", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataLanc");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                // Formatar a data no formato Brasil
                dataEntrada = conecta.rs.getString("DataEntrada");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                // Formatar a data no formato Brasil
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dias + "/" + mess + "/" + anos;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataBrasil, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeAdvogado"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaOficialJustica.setModel(modelo);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(5).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(6).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(7).setPreferredWidth(70);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(7).setResizable(false);
        jTabelaEntradaSaidaOficialJustica.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaOficialJustica.setAutoResizeMode(jTabelaEntradaSaidaOficialJustica.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaOficialJustica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAdvogados();
        conecta.desconecta();
    }

    public void alinharTabelaAdvogados() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(5).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(6).setCellRenderer(centralizado);
        jTabelaEntradaSaidaOficialJustica.getColumnModel().getColumn(7).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Oficial de Justiça", "Data Entrada", "Horário", " Data Saida", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataEntrada");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                // Data de Saida
                // Formatar a data Entrada
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dias + "/" + mess + "/" + anos;
                dados.add(new Object[]{conecta.rs.getInt("IdOficial"), conecta.rs.getString("NomeOficial"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAdvogados.setModel(modelo);
        jTabelaAdvogados.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAdvogados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaAdvogados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAdvogados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaAdvogados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaAdvogados.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaAdvogados.getColumnModel().getColumn(5).setResizable(false);
        jTabelaAdvogados.getTableHeader().setReorderingAllowed(false);
        jTabelaAdvogados.setAutoResizeMode(jTabelaAdvogados.AUTO_RESIZE_OFF);
        jTabelaAdvogados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Advogado", "Data Entrada", "Horário", "Data Saida", "Horário"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAdvogados.setModel(modelo);
        jTabelaAdvogados.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAdvogados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaAdvogados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAdvogados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaAdvogados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaAdvogados.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaAdvogados.getColumnModel().getColumn(5).setResizable(false);
        jTabelaAdvogados.getTableHeader().setReorderingAllowed(false);
        jTabelaAdvogados.setAutoResizeMode(jTabelaAdvogados.AUTO_RESIZE_OFF);
        jTabelaAdvogados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAdvogados.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAdvogados.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaAdvogados.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaAdvogados.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaAdvogados.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENTRADAS_OFICIAL_JUSTICA WHERE IdLanc='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            codlanc = conecta.rs.getString("IdLanc");
            if (jIDlanc.getText().equals(codlanc)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objEntSaiOficialJustica.setIdLanc(Integer.parseInt(jIDlanc.getText()));
                control.excluirEntOficialJustica(objEntSaiOficialJustica);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDlanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDlanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1 = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1 + "'");
            conecta.rs.first();
            codigoUserGroupP1 = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1 = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1 = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1 + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1 = conecta.rs.getInt("IdUsuario");
            codAbrirP1 = conecta.rs.getInt("Abrir");
            codIncluirP1 = conecta.rs.getInt("Incluir");
            codAlterarP1 = conecta.rs.getInt("Alterar");
            codExcluirP1 = conecta.rs.getInt("Excluir");
            codGravarP1 = conecta.rs.getInt("Gravar");
            codConsultarP1 = conecta.rs.getInt("Consultar");
            nomeTelaP1 = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
