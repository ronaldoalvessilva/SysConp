/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleDietaMedicaPsiquiatrica;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleMovDietaMedicaPsiquiatrica;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.AdmissaoMedica;
import gestor.Modelo.DietaMedica;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaAdmissaoMedica.jIdAdm;
import static gestor.Visao.TelaAdmissaoMedica.jIdInternoAdm;
import static gestor.Visao.TelaAdmissaoMedica.jNomeInternoAdm;
import static gestor.Visao.TelaAdmissaoMedica.jStatusLanc;
import static gestor.Visao.TelaAdmissaoMedica.jTablaDieta;
import static gestor.Visao.TelaLoginSenha.descricaoUnidade;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloEnfermaria.codAbrirENF;
import static gestor.Visao.TelaModuloEnfermaria.codAlterarENF;
import static gestor.Visao.TelaModuloEnfermaria.codConsultarENF;
import static gestor.Visao.TelaModuloEnfermaria.codExcluirENF;
import static gestor.Visao.TelaModuloEnfermaria.codGravarENF;
import static gestor.Visao.TelaModuloEnfermaria.codIncluirENF;
import static gestor.Visao.TelaModuloEnfermaria.codUserAcessoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserGroupENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeTelaENF;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ronal
 */
public class TelaDietaMedicaPsiquiatrica extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AdmissaoMedica objAdmMedico = new AdmissaoMedica();
    //
    DietaMedica objDietaMedica = new DietaMedica();
    ControleDietaMedicaPsiquiatrica controlDieta = new ControleDietaMedicaPsiquiatrica();
    ControleMovDietaMedicaPsiquiatrica controleMovDieta = new ControleMovDietaMedicaPsiquiatrica();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    //
    String nomeModuloTela6 = "Movimentação:Admissão Médica de Internos:Dieta Médica/Psiquiatrica";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao, flag, idItem;
    int count = 0;
    int idItemDieta;
    String dataDieta, dataAtestado;
    String nomeUserRegistro;
    String deptoTecnico = "ENFERMARIA";

    /**
     * Creates new form TelaDietaMedicaPsiquiatrica
     */
    public static TelaAdmissaoMedica telaAdmissaoMedica;

    public TelaDietaMedicaPsiquiatrica(TelaAdmissaoMedica parent, boolean modal) {
        this.telaAdmissaoMedica = parent;
        this.setModal(modal);
        setLocationRelativeTo(telaAdmissaoMedica);
        initComponents();
        formatarCampos();
        preencherTabelaDietaMedicaPsiquiatrica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                + "WHERE IdLanc='" + jIdAdm.getText() + "'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTablaDietaMedica = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jIdDieta = new javax.swing.JTextField();
        jNomeInternoDieta = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jDataDieta = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jBtNovaDieta = new javax.swing.JButton();
        jBtAlterarDieta = new javax.swing.JButton();
        jBtExcluirDieta = new javax.swing.JButton();
        jBtSalvarDieta = new javax.swing.JButton();
        jBtCancelarDieta = new javax.swing.JButton();
        jBtImprimirDieta = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextoDieta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Dieta Médica");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTablaDietaMedica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTablaDietaMedica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Descrição da Dieta Médica"
            }
        ));
        jTablaDietaMedica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaDietaMedicaMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTablaDietaMedica);
        if (jTablaDietaMedica.getColumnModel().getColumnCount() > 0) {
            jTablaDietaMedica.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTablaDietaMedica.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTablaDietaMedica.getColumnModel().getColumn(2).setPreferredWidth(400);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Nr. Dieta");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Nome Completo do Interno");

        jIdDieta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdDieta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdDieta.setEnabled(false);

        jNomeInternoDieta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoDieta.setEnabled(false);

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel47.setText("Data");

        jDataDieta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataDieta.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jIdDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInternoDieta)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(0, 174, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInternoDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovaDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovaDieta.setToolTipText("Novo");
        jBtNovaDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaDietaActionPerformed(evt);
            }
        });

        jBtAlterarDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarDieta.setToolTipText("Alterar");
        jBtAlterarDieta.setEnabled(false);
        jBtAlterarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarDietaActionPerformed(evt);
            }
        });

        jBtExcluirDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirDieta.setToolTipText("Excluir");
        jBtExcluirDieta.setEnabled(false);
        jBtExcluirDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirDietaActionPerformed(evt);
            }
        });

        jBtSalvarDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarDieta.setToolTipText("Gravar");
        jBtSalvarDieta.setEnabled(false);
        jBtSalvarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarDietaActionPerformed(evt);
            }
        });

        jBtCancelarDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarDieta.setToolTipText("Cancelar");
        jBtCancelarDieta.setEnabled(false);
        jBtCancelarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarDietaActionPerformed(evt);
            }
        });

        jBtImprimirDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimirDieta.setToolTipText("Imprimir Dieta");
        jBtImprimirDieta.setContentAreaFilled(false);
        jBtImprimirDieta.setEnabled(false);
        jBtImprimirDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirDietaActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovaDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jBtImprimirDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarDieta, jBtCancelarDieta, jBtExcluirDieta, jBtNovaDieta, jBtSalvarDieta});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1)
                    .addComponent(jBtNovaDieta)
                    .addComponent(jBtAlterarDieta)
                    .addComponent(jBtExcluirDieta)
                    .addComponent(jBtSalvarDieta)
                    .addComponent(jBtCancelarDieta)
                    .addComponent(jBtImprimirDieta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarDieta, jBtCancelarDieta, jBtExcluirDieta, jBtNovaDieta, jBtSalvarDieta});

        jTextoDieta.setColumns(20);
        jTextoDieta.setRows(5);
        jTextoDieta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextoDieta.setEnabled(false);
        jScrollPane12.setViewportView(jTextoDieta);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTablaDietaMedicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaDietaMedicaMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idItem = "" + jTablaDietaMedica.getValueAt(jTablaDietaMedica.getSelectedRow(), 0);
            // Habilitar os botões
            jBtNovaDieta.setEnabled(!true);
            jBtAlterarDieta.setEnabled(true);
            jBtExcluirDieta.setEnabled(true);
            jBtSalvarDieta.setEnabled(!true);
            jBtCancelarDieta.setEnabled(true);
            jBtImprimirDieta.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                        + "WHERE IdLanc='" + jIdAdm.getText() + "' "
                        + "AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIdDieta.setText(conecta.rs.getString("IdItem")); //Coluna 0
                idItemDieta = conecta.rs.getInt("IdItem"); // Coluna 2
                jNomeInternoDieta.setText(jNomeInternoAdm.getText());
                jDataDieta.setDate(conecta.rs.getDate("DataDieta"));
                jTextoDieta.setText(conecta.rs.getString("TextoDieta"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTablaDietaMedicaMouseClicked

    private void jBtNovaDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaDietaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioDieta();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela6) && codIncluirENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 11;
            NovaDieta();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir prontuário médico.");
        }
    }//GEN-LAST:event_jBtNovaDietaActionPerformed

    private void jBtAlterarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarDietaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioDieta();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela6) && codAlterarENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                        + "WHERE IdItem='" + jIdDieta.getText() + "'");
                conecta.rs.first();
                nomeUserRegistro = conecta.rs.getString("UsuarioInsert");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
            }
            if (nomeUserRegistro == null ? nameUser == null : nomeUserRegistro.equals(nameUser)) {
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                acao = 12;
                AlterarDieta();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserRegistro + " só esse usuário poderá modificar.");
                conecta.desconecta();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a alterar prontuário médico.");
        }
        conecta.abrirConexao();
    }//GEN-LAST:event_jBtAlterarDietaActionPerformed

    private void jBtExcluirDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirDietaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioDieta();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela6) && codExcluirENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                        + "WHERE IdItem='" + jIdDieta.getText() + "'");
                conecta.rs.first();
                nomeUserRegistro = conecta.rs.getString("UsuarioInsert");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
            }
            if (nomeUserRegistro == null ? nameUser == null : nomeUserRegistro.equals(nameUser)) {
                objAdmMedico.setStatusLanc(jStatusLanc.getText());
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir a prescrição selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objDietaMedica.setIdItem(Integer.parseInt(jIdDieta.getText()));
                    objDietaMedica.setIdLanc(Integer.parseInt(jIdAdm.getText()));
                    controlDieta.excluirDietaMedicaPsiquiatrica(objDietaMedica);
                    //
                    objDietaMedica.setIdLanc(Integer.parseInt(jIdAdm.getText()));
                    objDietaMedica.setIdItem(Integer.parseInt(jIdDieta.getText()));
                    objDietaMedica.setDeptoMedico(deptoTecnico);
                    controleMovDieta.excluirMovTecDieta(objDietaMedica); // Excluir movimento histórico.
                    objLog6();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    ExcluirDieta();
                    preencherTabelaDietaMedicaPsiquiatrica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    preencherTabelaDietaMedica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserRegistro + " só esse usuário poderá modificar.");
                conecta.desconecta();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a excluir prontuário médico.");
        }
    }//GEN-LAST:event_jBtExcluirDietaActionPerformed

    private void jBtCancelarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarDietaActionPerformed
        // TODO add your handling code here:
        CancelarDieta();
    }//GEN-LAST:event_jBtCancelarDietaActionPerformed

    private void jBtSalvarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarDietaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuarioDieta();
        if (codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(nomeModuloTela6) && codGravarENF == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES")) {
            if (jDataDieta.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data da Dieta.");
            } else if (jTextoDieta.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o texto da Dieta.");
            } else {
                objDietaMedica.setDataDieta(jDataDieta.getDate());
                objDietaMedica.setTextoDieta(jTextoDieta.getText());
                objDietaMedica.setStatusLanc(jStatusLanc.getText());
                if (acao == 11) {
                    objDietaMedica.setUsuarioInsert(nameUser);
                    objDietaMedica.setDataInsert(dataModFinal);
                    objDietaMedica.setHorarioInsert(horaMov);
                    objDietaMedica.setIdLanc(Integer.valueOf(jIdAdm.getText()));
                    objDietaMedica.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    controlDieta.incluirDietaMedicaPsiquiatrica(objDietaMedica);
                    buscarCodDieta();
                    objDietaMedica.setDeptoMedico(deptoTecnico);
                    objDietaMedica.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    objDietaMedica.setIdLanc(Integer.valueOf(jIdDieta.getText()));
                    controleMovDieta.incluirMovTecDieta(objDietaMedica); // Histórico de Movimento Técnico
                    //
                    objLog6();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaDietaMedicaPsiquiatrica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    preencherTabelaDietaMedica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    SalvarDieta();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 12) {
                    objDietaMedica.setUsuarioUp(nameUser);
                    objDietaMedica.setDataUp(dataModFinal);
                    objDietaMedica.setHorarioUp(horaMov);
                    objDietaMedica.setIdLanc(Integer.valueOf(jIdAdm.getText()));
                    objDietaMedica.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    objDietaMedica.setIdItem(idItemDieta);
                    controlDieta.alterarDietaMedicaPsiquiatrica(objDietaMedica);
                    //
                    objDietaMedica.setDeptoMedico(deptoTecnico);
                    objDietaMedica.setIdInternoCrc(Integer.valueOf(jIdInternoAdm.getText()));
                    objDietaMedica.setIdLanc(Integer.valueOf(jIdDieta.getText()));
                    controleMovDieta.alterarMovTecDieta(objDietaMedica);
                    //
                    objLog6();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaDietaMedicaPsiquiatrica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    preencherTabelaDietaMedica("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA "
                            + "WHERE IdLanc='" + jIdAdm.getText() + "'");
                    SalvarDieta();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar no prontuário médico.");
        }
    }//GEN-LAST:event_jBtSalvarDietaActionPerformed

    private void jBtImprimirDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirDietaActionPerformed
        // TODO add your handling code here:
        if (jIdDieta.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível imprimir dieta médica.");
        } else {
            try {
                //PARA MOSTRAR O RELATÓRIO NA FRENTE DO JDIALOG.
                JDialog viewer = new JDialog(new javax.swing.JFrame(), "Visualização do Relatório", true);
                viewer.setSize(800, 600);
                viewer.setLocationRelativeTo(null);
                conecta.abrirConexao();
                String path = "reports/RelatorioDietaMedica.jasper";
                conecta.executaSQL("SELECT * FROM ADMISSAOMEDICA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ADMISSAOMEDICA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN DIETA_MEDICA_PSIQUIATRICA "
                        + "ON ADMISSAOMEDICA.IdLanc=DIETA_MEDICA_PSIQUIATRICA.IdLanc "
                        + "WHERE DIETA_MEDICA_PSIQUIATRICA.IdLanc='" + jIdAdm.getText() + "' "
                        + "AND DIETA_MEDICA_PSIQUIATRICA.IdItem='" + jIdDieta.getText() + "'");
                HashMap parametros = new HashMap();
                parametros.put("codigoAdm", jIdAdm.getText());
                parametros.put("codigoDieta", jIdDieta.getText());
                parametros.put("nomeUsuario", nameUser);
                parametros.put("descricaoUnidade", descricaoUnidade);
                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio
                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao
                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
                jv.setTitle("Dieta Médica/Psiquiatrica");
                viewer.getContentPane().add(jv.getContentPane());
                viewer.setVisible(true);
                jv.toFront(); // Traz o relatorio para frente da aplicação
                conecta.desconecta();
            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
            }
        }
    }//GEN-LAST:event_jBtImprimirDietaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDietaMedicaPsiquiatrica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDietaMedicaPsiquiatrica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDietaMedicaPsiquiatrica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDietaMedicaPsiquiatrica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaDietaMedicaPsiquiatrica dialog = new TelaDietaMedicaPsiquiatrica(telaAdmissaoMedica, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterarDieta;
    private javax.swing.JButton jBtCancelarDieta;
    private javax.swing.JButton jBtExcluirDieta;
    private javax.swing.JButton jBtImprimirDieta;
    private javax.swing.JButton jBtNovaDieta;
    private javax.swing.JButton jBtSalvarDieta;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDataDieta;
    public static javax.swing.JTextField jIdDieta;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JTextField jNomeInternoDieta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTablaDietaMedica;
    private javax.swing.JTextArea jTextoDieta;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jTextoDieta.setLineWrap(true);
        jTextoDieta.setWrapStyleWord(true);
        //
        jIdDieta.setBackground(Color.white);
        jNomeInternoDieta.setBackground(Color.white);
        jDataDieta.setBackground(Color.white);
        jTextoDieta.setBackground(Color.white);
    }

    public void NovaDieta() {
        // TELA DIETA
        jIdDieta.setText("");
        jNomeInternoDieta.setText(jNomeInternoAdm.getText());
        jDataDieta.setCalendar(Calendar.getInstance());
        jTextoDieta.setText("");
        //
        jDataDieta.setEnabled(true);
        jTextoDieta.setEnabled(true);
        //
        jBtNovaDieta.setEnabled(!true);
        jBtAlterarDieta.setEnabled(!true);
        jBtExcluirDieta.setEnabled(!true);
        jBtSalvarDieta.setEnabled(true);
        jBtCancelarDieta.setEnabled(true);
        jBtImprimirDieta.setEnabled(!true);
    }

    public void AlterarDieta() {
        jDataDieta.setEnabled(true);
        jTextoDieta.setEnabled(true);
        //
        jBtNovaDieta.setEnabled(!true);
        jBtAlterarDieta.setEnabled(!true);
        jBtExcluirDieta.setEnabled(!true);
        jBtSalvarDieta.setEnabled(true);
        jBtCancelarDieta.setEnabled(true);
        jBtImprimirDieta.setEnabled(!true);
    }

    public void ExcluirDieta() {
        // TELA DIETA
        jIdDieta.setText("");
        jNomeInternoDieta.setText("");
        jDataDieta.setDate(null);
        jTextoDieta.setText("");
        //
        jDataDieta.setEnabled(!true);
        jTextoDieta.setEnabled(!true);
        //
        jBtNovaDieta.setEnabled(true);
        jBtAlterarDieta.setEnabled(!true);
        jBtExcluirDieta.setEnabled(!true);
        jBtSalvarDieta.setEnabled(!true);
        jBtCancelarDieta.setEnabled(!true);
        jBtImprimirDieta.setEnabled(!true);
    }

    public void SalvarDieta() {
        jDataDieta.setEnabled(!true);
        jTextoDieta.setEnabled(!true);
        //
        jBtNovaDieta.setEnabled(true);
        jBtAlterarDieta.setEnabled(true);
        jBtExcluirDieta.setEnabled(true);
        jBtSalvarDieta.setEnabled(!true);
        jBtCancelarDieta.setEnabled(true);
        jBtImprimirDieta.setEnabled(true);

    }

    public void CancelarDieta() {
        // TELA DIETA
        jIdDieta.setText("");
        jNomeInternoDieta.setText("");
        jDataDieta.setDate(null);
        jTextoDieta.setText("");
        //
        jDataDieta.setEnabled(!true);
        jTextoDieta.setEnabled(!true);
        //
        jBtNovaDieta.setEnabled(true);
        jBtAlterarDieta.setEnabled(!true);
        jBtExcluirDieta.setEnabled(!true);
        jBtSalvarDieta.setEnabled(!true);
        jBtCancelarDieta.setEnabled(true);
        jBtImprimirDieta.setEnabled(!true);
    }

    public void buscarCodDieta() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DIETA_MEDICA_PSIQUIATRICA");
            conecta.rs.last();
            jIdDieta.setText(conecta.rs.getString("IdItem"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código da Dieta.");
        }
        conecta.desconecta();
    }

    public void preencherTabelaDietaMedicaPsiquiatrica(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Descrição da Dieta Médica"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dataDieta = conecta.rs.getString("DataDieta");
                String diaat = dataDieta.substring(8, 10);
                String mesat = dataDieta.substring(5, 7);
                String anoat = dataDieta.substring(0, 4);
                dataDieta = diaat + "/" + mesat + "/" + anoat;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), dataDieta, conecta.rs.getString("TextoDieta")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTablaDietaMedica.setModel(modelo);
        jTablaDietaMedica.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTablaDietaMedica.getColumnModel().getColumn(0).setResizable(false);
        jTablaDietaMedica.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTablaDietaMedica.getColumnModel().getColumn(1).setResizable(false);
        jTablaDietaMedica.getColumnModel().getColumn(2).setPreferredWidth(400);
        jTablaDietaMedica.getColumnModel().getColumn(2).setResizable(false);
        jTablaDietaMedica.getTableHeader().setReorderingAllowed(false);
        jTablaDietaMedica.setAutoResizeMode(jTablaDietaMedica.AUTO_RESIZE_OFF);
        jTablaDietaMedica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaDietaMedicaPsiquiatrico();
        conecta.desconecta();
    }

    public void alinharCamposTabelaDietaMedicaPsiquiatrico() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTablaDietaMedica.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTablaDietaMedica.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void preencherTabelaDietaMedica(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Descrição da Dieta Médica"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dataAtestado = conecta.rs.getString("DataDieta");
                String diaat = dataAtestado.substring(8, 10);
                String mesat = dataAtestado.substring(5, 7);
                String anoat = dataAtestado.substring(0, 4);
                dataAtestado = diaat + "/" + mesat + "/" + anoat;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), dataAtestado, conecta.rs.getString("TextoDieta")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTablaDieta.setModel(modelo);
        jTablaDieta.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTablaDieta.getColumnModel().getColumn(0).setResizable(false);
        jTablaDieta.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTablaDieta.getColumnModel().getColumn(1).setResizable(false);
        jTablaDieta.getColumnModel().getColumn(2).setPreferredWidth(400);
        jTablaDieta.getColumnModel().getColumn(2).setResizable(false);
        jTablaDieta.getTableHeader().setReorderingAllowed(false);
        jTablaDieta.setAutoResizeMode(jTablaDieta.AUTO_RESIZE_OFF);
        jTablaDieta.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaDietaMedica();
        conecta.desconecta();
    }

    public void alinharCamposTabelaDietaMedica() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTablaDieta.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTablaDieta.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void buscarAcessoUsuarioDieta() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserENF = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserENF + "'");
            conecta.rs.first();
            codigoUserGroupENF = conecta.rs.getInt("IdUsuario");
            codigoGrupoENF = conecta.rs.getInt("IdGrupo");
            nomeGrupoENF = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        //TELA DE PRESCRIÇÃO
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserENF + "' "
                    + "AND NomeTela='" + nomeModuloTela6 + "'");
            conecta.rs.first();
            codUserAcessoENF = conecta.rs.getInt("IdUsuario");
            codAbrirENF = conecta.rs.getInt("Abrir");
            codIncluirENF = conecta.rs.getInt("Incluir");
            codAlterarENF = conecta.rs.getInt("Alterar");
            codExcluirENF = conecta.rs.getInt("Excluir");
            codGravarENF = conecta.rs.getInt("Gravar");
            codConsultarENF = conecta.rs.getInt("Consultar");
            nomeTelaENF = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void objLog6() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela6);
        objLogSys.setIdLancMov(Integer.valueOf(jIdAdm.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

}
