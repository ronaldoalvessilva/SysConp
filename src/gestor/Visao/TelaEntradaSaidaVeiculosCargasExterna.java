/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEntradaSaidaVeiculosCarga;
import gestor.Controle.ControleItensVeiculosCarga;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.LimiteDigitos;
import Utilitarios.LimiteDigitosAlfa;
import Utilitarios.ModeloTabela;
import gestor.Modelo.EntradaSaidaVeiculosCarga;
import gestor.Modelo.ItensVeiculosCarga;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortariaExterna.codAbrirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codAlterarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codConsultarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codExcluirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codGravarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codIncluirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoGrupoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoUserGroupP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codUserAcessoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoUserP1E;
import static gestor.Visao.TelaModuloPortariaExterna.nomeGrupoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.nomeTelaP1E;
import static gestor.Visao.TelaModuloPortariaExterna.telaEntradaSaidaESVCManuP1E;
import static gestor.Visao.TelaModuloPortariaExterna.telaEntradaSaidaESVCVP1E;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author user
 */
public class TelaEntradaSaidaVeiculosCargasExterna extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EntradaSaidaVeiculosCarga objVeiCarga = new EntradaSaidaVeiculosCarga();
    ItensVeiculosCarga objItensVeicCarga = new ItensVeiculosCarga();
    ControleEntradaSaidaVeiculosCarga control = new ControleEntradaSaidaVeiculosCarga();
    ControleItensVeiculosCarga controle = new ControleItensVeiculosCarga();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria:Entrada/Saida Veiculos Cargas:Manutenção";
    String nomeModuloTela2 = "Portaria:Entrada/Saida Veiculos Cargas:Veiculos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String statusEnt = "ABERTO";
    String dataEntrada;
    String dataSaida;
    public static String idItem;
    String dataInicial;
    String dataFinal;
    String codLanc;
    String caminho;
    String caminhoVei;
    String caminhoAju;
    int count = 0;
    // VARIAVEIS PARA BLOQUEAR O REGISTRO CASO NÃO ESTEJA COM OS HORÁRIOS PREENCHIDOS COM AS HORAS.
    String verHorarioSaida = "00:00";
    String verHorarioEntrada = "00:00";
    String horaEntradaEncontrada, codigoRegistro, horaSaidaEncontrado;

    /**
     * Creates new form TelaEntradaSaidaVeiculosCargas
     */
    public TelaEntradaSaidaVeiculosCargasExterna() {
        initComponents();
        formatarCampo();
        corCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPesqNomeMotorista = new javax.swing.JTextField();
        jBtPesqNomeMotorista = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPesqPlaca = new javax.swing.JFormattedTextField();
        jBtPesqPlaca = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaVeiculosTerceiros = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jIdLanc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jStatusEnt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jDataLancamento = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jNomeMotorista = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jBtPesqMotorista = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jIdMotorista = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jRGMotorista = new javax.swing.JFormattedTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        FotoMotoristaCarga = new javax.swing.JLabel();
        jCPFMotorista = new javax.swing.JFormattedTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jIdVeiculo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jModeloVeiculo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPlaca = new javax.swing.JTextField();
        jMarcaVeiculo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jBtPesqVeiculos = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        FotoVeiculoCargas = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaVeiculos = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jBtNovoItem = new javax.swing.JButton();
        jBtAlterarItem = new javax.swing.JButton();
        jBtExcluirItem = new javax.swing.JButton();
        jBtSalvarItem = new javax.swing.JButton();
        jBtCancelarItem = new javax.swing.JButton();
        jBtBuscar = new javax.swing.JButton();
        jBtAuditoriaAjudante = new javax.swing.JButton();
        jBtSairVeiculo = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jIdAjudante = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jNomeAjudante = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jRGAjudante = new javax.swing.JFormattedTextField();
        jCPFAjudante = new javax.swing.JFormattedTextField();
        jLabel30 = new javax.swing.JLabel();
        jBtPesqAjudante = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        FotoAjudante = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jDataEntrada = new com.toedter.calendar.JDateChooser();
        jHorarioEntrada = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jHorarioSaida = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jOrigem = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jDestino = new javax.swing.JTextField();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoriaManu = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel6.setText("jLabel6");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Controle de Veiculos de Cargas {P1 Externa} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 0, 255)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome Motorista:");

        jPesqNomeMotorista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeMotorista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeMotorista.setContentAreaFilled(false);
        jBtPesqNomeMotorista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeMotoristaActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Placa:");

        jPesqPlaca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPesqPlaca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jBtPesqPlaca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqPlaca.setContentAreaFilled(false);
        jBtPesqPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqPlacaActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPesqPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPesqNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addGap(66, 66, 66))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel23)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jLabel27)
                    .addComponent(jPesqPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqPlaca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel21)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jPesqNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeMotorista)
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );

        jTabelaVeiculosTerceiros.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVeiculosTerceiros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome do Motorista", "Veiculo", "Placa"
            }
        ));
        jTabelaVeiculosTerceiros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVeiculosTerceirosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaVeiculosTerceiros);
        if (jTabelaVeiculosTerceiros.getColumnModel().getColumnCount() > 0) {
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setMinWidth(390);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setMaxWidth(390);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(4).setMinWidth(220);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(4).setMaxWidth(220);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(5).setMinWidth(120);
            jTabelaVeiculosTerceiros.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jTabbedPane3.setForeground(new java.awt.Color(0, 0, 255));
        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Status");

        jStatusEnt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEnt.setEnabled(false);

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        jDataLancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLancamento.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Data Cadastro");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jStatusEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 106, Short.MAX_VALUE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDataLancamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDataLancamento, jIdLanc, jStatusEnt});

        jTabbedPane3.addTab("Dados Iniciais", jPanel13);

        jNomeMotorista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeMotorista.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("RG");

        jBtPesqMotorista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqMotorista.setText("Pesquisar");
        jBtPesqMotorista.setEnabled(false);
        jBtPesqMotorista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqMotoristaActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome Completo do Motorista");

        jIdMotorista.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdMotorista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdMotorista.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Código");

        jRGMotorista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRGMotorista.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("CPF");

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Motorista", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoMotoristaCarga, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoMotoristaCarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jCPFMotorista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCPFMotorista.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jRGMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCPFMotorista)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jIdMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151)
                                .addComponent(jBtPesqMotorista)))
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addComponent(jNomeMotorista))
                .addGap(18, 18, 18)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jIdMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqMotorista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRGMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCPFMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Dados Motorista", jPanel15);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Código");

        jIdVeiculo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdVeiculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdVeiculo.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Descrição do Veiculo");

        jModeloVeiculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jModeloVeiculo.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Placa");

        jPlaca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPlaca.setEnabled(false);

        jMarcaVeiculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMarcaVeiculo.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Marca do Veiculo");

        jBtPesqVeiculos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqVeiculos.setText("Pesquisar");
        jBtPesqVeiculos.setEnabled(false);
        jBtPesqVeiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqVeiculosActionPerformed(evt);
            }
        });

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Veiculo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoVeiculoCargas, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoVeiculoCargas, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel18)
                            .addComponent(jIdVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(145, 145, 145))
                            .addComponent(jMarcaVeiculo)))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBtPesqVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jIdVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqVeiculos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jMarcaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane3.addTab("Dados Veiculo", jPanel11);

        jTabelaVeiculos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome do Visitante", "Data Entrada", "Horário", "Data Saída", "Horário"
            }
        ));
        jTabelaVeiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVeiculosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaVeiculos);
        if (jTabelaVeiculos.getColumnModel().getColumnCount() > 0) {
            jTabelaVeiculos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(1).setMinWidth(250);
            jTabelaVeiculos.getColumnModel().getColumn(1).setMaxWidth(250);
            jTabelaVeiculos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(3).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(3).setMaxWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaVeiculos.getColumnModel().getColumn(5).setMinWidth(50);
            jTabelaVeiculos.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovoItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoItem.setText("Novo");
        jBtNovoItem.setEnabled(false);
        jBtNovoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoItemActionPerformed(evt);
            }
        });

        jBtAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarItem.setText("Alterar");
        jBtAlterarItem.setEnabled(false);
        jBtAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarItemActionPerformed(evt);
            }
        });

        jBtExcluirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirItem.setText("Excluir");
        jBtExcluirItem.setEnabled(false);
        jBtExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirItemActionPerformed(evt);
            }
        });

        jBtSalvarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarItem.setText("Gravar");
        jBtSalvarItem.setEnabled(false);
        jBtSalvarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarItemActionPerformed(evt);
            }
        });

        jBtCancelarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarItem.setText("Cancelar");
        jBtCancelarItem.setEnabled(false);
        jBtCancelarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarItemActionPerformed(evt);
            }
        });

        jBtBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscar.setText("Buscar");
        jBtBuscar.setEnabled(false);
        jBtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarActionPerformed(evt);
            }
        });

        jBtAuditoriaAjudante.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaAjudante.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaAjudante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaAjudante.setToolTipText("Auditoria");
        jBtAuditoriaAjudante.setContentAreaFilled(false);
        jBtAuditoriaAjudante.setEnabled(false);
        jBtAuditoriaAjudante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaAjudanteActionPerformed(evt);
            }
        });

        jBtSairVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairVeiculo.setText("Sair");
        jBtSairVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairVeiculoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtBuscar)
                    .addComponent(jBtCancelarItem)
                    .addComponent(jBtSalvarItem)
                    .addComponent(jBtAlterarItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtNovoItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtExcluirItem))
                .addGap(234, 234, 234))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBtSairVeiculo))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jBtAuditoriaAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarItem, jBtBuscar, jBtCancelarItem, jBtExcluirItem, jBtNovoItem, jBtSairVeiculo, jBtSalvarItem});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jBtNovoItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairVeiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaAjudante)
                .addGap(18, 18, 18))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarItem, jBtAuditoriaAjudante, jBtBuscar, jBtCancelarItem, jBtExcluirItem, jBtNovoItem, jBtSairVeiculo, jBtSalvarItem});

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Código");

        jIdAjudante.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdAjudante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdAjudante.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Nome Completo do Ajudante");

        jNomeAjudante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeAjudante.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("RG");

        jRGAjudante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRGAjudante.setEnabled(false);

        jCPFAjudante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCPFAjudante.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("CPF");

        jBtPesqAjudante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqAjudante.setText("Pesquisar");
        jBtPesqAjudante.setEnabled(false);
        jBtPesqAjudante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqAjudanteActionPerformed(evt);
            }
        });

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Ajudante", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(153, 0, 102))); // NOI18N

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoAjudante, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoAjudante, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jRGAjudante))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCPFAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)))
                    .addComponent(jLabel8)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jIdAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtPesqAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jNomeAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqAjudante))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRGAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCPFAjudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados Ajudante", jPanel12);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 0, 255));
        jLabel14.setText("Data Entrada");

        jDataEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntrada.setEnabled(false);

        jHorarioEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioEntrada.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 0, 255));
        jLabel15.setText("Horário");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 51, 0));
        jLabel19.setText("Data Saída");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jHorarioSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioSaida.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 51, 0));
        jLabel20.setText("Horário");

        jOrigem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jOrigem.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Origem");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Destino");

        jDestino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDestino.setEnabled(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16)
                            .addComponent(jLabel26)
                            .addComponent(jOrigem, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                            .addComponent(jDestino)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel14))
                    .addComponent(jLabel19)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDataEntrada, jDataSaida, jHorarioEntrada, jHorarioSaida});

        jPanel16Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDestino, jOrigem});

        jTabbedPane2.addTab("Data/Horários", jPanel16);

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoriaManu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaManu.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setToolTipText("Auditoria");
        jBtAuditoriaManu.setContentAreaFilled(false);
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTabbedPane2)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jBtNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtCancelar)
                                .addGap(18, 18, 18)
                                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtCancelar, jBtExcluir, jBtSalvar});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtAuditoriaManu)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo)
                        .addComponent(jBtAlterar)
                        .addComponent(jBtExcluir)
                        .addComponent(jBtSalvar)
                        .addComponent(jBtCancelar)))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSalvar});

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(250, 10, 673, 593);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
        JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesqFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOCARGA "
                            + "INNER JOIN VISITASDIVERSAS "
                            + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                            + "INNER JOIN VEICULOS ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                }
            }
        }
         } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
 if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesqFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOCARGA "
                            + "INNER JOIN VISITASDIVERSAS "
                            + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                            + "INNER JOIN VEICULOS ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                }
            }
        }
}
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa");
            jIDPesqLanc.requestFocus();
        } else {
            preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOCARGA "
                    + "INNER JOIN VISITASDIVERSAS "
                    + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                    + "INNER JOIN VEICULOS "
                    + "ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo "
                    + "WHERE IdLanc='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jTabelaVeiculosTerceirosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVeiculosTerceirosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaVeiculosTerceiros.getValueAt(jTabelaVeiculosTerceiros.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            jDataLancamento.setDate(jDataLancamento.getDate());
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            //
            bloquearCamposPesquisa();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAVEICULOCARGA "
                        + "INNER JOIN VISITASDIVERSAS "
                        + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                        + "INNER JOIN VEICULOS "
                        + "ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo "
                        + "WHERE IdLanc='" + IdLanc + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
                jStatusEnt.setText(conecta.rs.getString("StatusEnt"));
                jDataLancamento.setDate(conecta.rs.getDate("DataLanc"));
                jIdMotorista.setText(conecta.rs.getString("IdVisita"));
                jNomeMotorista.setText(conecta.rs.getString("NomeVisita"));
                jModeloVeiculo.setText(conecta.rs.getString("ModeloVeiculo"));
                jRGMotorista.setText(conecta.rs.getString("RgVisita"));
                jCPFMotorista.setText(conecta.rs.getString("CpfVisita"));
                // Capturando foto
                caminho = conecta.rs.getString("FotoVisita");
                if (caminho != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                    FotoMotoristaCarga.setIcon(i);
                    FotoMotoristaCarga.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoMotoristaCarga.getWidth(), FotoMotoristaCarga.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVD"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(FotoMotoristaCarga.getWidth(), FotoMotoristaCarga.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    FotoMotoristaCarga.setIcon(icon);
                }
                jIdVeiculo.setText(conecta.rs.getString("IdVeiculo"));
                jModeloVeiculo.setText(conecta.rs.getString("ModeloVeiculo"));
                jPlaca.setText(conecta.rs.getString("PlacaVeiculo"));
                jMarcaVeiculo.setText(conecta.rs.getString("MarcaVeiculo"));
                /// Capturando foto
                caminhoVei = conecta.rs.getString("FotoFrente");
                if (caminhoVei != null) {
                    javax.swing.ImageIcon v = new javax.swing.ImageIcon(caminhoVei);
                    FotoVeiculoCargas.setIcon(v);
                    FotoVeiculoCargas.setIcon(new ImageIcon(v.getImage().getScaledInstance(FotoVeiculoCargas.getWidth(), FotoVeiculoCargas.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] img2Bytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVE"));
                if (img2Bytes != null) {
                    ImageIcon pic2 = null;
                    pic2 = new ImageIcon(img2Bytes);
                    Image scaled2 = pic2.getImage().getScaledInstance(FotoVeiculoCargas.getWidth(), FotoVeiculoCargas.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon2 = new ImageIcon(scaled2);
                    FotoVeiculoCargas.setIcon(icon2);
                }
                jObservacao.setText(conecta.rs.getString("Observacao"));
                conecta.desconecta();
                preencherTabelaItens("SELECT * FROM ITENSVEICULOCARGA "
                        + "INNER JOIN VISITASDIVERSAS "
                        + "ON ITENSVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                        + "WHERE IdLanc='" + jIdLanc.getText() + "'");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
        }
    }//GEN-LAST:event_jTabelaVeiculosTerceirosMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCManuP1E) && codIncluirP1E == 1) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCManuP1E) && codAlterarP1E == 1) {
            objVeiCarga.setStatusEnt(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCManuP1E) && codExcluirP1E == 1) {
            objVeiCarga.setStatusEnt(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItens();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCManuP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCManuP1E) && codGravarP1E == 1) {
            if (jDataLancamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de lançamento");
                jDataLancamento.requestFocus();
                jDataLancamento.setBackground(Color.red);
            } else {
                if (jNomeMotorista.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o nome do motorista.");
                    jNomeMotorista.requestFocus();
                    jNomeMotorista.setBackground(Color.red);
                } else {
                    if (jModeloVeiculo.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Informe qual é o veiculo.");
                        jModeloVeiculo.requestFocus();
                        jModeloVeiculo.setBackground(Color.red);
                    } else {
                        objVeiCarga.setStatusEnt(statusEnt);
                        objVeiCarga.setDataLanc(jDataLancamento.getDate());
                        objVeiCarga.setObservacao(jObservacao.getText());
                        if (acao == 1) {
                            // log do usuario
                            objVeiCarga.setUsuarioInsert(nameUser);
                            objVeiCarga.setDataInsert(dataModFinal);
                            objVeiCarga.setHoraInsert(horaMov);
                            //
                            objVeiCarga.setIdVisita(Integer.valueOf(jIdMotorista.getText()));
                            objVeiCarga.setNomeVisita(jNomeMotorista.getText());
                            objVeiCarga.setIdVeiculo(Integer.valueOf(jIdVeiculo.getText()));
                            objVeiCarga.setModeloVeiculo(jModeloVeiculo.getText());
                            control.incluirEntVeiculoCarga(objVeiCarga);
                            buscarID();
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(rootPane, "Registro gravadocom sucesso.");
                            Salvar();
                        }
                        if (acao == 2) {
                            objVeiCarga.setUsuarioUp(nameUser);
                            objVeiCarga.setDataUp(dataModFinal);
                            objVeiCarga.setHoraUp(horaMov);
                            //
                            objVeiCarga.setIdVisita(Integer.valueOf(jIdMotorista.getText()));
                            objVeiCarga.setNomeVisita(jNomeMotorista.getText());
                            objVeiCarga.setIdVeiculo(Integer.valueOf(jIdVeiculo.getText()));
                            objVeiCarga.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                            control.alterarEntVeiculoCarga(objVeiCarga);
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(rootPane, "Registro gravadocom sucesso.");
                            Salvar();
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        verificarHoraEntrada();
        if (jHorarioSaida.getText().equals(horaSaidaEncontrado) && jIdLanc.getText().equals(codigoRegistro) || jHorarioEntrada.getText().equals(horaEntradaEncontrada) && jIdLanc.getText().equals(codigoRegistro)) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível FINALIZAR esse registro, existe(m) horário(s) de entrada de veiculo(s) em aberto.\nCorrija os horários com divergências e então poderá FINALIZAR o documento. ");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAVEICULOCARGA WHERE IdLanc='" + jIdLanc.getText() + "'");
                conecta.rs.first();
                jStatusEnt.setText(conecta.rs.getString("StatusEnt"));
                if (jStatusEnt.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtPesqMotoristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqMotoristaActionPerformed
        // TODO add your handling code here:
        TelaPesqVisitasVeiculosCargasMotoristaExterna objPesVisiVeicCargaExt = new TelaPesqVisitasVeiculosCargasMotoristaExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objPesVisiVeicCargaExt);
        objPesVisiVeicCargaExt.show();
    }//GEN-LAST:event_jBtPesqMotoristaActionPerformed

    private void jBtPesqVeiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqVeiculosActionPerformed
        // TODO add your handling code here:
        TelaPesqVeiculosCargasExterna objVeiculosCargaExt = new TelaPesqVeiculosCargasExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objVeiculosCargaExt);
        objVeiculosCargaExt.show();
    }//GEN-LAST:event_jBtPesqVeiculosActionPerformed

    private void jBtPesqAjudanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqAjudanteActionPerformed
        // TODO add your handling code here:
        TelaPesqVisitasVeiculosCargasAjudanteExterna objPesqVisiVeicAjExt = new TelaPesqVisitasVeiculosCargasAjudanteExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objPesqVisiVeicAjExt);
        objPesqVisiVeicAjExt.show();
    }//GEN-LAST:event_jBtPesqAjudanteActionPerformed

    private void jBtNovoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCVP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCVP1E) && codIncluirP1E == 1) {
            objVeiCarga.setStatusEnt(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoItem();
                formatarCampo();
                corCampo();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoItemActionPerformed

    private void jBtAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCVP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCVP1E) && codAlterarP1E == 1) {
            objVeiCarga.setStatusEnt(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                AlterarItem();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarItemActionPerformed

    private void jBtExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCVP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCVP1E) && codExcluirP1E == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objVeiCarga.setStatusEnt(jStatusEnt.getText());
            if (jStatusEnt.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse movimento não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o lancamento selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensVeicCarga.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensVeiculoCarga(objItensVeicCarga);
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirItem();
                    preencherTabelaItens("SELECT * FROM ITENSVEICULOCARGA "
                            + "INNER JOIN VISITASDIVERSAS "
                            + "ON ITENSVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                            + "WHERE IdLanc='" + jIdLanc.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirItemActionPerformed

    private void jBtSalvarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaSaidaESVCVP1E);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES") || codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaEntradaSaidaESVCVP1E) && codGravarP1E == 1) {
            horaEntradaEncontrada = "";
            horaSaidaEncontrado = "";
            if (jNomeAjudante.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Infome o nome do visitante.");
                jNomeAjudante.requestFocus();
                jNomeAjudante.setBackground(Color.red);
            } else {
                if (jDataEntrada.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe qual a data de entrada.");
                    jDataEntrada.requestFocus();
                    jDataEntrada.setBackground(Color.red);
                } else {
                    if (jHorarioEntrada.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Informe qual o horário de entrada.");
                        jHorarioEntrada.requestFocus();
                        jHorarioEntrada.setBackground(Color.red);
                    } else {
                        if (jDataSaida.getDate() == null) {
                            JOptionPane.showMessageDialog(rootPane, "Informe qual a data de saída.");
                            jDataSaida.requestFocus();
                            jDataSaida.setBackground(Color.red);
                        } else {
                            if (jHorarioSaida.getText().equals("")) {
                                JOptionPane.showMessageDialog(rootPane, "Informe qual é o horário de saida");
                                jHorarioSaida.requestFocus();
                                jHorarioSaida.setBackground(Color.red);
                            } else {
                                objItensVeicCarga.setDataEntrada(jDataEntrada.getDate());
                                objItensVeicCarga.setDataSaida(jDataSaida.getDate());
                                objItensVeicCarga.setHorarioEntrada(jHorarioEntrada.getText());
                                objItensVeicCarga.setHorarioSaida(jHorarioSaida.getText());
                                objItensVeicCarga.setOrigemEntrada(jOrigem.getText());
                                objItensVeicCarga.setDestinoEntrada(jDestino.getText());
                                objItensVeicCarga.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                                if (acao == 3) {
                                    objItensVeicCarga.setUsuarioInsert(nameUser);
                                    objItensVeicCarga.setDataInsert(dataModFinal);
                                    objItensVeicCarga.setHoraInsert(horaMov);
                                    //
                                    objItensVeicCarga.setIdVisita(Integer.valueOf(jIdAjudante.getText()));
                                    objItensVeicCarga.setNomeVisita(jNomeAjudante.getText());
                                    objItensVeicCarga.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                                    controle.incluirItensVeiculoCarga(objItensVeicCarga);
                                    objLog2();
                                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                    preencherTabelaItens("SELECT * FROM ITENSVEICULOCARGA "
                                            + "INNER JOIN VISITASDIVERSAS "
                                            + "ON ITENSVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                                            + "WHERE IdLanc='" + jIdLanc.getText() + "'");
                                    SalvarItem();
                                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                }
                                if (acao == 4) {
                                    //Log usuario
                                    objItensVeicCarga.setUsuarioUp(nameUser);
                                    objItensVeicCarga.setDataUp(dataModFinal);
                                    objItensVeicCarga.setHoraUp(horaMov);
                                    //
                                    objItensVeicCarga.setIdVisita(Integer.valueOf(jIdAjudante.getText()));
                                    objItensVeicCarga.setNomeVisita(jNomeAjudante.getText());
                                    objItensVeicCarga.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                                    objItensVeicCarga.setIdItem(Integer.valueOf(idItem));
                                    controle.alterarItensVeiculoCarga(objItensVeicCarga);
                                    objLog2();
                                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                    preencherTabelaItens("SELECT * FROM ITENSVEICULOCARGA "
                                            + "INNER JOIN VISITASDIVERSAS "
                                            + "ON ITENSVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                                            + "WHERE IdLanc='" + jIdLanc.getText() + "'");
                                    SalvarItem();
                                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                }
                            }

                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarItemActionPerformed

    private void jBtCancelarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarItemActionPerformed
        // TODO add your handling code here:
        CancelarItem();
    }//GEN-LAST:event_jBtCancelarItemActionPerformed

    private void jBtSairVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairVeiculoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairVeiculoActionPerformed

    private void jBtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarActionPerformed
        // TODO add your handling code here:
        TelaPesqItensVeiculosCargasExterna objPesqVeicCarExt = new TelaPesqItensVeiculosCargasExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objPesqVeicCarExt);
        objPesqVeicCarExt.show();
    }//GEN-LAST:event_jBtBuscarActionPerformed

    private void jTabelaVeiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVeiculosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeVisitante = "" + jTabelaVeiculos.getValueAt(jTabelaVeiculos.getSelectedRow(), 1);
            jNomeAjudante.setText(nomeVisitante);
            String idVisita = "" + jTabelaVeiculos.getValueAt(jTabelaVeiculos.getSelectedRow(), 0);
            jIdAjudante.setText(idVisita);
            idItem = "" + jTabelaVeiculos.getValueAt(jTabelaVeiculos.getSelectedRow(), 2);
            // Habilitar os botões
            jBtNovoItem.setEnabled(!true);
            jBtAlterarItem.setEnabled(true);
            jBtExcluirItem.setEnabled(true);
            jBtSalvarItem.setEnabled(!true);
            jBtCancelarItem.setEnabled(true);
            //  jBtBuscarVeiculo.setEnabled(true);
            jBtAuditoriaAjudante.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSVEICULOCARGA "
                        + "INNER JOIN VISITASDIVERSAS "
                        + "ON ITENSVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                        + "WHERE NomeVisita='" + jNomeAjudante.getText() + "' "
                        + "AND IdLanc='" + jIdLanc.getText() + "'");
                conecta.rs.first();
                jIdAjudante.setText(conecta.rs.getString("IdVisita"));//Coluna 0
                jNomeAjudante.setText(conecta.rs.getString("NomeVisita"));// Coluna 1
                idItem = conecta.rs.getString("IdItem"); // Coluna 2
                jRGAjudante.setText(conecta.rs.getString("RgVisita"));
                jCPFAjudante.setText(conecta.rs.getString("CpfVisita"));
                // Capturando foto
                caminhoAju = conecta.rs.getString("FotoVisita");
                if (caminhoAju != null) {
                    javax.swing.ImageIcon j = new javax.swing.ImageIcon(caminhoAju);
                    FotoAjudante.setIcon(j);
                    FotoAjudante.setIcon(new ImageIcon(j.getImage().getScaledInstance(FotoAjudante.getWidth(), FotoAjudante.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] img3Bytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVD"));
                if (img3Bytes != null) {
                    ImageIcon pic3 = null;
                    pic3 = new ImageIcon(img3Bytes);
                    Image scaled3 = pic3.getImage().getScaledInstance(FotoAjudante.getWidth(), FotoAjudante.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon3 = new ImageIcon(scaled3);
                    FotoAjudante.setIcon(icon3);
                }
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jHorarioEntrada.setText(conecta.rs.getString("HorarioEntrada"));
                jHorarioSaida.setText(conecta.rs.getString("HorarioSaida"));
                jOrigem.setText(conecta.rs.getString("OrigemEntrada"));
                jDestino.setText(conecta.rs.getString("DestinoEntrada"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaVeiculosMouseClicked

    private void jBtPesqNomeMotoristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeMotoristaActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeMotorista.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do motorista para pesquisar.");
            jPesqNomeMotorista.requestFocus();
        } else {
            preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOCARGA "
                    + "INNER JOIN VISITASDIVERSAS "
                    + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                    + "INNER JOIN VEICULOS "
                    + "ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo "
                    + "WHERE NomeVisita LIKE'%" + jPesqNomeMotorista.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeMotoristaActionPerformed

    private void jBtPesqPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqPlacaActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqPlaca.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a placa do veiculo para pesquisa.");
            jPesqPlaca.requestFocus();
        } else {
            preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOCARGA "
                    + "INNER JOIN VISITASDIVERSAS "
                    + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                    + "INNER JOIN VEICULOS "
                    + "ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo "
                    + "WHERE PlacaVeiculo LIKE'%" + jPesqPlaca.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqPlacaActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTodasEntSaiVeiculos("SELECT * FROM ENTRADAVEICULOCARGA "
                    + "INNER JOIN VISITASDIVERSAS "
                    + "ON ENTRADAVEICULOCARGA.IdVisita=VISITASDIVERSAS.IdVisita "
                    + "INNER JOIN VEICULOS "
                    + "ON ENTRADAVEICULOCARGA.IdVeiculo=VEICULOS.idVeiculo");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEntSaiVeicCargaExterna objAudSaiEntVeiCarExt = new TelaAuditoriaEntSaiVeicCargaExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objAudSaiEntVeiCarExt);
        objAudSaiEntVeiCarExt.show();
    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jBtAuditoriaAjudanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaAjudanteActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensEntSaiVeicCargaExterna objAudEntSaiItensVeicCargaExt = new TelaAuditoriaItensEntSaiVeicCargaExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objAudEntSaiItensVeicCargaExt);
        objAudEntSaiItensVeicCargaExt.show();
    }//GEN-LAST:event_jBtAuditoriaAjudanteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoAjudante;
    public static javax.swing.JLabel FotoMotoristaCarga;
    public static javax.swing.JLabel FotoVeiculoCargas;
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarItem;
    private javax.swing.JButton jBtAuditoriaAjudante;
    private javax.swing.JButton jBtAuditoriaManu;
    public static javax.swing.JButton jBtBuscar;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarItem;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirItem;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoItem;
    private javax.swing.JButton jBtPesqAjudante;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqMotorista;
    private javax.swing.JButton jBtPesqNomeMotorista;
    private javax.swing.JButton jBtPesqPlaca;
    private javax.swing.JButton jBtPesqVeiculos;
    private javax.swing.JButton jBtSairVeiculo;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarItem;
    public static javax.swing.JFormattedTextField jCPFAjudante;
    public static javax.swing.JFormattedTextField jCPFMotorista;
    private javax.swing.JCheckBox jCheckBox1;
    public static com.toedter.calendar.JDateChooser jDataEntrada;
    private com.toedter.calendar.JDateChooser jDataLancamento;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    public static javax.swing.JTextField jDestino;
    public static javax.swing.JFormattedTextField jHorarioEntrada;
    public static javax.swing.JFormattedTextField jHorarioSaida;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIdAjudante;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdMotorista;
    public static javax.swing.JTextField jIdVeiculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMarcaVeiculo;
    public static javax.swing.JTextField jModeloVeiculo;
    public static javax.swing.JTextField jNomeAjudante;
    public static javax.swing.JTextField jNomeMotorista;
    private javax.swing.JTextArea jObservacao;
    public static javax.swing.JTextField jOrigem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqNomeMotorista;
    private javax.swing.JFormattedTextField jPesqPlaca;
    public static javax.swing.JTextField jPlaca;
    public static javax.swing.JFormattedTextField jRGAjudante;
    public static javax.swing.JFormattedTextField jRGMotorista;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jStatusEnt;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTabelaVeiculos;
    private javax.swing.JTable jTabelaVeiculosTerceiros;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampo() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
        jPesqPlaca.setDocument(new LimiteDigitosAlfa(8));
        jPesqNomeMotorista.setDocument(new LimiteDigitos(50));
        jOrigem.setDocument(new LimiteDigitos(50));
        jDestino.setDocument(new LimiteDigitos(50));
        try {
            MaskFormatter horaEntrada = new MaskFormatter("##:##");
            jHorarioEntrada.setFormatterFactory(new DefaultFormatterFactory(horaEntrada));
            MaskFormatter horaSaida = new MaskFormatter("##:##");
            jHorarioSaida.setFormatterFactory(new DefaultFormatterFactory(horaSaida));
            MaskFormatter cpfMotorista = new MaskFormatter("###.###.###-##");
            jCPFMotorista.setFormatterFactory(new DefaultFormatterFactory(cpfMotorista));
            MaskFormatter rgMotorista = new MaskFormatter("##.###.###-##");
            jRGMotorista.setFormatterFactory(new DefaultFormatterFactory(rgMotorista));
            MaskFormatter cpfAjudante = new MaskFormatter("###.###.###-##");
            jCPFAjudante.setFormatterFactory(new DefaultFormatterFactory(cpfAjudante));
            MaskFormatter rgAjudante = new MaskFormatter("##.###.###-##");
            jRGAjudante.setFormatterFactory(new DefaultFormatterFactory(rgAjudante));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar os campos de CPF e RG\nERROP: " + ex);
        }
    }

    public void bloquearCamposPesquisa() {
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        //
        jIdAjudante.setText("");
        jNomeAjudante.setText("");
        FotoAjudante.setIcon(null);
        jRGAjudante.setText("");
        jCPFAjudante.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        //
        jIdAjudante.setEnabled(!true);
        jNomeAjudante.setEnabled(!true);
        jRGAjudante.setEnabled(!true);
        jCPFAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        jBtPesqAjudante.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void corCampo() {
        jIdLanc.setBackground(Color.white);
        jStatusEnt.setBackground(Color.white);
        jDataLancamento.setBackground(Color.white);
        jIdMotorista.setBackground(Color.white);
        jNomeMotorista.setBackground(Color.white);
        jRGMotorista.setBackground(Color.white);
        jCPFMotorista.setBackground(Color.white);
        jIdVeiculo.setBackground(Color.white);
        jModeloVeiculo.setBackground(Color.white);
        jPlaca.setBackground(Color.white);
        jMarcaVeiculo.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdAjudante.setBackground(Color.white);
        jNomeAjudante.setBackground(Color.white);
        jRGAjudante.setBackground(Color.white);
        jCPFAjudante.setBackground(Color.white);
        jDataEntrada.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jHorarioEntrada.setBackground(Color.white);
        jHorarioSaida.setBackground(Color.white);
        jOrigem.setBackground(Color.white);
        jDestino.setBackground(Color.white);
    }

    public void Novo() {
        if (jIdLanc.getText().equals("")) {
            //Limpar campos
            jIdLanc.setText("");
            jStatusEnt.setText("ABERTO");
            jDataLancamento.setCalendar(Calendar.getInstance());
            jIdMotorista.setText("");
            jNomeMotorista.setText("");
            FotoMotoristaCarga.setIcon(null);
            FotoVeiculoCargas.setIcon(null);
            FotoAjudante.setIcon(null);
            jRGMotorista.setText("");
            jCPFMotorista.setText("");
            jIdVeiculo.setText("");
            jModeloVeiculo.setText("");
            jPlaca.setText("");
            jMarcaVeiculo.setText("");
            jObservacao.setText("");
            //
            jIdAjudante.setText("");
            jNomeAjudante.setText("");
            FotoAjudante.setIcon(null);
            jRGAjudante.setText("");
            jCPFAjudante.setText("");
            jDataEntrada.setDate(null);
            jDataSaida.setDate(null);
            jHorarioEntrada.setText("00:00");
            jHorarioSaida.setText("00:00");
            jOrigem.setText("");
            jDestino.setText("");
            limparTabelaItens();
        }
        //Limpar campos
        jIdLanc.setText("");
        jStatusEnt.setText("ABERTO");
        jDataLancamento.setCalendar(Calendar.getInstance());
        jIdMotorista.setText("");
        jNomeMotorista.setText("");
        FotoMotoristaCarga.setIcon(null);
        FotoVeiculoCargas.setIcon(null);
        FotoAjudante.setIcon(null);
        jRGMotorista.setText("");
        jCPFMotorista.setText("");
        jIdVeiculo.setText("");
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        jObservacao.setText("");
        //
        jIdAjudante.setText("");
        jNomeAjudante.setText("");
        jRGAjudante.setText("");
        jCPFAjudante.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        //
        jDataLancamento.setEnabled(true);
        jBtPesqMotorista.setEnabled(true);
        jBtPesqVeiculos.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        limparTabelaItens();
    }

    public void Alterar() {
        //
        jDataLancamento.setEnabled(true);
        jBtPesqMotorista.setEnabled(true);
        jBtPesqVeiculos.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Excluir() {
        //Limpar campos
        jIdLanc.setText("");
        jStatusEnt.setText("");
        jDataLancamento.setDate(null);
        FotoMotoristaCarga.setIcon(null);
        FotoVeiculoCargas.setIcon(null);
        FotoAjudante.setIcon(null);
        jIdMotorista.setText("");
        jNomeMotorista.setText("");
        jRGMotorista.setText("");
        jCPFMotorista.setText("");
        jIdVeiculo.setText("");
        jModeloVeiculo.setText("");
        jPlaca.setText("");
        jMarcaVeiculo.setText("");
        jObservacao.setText("");
        //
        jIdAjudante.setText("");
        jNomeAjudante.setText("");
        jRGAjudante.setText("");
        jCPFAjudante.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("");
        jHorarioSaida.setText("");
        jOrigem.setText("");
        jDestino.setText("");
        //
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Salvar() {
        //
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            //Limpar campos
            jIdLanc.setText("");
            jStatusEnt.setText("");
            jDataLancamento.setDate(null);
            FotoMotoristaCarga.setIcon(null);
            FotoVeiculoCargas.setIcon(null);
            FotoAjudante.setIcon(null);
            jIdMotorista.setText("");
            jNomeMotorista.setText("");
            jRGMotorista.setText("");
            jCPFMotorista.setText("");
            jIdVeiculo.setText("");
            jModeloVeiculo.setText("");
            jPlaca.setText("");
            jMarcaVeiculo.setText("");
            jObservacao.setText("");
            //
            jIdAjudante.setText("");
            jNomeAjudante.setText("");
            jRGAjudante.setText("");
            jCPFAjudante.setText("");
            jDataEntrada.setDate(null);
            jDataSaida.setDate(null);
            jHorarioEntrada.setText("");
            jHorarioSaida.setText("");
            jOrigem.setText("");
            jDestino.setText("");
        }
        //
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void verificarHoraEntrada() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSVEICULOCARGA WHERE HorarioSaida='" + verHorarioSaida + "' AND Idlanc='" + jIdLanc.getText() + "' "
                    + "OR HorarioEntrada='" + verHorarioEntrada + "'AND Idlanc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            horaEntradaEncontrada = conecta.rs.getString("HorarioEntrada");
            horaSaidaEncontrado = conecta.rs.getString("HorarioSaida");
            codigoRegistro = conecta.rs.getString("Idlanc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objVeiCarga.setStatusEnt(statusLanc);
            objVeiCarga.setIdLanc(Integer.parseInt(jIdLanc.getText()));
            control.finalizarEntradaSaiFamiliar(objVeiCarga);
            jStatusEnt.setText("FINALIZADO");
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
        }
        //Habilitar/Desabilitar Campos
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        //        
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
    }

    public void NovoItem() {
        //        
        jIdAjudante.setText("");
        jNomeAjudante.setText("");
        jRGAjudante.setText("");
        jCPFAjudante.setText("");
        FotoAjudante.setIcon(null);
        jDataEntrada.setCalendar(Calendar.getInstance());
        jDataSaida.setCalendar(Calendar.getInstance());
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        //
        jBtPesqAjudante.setEnabled(true);
        jDataEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jOrigem.setEnabled(true);
        jDestino.setEnabled(true);
        // Desabilita os campos e botões da aba manutenção
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Deesabilita os botões da aba manutenção
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaAjudante.setEnabled(!true);
    }

    public void AlterarItem() {
        //
        jBtPesqAjudante.setEnabled(true);
        jDataEntrada.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHorarioEntrada.setEnabled(true);
        jHorarioSaida.setEnabled(true);
        jOrigem.setEnabled(true);
        jDestino.setEnabled(true);
        // Desabilita os campos e botões da aba manutenção
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Deesabilita os botões da aba manutenção
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
        jBtBuscar.setEnabled(!true);
        jBtAuditoriaAjudante.setEnabled(!true);
    }

    public void ExcluirItem() {
        //        
        jIdAjudante.setText("");
        jNomeAjudante.setText("");
        jRGAjudante.setText("");
        jCPFAjudante.setText("");
        FotoAjudante.setIcon(null);
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("");
        jHorarioSaida.setText("");
        jOrigem.setText("");
        jDestino.setText("");
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        // Desabilita os campos e botões da aba manutenção
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Deesabilita os botões da aba manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(true);
        jBtAuditoriaAjudante.setEnabled(!true);
    }

    public void SalvarItem() {
        //        
        jIdAjudante.setText("");
        jNomeAjudante.setText("");
        FotoAjudante.setIcon(null);
        jRGAjudante.setText("");
        jCPFAjudante.setText("");
        jDataEntrada.setDate(null);
        jDataSaida.setDate(null);
        jHorarioEntrada.setText("00:00");
        jHorarioSaida.setText("00:00");
        jOrigem.setText("");
        jDestino.setText("");
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        // Desabilita os campos e botões da aba manutenção
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Deesabilita os botões da aba manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(true);
        jBtAuditoriaAjudante.setEnabled(!true);
    }

    public void CancelarItem() {
        //
        jBtPesqAjudante.setEnabled(!true);
        jDataEntrada.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHorarioEntrada.setEnabled(!true);
        jHorarioSaida.setEnabled(!true);
        jOrigem.setEnabled(!true);
        jDestino.setEnabled(!true);
        // Desabilita os campos e botões da aba manutenção
        jDataLancamento.setEnabled(!true);
        jBtPesqMotorista.setEnabled(!true);
        jBtPesqVeiculos.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Deesabilita os botões da aba manutenção
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
        jBtBuscar.setEnabled(true);
        jBtAuditoriaAjudante.setEnabled(!true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADAVEICULOCARGA");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdLanc"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível identificar o ID do lançamento\nERRO: " + ex);
        }
    }

    public void preencherTodasEntSaiVeiculos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Motorista", "Veiculo", "Placa"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("StatusEnt"), conecta.rs.getString("NomeVisita"), conecta.rs.getString("ModeloVeiculo"), conecta.rs.getString("PlacaVeiculo")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculosTerceiros.setModel(modelo);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setPreferredWidth(390);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(4).setPreferredWidth(220);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVeiculosTerceiros.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculosTerceiros.setAutoResizeMode(jTabelaVeiculosTerceiros.AUTO_RESIZE_OFF);
        jTabelaVeiculosTerceiros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Motorista", "Veiculo", "Placa"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculosTerceiros.setModel(modelo);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setPreferredWidth(390);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(4).setPreferredWidth(220);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVeiculosTerceiros.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculosTerceiros.setAutoResizeMode(jTabelaVeiculosTerceiros.AUTO_RESIZE_OFF);
        jTabelaVeiculosTerceiros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaVeiculosTerceiros.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Visitante", "Data Entrada", "Horário", "Data Saida", "Horário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataEntrada");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                // Data de Saida
                // Formatar a data Entrada
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dias + "/" + mess + "/" + anos;
                dados.add(new Object[]{conecta.rs.getInt("IdVisita"), conecta.rs.getString("NomeVisita"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculos.setModel(modelo);
        jTabelaVeiculos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaVeiculos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVeiculos.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculos.setAutoResizeMode(jTabelaVeiculos.AUTO_RESIZE_OFF);
        jTabelaVeiculos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Visitante", "Data Entrada", "Horário", "Data Saida", "Horário"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVeiculos.setModel(modelo);
        jTabelaVeiculos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaVeiculos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaVeiculos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaVeiculos.getColumnModel().getColumn(5).setPreferredWidth(50);
        jTabelaVeiculos.getColumnModel().getColumn(5).setResizable(false);
        jTabelaVeiculos.getTableHeader().setReorderingAllowed(false);
        jTabelaVeiculos.setAutoResizeMode(jTabelaVeiculos.AUTO_RESIZE_OFF);
        jTabelaVeiculos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVeiculos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaVeiculos.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSVEICULOCARGA WHERE IdLanc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codLanc = conecta.rs.getString("IdLanc");
            if (jIdLanc.getText().equals(codLanc)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objVeiCarga.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                control.excluirEntVeiculoCarga(objVeiCarga);
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1E = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1E + "'");
            conecta.rs.first();
            codigoUserGroupP1E = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1E = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1E = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1E + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1E = conecta.rs.getInt("IdUsuario");
            codAbrirP1E = conecta.rs.getInt("Abrir");
            codIncluirP1E = conecta.rs.getInt("Incluir");
            codAlterarP1E = conecta.rs.getInt("Alterar");
            codExcluirP1E = conecta.rs.getInt("Excluir");
            codGravarP1E = conecta.rs.getInt("Gravar");
            codConsultarP1E = conecta.rs.getInt("Consultar");
            nomeTelaP1E = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
