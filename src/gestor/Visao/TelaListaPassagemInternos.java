/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAgendaLaborativa;
import gestor.Controle.ControleItensAgendaLaborativa;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitos;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.AgendaLaborativa;
import gestor.Modelo.ItensAgendaLaborativa;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codAbrirTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codAlterarTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codConsultarTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codExcluirTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codGravarTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codIncluirTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codUserAcessoTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codigoGrupoTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codigoUserGroupTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.codigoUserTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.nomeGrupoTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.nomeTelaTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.telaListaPassagemIntTO;
import static gestor.Visao.TelaModuloTerapiaOcupacional.telaListaPassagemManuTO;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author user
 */
public class TelaListaPassagemInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AgendaLaborativa objAgenda = new AgendaLaborativa();
    ItensAgendaLaborativa objItensAgenda = new ItensAgendaLaborativa();
    ControleAgendaLaborativa control = new ControleAgendaLaborativa();
    ControleItensAgendaLaborativa controle = new ControleItensAgendaLaborativa();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Terapia Ocupacioal:Lista de Passagem:Manutenção";
    String nomeModuloTela2 = "Terapia Ocupacioal:Lista de Passagem:Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String statusLanc = "ABERTO";
    String dataCadastro;
    String dataInicial, dataFinal, dataAgenda;
    public static String idItem;
    String codAgenda;
    String caminho;
    int count = 0;
    // DIAS E HORARIOS DA SEMANA PARA SAIDA DOS INTERNOS
    public static int DiaSeg;
    public static int DiaTer;
    public static int DiaQua;
    public static int DiaQui;
    public static int DiaSex;
    public static int DiaSab;
    public static int DiaDom;

    /**
     * Creates new form TelaAgendamentoLaborInternos
     */
    public TelaListaPassagemInternos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jIDPesqAgenda = new javax.swing.JTextField();
        jBtID = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDatas = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPesqNomeEmpresa = new javax.swing.JTextField();
        jBtPesqNomeEmpresa = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaAgendamento = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIDAgenda = new javax.swing.JTextField();
        jStatusLanc = new javax.swing.JTextField();
        jDataCadastro = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jIdEmp = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jRazaoSocial = new javax.swing.JTextField();
        jBtPesqEmpresas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaItensInternos = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jBtNovoInterno = new javax.swing.JButton();
        jBtAlterarInterno = new javax.swing.JButton();
        jBtExcluirInterno = new javax.swing.JButton();
        jBtSalvarInterno = new javax.swing.JButton();
        jBtCancelarInterno = new javax.swing.JButton();
        jBtBuscarInterno = new javax.swing.JButton();
        jBtAuditoriaItens = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtAuditoriaManu = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        FotoInternoListaPassagem = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jIdInterno = new javax.swing.JTextField();
        jBtPesqInterno = new javax.swing.JButton();
        jComboBoxStatus = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDataEntrada = new com.toedter.calendar.JDateChooser();
        jComboBoxTipoEmpresa = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jNomeInterno = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxTornozeleira = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jCheckBoxSeg = new javax.swing.JCheckBox();
        jCheckBoxTer = new javax.swing.JCheckBox();
        jCheckBoxQua = new javax.swing.JCheckBox();
        jCheckBoxQui = new javax.swing.JCheckBox();
        jCheckBoxSex = new javax.swing.JCheckBox();
        jCheckBoxSab = new javax.swing.JCheckBox();
        jCheckBoxDom = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jHoraSeg = new javax.swing.JFormattedTextField();
        jHoraTer = new javax.swing.JFormattedTextField();
        jHoraQua = new javax.swing.JFormattedTextField();
        jHoraQui = new javax.swing.JFormattedTextField();
        jHoraSex = new javax.swing.JFormattedTextField();
        jHoraSab = new javax.swing.JFormattedTextField();
        jHoraDom = new javax.swing.JFormattedTextField();
        jPanel13 = new javax.swing.JPanel();
        jHoraSegEnt = new javax.swing.JFormattedTextField();
        jHoraTerEnt = new javax.swing.JFormattedTextField();
        jHoraQuaEnt = new javax.swing.JFormattedTextField();
        jHoraQuiEnt = new javax.swing.JFormattedTextField();
        jHoraSexEnt = new javax.swing.JFormattedTextField();
        jHoraSabEnt = new javax.swing.JFormattedTextField();
        jHoraDomEnt = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jObservacaoInterno = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Lista de Passagem de Internos - {TO} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código:");

        jIDPesqAgenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqAgenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtID.setContentAreaFilled(false);
        jBtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIDActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Data Final:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDatas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDatas.setContentAreaFilled(false);
        jBtPesqDatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDatasActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Razão Social:");

        jPesqNomeEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeEmpresa.setContentAreaFilled(false);
        jBtPesqNomeEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeEmpresaActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jIDPesqAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqDatas, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPesqNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIDPesqAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jBtID)
                    .addComponent(jLabel12)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDatas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(jPesqNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeEmpresa)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaAgendamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Razão Social", "Observação"
            }
        ));
        jTabelaAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaAgendamento);
        if (jTabelaAgendamento.getColumnModel().getColumnCount() > 0) {
            jTabelaAgendamento.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAgendamento.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAgendamento.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaAgendamento.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaAgendamento.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaAgendamento.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaAgendamento.getColumnModel().getColumn(3).setMinWidth(335);
            jTabelaAgendamento.getColumnModel().getColumn(3).setMaxWidth(335);
            jTabelaAgendamento.getColumnModel().getColumn(4).setMinWidth(300);
            jTabelaAgendamento.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 525, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Cadastro");

        jIDAgenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDAgenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDAgenda.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setEnabled(false);

        jDataCadastro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataCadastro.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Código");

        jIdEmp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdEmp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdEmp.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome da Empresa");

        jRazaoSocial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRazaoSocial.setEnabled(false);

        jBtPesqEmpresas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqEmpresas.setContentAreaFilled(false);
        jBtPesqEmpresas.setEnabled(false);
        jBtPesqEmpresas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqEmpresasActionPerformed(evt);
            }
        });

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Observação:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIDAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 209, Short.MAX_VALUE))
                            .addComponent(jRazaoSocial))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqEmpresas, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel15))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqEmpresas)
                    .addComponent(jIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIDAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDataCadastro, jIDAgenda, jStatusLanc});

        jTabelaItensInternos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Interno", "Status", "Situação"
            }
        ));
        jTabelaItensInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensInternosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaItensInternos);
        if (jTabelaItensInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaItensInternos.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaItensInternos.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaItensInternos.getColumnModel().getColumn(1).setMinWidth(270);
            jTabelaItensInternos.getColumnModel().getColumn(1).setMaxWidth(270);
            jTabelaItensInternos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaItensInternos.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaItensInternos.getColumnModel().getColumn(3).setMinWidth(200);
            jTabelaItensInternos.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jBtNovoInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoInterno.setText("Novo");
        jBtNovoInterno.setEnabled(false);
        jBtNovoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoInternoActionPerformed(evt);
            }
        });

        jBtAlterarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarInterno.setText("Alterar");
        jBtAlterarInterno.setEnabled(false);
        jBtAlterarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarInternoActionPerformed(evt);
            }
        });

        jBtExcluirInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirInterno.setText("Excluir");
        jBtExcluirInterno.setEnabled(false);
        jBtExcluirInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirInternoActionPerformed(evt);
            }
        });

        jBtSalvarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarInterno.setText("Gravar");
        jBtSalvarInterno.setEnabled(false);
        jBtSalvarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarInternoActionPerformed(evt);
            }
        });

        jBtCancelarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarInterno.setText("Cancelar");
        jBtCancelarInterno.setEnabled(false);
        jBtCancelarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarInternoActionPerformed(evt);
            }
        });

        jBtBuscarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarInterno.setText("Buscar");
        jBtBuscarInterno.setEnabled(false);
        jBtBuscarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarInternoActionPerformed(evt);
            }
        });

        jBtAuditoriaItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaItens.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaItens.setToolTipText("Auditoria");
        jBtAuditoriaItens.setContentAreaFilled(false);
        jBtAuditoriaItens.setEnabled(false);
        jBtAuditoriaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaItensActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtExcluirInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtSalvarInterno)
                            .addComponent(jBtCancelarInterno)
                            .addComponent(jBtNovoInterno)
                            .addComponent(jBtAlterarInterno)
                            .addComponent(jBtFinalizar)
                            .addComponent(jBtBuscarInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jBtAuditoriaItens, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jBtSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarInterno, jBtBuscarInterno, jBtCancelarInterno, jBtExcluirInterno, jBtFinalizar, jBtNovoInterno, jBtSair, jBtSalvarInterno});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovoInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtBuscarInterno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addGap(18, 18, 18)
                .addComponent(jBtAuditoriaItens)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarInterno, jBtAuditoriaItens, jBtBuscarInterno, jBtCancelarInterno, jBtExcluirInterno, jBtFinalizar, jBtNovoInterno, jBtSair, jBtSalvarInterno});

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtAuditoriaManu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaManu.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setToolTipText("Auditoria");
        jBtAuditoriaManu.setContentAreaFilled(false);
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoInternoListaPassagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoInternoListaPassagem, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
        );

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Código");

        jIdInterno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInterno.setEnabled(false);

        jBtPesqInterno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtPesqInterno.setForeground(new java.awt.Color(0, 204, 0));
        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setToolTipText("Pesquisar Setor");
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Ativo", "Inativo" }));
        jComboBoxStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatus.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Status");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Data Entrada");

        jDataEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntrada.setEnabled(false);

        jComboBoxTipoEmpresa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoEmpresa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Externa", "Interna" }));
        jComboBoxTipoEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoEmpresa.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Tipo Empresa");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome Completo do Interno");

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInterno.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Utiliza tornozeleira eletrônica?");

        jComboBoxTornozeleira.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTornozeleira.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Não", "Sim" }));
        jComboBoxTornozeleira.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTornozeleira.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInterno)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jIdInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxTipoEmpresa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTornozeleira, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInterno)
                    .addComponent(jIdInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxTipoEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxTornozeleira, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(24, 24, 24)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados do Interno", jPanel5);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dias da Semana", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jCheckBoxSeg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSeg.setText("Seg");
        jCheckBoxSeg.setEnabled(false);
        jCheckBoxSeg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSeg.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jCheckBoxSeg.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jCheckBoxTer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTer.setText("Ter");
        jCheckBoxTer.setEnabled(false);
        jCheckBoxTer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxTer.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxTer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxQua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxQua.setText("Qua");
        jCheckBoxQua.setEnabled(false);
        jCheckBoxQua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxQua.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxQua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxQui.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxQui.setText("Qui");
        jCheckBoxQui.setEnabled(false);
        jCheckBoxQui.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxQui.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxQui.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxSex.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSex.setText("Sex");
        jCheckBoxSex.setEnabled(false);
        jCheckBoxSex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSex.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxSex.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxSab.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSab.setText("Sáb");
        jCheckBoxSab.setEnabled(false);
        jCheckBoxSab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxSab.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxSab.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jCheckBoxDom.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDom.setText("Dom");
        jCheckBoxDom.setEnabled(false);
        jCheckBoxDom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxDom.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jCheckBoxDom.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxTer, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxQua, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jCheckBoxQui, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxDom)
                .addGap(15, 15, 15))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxSex, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBoxQui, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jCheckBoxDom)
                        .addComponent(jCheckBoxSab)
                        .addComponent(jCheckBoxQua)
                        .addComponent(jCheckBoxTer)
                        .addComponent(jCheckBoxSeg)))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Horários de Saída", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jHoraSeg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSeg.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSeg.setEnabled(false);

        jHoraTer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraTer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraTer.setEnabled(false);

        jHoraQua.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQua.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQua.setEnabled(false);

        jHoraQui.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQui.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQui.setEnabled(false);

        jHoraSex.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSex.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSex.setEnabled(false);

        jHoraSab.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSab.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSab.setEnabled(false);

        jHoraDom.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraDom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraDom.setEnabled(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jHoraSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraTer, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraQua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraQui, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSex, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSab, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHoraDom, jHoraQua, jHoraQui, jHoraSab, jHoraSeg, jHoraSex, jHoraTer});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraSab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jHoraQui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraTer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraQua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Horários de Entrada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jHoraSegEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSegEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSegEnt.setEnabled(false);

        jHoraTerEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraTerEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraTerEnt.setEnabled(false);

        jHoraQuaEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQuaEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQuaEnt.setEnabled(false);

        jHoraQuiEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraQuiEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraQuiEnt.setEnabled(false);

        jHoraSexEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSexEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSexEnt.setEnabled(false);

        jHoraSabEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSabEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSabEnt.setEnabled(false);

        jHoraDomEnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraDomEnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraDomEnt.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jHoraSegEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraTerEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraQuaEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraQuiEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSexEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHoraSabEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jHoraDomEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHoraDomEnt, jHoraQuaEnt, jHoraQuiEnt, jHoraSabEnt, jHoraSegEnt, jHoraSexEnt, jHoraTerEnt});

        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSexEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraSabEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraDomEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jHoraQuiEnt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jHoraSegEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraTerEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHoraQuaEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel10, jPanel12});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        jTabbedPane2.addTab("Dias/Horários", jPanel6);

        jObservacaoInterno.setColumns(20);
        jObservacaoInterno.setRows(5);
        jObservacaoInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacaoInterno.setEnabled(false);
        jScrollPane4.setViewportView(jObservacaoInterno);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Observação", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtNovo)
                        .addGap(5, 5, 5)
                        .addComponent(jBtAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtExcluir, jBtSalvar});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo)
                        .addComponent(jBtExcluir)
                        .addComponent(jBtCancelar)
                        .addComponent(jBtAlterar)
                        .addComponent(jBtSalvar))
                    .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtExcluir, jBtNovo, jBtSalvar});

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(250, 20, 751, 556);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemManuTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemManuTO) && codIncluirTO == 1) {
            acao = 1;
            bloquearCampos();
            Novo();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemManuTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemManuTO) && codAlterarTO == 1) {
            objAgenda.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  interno registro não poderá ser alterardo, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                bloquearCampos();
                Alterar();
                corCampos();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemManuTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemManuTO) && codExcluirTO == 1) {
            objAgenda.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItens();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemManuTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemManuTO) && codGravarTO == 1) {
            if (jDataCadastro.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de cadastro.");
                jDataCadastro.requestFocus();
                jDataCadastro.setBackground(Color.red);
            } else {
                if (jRazaoSocial.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "É necessário informar uma empresa.");
                } else {
                    objAgenda.setStatusLanc(statusLanc);
                    objAgenda.setDataCadastro(jDataCadastro.getDate());
                    objAgenda.setObsLanc(jObservacao.getText());
                    // log de usuario
                    objAgenda.setUsuarioInsert(nameUser);
                    objAgenda.setDataInsert(dataModFinal);
                    objAgenda.setHoraInsert(horaMov);
                    if (acao == 1) {
                        objAgenda.setNomeEmpresa(jRazaoSocial.getText());
                        control.incluirAgenda(objAgenda);
                        buscarID();
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        Salvar();
                    }
                    if (acao == 2) {
                        // log de usuario
                        objAgenda.setUsuarioUp(nameUser);
                        objAgenda.setDataUp(dataModFinal);
                        objAgenda.setHoraUp(horaMov);
                        objAgenda.setNomeEmpresa(jRazaoSocial.getText());
                        objAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
                        control.alterarAgenda(objAgenda);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                        Salvar();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaBuscarInternosAgendaLabor objInternosLabor = new TelaBuscarInternosAgendaLabor();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objInternosLabor);
        objInternosLabor.show();
    }//GEN-LAST:event_jBtPesqInternoActionPerformed

    private void jBtNovoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemIntTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemIntTO) && codIncluirTO == 1) {
            objAgenda.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Não e possivel incluir mais registro, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                bloquearCampos();
                NovoInterno();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoInternoActionPerformed

    private void jBtAlterarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemIntTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemIntTO) && codAlterarTO == 1) {
            objAgenda.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  interno não poderá ser alterardo, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                bloquearCampos();
                AlterarInterno();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarInternoActionPerformed

    private void jBtExcluirInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemIntTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemIntTO) && codExcluirTO == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objAgenda.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  interno não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o interno selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensAgenda.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensAgendaLab(objItensAgenda);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaItens("SELECT * FROM ITENSAGENDALABORATIVA "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ITENSAGENDALABORATIVA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "WHERE IdAgenda='" + jIDAgenda.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirInterno();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirInternoActionPerformed

    private void jBtSalvarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaListaPassagemIntTO);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTO.equals("ADMINISTRADORES") || codigoUserTO == codUserAcessoTO && nomeTelaTO.equals(telaListaPassagemIntTO) && codGravarTO == 1) {
            if (jNomeInterno.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno a ser incluído");
            } else {
                if (jComboBoxStatus.getSelectedItem() == null || jComboBoxStatus.getSelectedItem().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o status do interno");
                    jComboBoxStatus.requestFocus();
                    jComboBoxStatus.setBackground(Color.red);
                } else if (jComboBoxStatus.getSelectedItem().equals("Selecione...")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o status do interno");
                    jComboBoxStatus.requestFocus();
                    jComboBoxStatus.setBackground(Color.red);
                } else if (jComboBoxTornozeleira.getSelectedItem() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe se o interno tem ou não tornozeleira eletrônica.");
                } else if (jComboBoxTornozeleira.getSelectedItem().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe se o interno tem ou não tornozeleira eletrônica.");
                } else if (jComboBoxTornozeleira.getSelectedItem().equals("Selecione...")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe se o interno tem ou não tornozeleira eletrônica.");
                } else if (jComboBoxTipoEmpresa.getSelectedItem().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o tipo da empresa, externa ou interna");
                } else if (jComboBoxTipoEmpresa.getSelectedItem().equals("Selecione...")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o tipo da empresa, externa ou interna");
                } else {
                    objItensAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
                    objItensAgenda.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
                    objItensAgenda.setNomeInterno(jNomeInterno.getText());
                    objItensAgenda.setIdEmp(Integer.valueOf(jIdEmp.getText()));
                    objItensAgenda.setStatusInterno((String) jComboBoxStatus.getSelectedItem());
                    objItensAgenda.setObservacaoInterno(jObservacaoInterno.getText());
                    objItensAgenda.setTipoEmpresa((String) jComboBoxTipoEmpresa.getSelectedItem());
                    // DIAS DA SEMANA
                    if (jCheckBoxSeg.isSelected()) {
                        DiaSeg = 1;
                    } else if (!jCheckBoxSeg.isSelected()) {
                        DiaSeg = 0;
                    }
                    objItensAgenda.setDiaSeg(DiaSeg);
                    if (jCheckBoxTer.isSelected()) {
                        DiaTer = 1;
                    } else if (!jCheckBoxTer.isSelected()) {
                        DiaTer = 0;
                    }
                    objItensAgenda.setDiaTer(DiaTer);
                    if (jCheckBoxQua.isSelected()) {
                        DiaQua = 1;
                    } else if (!jCheckBoxQua.isSelected()) {
                        DiaQua = 0;
                    }
                    objItensAgenda.setDiaQua(DiaQua);
                    if (jCheckBoxQui.isSelected()) {
                        DiaQui = 1;
                    } else if (!jCheckBoxQui.isSelected()) {
                        DiaQui = 0;
                    }
                    objItensAgenda.setDiaQui(DiaQui);
                    if (jCheckBoxSex.isSelected()) {
                        DiaSex = 1;
                    } else if (!jCheckBoxSex.isSelected()) {
                        DiaSex = 0;
                    }
                    objItensAgenda.setDiaSex(DiaSex);
                    if (jCheckBoxSab.isSelected()) {
                        DiaSab = 1;
                    } else if (!jCheckBoxSab.isSelected()) {
                        DiaSab = 0;
                    }
                    objItensAgenda.setDiaSab(DiaSab);
                    if (jCheckBoxDom.isSelected()) {
                        DiaDom = 1;
                    } else if (!jCheckBoxDom.isSelected()) {
                        DiaDom = 0;
                    }
                    objItensAgenda.setDiaDom(DiaDom);
                    // HORAS DE SAÍDA DO DIA DA SEMANA
                    objItensAgenda.setHoraSeg(jHoraSeg.getText());
                    objItensAgenda.setHoraTer(jHoraTer.getText());
                    objItensAgenda.setHoraQua(jHoraQua.getText());
                    objItensAgenda.setHoraQui(jHoraQui.getText());
                    objItensAgenda.setHoraSex(jHoraSex.getText());
                    objItensAgenda.setHoraSab(jHoraSab.getText());
                    objItensAgenda.setHoraDom(jHoraDom.getText());
                    // HORÁRIO DE ENTRADA NA UNIDADE
                    objItensAgenda.setHoraSegEnt(jHoraSegEnt.getText());
                    objItensAgenda.setHoraTerEnt(jHoraTerEnt.getText());
                    objItensAgenda.setHoraQuaEnt(jHoraQuaEnt.getText());
                    objItensAgenda.setHoraQuiEnt(jHoraQuiEnt.getText());
                    objItensAgenda.setHoraSexEnt(jHoraSexEnt.getText());
                    objItensAgenda.setHoraSabEnt(jHoraSabEnt.getText());
                    objItensAgenda.setHoraDomEnt(jHoraDomEnt.getText());
                    objItensAgenda.setPulseira((String) jComboBoxTornozeleira.getSelectedItem());
                    if (acao == 3) {
                        // log de usuario
                        objItensAgenda.setUsuarioInsert(nameUser);
                        objItensAgenda.setDataInsert(dataModFinal);
                        objItensAgenda.setHoraInsert(horaMov);
                        controle.incluirItensAgendaLab(objItensAgenda);
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        SalvarInterno();
                        preencherTabelaItens("SELECT * FROM ITENSAGENDALABORATIVA "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENSAGENDALABORATIVA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE IdAgenda='" + jIDAgenda.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                    if (acao == 4) {
                        objItensAgenda.setUsuarioUp(nameUser);
                        objItensAgenda.setDataUp(dataModFinal);
                        objItensAgenda.setHoraUp(horaMov);
                        //
                        objItensAgenda.setIdAgenda(Integer.valueOf(jIDAgenda.getText()));
                        objItensAgenda.setStatusInterno((String) jComboBoxStatus.getSelectedItem());
                        objItensAgenda.setObservacaoInterno(jObservacaoInterno.getText());
                        objItensAgenda.setTipoEmpresa((String) jComboBoxTipoEmpresa.getSelectedItem());
                        objItensAgenda.setIdInternoCrc(Integer.valueOf(jIdInterno.getText()));
                        objItensAgenda.setNomeInterno(jNomeInterno.getText());
                        objItensAgenda.setIdEmp(Integer.valueOf(jIdEmp.getText()));
                        objItensAgenda.setIdItem(Integer.valueOf(idItem));
                        controle.alterarItensAgendaLab(objItensAgenda);
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        SalvarInterno();
                        preencherTabelaItens("SELECT * FROM ITENSAGENDALABORATIVA "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENSAGENDALABORATIVA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE IdAgenda='" + jIDAgenda.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarInternoActionPerformed

    private void jBtCancelarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarInternoActionPerformed
        // TODO add your handling code here:
        CancelarInterno();
    }//GEN-LAST:event_jBtCancelarInternoActionPerformed

    private void jBtPesqEmpresasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqEmpresasActionPerformed
        // TODO add your handling code here:
        TelaBuscarEmpresaLabor objEmpLab = new TelaBuscarEmpresaLabor();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objEmpLab);
        objEmpLab.show();
    }//GEN-LAST:event_jBtPesqEmpresasActionPerformed

    private void jBtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIDActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqAgenda.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisar.");
            jIDPesqAgenda.requestFocus();
        } else {

            preencherTabelaAgendamento("SELECT * FROM AGENDALABORATIVA "
                    + "INNER JOIN EMPRESALAB "
                    + "ON AGENDALABORATIVA.IdEmp=EMPRESALAB.IdEmp "
                    + "WHERE IdAgenda='" + jIDPesqAgenda.getText() + "'");
        }
    }//GEN-LAST:event_jBtIDActionPerformed

    private void jBtPesqNomeEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeEmpresaActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeEmpresa.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome de uma empresa para pesquisar.");
            jPesqNomeEmpresa.requestFocus();
        } else {
            jtotalRegistros.setText("");
            preencherTabelaAgendamento("SELECT * FROM AGENDALABORATIVA "
                    + "INNER JOIN EMPRESALAB "
                    + "ON AGENDALABORATIVA.IdEmp=EMPRESALAB.IdEmp "
                    + "WHERE RazaoSocial LIKE'%" + jPesqNomeEmpresa.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeEmpresaActionPerformed

    private void jBtPesqDatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDatasActionPerformed
        // TODO add your handling code here:      
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        jTabelaAgendamento.setVisible(true);
                        preencherTabelaAgendamento("SELECT * FROM AGENDALABORATIVA "
                                + "INNER JOIN EMPRESALAB "
                                + "ON AGENDALABORATIVA.IdEmp=EMPRESALAB.IdEmp "
                                + "WHERE DataCadastro BETWEEN'" + dataInicial + "' "
                                + "AND'" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        jTabelaAgendamento.setVisible(true);
                        preencherTabelaAgendamento("SELECT * FROM AGENDALABORATIVA "
                                + "INNER JOIN EMPRESALAB "
                                + "ON AGENDALABORATIVA.IdEmp=EMPRESALAB.IdEmp "
                                + "WHERE DataCadastro BETWEEN'" + dataInicial + "' "
                                + "AND'" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDatasActionPerformed

    private void jTabelaAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAgendamentoMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaAgendamento.getValueAt(jTabelaAgendamento.getSelectedRow(), 0);
            jIDPesqAgenda.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtNovoInterno.setEnabled(true);
            jBtBuscarInterno.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtBuscarInterno.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            //
            limparCampos();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM AGENDALABORATIVA "
                        + "INNER JOIN EMPRESALAB "
                        + "ON AGENDALABORATIVA.IdEmp=EMPRESALAB.IdEmp "
                        + "WHERE IdAgenda='" + IdLanc + "'");
                conecta.rs.first();
                jIDAgenda.setText(String.valueOf(conecta.rs.getInt("IdAgenda")));
                jStatusLanc.setText(conecta.rs.getString("Statuslanc"));
                jDataCadastro.setDate(conecta.rs.getDate("DataCadastro"));
                jIdEmp.setText(conecta.rs.getString("IdEmp"));
                jRazaoSocial.setText(conecta.rs.getString("RazaoSocial"));
                jObservacao.setText(conecta.rs.getString("ObsLanc"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            preencherTabelaItens("SELECT * FROM ITENSAGENDALABORATIVA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSAGENDALABORATIVA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdAgenda='" + IdLanc + "'");
        }
    }//GEN-LAST:event_jTabelaAgendamentoMouseClicked

    private void jTabelaItensInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensInternosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeColaborador = "" + jTabelaItensInternos.getValueAt(jTabelaItensInternos.getSelectedRow(), 1);
            jNomeInterno.setText(nomeColaborador);
            idItem = "" + jTabelaItensInternos.getValueAt(jTabelaItensInternos.getSelectedRow(), 2);
            // Habilitar os botões
            jBtNovoInterno.setEnabled(!true);
            jBtAlterarInterno.setEnabled(true);
            jBtExcluirInterno.setEnabled(true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(true);
            jBtBuscarInterno.setEnabled(true);
            jBtAuditoriaItens.setEnabled(true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSAGENDALABORATIVA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSAGENDALABORATIVA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN DADOSPENAISINTERNOS "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=DADOSPENAISINTERNOS.IdInternoCrc "
                        + "WHERE NomeInternoCrc='" + jNomeInterno.getText() + "' "
                        + "AND IdAgenda='" + jIDAgenda.getText() + "'");
                conecta.rs.first();
                jIdInterno.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc"));
                jDataEntrada.setDate(conecta.rs.getDate("DataEntrada"));
                jComboBoxStatus.setSelectedItem(conecta.rs.getString("StatusInterno"));
                jComboBoxTipoEmpresa.setSelectedItem(conecta.rs.getString("TipoEmpresa"));
                jComboBoxTornozeleira.setSelectedItem(conecta.rs.getString("Pulseira"));
                idItem = conecta.rs.getString("IdItem"); // Coluna 2  
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                FotoInternoListaPassagem.setIcon(i);
                FotoInternoListaPassagem.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoInternoListaPassagem.getWidth(), FotoInternoListaPassagem.getHeight(), Image.SCALE_DEFAULT)));
                //
                jObservacaoInterno.setText(conecta.rs.getString("ObservacaoInterno"));
                //
                DiaSeg = conecta.rs.getInt("DiaSeg");
                if (DiaSeg == 1) {
                    jCheckBoxSeg.setSelected(true);
                } else if (DiaSeg == 0) {
                    jCheckBoxSeg.setSelected(!true);
                }
                DiaTer = conecta.rs.getInt("DiaTer");
                if (DiaTer == 1) {
                    jCheckBoxTer.setSelected(true);
                } else if (DiaTer == 0) {
                    jCheckBoxTer.setSelected(!true);
                }
                DiaQua = conecta.rs.getInt("DiaQua");
                if (DiaQua == 1) {
                    jCheckBoxQua.setSelected(true);
                } else if (DiaQua == 0) {
                    jCheckBoxQua.setSelected(!true);
                }
                DiaQui = conecta.rs.getInt("DiaQui");
                if (DiaQui == 1) {
                    jCheckBoxQui.setSelected(true);
                } else if (DiaQui == 0) {
                    jCheckBoxQui.setSelected(!true);
                }
                DiaSex = conecta.rs.getInt("DiaSex");
                if (DiaSex == 1) {
                    jCheckBoxSex.setSelected(true);
                } else if (DiaSex == 0) {
                    jCheckBoxSex.setSelected(!true);
                }
                DiaSab = conecta.rs.getInt("DiaSab");
                if (DiaSab == 1) {
                    jCheckBoxSab.setSelected(true);
                } else if (DiaSab == 0) {
                    jCheckBoxSab.setSelected(!true);
                }
                DiaDom = conecta.rs.getInt("DiaDom");
                if (DiaDom == 1) {
                    jCheckBoxDom.setSelected(true);
                } else if (DiaDom == 0) {
                    jCheckBoxDom.setSelected(!true);
                }
                // HORÁRIO DE SAÍDA
                jHoraSeg.setText(conecta.rs.getString("HoraSeg"));
                jHoraTer.setText(conecta.rs.getString("HoraTer"));
                jHoraQua.setText(conecta.rs.getString("HoraQua"));
                jHoraQui.setText(conecta.rs.getString("HoraQui"));
                jHoraSex.setText(conecta.rs.getString("HoraSex"));
                jHoraSab.setText(conecta.rs.getString("HoraSab"));
                jHoraDom.setText(conecta.rs.getString("HoraDom"));
                // HORÁRIO DE ENTRADA
                jHoraSegEnt.setText(conecta.rs.getString("HoraSegEnt"));
                jHoraTerEnt.setText(conecta.rs.getString("HoraTerEnt"));
                jHoraQuaEnt.setText(conecta.rs.getString("HoraQuaEnt"));
                jHoraQuiEnt.setText(conecta.rs.getString("HoraQuiEnt"));
                jHoraSexEnt.setText(conecta.rs.getString("HoraSexEnt"));
                jHoraSabEnt.setText(conecta.rs.getString("HoraSabEnt"));
                jHoraDomEnt.setText(conecta.rs.getString("HoraDomEnt"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaItensInternosMouseClicked

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM AGENDALABORATIVA WHERE IdAgenda='" + jIDAgenda.getText() + "'");
            conecta.rs.first();
            jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtBuscarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarInternoActionPerformed
        // TODO add your handling code here
        TelaBtBuscarInternoLabor objBtBuscarInterno = new TelaBtBuscarInternoLabor();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objBtBuscarInterno);
        objBtBuscarInterno.show();
    }//GEN-LAST:event_jBtBuscarInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaAgendamento.setVisible(true);
            this.preencherTabelaAgendamento("SELECT * FROM AGENDALABORATIVA "
                    + "INNER JOIN EMPRESALAB "
                    + "ON AGENDALABORATIVA.IdEmp=EMPRESALAB.IdEmp");
        } else {
            jtotalRegistros.setText("");
            limparTabelaAgendamento();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaListaPassagem objAudListaPass = new TelaAuditoriaListaPassagem();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objAudListaPass);
        objAudListaPass.show();
    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jBtAuditoriaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaItensActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensListaPassagem objAudItensLista = new TelaAuditoriaItensListaPassagem();
        TelaModuloTerapiaOcupacional.jPainelTerapia.add(objAudItensLista);
        objAudItensLista.show();
    }//GEN-LAST:event_jBtAuditoriaItensActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoInternoListaPassagem;
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarInterno;
    private javax.swing.JButton jBtAuditoriaItens;
    private javax.swing.JButton jBtAuditoriaManu;
    public static javax.swing.JButton jBtBuscarInterno;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarInterno;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirInterno;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtID;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoInterno;
    private javax.swing.JButton jBtPesqDatas;
    private javax.swing.JButton jBtPesqEmpresas;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtPesqNomeEmpresa;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarInterno;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JCheckBox jCheckBoxDom;
    public static javax.swing.JCheckBox jCheckBoxQua;
    public static javax.swing.JCheckBox jCheckBoxQui;
    public static javax.swing.JCheckBox jCheckBoxSab;
    public static javax.swing.JCheckBox jCheckBoxSeg;
    public static javax.swing.JCheckBox jCheckBoxSex;
    public static javax.swing.JCheckBox jCheckBoxTer;
    public static javax.swing.JComboBox jComboBoxStatus;
    private javax.swing.JComboBox jComboBoxTipoEmpresa;
    private javax.swing.JComboBox<String> jComboBoxTornozeleira;
    private com.toedter.calendar.JDateChooser jDataCadastro;
    public static com.toedter.calendar.JDateChooser jDataEntrada;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JFormattedTextField jHoraDom;
    public static javax.swing.JFormattedTextField jHoraDomEnt;
    public static javax.swing.JFormattedTextField jHoraQua;
    public static javax.swing.JFormattedTextField jHoraQuaEnt;
    public static javax.swing.JFormattedTextField jHoraQui;
    public static javax.swing.JFormattedTextField jHoraQuiEnt;
    public static javax.swing.JFormattedTextField jHoraSab;
    public static javax.swing.JFormattedTextField jHoraSabEnt;
    public static javax.swing.JFormattedTextField jHoraSeg;
    public static javax.swing.JFormattedTextField jHoraSegEnt;
    public static javax.swing.JFormattedTextField jHoraSex;
    public static javax.swing.JFormattedTextField jHoraSexEnt;
    public static javax.swing.JFormattedTextField jHoraTer;
    public static javax.swing.JFormattedTextField jHoraTerEnt;
    public static javax.swing.JTextField jIDAgenda;
    private javax.swing.JTextField jIDPesqAgenda;
    public static javax.swing.JTextField jIdEmp;
    public static javax.swing.JTextField jIdInterno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInterno;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JTextArea jObservacaoInterno;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesqNomeEmpresa;
    public static javax.swing.JTextField jRazaoSocial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaAgendamento;
    private javax.swing.JTable jTabelaItensInternos;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jPesqNomeEmpresa.setDocument(new LimiteDigitos(50));
        jObservacaoInterno.setDocument(new LimiteDigitosAlfa(60));
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
        try {
            // HORÁRIO DE SAÍDA
            MaskFormatter horaSeg = new MaskFormatter("##:##");
            jHoraSeg.setFormatterFactory(new DefaultFormatterFactory(horaSeg));
            //
            MaskFormatter horaTer = new MaskFormatter("##:##");
            jHoraTer.setFormatterFactory(new DefaultFormatterFactory(horaTer));
            //
            MaskFormatter horaQua = new MaskFormatter("##:##");
            jHoraQua.setFormatterFactory(new DefaultFormatterFactory(horaQua));
            //
            MaskFormatter horaQui = new MaskFormatter("##:##");
            jHoraQui.setFormatterFactory(new DefaultFormatterFactory(horaQui));
            //
            MaskFormatter horaSex = new MaskFormatter("##:##");
            jHoraSex.setFormatterFactory(new DefaultFormatterFactory(horaSex));
            //
            MaskFormatter horaSab = new MaskFormatter("##:##");
            jHoraSab.setFormatterFactory(new DefaultFormatterFactory(horaSab));
            //
            MaskFormatter horaDom = new MaskFormatter("##:##");
            jHoraDom.setFormatterFactory(new DefaultFormatterFactory(horaDom));
            // HORÁRIO DE ENTRADA
            MaskFormatter horaSegEnt = new MaskFormatter("##:##");
            jHoraSegEnt.setFormatterFactory(new DefaultFormatterFactory(horaSegEnt));
            //
            MaskFormatter horaTerEnt = new MaskFormatter("##:##");
            jHoraTerEnt.setFormatterFactory(new DefaultFormatterFactory(horaTerEnt));
            //
            MaskFormatter horaQuaEnt = new MaskFormatter("##:##");
            jHoraQuaEnt.setFormatterFactory(new DefaultFormatterFactory(horaQuaEnt));
            //
            MaskFormatter horaQuiEnt = new MaskFormatter("##:##");
            jHoraQuiEnt.setFormatterFactory(new DefaultFormatterFactory(horaQuiEnt));
            //
            MaskFormatter horaSexEnt = new MaskFormatter("##:##");
            jHoraSexEnt.setFormatterFactory(new DefaultFormatterFactory(horaSexEnt));
            //
            MaskFormatter horaSabEnt = new MaskFormatter("##:##");
            jHoraSabEnt.setFormatterFactory(new DefaultFormatterFactory(horaSabEnt));
            //
            MaskFormatter horaDomEnt = new MaskFormatter("##:##");
            jHoraDomEnt.setFormatterFactory(new DefaultFormatterFactory(horaDomEnt));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível formatar os campos de hora.");
        }
    }

    public void corCampos() {
        jIDAgenda.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataCadastro.setBackground(Color.white);
        jIdEmp.setBackground(Color.white);
        jRazaoSocial.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        jIdInterno.setBackground(Color.white);
        jNomeInterno.setBackground(Color.white);
        jObservacaoInterno.setBackground(Color.white);
        jComboBoxStatus.setBackground(Color.white);
        jComboBoxTornozeleira.setBackground(Color.white);
        //   jSituacao.setBackground(Color.white);
        jDataEntrada.setBackground(Color.white);
        // HORARIO DE SAIDA
        jHoraSeg.setBackground(Color.white);
        jHoraTer.setBackground(Color.white);
        jHoraQua.setBackground(Color.white);
        jHoraQui.setBackground(Color.white);
        jHoraSex.setBackground(Color.white);
        jHoraSab.setBackground(Color.white);
        jHoraDom.setBackground(Color.white);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setBackground(Color.white);
        jHoraTerEnt.setBackground(Color.white);
        jHoraQuaEnt.setBackground(Color.white);
        jHoraQuiEnt.setBackground(Color.white);
        jHoraSexEnt.setBackground(Color.white);
        jHoraSabEnt.setBackground(Color.white);
        jHoraDomEnt.setBackground(Color.white);
    }

    public void bloquearCampos() {
        jDataCadastro.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jComboBoxStatus.setEnabled(!true);
        jComboBoxTipoEmpresa.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        jComboBoxTornozeleira.setEnabled(!true);
        //
        jCheckBoxSeg.setEnabled(!true);
        jCheckBoxTer.setEnabled(!true);
        jCheckBoxQua.setEnabled(!true);
        jCheckBoxQui.setEnabled(!true);
        jCheckBoxSex.setEnabled(!true);
        jCheckBoxSab.setEnabled(!true);
        jCheckBoxDom.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
    }

    public void Novo() {
        jIDAgenda.setText("");
        jStatusLanc.setText("ABERTO");
        jDataCadastro.setCalendar(Calendar.getInstance());
        jIdEmp.setText("");
        jRazaoSocial.setText("");
        jObservacao.setText("");
        //
        jDataCadastro.setEnabled(true);
        jBtPesqEmpresas.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jIdInterno.setText("");
        FotoInternoListaPassagem.setIcon(null);
        jNomeInterno.setText("");
        jDataEntrada.setDate(null);
        jComboBoxStatus.setSelectedItem("Selecione...");
        jComboBoxTipoEmpresa.setSelectedItem("Selecione...");
        jComboBoxTornozeleira.setSelectedItem("Selecione...");
        jObservacaoInterno.setText("");
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        limparTabelaInternos();
    }

    public void Alterar() {
        //       
        jDataCadastro.setEnabled(true);
        jBtPesqEmpresas.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Excluir() {
        jIDAgenda.setText("");
        jStatusLanc.setText("");
        jDataCadastro.setDate(null);
        jRazaoSocial.setText("");
        jObservacao.setText("");
        //       
        jDataCadastro.setEnabled(!true);
        jBtPesqEmpresas.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
    }

    public void Salvar() {
        //       
        jDataCadastro.setEnabled(!true);
        jBtPesqEmpresas.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void Cancelar() {

        if (jIDAgenda.getText().equals("")) {
            jStatusLanc.setText("");
            jDataCadastro.setDate(null);
            jIdEmp.setText("");
            jRazaoSocial.setText("");
            jObservacao.setText("");
            jBtBuscarInterno.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            limparTabelaInternos();
            //
            jDataCadastro.setEnabled(!true);
            jBtPesqEmpresas.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
        } else {
            jDataCadastro.setEnabled(!true);
            jBtPesqEmpresas.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(true);
        }
    }

    public void Finalizar() {
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objAgenda.setStatusLanc(statusLanc);
            objAgenda.setIdAgenda(Integer.parseInt(jIDAgenda.getText()));
            control.finalizarAgenda(objAgenda);
            jStatusLanc.setText("FINALIZADO");
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            //
            jBtPesqInterno.setEnabled(!true);
            jBtPesqNomeEmpresa.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoInterno.setEnabled(!true);
            jBtAlterarInterno.setEnabled(!true);
            jBtExcluirInterno.setEnabled(!true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(!true);
        }
    }

    public void NovoInterno() {
        jIdInterno.setText("");
        jDataEntrada.setDate(null);
        FotoInternoListaPassagem.setIcon(null);
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jComboBoxStatus.setSelectedItem("Selecione...");
        jComboBoxTipoEmpresa.setSelectedItem("Selecione...");
        jComboBoxTornozeleira.setSelectedItem("Selecione...");
        //
        jCheckBoxSeg.setSelected(!true);
        jCheckBoxTer.setSelected(!true);
        jCheckBoxQua.setSelected(!true);
        jCheckBoxQui.setSelected(!true);
        jCheckBoxSex.setSelected(!true);
        jCheckBoxSab.setSelected(!true);
        jCheckBoxDom.setSelected(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        //
        jBtPesqInterno.setEnabled(true);
        jObservacaoInterno.setEnabled(true);
        jComboBoxStatus.setEnabled(true);
        jComboBoxTipoEmpresa.setEnabled(true);
        jComboBoxTornozeleira.setEnabled(true);
        //        
        jCheckBoxSeg.setEnabled(true);
        jCheckBoxTer.setEnabled(true);
        jCheckBoxQua.setEnabled(true);
        jCheckBoxQui.setEnabled(true);
        jCheckBoxSex.setEnabled(true);
        jCheckBoxSab.setEnabled(true);
        jCheckBoxDom.setEnabled(true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(true);
        jHoraTer.setEnabled(true);
        jHoraQua.setEnabled(true);
        jHoraQui.setEnabled(true);
        jHoraSex.setEnabled(true);
        jHoraSab.setEnabled(true);
        jHoraDom.setEnabled(true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(true);
        jHoraTerEnt.setEnabled(true);
        jHoraQuaEnt.setEnabled(true);
        jHoraQuiEnt.setEnabled(true);
        jHoraSexEnt.setEnabled(true);
        jHoraSabEnt.setEnabled(true);
        jHoraDomEnt.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        jBtBuscarInterno.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
    }

    public void AlterarInterno() {
        jBtPesqInterno.setEnabled(true);
        jObservacaoInterno.setEnabled(true);
        jComboBoxStatus.setEnabled(true);
        jComboBoxTipoEmpresa.setEnabled(true);
        jComboBoxTornozeleira.setEnabled(true);
        //        
        jCheckBoxSeg.setEnabled(true);
        jCheckBoxTer.setEnabled(true);
        jCheckBoxQua.setEnabled(true);
        jCheckBoxQui.setEnabled(true);
        jCheckBoxSex.setEnabled(true);
        jCheckBoxSab.setEnabled(true);
        jCheckBoxDom.setEnabled(true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(true);
        jHoraTer.setEnabled(true);
        jHoraQua.setEnabled(true);
        jHoraQui.setEnabled(true);
        jHoraSex.setEnabled(true);
        jHoraSab.setEnabled(true);
        jHoraDom.setEnabled(true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(true);
        jHoraTerEnt.setEnabled(true);
        jHoraQuaEnt.setEnabled(true);
        jHoraQuiEnt.setEnabled(true);
        jHoraSexEnt.setEnabled(true);
        jHoraSabEnt.setEnabled(true);
        jHoraDomEnt.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        jBtBuscarInterno.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
    }

    public void ExcluirInterno() {
        jIdInterno.setText("");
        jDataEntrada.setDate(null);
        FotoInternoListaPassagem.setIcon(null);
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jComboBoxStatus.setSelectedItem("Selecione");
        jComboBoxTipoEmpresa.setSelectedItem("Selecione...");
        jComboBoxTornozeleira.setSelectedItem("Selecione...");
        //
        jCheckBoxSeg.setSelected(!true);
        jCheckBoxTer.setSelected(!true);
        jCheckBoxQua.setSelected(!true);
        jCheckBoxQui.setSelected(!true);
        jCheckBoxSex.setSelected(!true);
        jCheckBoxSab.setSelected(!true);
        jCheckBoxDom.setSelected(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        //
        jBtPesqInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        jComboBoxStatus.setEnabled(!true);
        jComboBoxTipoEmpresa.setEnabled(!true);
        jComboBoxTornozeleira.setEnabled(!true);
        //        
        jCheckBoxSeg.setEnabled(!true);
        jCheckBoxTer.setEnabled(!true);
        jCheckBoxQua.setEnabled(!true);
        jCheckBoxQui.setEnabled(!true);
        jCheckBoxSex.setEnabled(!true);
        jCheckBoxSab.setEnabled(!true);
        jCheckBoxDom.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
        jBtBuscarInterno.setEnabled(true);
        jBtFinalizar.setEnabled(true);
    }

    public void SalvarInterno() {
        jIdInterno.setText("");
        jDataEntrada.setDate(null);
        FotoInternoListaPassagem.setIcon(null);
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jComboBoxStatus.setSelectedItem("Selecione...");
        jComboBoxTipoEmpresa.setSelectedItem("Selecione...");
        jComboBoxTornozeleira.setSelectedItem("Selecione...");
        //
        jCheckBoxSeg.setSelected(!true);
        jCheckBoxTer.setSelected(!true);
        jCheckBoxQua.setSelected(!true);
        jCheckBoxQui.setSelected(!true);
        jCheckBoxSex.setSelected(!true);
        jCheckBoxSab.setSelected(!true);
        jCheckBoxDom.setSelected(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        //
        jBtPesqInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        jComboBoxStatus.setEnabled(!true);
        jComboBoxTipoEmpresa.setEnabled(!true);
        jComboBoxTornozeleira.setEnabled(!true);
        //        
        jCheckBoxSeg.setEnabled(!true);
        jCheckBoxTer.setEnabled(!true);
        jCheckBoxQua.setEnabled(!true);
        jCheckBoxQui.setEnabled(!true);
        jCheckBoxSex.setEnabled(!true);
        jCheckBoxSab.setEnabled(!true);
        jCheckBoxDom.setEnabled(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
        jBtBuscarInterno.setEnabled(true);
        jBtFinalizar.setEnabled(true);
    }

    public void CancelarInterno() {
        jIdInterno.setText("");
        jDataEntrada.setDate(null);
        FotoInternoListaPassagem.setIcon(null);
        jNomeInterno.setText("");
        jObservacaoInterno.setText("");
        jComboBoxStatus.setSelectedItem("Selecione...");
        jComboBoxTipoEmpresa.setSelectedItem("Selecione...");
        jComboBoxTornozeleira.setSelectedItem("Selecione...");
        //
        jCheckBoxSeg.setSelected(!true);
        jCheckBoxTer.setSelected(!true);
        jCheckBoxQua.setSelected(!true);
        jCheckBoxQui.setSelected(!true);
        jCheckBoxSex.setSelected(!true);
        jCheckBoxSab.setSelected(!true);
        jCheckBoxDom.setSelected(!true);
        // HORARIO DE SAIDA
        jHoraSeg.setText("00:00");
        jHoraTer.setText("00:00");
        jHoraQua.setText("00:00");
        jHoraQui.setText("00:00");
        jHoraSex.setText("00:00");
        jHoraSab.setText("00:00");
        jHoraDom.setText("00:00");
        //
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        // HORARIO DE ENTRADA
        jHoraSegEnt.setText("00:00");
        jHoraTerEnt.setText("00:00");
        jHoraQuaEnt.setText("00:00");
        jHoraQuiEnt.setText("00:00");
        jHoraSexEnt.setText("00:00");
        jHoraSabEnt.setText("00:00");
        jHoraDomEnt.setText("00:00");
        //
        jHoraSegEnt.setEnabled(!true);
        jHoraTerEnt.setEnabled(!true);
        jHoraQuaEnt.setEnabled(!true);
        jHoraQuiEnt.setEnabled(!true);
        jHoraSexEnt.setEnabled(!true);
        jHoraSabEnt.setEnabled(!true);
        jHoraDomEnt.setEnabled(!true);
        //
        jBtPesqInterno.setEnabled(!true);
        jObservacaoInterno.setEnabled(!true);
        jComboBoxStatus.setEnabled(!true);
        jComboBoxTipoEmpresa.setEnabled(!true);
        jComboBoxTornozeleira.setEnabled(!true);
        //        
        jCheckBoxSeg.setEnabled(!true);
        jCheckBoxTer.setEnabled(!true);
        jCheckBoxQua.setEnabled(!true);
        jCheckBoxQui.setEnabled(!true);
        jCheckBoxSex.setEnabled(!true);
        jCheckBoxSab.setEnabled(!true);
        jCheckBoxDom.setEnabled(!true);
        jHoraSeg.setEnabled(!true);
        jHoraTer.setEnabled(!true);
        jHoraQua.setEnabled(!true);
        jHoraQui.setEnabled(!true);
        jHoraSex.setEnabled(!true);
        jHoraSab.setEnabled(!true);
        jHoraDom.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
        jBtBuscarInterno.setEnabled(true);
        jBtFinalizar.setEnabled(true);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM AGENDALABORATIVA");
            conecta.rs.last();
            jIDAgenda.setText(conecta.rs.getString("IdAgenda"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o ID do lancamento.\nERRO: " + ex);
        }
    }

    public void limparCampos() {
        jIdInterno.setText("");
        FotoInternoListaPassagem.setIcon(null);
        jNomeInterno.setText("");
        jDataEntrada.setDate(null);
        jComboBoxStatus.setSelectedItem(null);
        jComboBoxTipoEmpresa.setSelectedItem(null);
        jObservacaoInterno.setText("");
    }

    public void preencherTabelaAgendamento(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Razão Social", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataCadastro = conecta.rs.getString("DataCadastro");
                String diae = dataCadastro.substring(8, 10);
                String mese = dataCadastro.substring(5, 7);
                String anoe = dataCadastro.substring(0, 4);
                dataCadastro = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdAgenda"), dataCadastro, conecta.rs.getString("StatusLanc"), conecta.rs.getString("RazaoSocial"), conecta.rs.getString("ObsLanc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendamento.setModel(modelo);
        jTabelaAgendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgendamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaAgendamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAgendamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(3).setPreferredWidth(335);
        jTabelaAgendamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(4).setPreferredWidth(300);
        jTabelaAgendamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgendamento.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendamento.setAutoResizeMode(jTabelaAgendamento.AUTO_RESIZE_OFF);
        jTabelaAgendamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaColunasTabelaSolicitantes();
        conecta.desconecta();
    }

    public void alinhaColunasTabelaSolicitantes() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAgendamento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAgendamento.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaAgendamento.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparTabelaAgendamento() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Razão Social", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendamento.setModel(modelo);
        jTabelaAgendamento.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgendamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaAgendamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaAgendamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(3).setPreferredWidth(335);
        jTabelaAgendamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendamento.getColumnModel().getColumn(4).setPreferredWidth(300);
        jTabelaAgendamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgendamento.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendamento.setAutoResizeMode(jTabelaAgendamento.AUTO_RESIZE_OFF);
        jTabelaAgendamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno ", "Status", "Situação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("StatusInterno"), conecta.rs.getString("SituacaoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInternos.setModel(modelo);
        jTabelaItensInternos.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItensInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInternos.getColumnModel().getColumn(1).setPreferredWidth(270);
        jTabelaItensInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaItensInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInternos.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTabelaItensInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInternos.setAutoResizeMode(jTabelaItensInternos.AUTO_RESIZE_OFF);
        jTabelaItensInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinhaColunasTabelaInternos();
        conecta.desconecta();
    }

    public void alinhaColunasTabelaInternos() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensInternos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparTabelaInternos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno ", "Status", "Situação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInternos.setModel(modelo);
        jTabelaItensInternos.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItensInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInternos.getColumnModel().getColumn(1).setPreferredWidth(270);
        jTabelaItensInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaItensInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInternos.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTabelaItensInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInternos.setAutoResizeMode(jTabelaItensInternos.AUTO_RESIZE_OFF);
        jTabelaItensInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSAGENDALABORATIVA WHERE IdAgenda='" + jIDAgenda.getText() + "'");
            conecta.rs.first();
            codAgenda = conecta.rs.getString("IdAgenda");
            if (jIDAgenda.getText().equals(codAgenda)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objAgenda.setIdAgenda(Integer.parseInt(jIDAgenda.getText()));
                control.excluirAgenda(objAgenda);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDAgenda.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDAgenda.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserTO = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserTO + "'");
            conecta.rs.first();
            codigoUserGroupTO = conecta.rs.getInt("IdUsuario");
            codigoGrupoTO = conecta.rs.getInt("IdGrupo");
            nomeGrupoTO = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserTO + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoTO = conecta.rs.getInt("IdUsuario");
            codAbrirTO = conecta.rs.getInt("Abrir");
            codIncluirTO = conecta.rs.getInt("Incluir");
            codAlterarTO = conecta.rs.getInt("Alterar");
            codExcluirTO = conecta.rs.getInt("Excluir");
            codGravarTO = conecta.rs.getInt("Gravar");
            codConsultarTO = conecta.rs.getInt("Consultar");
            nomeTelaTO = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
