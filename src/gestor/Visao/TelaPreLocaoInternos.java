/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControlePreLocacao;
import gestor.Controle.ControlePreLocacaoInternos;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensPreLocacao;
import gestor.Modelo.LogSistema;
import gestor.Modelo.PreLocacao;
import static gestor.Visao.TelaLoginSenha.descricaoUnidade;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloTriagem.codigoUserGroupTRI;
import static gestor.Visao.TelaModuloTriagem.codigoGrupoTRI;
import static gestor.Visao.TelaModuloTriagem.codAbrirTRI;
import static gestor.Visao.TelaModuloTriagem.codGravarTRI;
import static gestor.Visao.TelaModuloTriagem.codConcultarTRI;
import static gestor.Visao.TelaModuloTriagem.codAlterarTRI;
import static gestor.Visao.TelaModuloTriagem.codExcluirTRI;
import static gestor.Visao.TelaModuloTriagem.codIncluirTRI;
import static gestor.Visao.TelaModuloTriagem.codUserAcessoTRI;
import static gestor.Visao.TelaModuloTriagem.codigoUserTRI;
import static gestor.Visao.TelaModuloTriagem.nomeGrupoTRI;
import static gestor.Visao.TelaModuloTriagem.nomeTelaTRI;
import static gestor.Visao.TelaModuloTriagem.telaPreLocacaoInternosIntTRI;
import static gestor.Visao.TelaModuloTriagem.telaPreLocacaoInternosManuTRI;
import static gestor.Visao.TelaPesqInternoEntradaCrcPreLocacao.jRegistroEntrada;
import static gestor.Visao.TelaPesqInternoEntradaCrcPreLocacaoVarios.jRegistroEntradaVarios;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ronal
 */
public class TelaPreLocaoInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    PreLocacao objPreLocacao = new PreLocacao();
    ItensPreLocacao objItensPreLocacao = new ItensPreLocacao();
    //
    ControlePreLocacao control = new ControlePreLocacao();
    ControlePreLocacaoInternos controle = new ControlePreLocacaoInternos();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "TRIAGEM:Pré-Locação de Internos:Manutenção";
    String nomeModuloTela2 = "TRIAGEM:Pré-Locação de Internos:Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String dataBrasil;
    String tipo = "Entradas"; // Tipo de operação (ENTRADA)
    String situacao = "ENTRADA NA UNIDADE"; // Máximo 19 caracteres    
    String codEntrada;
    String dataInicial;
    String dataFinal;
    String statusEntrada = "ABERTO";
    String caminho;
    public int codEnt;
    int count = 0;
    int count1 = 0;
    public static String idItem;
    int botaoRBu = 0;
    int codigoInternoCrc = 0;
    String confirmacao = "Não";
    String confirmaUtil = "Sim"; // CONFIRMA O USO DO REGISTRO NA TABELA ITENSENTRADA.
    //
    String preLocacaoBP1 = "";
    String preLocacaoBP2 = "";

    /**
     * Creates new form TelaPreLocaoInternos
     */
    public static TelaExportarPreLocacao telaExpPreLocacao;

    public TelaPreLocaoInternos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    public void ExportarInternos() {
        telaExpPreLocacao = new TelaExportarPreLocacao(this, true);
        telaExpPreLocacao.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaInternosExportados = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPesquisarInterno = new javax.swing.JTextField();
        jBtPesquisarInterno = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCodigoReg = new javax.swing.JTextField();
        jStatusReg = new javax.swing.JTextField();
        jObservacaoReg = new javax.swing.JTextField();
        jDataReg = new com.toedter.calendar.JDateChooser();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jIdInternoReg = new javax.swing.JTextField();
        jNomeInternoReg = new javax.swing.JTextField();
        jComboBoxPavilhaoReg = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jDocEntrada = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaItensInterno = new javax.swing.JTable();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jtotalRegistros1 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jFotoInternoExportado = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jBtNovoInterno = new javax.swing.JButton();
        jBtAlterarInterno = new javax.swing.JButton();
        jBtExcluirInterno = new javax.swing.JButton();
        jBtSalvarInterno = new javax.swing.JButton();
        jBtCancelarInterno = new javax.swing.JButton();
        jBtSair1 = new javax.swing.JButton();
        jBtBuscarInternos = new javax.swing.JButton();
        jBtAuditoriaInterno = new javax.swing.JButton();
        jBtExportarInternos = new javax.swing.JButton();
        jBtImpressao = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jBtFinalizar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jRBtUmaUm = new javax.swing.JRadioButton();
        jRBtVarios = new javax.swing.JRadioButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));
        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Pré-Locação de Internos :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTabelaInternosExportados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaInternosExportados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Nome do Interno"
            }
        ));
        jTabelaInternosExportados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaInternosExportadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaInternosExportados);
        if (jTabelaInternosExportados.getColumnModel().getColumnCount() > 0) {
            jTabelaInternosExportados.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaInternosExportados.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaInternosExportados.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaInternosExportados.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaInternosExportados.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaInternosExportados.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaInternosExportados.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaInternosExportados.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Nome do Interno");

        jPesquisarInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesquisarInterno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtPesquisarInterno.setForeground(new java.awt.Color(0, 153, 0));
        jBtPesquisarInterno.setText("Pesquisar");
        jBtPesquisarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarInternoActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPesquisarInterno)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jBtPesquisarInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodos)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesquisarInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtPesquisarInterno)
                    .addComponent(jCheckBoxTodos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Observação");

        jCodigoReg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoReg.setEnabled(false);

        jStatusReg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusReg.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jStatusReg.setEnabled(false);

        jObservacaoReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacaoReg.setEnabled(false);

        jDataReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataReg.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jObservacaoReg)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jCodigoReg, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(244, 244, 244)
                                        .addComponent(jLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jStatusReg)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDataReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCodigoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataReg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jObservacaoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar Registro");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir Registro");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Salvar Registro");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair da tela");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Código");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Nome do Interno");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Pavilhão");

        jIdInternoReg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoReg.setEnabled(false);

        jNomeInternoReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoReg.setEnabled(false);

        jComboBoxPavilhaoReg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxPavilhaoReg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione..." }));
        jComboBoxPavilhaoReg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxPavilhaoReg.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Documento");

        jDocEntrada.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDocEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDocEntrada.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jIdInternoReg, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jDocEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxPavilhaoReg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jNomeInternoReg)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDocEntrada, jIdInternoReg});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jIdInternoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeInternoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPavilhaoReg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDocEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDocEntrada, jIdInternoReg});

        jTabelaItensInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensInterno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Doc.", "Código", "Nome do Interno", "Pavilhão"
            }
        ));
        jTabelaItensInterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensInternoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaItensInterno);
        if (jTabelaItensInterno.getColumnModel().getColumnCount() > 0) {
            jTabelaItensInterno.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(1).setMinWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(1).setMaxWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(2).setMinWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(2).setMaxWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaItensInterno.getColumnModel().getColumn(3).setMaxWidth(300);
            jTabelaItensInterno.getColumnModel().getColumn(4).setMinWidth(250);
            jTabelaItensInterno.getColumnModel().getColumn(4).setMaxWidth(250);
        }

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 291, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel64.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel64))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel64)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoExportado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoExportado, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovoInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoInterno.setEnabled(false);
        jBtNovoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoInternoActionPerformed(evt);
            }
        });

        jBtAlterarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarInterno.setEnabled(false);
        jBtAlterarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarInternoActionPerformed(evt);
            }
        });

        jBtExcluirInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirInterno.setEnabled(false);
        jBtExcluirInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirInternoActionPerformed(evt);
            }
        });

        jBtSalvarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarInterno.setEnabled(false);
        jBtSalvarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarInternoActionPerformed(evt);
            }
        });

        jBtCancelarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarInterno.setEnabled(false);
        jBtCancelarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarInternoActionPerformed(evt);
            }
        });

        jBtSair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSair1ActionPerformed(evt);
            }
        });

        jBtBuscarInternos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtBuscarInternos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtBuscarInternosActionPerformed(evt);
            }
        });

        jBtAuditoriaInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaInterno.setEnabled(false);
        jBtAuditoriaInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaInternoActionPerformed(evt);
            }
        });

        jBtExportarInternos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtExportarInternos.setForeground(new java.awt.Color(0, 153, 0));
        jBtExportarInternos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtExportarInternos.setText("Exportar");
        jBtExportarInternos.setToolTipText("Exportar Registros para Pavilhão (s)");
        jBtExportarInternos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExportarInternosActionPerformed(evt);
            }
        });

        jBtImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressao.setToolTipText("Imprimir Relatório");
        jBtImpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImpressaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBtExportarInternos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jBtExcluirInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvarInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtImpressao))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jBtNovoInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterarInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtBuscarInternos))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jBtCancelarInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAuditoriaInterno)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarInterno, jBtAuditoriaInterno, jBtBuscarInternos, jBtCancelarInterno, jBtExcluirInterno, jBtImpressao, jBtNovoInterno, jBtSair1, jBtSalvarInterno});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAlterarInterno)
                    .addComponent(jBtNovoInterno)
                    .addComponent(jBtBuscarInternos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtExcluirInterno)
                    .addComponent(jBtSalvarInterno)
                    .addComponent(jBtImpressao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtCancelarInterno)
                    .addComponent(jBtAuditoriaInterno)
                    .addComponent(jBtSair1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExportarInternos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarInterno, jBtAuditoriaInterno, jBtBuscarInternos, jBtCancelarInterno, jBtExcluirInterno, jBtImpressao, jBtNovoInterno, jBtSair1, jBtSalvarInterno});

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jPanel36.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jBtFinalizar.setForeground(new java.awt.Color(204, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setToolTipText("Finalizar Registro");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        buttonGroup.add(jRBtUmaUm);
        jRBtUmaUm.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtUmaUm.setForeground(new java.awt.Color(204, 0, 0));
        jRBtUmaUm.setText("Uma a Um");
        jRBtUmaUm.setEnabled(false);

        buttonGroup.add(jRBtVarios);
        jRBtVarios.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRBtVarios.setForeground(new java.awt.Color(0, 0, 255));
        jRBtVarios.setText("Vários");
        jRBtVarios.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jRBtUmaUm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBtVarios)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRBtVarios)
                    .addComponent(jRBtUmaUm))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtFinalizar)
                        .addGap(33, 33, 33)
                        .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jBtAuditoria)
                                    .addComponent(jBtSair)
                                    .addComponent(jBtCancelar)
                                    .addComponent(jBtSalvar)
                                    .addComponent(jBtExcluir)
                                    .addComponent(jBtAlterar)
                                    .addComponent(jBtNovo)
                                    .addComponent(jBtFinalizar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSair, jBtSalvar});

        setBounds(250, 30, 955, 454);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesquisarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarInternoActionPerformed
        // TODO add your handling code here:
        flag = 1;
        count = 0;
        if (jPesquisarInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para ppesquisa.");
        } else {
            preencherPreLocacao("SELECT * FROM PRE_LOCACAO_INTERNOS "
                    + "INNER JOIN ITENS_PRE_LOCACAO_INTERNOS "
                    + "ON PRE_LOCACAO_INTERNOS.CodigoReg=ITENS_PRE_LOCACAO_INTERNOS.CodigoReg "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE PRONTUARIOSCRC.NomeInternoCrc LIKE'%" + jPesquisarInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesquisarInternoActionPerformed

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        count = 0;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherPreLocacaoTodos("SELECT * FROM PRE_LOCACAO_INTERNOS");
        } else {
            jtotalRegistros.setText("");
            limparTabelaEntradas();
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosManuTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosManuTRI) && codIncluirTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 1;
            limparTodosCampos();
            bloquearBotoes();
            Novo();
            corCampos();
            limparTabelaItens();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosManuTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosManuTRI) && codAlterarTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            objPreLocacao.setStatusReg(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                bloquearBotoes();
                Alterar();
                corCampos();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosManuTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosManuTRI) && codExcluirTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            objPreLocacao.setStatusReg(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse internos não poderá ser excluida, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItens();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosManuTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosManuTRI) && codExcluirTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            if (jDataReg.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do Registro.");
            } else {
                objPreLocacao.setStatusReg(jStatusReg.getText());
                objPreLocacao.setDataReg(jDataReg.getDate());
                objPreLocacao.setObservacao(jObservacaoReg.getText());
            }
            if (acao == 1) {
                objPreLocacao.setUsuarioInsert(nameUser);
                objPreLocacao.setDataInsert(dataModFinal);
                objPreLocacao.setHorarioInsert(horaMov);
                control.incluirPreLocacao(objPreLocacao);
                buscarCodigo();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso, será necessário\nincluir os internos na aba (INTERNOS)\npara que possa ser registrado a movimentação.");
            }
            if (acao == 2) {
                objPreLocacao.setUsuarioUp(nameUser);
                objPreLocacao.setDataUp(dataModFinal);
                objPreLocacao.setHorarioUp(horaMov);
                objPreLocacao.setCodigoReg(Integer.valueOf(jCodigoReg.getText()));
                control.alterarPreLocacao(objPreLocacao);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                bloquearTodosCampos();
                bloquearBotoes();
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso, será necessário\nincluir os internos na aba (INTERNOS)\npara que possa ser registrado a movimentação.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        Integer rows = jTabelaItensInterno.getModel().getRowCount();
        if (rows != 0) {
            try {
                conecta.abrirConexao();
                conecta.executaSQL("SELECT * FROM PRE_LOCACAO_INTERNOS "
                        + "WHERE CodigoReg='" + jCodigoReg.getText() + "'");
                conecta.rs.first();
                jStatusReg.setText(conecta.rs.getString("StatusReg"));
                if (jStatusReg.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Registro já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
            }
            conecta.desconecta();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Não é possível finalizado esse registro, a tabela de internos está vazia.");
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaPreLocacaoInternos objAudiPre = new TelaAuditoriaPreLocacaoInternos();
        TelaModuloTriagem.jPainelTriagem.add(objAudiPre);
        objAudiPre.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtNovoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosIntTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosIntTRI) && codIncluirTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            objPreLocacao.setStatusReg(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                bloquearBotoes();
                bloquearTodosCampos();
                NovoInterno();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtNovoInternoActionPerformed

    private void jBtAlterarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosIntTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosIntTRI) && codAlterarTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            objPreLocacao.setStatusReg(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                bloquearBotoes();
                bloquearTodosCampos();
                AlterarInterno();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtAlterarInternoActionPerformed

    private void jBtExcluirInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosIntTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosIntTRI) && codExcluirTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objPreLocacao.setStatusReg(jStatusReg.getText());
            if (jStatusReg.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  interno não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o INTERNO selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensPreLocacao.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensPreLocacaoInternos(objItensPreLocacao);
                    //
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    bloquearBotoes();
                    bloquearTodosCampos();
                    ExcluirInterno();
                    preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN PRE_LOCACAO_INTERNOS "
                            + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                            + "INNER JOIN PAVILHAO "
                            + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                            + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoReg.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtExcluirInternoActionPerformed

    private void jBtSalvarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarInternoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPreLocacaoInternosIntTRI);
        if (codigoUserTRI == codUserAcessoTRI && nomeTelaTRI.equals(telaPreLocacaoInternosIntTRI) && codGravarTRI == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoTRI.equals("ADMINISTRADORES")) {
            // PESQUISAR O CÓDIGO DO INTERNO PARA VER SE JA EXISTE NO DOCUMENTO ATUAL.
            pesquisarInternoCadastrado();
            if (jIdInternoReg.getText().equals("") || jNomeInternoReg.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para gravar.");
            } else if (jComboBoxPavilhaoReg.getSelectedItem() == null || jComboBoxPavilhaoReg.getSelectedItem().equals("") || jComboBoxPavilhaoReg.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o Pavilhão do interno para gravar.");
            } else {
                objItensPreLocacao.setCodigoReg(Integer.valueOf(jCodigoReg.getText()));
                objItensPreLocacao.setIdEntrada(Integer.valueOf(jDocEntrada.getText()));
                objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoReg.getText()));
                objItensPreLocacao.setNomeInternoCrc(jNomeInternoReg.getText());
                objItensPreLocacao.setDescricaoPavilhao((String) jComboBoxPavilhaoReg.getSelectedItem());
                if (jRBtUmaUm.isSelected()) {
                    botaoRBu = 1;
                } else if (!jRBtUmaUm.isSelected()) {
                    botaoRBu = 0;
                }
                if (jRBtVarios.isSelected()) {
                    botaoRBu = 1;
                } else if (jRBtVarios.isSelected()) {
                    botaoRBu = 0;
                }
                objItensPreLocacao.setTipoPesquisa(botaoRBu);
                objItensPreLocacao.setConfirmacao(confirmacao);
                if (acao == 3) {
                    if (codigoInternoCrc == objItensPreLocacao.getIdInternoCrc()) {
                        JOptionPane.showMessageDialog(rootPane, "Esse interno já foi incluído nesse registro, tente adicionar outro interno.");
                    } else {
                        // Para o log do registro
                        objItensPreLocacao.setUsuarioInsert(nameUser);
                        objItensPreLocacao.setDataInsert(dataModFinal);
                        objItensPreLocacao.setHorarioInsert(horaMov);
                        controle.incluirItensPreLocacaoInternos(objItensPreLocacao);
                        // CONFIRMAÇÃO PARA TABELA ITENSENTRADA PARA PESQUISA DE UTILIZAÇÃO 
                        if (jRBtUmaUm.isSelected()) {
                            objItensPreLocacao.setIdEntrada(Integer.valueOf(jRegistroEntrada.getText()));
                            objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoReg.getText()));
                            objItensPreLocacao.setConfirmaUtil(confirmaUtil);
                            controle.confirmcaoPreLocacaoInternosEntrada(objItensPreLocacao);
                        } else if (jRBtVarios.isSelected()) {
                            objItensPreLocacao.setIdEntrada(Integer.valueOf(jRegistroEntradaVarios.getText()));
                            objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoReg.getText()));
                            objItensPreLocacao.setConfirmaUtil(confirmaUtil);
                            controle.confirmcaoPreLocacaoInternosEntrada(objItensPreLocacao);
                        }
                        //
                        objLog2();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação 
                        bloquearBotoes();
                        bloquearTodosCampos();
                        SalvarInterno();
                        preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "INNER JOIN PRE_LOCACAO_INTERNOS "
                                + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                                + "INNER JOIN PAVILHAO "
                                + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                                + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoReg.getText() + "'");
                    }
                }
                if (acao == 4) {
                    // Para o log do registro
                    objItensPreLocacao.setUsuarioUp(nameUser);
                    objItensPreLocacao.setDataUp(dataModFinal);
                    objItensPreLocacao.setHorarioUp(horaMov);
                    objItensPreLocacao.setIdItem(Integer.valueOf(idItem));
                    controle.alterarItensPreLocacaoInternos(objItensPreLocacao);
                    // CONFIRMAÇÃO PARA TABELA ITENSENTRADA PARA PESQUISA DE UTILIZAÇÃO 
                    if (jRBtUmaUm.isSelected()) {
                        objItensPreLocacao.setIdEntrada(Integer.valueOf(jRegistroEntrada.getText()));
                        objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoReg.getText()));
                        objItensPreLocacao.setConfirmaUtil(confirmaUtil);
                        controle.confirmcaoPreLocacaoInternosEntrada(objItensPreLocacao);
                    } else if (jRBtVarios.isSelected()) {
                        objItensPreLocacao.setIdEntrada(Integer.valueOf(jRegistroEntradaVarios.getText()));
                        objItensPreLocacao.setIdInternoCrc(Integer.valueOf(jIdInternoReg.getText()));
                        objItensPreLocacao.setConfirmaUtil(confirmaUtil);
                        controle.confirmcaoPreLocacaoInternosEntrada(objItensPreLocacao);
                    }
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação  
                    bloquearBotoes();
                    bloquearTodosCampos();
                    SalvarInterno();
                    preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN PRE_LOCACAO_INTERNOS "
                            + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                            + "INNER JOIN PAVILHAO "
                            + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                            + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoReg.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso nao autorizado.");
        }
    }//GEN-LAST:event_jBtSalvarInternoActionPerformed

    private void jBtCancelarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarInternoActionPerformed
        // TODO add your handling code here:
        bloquearBotoes();
        bloquearTodosCampos();
        CancelarInterno();
    }//GEN-LAST:event_jBtCancelarInternoActionPerformed

    private void jBtBuscarInternosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscarInternosActionPerformed
        // TODO add your handling code here:
        objPreLocacao.setStatusReg(jStatusReg.getText());
        if (jStatusReg.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro de internos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else if (jCodigoReg.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível buscar internos, não foi inserido nenhum registro.");
        } else if (acao == 3 || acao == 4) {
            if (jRBtUmaUm.isSelected()) {
                buscarPavilhao();
                TelaPesqInternoEntradaCrcPreLocacao objPesqIntEnt = new TelaPesqInternoEntradaCrcPreLocacao();
                TelaModuloTriagem.jPainelTriagem.add(objPesqIntEnt);
                objPesqIntEnt.show();
            } else if (jRBtVarios.isSelected()) {
                TelaPesqInternoEntradaCrcPreLocacaoVarios objPesqVarios = new TelaPesqInternoEntradaCrcPreLocacaoVarios();
                TelaModuloTriagem.jPainelTriagem.add(objPesqVarios);
                objPesqVarios.show();
            }
        }
    }//GEN-LAST:event_jBtBuscarInternosActionPerformed

    private void jBtImpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImpressaoActionPerformed
        // TODO add your handling code here:
        if (jCodigoReg.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível buscar internos, não foi inserido nenhum registro.");
        } else {
            try {
                conecta.abrirConexao();
                String path = "reports/RelatorioPreLocacaoInternosTriagem.jasper";
                conecta.executaSQL("SELECT * FROM PRE_LOCACAO_INTERNOS "
                        + "INNER JOIN ITENS_PRE_LOCACAO_INTERNOS "
                        + "ON PRE_LOCACAO_INTERNOS.CodigoReg=ITENS_PRE_LOCACAO_INTERNOS.CodigoReg "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN PAVILHAO "
                        + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                        + "INNER JOIN DADOSPENAISINTERNOS "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=DADOSPENAISINTERNOS.IdInternoCrc "
                        + "WHERE PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoReg.getText() + "'");
                HashMap parametros = new HashMap();
                parametros.put("pCodigoRegistro", jCodigoReg.getText());
                parametros.put("descricaoUnidade", descricaoUnidade);
                parametros.put("nomeUsuario", nameUser);
                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao  
                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
                jv.setTitle("Relatório de Pré-Locação de Internos - Individual");
                jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
                jv.toFront(); // Traz o relatorio para frente da aplicação            
                conecta.desconecta();
            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório. \n\nERRO :" + e);
            }
        }
    }//GEN-LAST:event_jBtImpressaoActionPerformed

    private void jBtAuditoriaInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaInternoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensPreLocacao objAudiPreInt = new TelaAuditoriaItensPreLocacao();
        TelaModuloTriagem.jPainelTriagem.add(objAudiPreInt);
        objAudiPreInt.show();
    }//GEN-LAST:event_jBtAuditoriaInternoActionPerformed

    private void jBtExportarInternosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExportarInternosActionPerformed
        // TODO add your handling code here:
        verificarParametro();
        Integer rows = jTabelaItensInterno.getModel().getRowCount();
        objPreLocacao.setStatusReg(jStatusReg.getText());
        if (preLocacaoBP1 == null) {
            JOptionPane.showMessageDialog(rootPane, "O parametro da base 1 está vazio, solicite ao administrador do sistema para verificar.");
        } else if (preLocacaoBP1.equals("Desabilitado")) {
            JOptionPane.showMessageDialog(rootPane, "O parametro da base 1 está desabilitado, solicite ao administrador do sistema para verificar.");
        } else if (preLocacaoBP2 == null) {
            JOptionPane.showMessageDialog(rootPane, "O parametro da base 2 está vazio, solicite ao administrador do sistema para verificar.");
        } else if (preLocacaoBP2.equals("Desabilitado")) {
            JOptionPane.showMessageDialog(rootPane, "O parametro da base 2 está desabilitado, solicite ao administrador do sistema para verificar.");
        } else if (jStatusReg.getText().equals("ABERTO")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível exportar os registro, documento ainda não foi FINALIZADO");
        } else if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível exportar registro, não existe nenhum registro de interno na tabela abaixo.");
        } else {
            ExportarInternos();
        }
    }//GEN-LAST:event_jBtExportarInternosActionPerformed

    private void jBtSair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSair1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSair1ActionPerformed

    private void jTabelaInternosExportadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaInternosExportadosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        count = 0;
        if (flag == 1) {
            String IdLanc = "" + jTabelaInternosExportados.getValueAt(jTabelaInternosExportados.getSelectedRow(), 0);
            //
            bloquearBotoes();
            bloquearTodosCampos();
            if (!jCodigoReg.getText().equals("")) {
                jBtNovo.setEnabled(true);
                jBtAlterar.setEnabled(true);
                jBtExcluir.setEnabled(true);
                jBtSalvar.setEnabled(!true);
                jBtCancelar.setEnabled(!true);
                jBtAuditoria.setEnabled(true);
                jBtFinalizar.setEnabled(true);
                //
                jBtNovoInterno.setEnabled(true);
            }
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM PRE_LOCACAO_INTERNOS "
                        + "WHERE CodigoReg ='" + IdLanc + "'");
                conecta.rs.first();
                jCodigoReg.setText(String.valueOf(conecta.rs.getInt("CodigoReg")));
                jStatusReg.setText(conecta.rs.getString("StatusReg"));
                jDataReg.setDate(conecta.rs.getDate("DataReg"));
                jObservacaoReg.setText(conecta.rs.getString("ObservacaoReg"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos registros.\nERROR: " + e);
            }
            count1 = 0;
            preencherTabelaItens("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN PRE_LOCACAO_INTERNOS "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.CodigoReg=PRE_LOCACAO_INTERNOS.CodigoReg "
                    + "INNER JOIN PAVILHAO "
                    + "ON ITENS_PRE_LOCACAO_INTERNOS.IdPav=PAVILHAO.IdPav "
                    + "WHERE ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoReg.getText() + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaInternosExportadosMouseClicked

    private void jTabelaItensInternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensInternoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeInterno = "" + jTabelaItensInterno.getValueAt(jTabelaItensInterno.getSelectedRow(), 3);
            jNomeInternoReg.setText(nomeInterno);
            String idInterno = "" + jTabelaItensInterno.getValueAt(jTabelaItensInterno.getSelectedRow(), 2);
            jIdInternoReg.setText(nomeInterno);
            idItem = "" + jTabelaItensInterno.getValueAt(jTabelaItensInterno.getSelectedRow(), 0);
            // Habilitar os botões
            bloquearBotoes();
            bloquearTodosCampos();
            jBtNovoInterno.setEnabled(!true);
            jBtAlterarInterno.setEnabled(true);
            jBtExcluirInterno.setEnabled(true);
            jBtSalvarInterno.setEnabled(!true);
            jBtCancelarInterno.setEnabled(true);
            jBtAuditoriaInterno.setEnabled(true);
            jComboBoxPavilhaoReg.removeAllItems();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN PAVILHAO "
                        + "ON PAVILHAO.IdPav=ITENS_PRE_LOCACAO_INTERNOS.IdPav "
                        + "WHERE ITENS_PRE_LOCACAO_INTERNOS.IdInternoCrc='" + idInterno + "' "
                        + "AND ITENS_PRE_LOCACAO_INTERNOS.CodigoReg='" + jCodigoReg.getText() + "' ");
                conecta.rs.first();
                jIdInternoReg.setText(conecta.rs.getString("IdInternoCrc")); //Coluna 0
                jNomeInternoReg.setText(conecta.rs.getString("NomeInternoCrc")); // Coluna 1
                idItem = conecta.rs.getString("IdItem"); // Coluna 2                
                jComboBoxPavilhaoReg.addItem(conecta.rs.getString("DescricaoPav"));
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                if (caminho != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                    jFotoInternoExportado.setIcon(i);
                    jFotoInternoExportado.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInternoExportado.getWidth(), jFotoInternoExportado.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR FOTO DO BANCO DE DADOS.
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrente"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(jFotoInternoExportado.getWidth(), jFotoInternoExportado.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    jFotoInternoExportado.setIcon(icon);
                }
                jDocEntrada.setText(conecta.rs.getString("IdEntrada"));
                botaoRBu = conecta.rs.getInt("TipoPesq");
                if (botaoRBu == 1) {
                    jRBtUmaUm.setSelected(true);
                } else if (botaoRBu == 0) {
                    jRBtVarios.setSelected(true);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaItensInternoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAlterarInterno;
    private javax.swing.JButton jBtAuditoria;
    public static javax.swing.JButton jBtAuditoriaInterno;
    public static javax.swing.JButton jBtBuscarInternos;
    private javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtCancelarInterno;
    private javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtExcluirInterno;
    private javax.swing.JButton jBtExportarInternos;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImpressao;
    private javax.swing.JButton jBtNovo;
    public static javax.swing.JButton jBtNovoInterno;
    private javax.swing.JButton jBtPesquisarInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSair1;
    private javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jBtSalvarInterno;
    private javax.swing.JCheckBox jCheckBoxTodos;
    public static javax.swing.JTextField jCodigoReg;
    public static javax.swing.JComboBox<String> jComboBoxPavilhaoReg;
    private com.toedter.calendar.JDateChooser jDataReg;
    public static javax.swing.JTextField jDocEntrada;
    public static javax.swing.JLabel jFotoInternoExportado;
    public static javax.swing.JTextField jIdInternoReg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInternoReg;
    private javax.swing.JTextField jObservacaoReg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesquisarInterno;
    private javax.swing.JRadioButton jRBtUmaUm;
    private javax.swing.JRadioButton jRBtVarios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jStatusReg;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaInternosExportados;
    public static javax.swing.JTable jTabelaItensInterno;
    private javax.swing.JLabel jtotalRegistros;
    public static javax.swing.JLabel jtotalRegistros1;
    // End of variables declaration//GEN-END:variables

    public void verificarParametro() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PARAMETROSCRC");
            conecta.rs.first();
            preLocacaoBP1 = conecta.rs.getString("PreLocacaoB1");
            preLocacaoBP2 = conecta.rs.getString("PreLocacaoB2");
        } catch (SQLException ex) {
            Logger.getLogger(TelaPreLocaoInternos.class.getName()).log(Level.SEVERE, null, ex);
        }
        conecta.desconecta();
    }

    public void pesquisarInternoCadastrado() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                    + "WHERE CodigoReg='" + jCodigoReg.getText() + "' "
                    + "AND IdInternoCrc='" + jIdInternoReg.getText() + "'");
            conecta.rs.first();
            codigoInternoCrc = conecta.rs.getInt("IdInternoCrc");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void formatarCampos() {

    }

    public void corCampos() {
        jCodigoReg.setBackground(Color.white);
        jStatusReg.setBackground(Color.white);
        jDataReg.setBackground(Color.white);
        jObservacaoReg.setBackground(Color.white);
        //
        jIdInternoReg.setBackground(Color.white);
        jNomeInternoReg.setBackground(Color.white);
        jDocEntrada.setBackground(Color.white);
        jComboBoxPavilhaoReg.setBackground(Color.white);
    }

    public void bloquearTodosCampos() {
        jCodigoReg.setEnabled(!true);
        jStatusReg.setEnabled(!true);
        jDataReg.setEnabled(!true);
        jObservacaoReg.setEnabled(!true);
        //
        jIdInternoReg.setEnabled(!true);
        jNomeInternoReg.setEnabled(!true);
        jComboBoxPavilhaoReg.setEnabled(!true);
    }

    public void bloquearBotoes() {
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jRBtUmaUm.setEnabled(!true);
        jRBtVarios.setEnabled(!true);
        //
        jBtNovoInterno.setEnabled(!true);
        jBtAlterarInterno.setEnabled(!true);
        jBtExcluirInterno.setEnabled(!true);
        jBtSalvarInterno.setEnabled(!true);
        jBtCancelarInterno.setEnabled(!true);
        jBtAuditoriaInterno.setEnabled(!true);
    }

    public void limparTodosCampos() {
        jCodigoReg.setText("");
        jStatusReg.setText("");
        jDataReg.setDate(null);
        jObservacaoReg.setText("");
        //
        jIdInternoReg.setText("");
        jNomeInternoReg.setText("");
        jComboBoxPavilhaoReg.setSelectedItem(null);
        jFotoInternoExportado.setIcon(null);
    }

    public void Novo() {
        jStatusReg.setText("ABERTO");
        jDataReg.setCalendar(Calendar.getInstance());
        //
        jDataReg.setEnabled(true);
        jObservacaoReg.setEnabled(true);
        //        
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        jDataReg.setEnabled(true);
        jObservacaoReg.setEnabled(true);
        //        
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        jBtNovo.setEnabled(true);
    }

    public void Salvar() {
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoInterno.setEnabled(true);
    }

    public void Cancelar() {
        if (jCodigoReg.getText().equals("")) {
            limparTodosCampos();
            bloquearBotoes();
            bloquearTodosCampos();
            jBtNovo.setEnabled(true);
        } else {
            bloquearBotoes();
            bloquearTodosCampos();
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovoInterno.setEnabled(true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PRE_LOCACAO_INTERNOS");
            conecta.rs.last();
            codEnt = conecta.rs.getInt("CodigoReg");
            jCodigoReg.setText(String.valueOf(conecta.rs.getInt("CodigoReg")));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel encontrar registro.\nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void NovoInterno() {
        jComboBoxPavilhaoReg.setEnabled(true);
        // 
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        //
        jRBtUmaUm.setEnabled(true);
        jRBtVarios.setEnabled(true);
    }

    public void AlterarInterno() {
        jComboBoxPavilhaoReg.setEnabled(true);
        // 
        jBtSalvarInterno.setEnabled(true);
        jBtCancelarInterno.setEnabled(true);
        //
        jRBtUmaUm.setEnabled(true);
        jRBtVarios.setEnabled(true);
    }

    public void ExcluirInterno() {
        jIdInternoReg.setText("");
        jNomeInternoReg.setText("");
        jDocEntrada.setText("");
        jComboBoxPavilhaoReg.setSelectedItem("Selecione...");
        //
        jBtNovoInterno.setEnabled(true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void SalvarInterno() {
        jBtNovoInterno.setEnabled(true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // ZERANDO A VARIÁVEL PARA NÃO REALIZAR PESQUISAS SEM QUE A OPÇÃO SEJA INCLUI OU ALTERAR INTERNO
        acao = 0;
    }

    public void CancelarInterno() {
        jIdInternoReg.setText("");
        jNomeInternoReg.setText("");
        jDocEntrada.setText("");
        jComboBoxPavilhaoReg.setSelectedItem("Selecione...");
        //
        jBtNovoInterno.setEnabled(true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // ZERANDO A VARIÁVEL PARA NÃO REALIZAR PESQUISAS SEM QUE A OPÇÃO SEJA INCLUI OU ALTERAR INTERNO
        acao = 0;
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se essa entrada de internos for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objPreLocacao.setStatusReg(statusEntrada);
            objPreLocacao.setCodigoReg(Integer.parseInt(jCodigoReg.getText()));
            control.finalizarPreLocacao(objPreLocacao);
            jStatusReg.setText(statusEntrada);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            bloquearBotoes();
            bloquearTodosCampos();
            jBtNovo.setEnabled(true);
        }
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_PRE_LOCACAO_INTERNOS "
                    + "WHERE CodigoReg='" + jCodigoReg.getText() + "'");
            conecta.rs.first();
            codEntrada = conecta.rs.getString("CodigoReg");
            if (jCodigoReg.getText().equals(codEntrada)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objPreLocacao.setCodigoReg(Integer.parseInt(jCodigoReg.getText()));
                control.excluirPreLocacao(objPreLocacao);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                bloquearTodosCampos();
                limparTodosCampos();
                bloquearBotoes();
                Excluir();
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
            }
        }
    }

    public void preencherPreLocacao(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataReg");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("CodigoReg"), dataBrasil, conecta.rs.getString("StatusReg"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternosExportados.setModel(modelo);
        jTabelaInternosExportados.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaInternosExportados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaInternosExportados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternosExportados.getTableHeader().setReorderingAllowed(false);
        jTabelaInternosExportados.setAutoResizeMode(jTabelaInternosExportados.AUTO_RESIZE_OFF);
        jTabelaInternosExportados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaEntradas();
        conecta.desconecta();
    }

    public void preencherPreLocacaoTodos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataReg");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("CodigoReg"), dataBrasil, conecta.rs.getString("StatusReg"), conecta.rs.getString("ObservacaoReg")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternosExportados.setModel(modelo);
        jTabelaInternosExportados.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaInternosExportados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaInternosExportados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternosExportados.getTableHeader().setReorderingAllowed(false);
        jTabelaInternosExportados.setAutoResizeMode(jTabelaInternosExportados.AUTO_RESIZE_OFF);
        jTabelaInternosExportados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaEntradas();
        conecta.desconecta();
    }

    public void limparTabelaEntradas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternosExportados.setModel(modelo);
        jTabelaInternosExportados.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaInternosExportados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternosExportados.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaInternosExportados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaInternosExportados.getTableHeader().setReorderingAllowed(false);
        jTabelaInternosExportados.setAutoResizeMode(jTabelaInternosExportados.AUTO_RESIZE_OFF);
        jTabelaInternosExportados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaEntradas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaInternosExportados.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaInternosExportados.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaInternosExportados.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void buscarPavilhao() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PAVILHAO ORDER BY DescricaoPav");
            conecta.rs.first();
            do {
                jComboBoxPavilhaoReg.addItem(conecta.rs.getString("DescricaoPav"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Doc.", "Código", "Nome do Interno", "Pavilhão"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            count1 = 0;
            do {
                count1 = count1 + 1;
                jtotalRegistros1.setText(Integer.toString(count1)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdEntrada"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("DescricaoPav")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInterno.setModel(modelo);
        jTabelaItensInterno.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaItensInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(4).setPreferredWidth(250);
        jTabelaItensInterno.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInterno.setAutoResizeMode(jTabelaItensInterno.AUTO_RESIZE_OFF);
        jTabelaItensInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Doc.", "Código", "Nome do Interno", "Pavilhão"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInterno.setModel(modelo);
        jTabelaItensInterno.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaItensInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(4).setPreferredWidth(250);
        jTabelaItensInterno.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInterno.setAutoResizeMode(jTabelaItensInterno.AUTO_RESIZE_OFF);
        jTabelaItensInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensInterno.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensInterno.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaItensInterno.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jCodigoReg.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jCodigoReg.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String pTela) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserTRI = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserTRI + "'");
            conecta.rs.first();
            codigoUserGroupTRI = conecta.rs.getInt("IdUsuario");
            codigoGrupoTRI = conecta.rs.getInt("IdGrupo");
            nomeGrupoTRI = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserTRI + "' "
                    + "AND NomeTela='" + pTela + "'");
            conecta.rs.first();
            codUserAcessoTRI = conecta.rs.getInt("IdUsuario");
            codAbrirTRI = conecta.rs.getInt("Abrir");
            codIncluirTRI = conecta.rs.getInt("Incluir");
            codAlterarTRI = conecta.rs.getInt("Alterar");
            codExcluirTRI = conecta.rs.getInt("Excluir");
            codGravarTRI = conecta.rs.getInt("Gravar");
            codConcultarTRI = conecta.rs.getInt("Consultar");
            nomeTelaTRI = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
