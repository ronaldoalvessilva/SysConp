/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Controle.ControlePaises;
import Utilitarios.LimiteDigitosAlfa;
import Utilitarios.LimiteDigitosNum;
import Utilitarios.ModeloTabela;
import gestor.Modelo.LogSistema;
import gestor.Modelo.Paises;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloAdmPessoal.codAbrirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codAlterarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codConsultarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codExcluirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codGravarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codIncluirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codUserAcessoADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoGrupoADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoUserADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoUserGroupADM;
import static gestor.Visao.TelaModuloAdmPessoal.nomeGrupoADM;
import static gestor.Visao.TelaModuloAdmPessoal.nomeTelaADM;
import static gestor.Visao.TelaModuloAdmPessoal.telaPaises_ADM;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaPaisesAdmPessoal extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ControlePaises control = new ControlePaises();
    Paises objPaises = new Paises();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "AdmPessoal:Localidades:Países:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String nomeUserPaises;
    //
    int acao;
    int flag;
    int codPais;
    String nomePais;

    /**
     * Creates new form TelaPaises
     */
    public TelaPaisesAdmPessoal() {
        initComponents();
        jCodPais.setDocument(new LimiteDigitosNum(3));
        jNomePais.setDocument(new LimiteDigitosAlfa(33));
        jPesNomePais.setDocument(new LimiteDigitosAlfa(33));
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jBtPesqPais = new javax.swing.JButton();
        jPesNomePais = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaPais = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdPais = new javax.swing.JTextField();
        jNomePais = new javax.swing.JTextField();
        jCodPais = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jBtPrimeiro = new javax.swing.JButton();
        jBtAnterior = new javax.swing.JButton();
        jBtProximo = new javax.swing.JButton();
        jBtUltimo = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Paises :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jBtPesqPais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqPais.setContentAreaFilled(false);
        jBtPesqPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqPaisActionPerformed(evt);
            }
        });

        jPesNomePais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Descrição:");

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox2.setText("Todos");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesNomePais)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqPais, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jPesNomePais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqPais)
                    .addComponent(jCheckBox2))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jTabelaPais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ID", "Nome Pais", "Código"
            }
        ));
        jTabelaPais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaPaisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaPais);
        if (jTabelaPais.getColumnModel().getColumnCount() > 0) {
            jTabelaPais.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaPais.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaPais.getColumnModel().getColumn(1).setMinWidth(280);
            jTabelaPais.getColumnModel().getColumn(1).setMaxWidth(280);
            jTabelaPais.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaPais.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Botões de Manutenção", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("ID Pais:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nome Pais:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Código Pais:");

        jIdPais.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdPais.setEnabled(false);
        jIdPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIdPaisActionPerformed(evt);
            }
        });

        jNomePais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomePais.setEnabled(false);

        jCodPais.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodPais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodPais.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jIdPais, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCodPais, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jNomePais))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jIdPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCodPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jNomePais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Botões de Manutenção", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7856_16x16.png"))); // NOI18N
        jBtPrimeiro.setToolTipText("Primeiro Registro");
        jBtPrimeiro.setEnabled(false);
        jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPrimeiroActionPerformed(evt);
            }
        });

        jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7857_16x16.png"))); // NOI18N
        jBtAnterior.setToolTipText("Registro Anterior");
        jBtAnterior.setEnabled(false);
        jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAnteriorActionPerformed(evt);
            }
        });

        jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7855_16x16.png"))); // NOI18N
        jBtProximo.setToolTipText("Próximo Registro");
        jBtProximo.setEnabled(false);
        jBtProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtProximoActionPerformed(evt);
            }
        });

        jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7854_16x16.png"))); // NOI18N
        jBtUltimo.setToolTipText("Ultimo Registro");
        jBtUltimo.setEnabled(false);
        jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtUltimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jBtPrimeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAnterior, jBtPrimeiro, jBtProximo, jBtUltimo});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtUltimo)
                    .addComponent(jBtProximo)
                    .addComponent(jBtAnterior)
                    .addComponent(jBtPrimeiro))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAnterior, jBtPrimeiro, jBtProximo, jBtUltimo});

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Alterar Registro");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir Registro");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Salvar Registro");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair da Tela");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtSair)
                .addComponent(jBtCancelar))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtAlterar)
                .addComponent(jBtExcluir)
                .addComponent(jBtSalvar)
                .addComponent(jBtNovo))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 150, 458, 264);
    }// </editor-fold>//GEN-END:initComponents

    private void jIdPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIdPaisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jIdPaisActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPaises_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaPaises_ADM) && codIncluirADM == 1) {
            acao = 1;
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPaises_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaPaises_ADM) && codAlterarADM == 1) {
            if (jNomePais.getText().equals("BRASIL")) {
                JOptionPane.showMessageDialog(rootPane, "Esse País não pode ser modificado...!!!");
            } else {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PAISES WHERE IdPais='" + jIdPais.getText() + "'");
                    conecta.rs.first();
                    nomeUserPaises = conecta.rs.getString("UsuarioInsert");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
                }
                if (nomeUserPaises == null ? nameUser == null : nomeUserPaises.equals(nameUser)) {
                    acao = 2;
                    Alterar();
                    statusMov = "Alterou";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserPaises + " só esse usuário poderá modificar.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPaises_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaPaises_ADM) && codExcluirADM == 1) {
            if (jNomePais.getText().equals("BRASIL")) {
                JOptionPane.showMessageDialog(rootPane, "Esse País não pode ser excluído...!!!");
            } else {
                conecta.abrirConexao();
                try {
                    conecta.executaSQL("SELECT * FROM PAISES WHERE IdPais='" + jIdPais.getText() + "'");
                    conecta.rs.first();
                    nomeUserPaises = conecta.rs.getString("UsuarioInsert");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
                }
                if (nomeUserPaises == null ? nameUser == null : nomeUserPaises.equals(nameUser)) {
                    buscarPais();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserPaises + " só esse usuário poderá excluir.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaPaises_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaPaises_ADM) && codGravarADM == 1) {
            if (jNomePais.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Nome do PAISES não podem ser em branco");
                jNomePais.requestFocus();
            } else {
                objPaises.setCodPais(Integer.parseInt(jCodPais.getText()));
                objPaises.setNomePais(jNomePais.getText());
                objPaises.setNomeUsuario(nameUser);
                if (jCodPais.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o código do país.");
                } else {
                    try {
                        conecta.abrirConexao();
                        conecta.executaSQL("SELECT * FROM PAISES WHERE NomePais='" + jNomePais.getText() + "'");
                        conecta.rs.first();
                        nomePais = conecta.rs.getString("NomePais");
                    } catch (Exception ex) {
                    }
                    // Se a acao for igual 1 Incluir
                    if (acao == 1) {
                        if (jNomePais.getText().trim().equals(nomePais)) {
                            JOptionPane.showMessageDialog(rootPane, "Pais já cadastrado.");
                        } else {
                            control.Salvar(objPaises);
                            buscarID();
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(null, "Registro GRAVADO com sucesso!!!");
                            Salvar();
                        }
                    }
                    // Se aco for igual a 2 Alterar
                    if (acao == 2) {
                        objPaises.setCodPais(objPaises.getCodPais());
                        objPaises.setNomePais(jNomePais.getText());
                        objPaises.setIdPais(Integer.valueOf(jIdPais.getText()));
                        control.Alterar(objPaises);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(null, "Registro ALTERADO com sucesso!!!");
                        Salvar();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtPesqPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqPaisActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jPesNomePais.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe dados para pesquisa");
            jPesNomePais.requestFocus();
        } else {
            preencherTabelaNome("SELECT * FROM PAISES WHERE NomePais LIKE'%" + jPesNomePais.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqPaisActionPerformed

    private void jTabelaPaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaPaisMouseClicked
        // TODO add your handling code here:        
        if (flag == 1) {
            String codigo = "" + jTabelaPais.getValueAt(jTabelaPais.getSelectedRow(), 0);
            String NomePais = "" + jTabelaPais.getValueAt(jTabelaPais.getSelectedRow(), 1);
            jPesNomePais.setText(NomePais);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM PAISES WHERE IdPais='" + codigo + "'");
                conecta.rs.first();
                jIdPais.setText(String.valueOf(conecta.rs.getInt("IdPais")));
                jCodPais.setText(String.valueOf(conecta.rs.getInt("CodPais")));
                jNomePais.setText(conecta.rs.getString("NomePais"));
                conecta.desconecta();
            } catch (SQLException ex) {
                Logger.getLogger(TelaPaisesAdmPessoal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jNomePais.setEnabled(!true);
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(false);
            jBtCancelar.setEnabled(true);
            jBtPrimeiro.setEnabled(true);
            jBtProximo.setEnabled(true);
            jBtAnterior.setEnabled(true);
            jBtUltimo.setEnabled(true);
        }
    }//GEN-LAST:event_jTabelaPaisMouseClicked

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed
        // TODO add your handling code here:
        Primeiro();
        jIdPais.setText(String.valueOf(objPaises.getIdPais()));
        jCodPais.setText(String.valueOf(objPaises.getCodPais()));
        jNomePais.setText(objPaises.getNomePais());
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        // TODO add your handling code here:
        Anterior();
        jIdPais.setText(String.valueOf(objPaises.getIdPais()));
        jCodPais.setText(String.valueOf(objPaises.getCodPais()));
        jNomePais.setText(objPaises.getNomePais());
    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        // TODO add your handling code here:
        jIdPais.setText(String.valueOf(objPaises.getIdPais()));
        jCodPais.setText(String.valueOf(objPaises.getCodPais()));
        jNomePais.setText(objPaises.getNomePais());
        Proximo();

    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        // TODO add your handling code here:
        Ultimo();
        jIdPais.setText(String.valueOf(objPaises.getIdPais()));
        jCodPais.setText(String.valueOf(objPaises.getCodPais()));
        jNomePais.setText(objPaises.getNomePais());

    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabela();
        } else {
            limparCamposTabela();
        }
    }//GEN-LAST:event_jCheckBox2ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAnterior;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqPais;
    private javax.swing.JButton jBtPrimeiro;
    private javax.swing.JButton jBtProximo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtUltimo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JTextField jCodPais;
    private javax.swing.JTextField jIdPais;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jNomePais;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jPesNomePais;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaPais;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdPais.setBackground(Color.white);
        jCodPais.setBackground(Color.white);
        jNomePais.setBackground(Color.white);
    }

    public void Novo() {
        // Limpas os campos
        jIdPais.setText("");
        jCodPais.setText("");
        jNomePais.setText("");
        // Habilta os campos para insersão
        jCodPais.setEnabled(true);
        jNomePais.setEnabled(true);
        // Habilita os botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        // Desabilta botões de navegação
        jBtPrimeiro.setEnabled(!true);
        jBtAnterior.setEnabled(!true);
        jBtProximo.setEnabled(!true);
        jBtUltimo.setEnabled(!true);
    }

    public void Alterar() {

        // Habilta os campos para insersão
        jCodPais.setEnabled(true);
        jNomePais.setEnabled(true);
        // Habilita os botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        // Desabilta botões de navegação
        jBtPrimeiro.setEnabled(!true);
        jBtAnterior.setEnabled(!true);
        jBtProximo.setEnabled(!true);
        jBtUltimo.setEnabled(!true);
    }

    public void Salvar() {

        jCodPais.setEnabled(!true);
        jNomePais.setEnabled(!true);
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtPrimeiro.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
    }

    public void Excluir() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        try {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir PAIS selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                conecta.abrirConexao();
                conecta.rs.first();
                PreparedStatement pst;
                pst = conecta.con.prepareStatement("DELETE FROM PAISES WHERE IdPais = ?");
                pst.setString(1, jIdPais.getText());
                pst.execute();
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(null, "Exclusão do PAIS com sucesso!!");
                conecta.desconecta();
            }
        } catch (Exception e) {
            conecta.desconecta();
        }
        // Limpar os campos
        jIdPais.setText("");
        jCodPais.setText("");
        jNomePais.setText("");
        jBtNovo.setEnabled(true);
        // Habilitar/Desabilitar Campos      
        jBtAlterar.setEnabled(false);
        jBtExcluir.setEnabled(false);
        jBtPrimeiro.setEnabled(false);
        jBtUltimo.setEnabled(false);
        jBtProximo.setEnabled(false);
        jBtAnterior.setEnabled(false);
        jBtSalvar.setEnabled(false);
        jBtSair.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        // Habilitar os campos
        jCodPais.setEnabled(false);
        jNomePais.setEnabled(false);
    }

    public void Cancelar() {
        // Limpa os Campos
        jIdPais.setText("");
        jCodPais.setText("");
        jNomePais.setText("");
        //Desabilitar CAmpos
        jCodPais.setEnabled(!true);
        jNomePais.setEnabled(!true);
        // Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtPrimeiro.setEnabled(!true);
        jBtAnterior.setEnabled(!true);
        jBtProximo.setEnabled(!true);
        jBtUltimo.setEnabled(!true);
    }

    public void Primeiro() {
        jCodPais.setEnabled(false);
        jNomePais.setEnabled(false);
        jBtNovo.setEnabled(false);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtCancelar.setEnabled(true);
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PAISES");
            conecta.rs.first();
            objPaises.setIdPais(conecta.rs.getInt("IdPais"));
            objPaises.setCodPais(conecta.rs.getInt("CodPais"));
            objPaises.setNomePais(conecta.rs.getString("NomePais"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Inicio de arquivo!!\n\n ATENÇÃO");
        }
    }

    public void Anterior() {
        try {
            conecta.rs.previous();
            objPaises.setIdPais(conecta.rs.getInt("IdPais"));
            objPaises.setCodPais(conecta.rs.getInt("CodPais"));
            objPaises.setNomePais(conecta.rs.getString("NomePais"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não exisem mais dados a serem EXIBIDOS");
        }
    }

    public void Proximo() {
        try {
            conecta.rs.next();
            objPaises.setIdPais(conecta.rs.getInt("IdPais"));
            objPaises.setCodPais(conecta.rs.getInt("CodPais"));
            objPaises.setNomePais(conecta.rs.getString("NomePais"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe mais dados a serem exibidos");
        }
    }

    public void Ultimo() {

        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PAISES");
            conecta.rs.last();
            objPaises.setIdPais(conecta.rs.getInt("IdPais"));
            objPaises.setCodPais(conecta.rs.getInt("CodPais"));
            objPaises.setNomePais(conecta.rs.getString("NomePais"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
    }

    public void preencherTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"ID", "Nome Pais", "Código"};
        conecta.abrirConexao();
        conecta.executaSQL("SELECT * FROM PAISES ORDER BY IdPais");;
        try {
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdPais"), conecta.rs.getString("NomePais"), conecta.rs.getInt("CodPais")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe dados a ser exibido!!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPais.setModel(modelo);
        jTabelaPais.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaPais.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPais.getColumnModel().getColumn(1).setPreferredWidth(280);
        jTabelaPais.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPais.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaPais.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPais.getTableHeader().setReorderingAllowed(false);
        jTabelaPais.setAutoResizeMode(jTabelaPais.AUTO_RESIZE_OFF);
        jTabelaPais.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    // Método de pesquisa pela Descrição
    public void preencherTabelaNome(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"ID", "Nome Pais", "Código"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdPais"), conecta.rs.getString("NomePais"), conecta.rs.getInt("CodPais")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPais.setModel(modelo);
        jTabelaPais.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaPais.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPais.getColumnModel().getColumn(1).setPreferredWidth(280);
        jTabelaPais.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPais.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaPais.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPais.getTableHeader().setReorderingAllowed(false);
        jTabelaPais.setAutoResizeMode(jTabelaPais.AUTO_RESIZE_OFF);
        jTabelaPais.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparCamposTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"ID", "Nome Pais", "Código"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPais.setModel(modelo);
        jTabelaPais.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaPais.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPais.getColumnModel().getColumn(1).setPreferredWidth(280);
        jTabelaPais.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPais.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaPais.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPais.getTableHeader().setReorderingAllowed(false);
        jTabelaPais.setAutoResizeMode(jTabelaPais.AUTO_RESIZE_OFF);
        jTabelaPais.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPais.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaPais.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void buscarPais() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES WHERE IdPais='" + jIdPais.getText() + "'");
            conecta.rs.first();
            codPais = conecta.rs.getInt("IdPais");
            if (codPais != 0) {
                JOptionPane.showMessageDialog(rootPane, "PAIS não poderá ser DELETADO, existe registro relacionado");
                conecta.desconecta();
            }
        } catch (SQLException ex) {
            Excluir();
        }
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PAISES");
            conecta.rs.last();
            jIdPais.setText(conecta.rs.getString("IdPais"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel obter o código da cidade.\nERRO:" + ex);
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdPais.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserADM = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserADM + "'");
            conecta.rs.first();
            codigoUserGroupADM = conecta.rs.getInt("IdUsuario");
            codigoGrupoADM = conecta.rs.getInt("IdGrupo");
            nomeGrupoADM = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserADM + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoADM = conecta.rs.getInt("IdUsuario");
            codAbrirADM = conecta.rs.getInt("Abrir");
            codIncluirADM = conecta.rs.getInt("Incluir");
            codAlterarADM = conecta.rs.getInt("Alterar");
            codExcluirADM = conecta.rs.getInt("Excluir");
            codGravarADM = conecta.rs.getInt("Gravar");
            codConsultarADM = conecta.rs.getInt("Consultar");
            nomeTelaADM = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
