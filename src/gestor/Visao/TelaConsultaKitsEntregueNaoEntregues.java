/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleListaKitsPago;
import gestor.Controle.ControleListaKitsaPagar;
import gestor.Modelo.AlertaKitHigiente;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronaldo.silva7
 */
public class TelaConsultaKitsEntregueNaoEntregues extends javax.swing.JInternalFrame {

    AlertaKitHigiente objComp = new AlertaKitHigiente();
    ControleListaKitsaPagar CONTROLE_LISTA_kits = new ControleListaKitsaPagar();
    ControleListaKitsPago CONTROLE_LISTA_kitsPago = new ControleListaKitsPago();
    //
    String pDATA_previsao = "";
    String pDATA_pagamento = "";
    int pKIT_inicial;
    int pKIT_decendial;
    int pKIT_quinzenal;
    int pKIT_mensal;
    int pKIT_semestral;
    int pKIT_anual;
    String pNOME_kit = "";
    public static int pTOTAL_produtos = 0;

    /**
     * Creates new form TelaAlertaPagamentoKitHigiene
     */
    public TelaConsultaKitsEntregueNaoEntregues() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaProdutosKitCompleto = new javax.swing.JTable();
        jPanel36 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxKitPagoNaoPago = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jBtConfirmar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Consulta de Kits Pagos/Pagos {Programação} :::...");

        jTabelaProdutosKitCompleto.setAutoCreateRowSorter(true);
        jTabelaProdutosKitCompleto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaProdutosKitCompleto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Registro", "Composição", "Data Previsão", "Data Pagamento", "Tipo Kit", "Código", "Descrição do Produto", "Qtd."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTabelaProdutosKitCompleto);
        if (jTabelaProdutosKitCompleto.getColumnModel().getColumnCount() > 0) {
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(3).setMinWidth(90);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(3).setMaxWidth(90);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(4).setMinWidth(90);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(4).setMaxWidth(90);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(5).setMinWidth(70);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(5).setMaxWidth(70);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(6).setMinWidth(250);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(6).setMaxWidth(250);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(7).setMinWidth(80);
            jTabelaProdutosKitCompleto.getColumnModel().getColumn(7).setMaxWidth(80);
        }

        jPanel36.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel37.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel69.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel69))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel69)
        );

        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tipo de Kit");

        jComboBoxKitPagoNaoPago.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxKitPagoNaoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Kit Pago", "Kit a Pagar" }));
        jComboBoxKitPagoNaoPago.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Inicial");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Final");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxKitPagoNaoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxKitPagoNaoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jBtConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/tick.png"))); // NOI18N
        jBtConfirmar.setText("Confirmar");
        jBtConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtConfirmarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jBtConfirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtSair)
                    .addComponent(jBtConfirmar))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel1, jPanel2});

        setBounds(300, 60, 718, 372);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConfirmarActionPerformed
        // TODO add your handling code here:
        if (jDataInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial.");
        } else if (jDataFinal.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data final.");
        } else if (jDataInicial.getDate().after(jDataFinal.getDate())) {
            JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
        } else if (jComboBoxKitPagoNaoPago.getSelectedItem().equals("Selecione...")) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma opção para consultar os kits.");
        } else if (jComboBoxKitPagoNaoPago.getSelectedItem().equals("Kit Pago")) {
            final ViewAguardeProcessando carregando = new ViewAguardeProcessando(); //Teste tela aguarde
            carregando.setVisible(true);//Teste tela aguarde
            Thread t = new Thread() { //Teste tela aguarde
                public void run() { //Teste    
                    while (jTabelaProdutosKitCompleto.getModel().getRowCount() > 0) {
                        ((DefaultTableModel) jTabelaProdutosKitCompleto.getModel()).removeRow(0);
                    }
                    LISTA_KIT_pago();
                    carregando.dispose(); //Teste tela aguarde   
                    if (pTOTAL_produtos == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Não existem registros a serem exibidos.");
                    }
                }
            }; //Teste tela aguarde
            t.start(); //Teste tela aguarde    
        } else if (jComboBoxKitPagoNaoPago.getSelectedItem().equals("Kit a Pagar")) {
            final ViewAguardeProcessando carregando = new ViewAguardeProcessando(); //Teste tela aguarde
            carregando.setVisible(true);//Teste tela aguarde
            Thread t = new Thread() { //Teste tela aguarde
                public void run() { //Teste    
                    while (jTabelaProdutosKitCompleto.getModel().getRowCount() > 0) {
                        ((DefaultTableModel) jTabelaProdutosKitCompleto.getModel()).removeRow(0);
                    }
                    LISTAR_PRODUTOS_kit_APAGAR();
                    carregando.dispose(); //Teste tela aguarde  
                    if (pTOTAL_produtos == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Não existem registros a serem exibidos.");
                    }
                }
            }; //Teste tela aguarde
            t.start(); //Teste tela aguarde  
        }
    }//GEN-LAST:event_jBtConfirmarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtConfirmar;
    private javax.swing.JButton jBtSair;
    private javax.swing.JComboBox<String> jComboBoxKitPagoNaoPago;
    public static com.toedter.calendar.JDateChooser jDataFinal;
    public static com.toedter.calendar.JDateChooser jDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelaProdutosKitCompleto;
    public static javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void LISTAR_PRODUTOS_kit_APAGAR() {
        DefaultTableModel dadosProduto = (DefaultTableModel) jTabelaProdutosKitCompleto.getModel();
        AlertaKitHigiente p = new AlertaKitHigiente();
        try {
            for (AlertaKitHigiente pp : CONTROLE_LISTA_kits.read()) {
                pDATA_previsao = pp.getDataPrevisao().toString();
                String dia = pDATA_previsao.substring(8, 10);
                String mes = pDATA_previsao.substring(5, 7);
                String ano = pDATA_previsao.substring(0, 4);
                pDATA_previsao = dia + "/" + mes + "/" + ano;
                //
                pKIT_inicial = pp.getKitInicial();
                pKIT_decendial = pp.getKitDecendial();
                pKIT_quinzenal = pp.getKitQuinzenal();
                pKIT_mensal = pp.getKitMensal();
                pKIT_semestral = pp.getKitSemestral();
                pKIT_anual = pp.getKitAnual();
                if (pKIT_inicial == 1) {
                    pNOME_kit = "Kit Inicial";
                } else if (pKIT_decendial == 1) {
                    pNOME_kit = "Kit Decendial";
                } else if (pKIT_quinzenal == 1) {
                    pNOME_kit = "Kit Quinzenal";
                } else if (pKIT_mensal == 1) {
                    pNOME_kit = "Kit Mensal";
                } else if (pKIT_semestral == 1) {
                    pNOME_kit = "Kit Semestral";
                } else if (pKIT_anual == 1) {
                    pNOME_kit = "Kit Anual";
                }
                jtotalRegistros.setText(Integer.toString(pTOTAL_produtos)); // Converter inteiro em string para exibir na tela 
                dadosProduto.addRow(new Object[]{pp.getIdRegProdutoKC(), pp.getIdRegistroComp(), pDATA_previsao, pDATA_pagamento, pNOME_kit, pp.getCodigoProduto(), pp.getDescricaoProduto(), pp.getQuantProd()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaProdutosKitCompleto.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(2).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(3).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(5).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(7).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaConsultaKitsEntregueNaoEntregues.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LISTA_KIT_pago() {
        DefaultTableModel dadosProduto = (DefaultTableModel) jTabelaProdutosKitCompleto.getModel();
        AlertaKitHigiente p = new AlertaKitHigiente();
        try {
            for (AlertaKitHigiente pp : CONTROLE_LISTA_kitsPago.read()) {
                pDATA_previsao = pp.getDataPrevisao().toString();
                String dia = pDATA_previsao.substring(8, 10);
                String mes = pDATA_previsao.substring(5, 7);
                String ano = pDATA_previsao.substring(0, 4);
                pDATA_previsao = dia + "/" + mes + "/" + ano;
                //
                pDATA_pagamento = pp.getDataPagamento().toString();
                String diap = pDATA_pagamento.substring(8, 10);
                String mesp = pDATA_pagamento.substring(5, 7);
                String anop = pDATA_pagamento.substring(0, 4);
                pDATA_pagamento = diap + "/" + mesp + "/" + anop;
                //
                pKIT_inicial = pp.getKitInicial();
                pKIT_decendial = pp.getKitDecendial();
                pKIT_quinzenal = pp.getKitQuinzenal();
                pKIT_mensal = pp.getKitMensal();
                pKIT_semestral = pp.getKitSemestral();
                pKIT_anual = pp.getKitAnual();
                if (pKIT_inicial == 1) {
                    pNOME_kit = "Kit Inicial";
                } else if (pKIT_decendial == 1) {
                    pNOME_kit = "Kit Decendial";
                } else if (pKIT_quinzenal == 1) {
                    pNOME_kit = "Kit Quinzenal";
                } else if (pKIT_mensal == 1) {
                    pNOME_kit = "Kit Mensal";
                } else if (pKIT_semestral == 1) {
                    pNOME_kit = "Kit Semestral";
                } else if (pKIT_anual == 1) {
                    pNOME_kit = "Kit Anual";
                }
                jtotalRegistros.setText(Integer.toString(pTOTAL_produtos)); // Converter inteiro em string para exibir na tela 
                dadosProduto.addRow(new Object[]{pp.getIdRegProdutoKC(), pp.getIdRegistroComp(), pDATA_previsao, pDATA_pagamento, pNOME_kit, pp.getCodigoProduto(), pp.getDescricaoProduto(), pp.getQuantProd()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaProdutosKitCompleto.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(2).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(3).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(5).setCellRenderer(centralizado);
                jTabelaProdutosKitCompleto.getColumnModel().getColumn(7).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaConsultaKitsEntregueNaoEntregues.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
