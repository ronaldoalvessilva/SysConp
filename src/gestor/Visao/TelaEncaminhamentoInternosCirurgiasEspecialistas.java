/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEncaminhaInternos;
import gestor.Controle.ControleItensEncaminhamentoInternos;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.EncaminhamentoCirurgiasEspecialistas;
import gestor.Modelo.ItensEncaminhamentoInterno;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.descricaoUnidade;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloEnfermaria.codAlterarENF;
import static gestor.Visao.TelaModuloEnfermaria.codExcluirENF;
import static gestor.Visao.TelaModuloEnfermaria.codGravarENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeGrupoENF;
import static gestor.Visao.TelaModuloEnfermaria.nomeTelaENF;
import static gestor.Visao.TelaModuloEnfermaria.telaEncamInterCiruEspeManuENF;
import static gestor.Visao.TelaModuloEnfermaria.telaEncamInterCiruEspeManuEncaENF;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import static gestor.Visao.TelaModuloEnfermaria.codConsultarENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserENF;
import static gestor.Visao.TelaModuloEnfermaria.codUserAcessoENF;
import static gestor.Visao.TelaModuloEnfermaria.codigoUserGroupENF;
import static gestor.Visao.TelaModuloEnfermaria.codAbrirENF;
import static gestor.Visao.TelaModuloEnfermaria.codIncluirENF;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;

/**
 *
 * @author ronaldo
 */
public class TelaEncaminhamentoInternosCirurgiasEspecialistas extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EncaminhamentoCirurgiasEspecialistas objEncaCir = new EncaminhamentoCirurgiasEspecialistas();
    ControleEncaminhaInternos control = new ControleEncaminhaInternos();
    ItensEncaminhamentoInterno objItensEnca = new ItensEncaminhamentoInterno();
    ControleItensEncaminhamentoInternos controle = new ControleItensEncaminhamentoInternos();
    //   
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Enfermaria:Encaminhamento de Internos Cirurgia/Especialidades:Manutenção";
    String nomeModuloTela1 = "Enfermaria:Encaminhamento de Internos Cirurgia/Especialidades:Encaminhamento";
    //
    int flag;
    int acao;
    String dataInicial, dataFinal, dataEmissao, dataValidade;
    String dataEntrada;
    String statusMov;
    String horaMov;
    String dataModFinal;
    int count;
    String data1, data2;
    String codEnca;
    int tipoEncaminhaCE;
    String caminho;

    /**
     * Creates new form TelaEncaminhamentoInternosCirurgiasEspecialistas
     */
    public TelaEncaminhamentoInternosCirurgiasEspecialistas() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupEnca = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPesqNomeInternoOdonto = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jIDPesqAtend = new javax.swing.JTextField();
        jBtIdPesqAtend = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaEncaminharInterno = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdEncaminha = new javax.swing.JTextField();
        jStatusEnca = new javax.swing.JTextField();
        jDataEnca = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jIdInternoCrcEnca = new javax.swing.JTextField();
        jMatriculaPenalEnca = new javax.swing.JTextField();
        jNomeInternoEnca = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPavilhaEnca = new javax.swing.JTextField();
        jCelaEnca = new javax.swing.JTextField();
        jBtPesqInternoEnca = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jNomeMaeInterno = new javax.swing.JTextField();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jBtFinalizar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jFotoInternoEnca = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jBtImpressao = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jRadioBtEncaCirurgias = new javax.swing.JRadioButton();
        jRadioBtEspecial = new javax.swing.JRadioButton();
        jEncaminhaCirurgiaEspecialista = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jHoraSaida = new javax.swing.JFormattedTextField();
        jDataRetorno = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jHoraRetorno = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jIdEnca = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jDestino = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jMotivo = new javax.swing.JTextArea();
        jRadioBtEmergencia = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaItensEncaminhamento = new javax.swing.JTable();
        jBtNovoEnca = new javax.swing.JButton();
        jBtAlterarEnca = new javax.swing.JButton();
        jBtExcluirEnca = new javax.swing.JButton();
        jBtSalvarEnca = new javax.swing.JButton();
        jBtCancelarEnca = new javax.swing.JButton();
        jBtAuditoriaEnca = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Encaminhamento de Internos para Cirurgias/Especialistas");
        setToolTipText("");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setText("Data Inicial:");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel49.setText("Data Final:");

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("Nome :");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jPesqNomeInternoOdonto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("Código:");

        jIDPesqAtend.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqAtend.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtIdPesqAtend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIdPesqAtend.setContentAreaFilled(false);
        jBtIdPesqAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIdPesqAtendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jIDPesqAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtIdPesqAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInternoOdonto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)))
                .addGap(36, 36, 36))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtIdPesqAtend)
                    .addComponent(jIDPesqAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBox1)
                    .addComponent(jBtPesqData)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInternoOdonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(jBtPesqNomeInterno))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaEncaminharInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEncaminharInterno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome Completo do Interno"
            }
        ));
        jTabelaEncaminharInterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEncaminharInternoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabelaEncaminharInterno);
        if (jTabelaEncaminharInterno.getColumnModel().getColumnCount() > 0) {
            jTabelaEncaminharInterno.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaEncaminharInterno.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaEncaminharInterno.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaEncaminharInterno.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaEncaminharInterno.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaEncaminharInterno.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaEncaminharInterno.getColumnModel().getColumn(3).setMinWidth(350);
            jTabelaEncaminharInterno.getColumnModel().getColumn(3).setMaxWidth(350);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Observação");

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jIdEncaminha.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdEncaminha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdEncaminha.setEnabled(false);

        jStatusEnca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusEnca.setForeground(new java.awt.Color(255, 0, 0));
        jStatusEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusEnca.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jStatusEnca.setEnabled(false);

        jDataEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEnca.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Matricula Penal");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Nome Completo do Interno");

        jIdInternoCrcEnca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrcEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrcEnca.setEnabled(false);

        jMatriculaPenalEnca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jMatriculaPenalEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMatriculaPenalEnca.setEnabled(false);

        jNomeInternoEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoEnca.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Pavilhão");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Cela");

        jPavilhaEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPavilhaEnca.setEnabled(false);

        jCelaEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCelaEnca.setEnabled(false);

        jBtPesqInternoEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInternoEnca.setToolTipText("Pesquisar Interno");
        jBtPesqInternoEnca.setContentAreaFilled(false);
        jBtPesqInternoEnca.setEnabled(false);
        jBtPesqInternoEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoEncaActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nome da Mãe");

        jNomeMaeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeMaeInterno.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jCelaEnca)
                    .addComponent(jPavilhaEnca, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeMaeInterno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInternoEnca, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jIdInternoCrcEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jMatriculaPenalEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtPesqInternoEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addGap(124, 124, 124))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jIdEncaminha, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jStatusEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(7, 7, 7)
                            .addComponent(jIdEncaminha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(7, 7, 7)
                            .addComponent(jStatusEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqInternoEnca)
                    .addComponent(jMatriculaPenalEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdInternoCrcEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeMaeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPavilhaEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCelaEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/refresh-reload-icone-6258-16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/low-security-breach-icone-4155-16.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoEnca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternoEnca, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jBtImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressao.setText("Impressão");
        jBtImpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImpressaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jBtImpressao)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtImpressao)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtAuditoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSair, jBtSalvar});

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        buttonGroupEnca.add(jRadioBtEncaCirurgias);
        jRadioBtEncaCirurgias.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtEncaCirurgias.setForeground(new java.awt.Color(255, 0, 0));
        jRadioBtEncaCirurgias.setSelected(true);
        jRadioBtEncaCirurgias.setText("Encaminhamento para Cirurgias");
        jRadioBtEncaCirurgias.setEnabled(false);

        buttonGroupEnca.add(jRadioBtEspecial);
        jRadioBtEspecial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtEspecial.setForeground(new java.awt.Color(0, 0, 255));
        jRadioBtEspecial.setText("Encaminhamento para Especialistas");
        jRadioBtEspecial.setEnabled(false);

        jEncaminhaCirurgiaEspecialista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jEncaminhaCirurgiaEspecialista.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Descrição do Encaminhamento");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Motivo");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Data Saída");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Hora Saída");

        jHoraSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraSaida.setEnabled(false);

        jDataRetorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataRetorno.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setText("Data Retorno");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 153, 0));
        jLabel13.setText("Hora Retorno");

        jHoraRetorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHoraRetorno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHoraRetorno.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Registro");

        jIdEnca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdEnca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdEnca.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Destino");

        jDestino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDestino.setEnabled(false);

        jMotivo.setColumns(20);
        jMotivo.setRows(5);
        jMotivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMotivo.setEnabled(false);
        jScrollPane2.setViewportView(jMotivo);

        buttonGroupEnca.add(jRadioBtEmergencia);
        jRadioBtEmergencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBtEmergencia.setForeground(new java.awt.Color(0, 153, 0));
        jRadioBtEmergencia.setText("Encaminhamento de Emergência");
        jRadioBtEmergencia.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDestino)
                    .addComponent(jEncaminhaCirurgiaEspecialista)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel14)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(46, 46, 46)
                                .addComponent(jRadioBtEmergencia))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDataSaida, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jHoraSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDataRetorno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel12)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jHoraRetorno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jIdEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioBtEncaCirurgias)
                            .addComponent(jRadioBtEspecial))))
                .addGap(21, 21, 21))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jHoraRetorno, jHoraSaida});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIdEnca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jRadioBtEncaCirurgias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioBtEspecial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioBtEmergencia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEncaminhaCirurgiaEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHoraSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHoraRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabelaItensEncaminhamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensEncaminhamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Registro", "Descrição do Encaminhamento", "Data Saída", "Hora Saída", "Data Retorno", "Hora Rretorno"
            }
        ));
        jTabelaItensEncaminhamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensEncaminhamentoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaItensEncaminhamento);
        if (jTabelaItensEncaminhamento.getColumnModel().getColumnCount() > 0) {
            jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(1).setMinWidth(250);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(1).setMaxWidth(250);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setMinWidth(70);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setMaxWidth(70);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setMinWidth(80);
            jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jBtNovoEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoEnca.setToolTipText("Novo");
        jBtNovoEnca.setEnabled(false);
        jBtNovoEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoEncaActionPerformed(evt);
            }
        });

        jBtAlterarEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/refresh-reload-icone-6258-16.png"))); // NOI18N
        jBtAlterarEnca.setToolTipText("Alterar");
        jBtAlterarEnca.setEnabled(false);
        jBtAlterarEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarEncaActionPerformed(evt);
            }
        });

        jBtExcluirEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirEnca.setToolTipText("Excluir");
        jBtExcluirEnca.setEnabled(false);
        jBtExcluirEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirEncaActionPerformed(evt);
            }
        });

        jBtSalvarEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarEnca.setToolTipText("Gravar");
        jBtSalvarEnca.setEnabled(false);
        jBtSalvarEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarEncaActionPerformed(evt);
            }
        });

        jBtCancelarEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarEnca.setToolTipText("Cancelar");
        jBtCancelarEnca.setEnabled(false);
        jBtCancelarEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarEncaActionPerformed(evt);
            }
        });

        jBtAuditoriaEnca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaEnca.setToolTipText("Auditoria");
        jBtAuditoriaEnca.setContentAreaFilled(false);
        jBtAuditoriaEnca.setEnabled(false);
        jBtAuditoriaEnca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaEncaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jBtNovoEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterarEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvarEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelarEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAuditoriaEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtAuditoriaEnca)
                    .addComponent(jBtCancelarEnca)
                    .addComponent(jBtSalvarEnca)
                    .addComponent(jBtExcluirEnca)
                    .addComponent(jBtAlterarEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtNovoEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarEnca, jBtCancelarEnca, jBtExcluirEnca, jBtNovoEnca, jBtSalvarEnca});

        jTabbedPane1.addTab("Encaminhamentos", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 40, 532, 503);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        preencherTabelaEncaminhamento("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataEnca BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        preencherTabelaEncaminhamento("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataEnca BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaEncaminhamento("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        preencherTabelaEncaminhamento("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInternoOdonto.getText() + "%'");
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jBtIdPesqAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIdPesqAtendActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        preencherTabelaEncaminhamento("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE IdCart='" + jIDPesqAtend.getText() + "'");
    }//GEN-LAST:event_jBtIdPesqAtendActionPerformed

    private void jTabelaEncaminharInternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEncaminharInternoMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaEncaminharInterno.getValueAt(jTabelaEncaminharInterno.getSelectedRow(), 0);
            jIDPesqAtend.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtNovoEnca.setEnabled(true);
            //
            limparCampos();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca='" + IdLanc + "'");
                conecta.rs.first();
                jIdEncaminha.setText(String.valueOf(conecta.rs.getInt("IdEnca")));
                jStatusEnca.setText(conecta.rs.getString("StatusEnca"));
                jDataEnca.setDate(conecta.rs.getDate("DataEnca"));
                jIdInternoCrcEnca.setText(conecta.rs.getString("IdInternoCrc"));
                // FOTO DO INTERNO
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoInternoEnca.setIcon(i);
                jFotoInternoEnca.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInternoEnca.getWidth(), jFotoInternoEnca.getHeight(), Image.SCALE_DEFAULT)));
                //
                jNomeInternoEnca.setText(conecta.rs.getString("NomeInternoCrc"));
                jNomeMaeInterno.setText(conecta.rs.getString("MaeInternoCrc"));
                jMatriculaPenalEnca.setText(conecta.rs.getString("MatriculaCrc"));
                jPavilhaEnca.setText(conecta.rs.getString("DescricaoPav"));
                jCelaEnca.setText(conecta.rs.getString("EndCelaPav"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
            }
            preencherTabelaItensEncaminhamento("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                    + "INNER JOIN ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                    + "ON ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca=ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca "
                    + "WHERE ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca='" + jIdEncaminha.getText() + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaEncaminharInternoMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuENF) && codIncluirENF == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 1;
            Novo();
            corCampos();
            limparTabelaItensCartaoVacina();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuENF) && codAlterarENF == 1) {
            objEncaCir.setStatusEnca(jStatusEnca.getText());
            if (jStatusEnca.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuENF) && codExcluirENF == 1) {
            verificarItens();
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEncaCir.setStatusEnca(jStatusEnca.getText());
            if (jStatusEnca.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                if (jIdEncaminha.getText().equals(codEnca)) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, existe encaminhamentos para esse registro.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objEncaCir.setIdEnca(Integer.valueOf(jIdEncaminha.getText()));
                        control.excluirEncaminhamento(objEncaCir);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Excluir();
                        JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuENF) && codGravarENF == 1) {
            if (jDataEnca.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do documento de encaminhamento.");
            } else if (jNomeInternoEnca.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno.");
            } else {
                objEncaCir.setIdInternoCrc(Integer.valueOf(jIdInternoCrcEnca.getText()));
                objEncaCir.setNomeInternoCrc(jNomeInternoEnca.getText());
                objEncaCir.setStatusEnca(jStatusEnca.getText());
                objEncaCir.setDataEnca(jDataEnca.getDate());
                objEncaCir.setObservacao(jObservacao.getText());
                if (acao == 1) {
                    objEncaCir.setUsuarioInsert(nameUser);
                    objEncaCir.setDataInsert(dataModFinal);
                    objEncaCir.setHorarioInsert(horaMov);
                    control.incluirEncaminhamento(objEncaCir);
                    buscarCodigo();
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
                if (acao == 2) {
                    objEncaCir.setUsuarioUp(nameUser);
                    objEncaCir.setDataUp(dataModFinal);
                    objEncaCir.setHorarioUp(horaMov);
                    objEncaCir.setIdEnca(Integer.valueOf(jIdEncaminha.getText()));
                    control.alterarEncaminhamento(objEncaCir);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    Salvar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        Integer rows = jTabelaItensEncaminhamento.getModel().getRowCount();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível finalizar esse lançamento, não existe internos relacionados\na esse registro.");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS WHERE IdEnca='" + jIdEncaminha.getText() + "'");
                conecta.rs.first();
                jStatusEnca.setText(conecta.rs.getString("StatusEnca"));
                if (jStatusEnca.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Registro já foi finalizado");
                } else {
                    Finalizar();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível finalizar esse registro.\nERRO: " + ex);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEncaminhamentoInternos objAudiEnca = new TelaAuditoriaEncaminhamentoInternos();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiEnca);
        objAudiEnca.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtPesqInternoEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoEncaActionPerformed
        // TODO add your handling code here:
        TelaPesqInternoEncaminhamentoCirurgiaEspecialista objPesqIntEnca = new TelaPesqInternoEncaminhamentoCirurgiaEspecialista();
        TelaModuloEnfermaria.jPainelMedico.add(objPesqIntEnca);
        objPesqIntEnca.show();
    }//GEN-LAST:event_jBtPesqInternoEncaActionPerformed

    private void jBtNovoEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoEncaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuEncaENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuEncaENF) && codIncluirENF == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEncaCir.setStatusEnca(jStatusEnca.getText());
            if (jStatusEnca.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoEnca();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoEncaActionPerformed

    private void jBtAlterarEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarEncaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuEncaENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuEncaENF) && codAlterarENF == 1) {
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEncaCir.setStatusEnca(jStatusEnca.getText());
            if (jStatusEnca.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser modificado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                AlterarEnca();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarEncaActionPerformed

    private void jBtExcluirEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirEncaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuEncaENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuEncaENF) && codExcluirENF == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEncaCir.setStatusEnca(jStatusEnca.getText());
            if (jStatusEnca.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo encontra-se FINALIZADO");
            } else {
                if (jStatusEnca.getText().equals("FINALIZADO")) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objItensEnca.setIdItemEnca(Integer.valueOf(jIdEnca.getText()));
                        controle.excluirItensEncaminhamento(objItensEnca);
                        objLog1();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        ExcluirEnca();
                        preencherTabelaItensEncaminhamento("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                                + "INNER JOIN ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                                + "ON ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca=ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca "
                                + "WHERE ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca='" + jIdEncaminha.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirEncaActionPerformed

    private void jBtSalvarEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarEncaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEncamInterCiruEspeManuEncaENF);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoENF.equals("ADMINISTRADORES") || codigoUserENF == codUserAcessoENF && nomeTelaENF.equals(telaEncamInterCiruEspeManuEncaENF) && codGravarENF == 1) {
            if (jEncaminhaCirurgiaEspecialista.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a especificação do encaminhamento do interno");
            } else if (jDataSaida.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de Saida do encaminhamento.");
            } else if (jHoraSaida.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a hora de saida do encaminhamento.");
            } else {
                if (jRadioBtEncaCirurgias.isSelected()) {
                    tipoEncaminhaCE = 0;
                } else if (jRadioBtEspecial.isSelected()) {
                    tipoEncaminhaCE = 1;
                } else if (jRadioBtEmergencia.isSelected()) {
                    tipoEncaminhaCE = 2;
                }
                objItensEnca.setIdEnca(Integer.valueOf(jIdEncaminha.getText()));
                objItensEnca.setTipoEnca(tipoEncaminhaCE);
                objItensEnca.setDescricaoEncaminhamento(jEncaminhaCirurgiaEspecialista.getText());
                objItensEnca.setDataSaida(jDataSaida.getDate());
                objItensEnca.setHoraSaida(jHoraSaida.getText());
                objItensEnca.setDataRetorno(jDataRetorno.getDate());
                objItensEnca.setHoraRetorno(jHoraRetorno.getText());
                objItensEnca.setMotivo(jMotivo.getText());
                objItensEnca.setDestino(jDestino.getText());
                if (acao == 3) {
                    objItensEnca.setUsuarioInsert(nameUser);
                    objItensEnca.setDataInsert(dataModFinal);
                    objItensEnca.setHorarioInsert(horaMov);
                    controle.incluirItensEncaminhamento(objItensEnca);
                    buscarCodigoEncaminha();
                    //
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarEnca();
                    preencherTabelaItensEncaminhamento("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                            + "INNER JOIN ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                            + "ON ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca=ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca "
                            + "WHERE ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca='" + jIdEncaminha.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objItensEnca.setUsuarioUp(nameUser);
                    objItensEnca.setDataUp(dataModFinal);
                    objItensEnca.setHorarioUp(horaMov);
                    objItensEnca.setIdItemEnca(Integer.valueOf(jIdEnca.getText()));
                    controle.alterarItensEncaminhamento(objItensEnca);
                    //
                    objLog1();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarEnca();
                    preencherTabelaItensEncaminhamento("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                            + "INNER JOIN ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                            + "ON ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca=ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca "
                            + "WHERE ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca='" + jIdEncaminha.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarEncaActionPerformed

    private void jBtCancelarEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarEncaActionPerformed
        // TODO add your handling code here:
        CancelarEnca();
    }//GEN-LAST:event_jBtCancelarEncaActionPerformed

    private void jBtAuditoriaEncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaEncaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEncaminhamentoInternosItens objAudiItens = new TelaAuditoriaEncaminhamentoInternosItens();
        TelaModuloEnfermaria.jPainelMedico.add(objAudiItens);
        objAudiItens.show();
    }//GEN-LAST:event_jBtAuditoriaEncaActionPerformed

    private void jTabelaItensEncaminhamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensEncaminhamentoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String idRegistro = "" + jTabelaItensEncaminhamento.getValueAt(jTabelaItensEncaminhamento.getSelectedRow(), 0);
            jIdEnca.setText(idRegistro);
            //
            jBtNovoEnca.setEnabled(true);
            jBtAlterarEnca.setEnabled(true);
            jBtExcluirEnca.setEnabled(true);
            jBtSalvarEnca.setEnabled(!true);
            jBtCancelarEnca.setEnabled(true);
            jBtAuditoriaEnca.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                        + "INNER JOIN ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                        + "ON ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca=ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca "
                        + "WHERE ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdItemEnca='" + idRegistro + "'");
                conecta.rs.first();
                jIdEnca.setText(conecta.rs.getString("IdItemEnca"));
                tipoEncaminhaCE = conecta.rs.getInt("TipoEnca");
                if (tipoEncaminhaCE == 0) {
                    jRadioBtEncaCirurgias.setSelected(true);
                } else if (tipoEncaminhaCE == 1) {
                    jRadioBtEspecial.setSelected(true);
                } else if (tipoEncaminhaCE == 2) {
                    jRadioBtEmergencia.setSelected(true);
                }
                jEncaminhaCirurgiaEspecialista.setText(conecta.rs.getString("DescricaoEncaminhamento"));
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jHoraSaida.setText(conecta.rs.getString("HoraSaida"));
                jDataRetorno.setDate(conecta.rs.getDate("DataRetorno"));
                jHoraRetorno.setText(conecta.rs.getString("HoraRetorno"));
                jMotivo.setText(conecta.rs.getString("Motivo"));
                jDestino.setText(conecta.rs.getString("Destino"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível exibir registro.\nERRO: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaItensEncaminhamentoMouseClicked

    private void jBtImpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImpressaoActionPerformed
        // TODO add your handling code here:
        Integer rows = jTabelaItensEncaminhamento.getModel().getRowCount();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível imprimir a encaminhamento. Não existe encaminhamentos cadastrados.");
        } else {
            try {
                conecta.abrirConexao();
                String path = "reports/RelatorioEncaminhamentoEmergenciaInterno.jasper";
                conecta.executaSQL("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                        + "INNER JOIN ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS "
                        + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca=ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN PAVILHAO "
                        + "ON CELAS.IdPav=PAVILHAO.IdPav "
                        + "WHERE ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS.IdEnca='" + jIdEncaminha.getText() + "'");
                HashMap parametros = new HashMap();
                parametros.put("codigoReg", jIdEncaminha.getText());
                parametros.put("nomeUsuario", nameUser);
                parametros.put("descricaoUnidade", descricaoUnidade);
                JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
                JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
                JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao
                jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
                jv.setTitle("Relatório de Encaminhamento de Emergência");
                jv.setVisible(true); // Chama o relatorio para ser visualizado             
                jv.toFront(); // Traz o relatorio para frente da aplicação                           
            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jBtImpressaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupEnca;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarEnca;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaEnca;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarEnca;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirEnca;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtIdPesqAtend;
    private javax.swing.JButton jBtImpressao;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoEnca;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqInternoEnca;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarEnca;
    public static javax.swing.JTextField jCelaEnca;
    private javax.swing.JCheckBox jCheckBox1;
    private com.toedter.calendar.JDateChooser jDataEnca;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    private com.toedter.calendar.JDateChooser jDataRetorno;
    private com.toedter.calendar.JDateChooser jDataSaida;
    private javax.swing.JTextField jDestino;
    private javax.swing.JTextField jEncaminhaCirurgiaEspecialista;
    public static javax.swing.JLabel jFotoInternoEnca;
    private javax.swing.JFormattedTextField jHoraRetorno;
    private javax.swing.JFormattedTextField jHoraSaida;
    private javax.swing.JTextField jIDPesqAtend;
    public static javax.swing.JTextField jIdEnca;
    public static javax.swing.JTextField jIdEncaminha;
    public static javax.swing.JTextField jIdInternoCrcEnca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jMatriculaPenalEnca;
    private javax.swing.JTextArea jMotivo;
    public static javax.swing.JTextField jNomeInternoEnca;
    public static javax.swing.JTextField jNomeMaeInterno;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    public static javax.swing.JTextField jPavilhaEnca;
    private javax.swing.JTextField jPesqNomeInternoOdonto;
    private javax.swing.JRadioButton jRadioBtEmergencia;
    private javax.swing.JRadioButton jRadioBtEncaCirurgias;
    private javax.swing.JRadioButton jRadioBtEspecial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jStatusEnca;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaEncaminharInterno;
    private javax.swing.JTable jTabelaItensEncaminhamento;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
        //
        jMotivo.setLineWrap(true);
        jMotivo.setWrapStyleWord(true);
        //        
        try {
            MaskFormatter horaSaida = new MaskFormatter("##:##");
            jHoraSaida.setFormatterFactory(new DefaultFormatterFactory(horaSaida));
            //
            MaskFormatter horaRetorno = new MaskFormatter("##:##");
            jHoraRetorno.setFormatterFactory(new DefaultFormatterFactory(horaRetorno));
        } catch (ParseException ex) {
            Logger.getLogger(TelaEncaminhamentoInternosCirurgiasEspecialistas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void corCampos() {
        jIdEncaminha.setBackground(Color.white);
        jStatusEnca.setBackground(Color.white);
        jDataEnca.setBackground(Color.white);
        jIdInternoCrcEnca.setBackground(Color.white);
        jMatriculaPenalEnca.setBackground(Color.white);
        jNomeInternoEnca.setBackground(Color.white);
        jNomeMaeInterno.setBackground(Color.white);
        jPavilhaEnca.setBackground(Color.white);
        jCelaEnca.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        // ABA ENCAMINHAMENTO
        jIdEnca.setBackground(Color.white);
        jEncaminhaCirurgiaEspecialista.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jHoraSaida.setBackground(Color.white);
        jDataRetorno.setBackground(Color.white);
        jHoraRetorno.setBackground(Color.white);
        jMotivo.setBackground(Color.white);
        jDestino.setBackground(Color.white);
    }

    public void limparCampos() {
        jIdEnca.setText("");
        jStatusEnca.setText("");
        jDataEnca.setDate(null);
        jIdInternoCrcEnca.setText("");
        jFotoInternoEnca.setIcon(null);
        jMatriculaPenalEnca.setText("");
        jNomeInternoEnca.setText("");
        jPavilhaEnca.setText("");
        jCelaEnca.setText("");
        jObservacao.setText("");
        //
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
    }

    public void Novo() {
        jIdEnca.setText("");
        jStatusEnca.setText("ABERTO");
        jDataEnca.setCalendar(Calendar.getInstance());
        jIdInternoCrcEnca.setText("");
        jFotoInternoEnca.setIcon(null);
        jMatriculaPenalEnca.setText("");
        jNomeInternoEnca.setText("");
        jPavilhaEnca.setText("");
        jCelaEnca.setText("");
        jObservacao.setText("");
        //
        jDataEnca.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInternoEnca.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA ENCAMINHAMENTO
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
        //
        jIdEnca.setEnabled(!true);
        jEncaminhaCirurgiaEspecialista.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHoraSaida.setEnabled(!true);
        jDataRetorno.setEnabled(!true);
        jHoraRetorno.setEnabled(!true);
        jRadioBtEncaCirurgias.setEnabled(!true);
        jRadioBtEspecial.setEnabled(!true);
        jMotivo.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtNovoEnca.setEnabled(!true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
    }

    public void Alterar() {
        jDataEnca.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInternoEnca.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA ENCAMINHAMENTO
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
        //
        jIdEnca.setEnabled(!true);
        jEncaminhaCirurgiaEspecialista.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHoraSaida.setEnabled(!true);
        jDataRetorno.setEnabled(!true);
        jHoraRetorno.setEnabled(!true);
        jRadioBtEncaCirurgias.setEnabled(!true);
        jRadioBtEspecial.setEnabled(!true);
        jMotivo.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtNovoEnca.setEnabled(!true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
    }

    public void Excluir() {
        jIdEnca.setText("");
        jStatusEnca.setText("");
        jDataEnca.setDate(null);
        jIdInternoCrcEnca.setText("");
        jFotoInternoEnca.setIcon(null);
        jMatriculaPenalEnca.setText("");
        jNomeInternoEnca.setText("");
        jNomeMaeInterno.setText("");
        jPavilhaEnca.setText("");
        jCelaEnca.setText("");
        jObservacao.setText("");
        //
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // ABA ENCAMINHAMENTO
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
        //
        jIdEnca.setEnabled(!true);
        jEncaminhaCirurgiaEspecialista.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHoraSaida.setEnabled(!true);
        jDataRetorno.setEnabled(!true);
        jHoraRetorno.setEnabled(!true);
        jRadioBtEncaCirurgias.setEnabled(!true);
        jRadioBtEspecial.setEnabled(!true);
        jMotivo.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtNovoEnca.setEnabled(!true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
    }

    public void Salvar() {
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoEnca.setEnabled(true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIdEncaminha.getText().equals("")) {
            jStatusEnca.setText("");
            jDataEnca.setDate(null);
            jIdInternoCrcEnca.setText("");
            jFotoInternoEnca.setIcon(null);
            jMatriculaPenalEnca.setText("");
            jNomeInternoEnca.setText("");
            jNomeMaeInterno.setText("");
            jPavilhaEnca.setText("");
            jCelaEnca.setText("");
            jObservacao.setText("");
            //
            jDataEnca.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqInternoEnca.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            // ABA ENCAMINHAMENTO
            jBtNovoEnca.setEnabled(!true);
            jBtAlterarEnca.setEnabled(!true);
            jBtExcluirEnca.setEnabled(!true);
            jBtSalvarEnca.setEnabled(!true);
            jBtCancelarEnca.setEnabled(!true);
            jBtAuditoriaEnca.setEnabled(!true);
        } else {
            jDataEnca.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqInternoEnca.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            // ABA ENCAMINHAMENTO       
            jBtNovoEnca.setEnabled(true);
            jBtAlterarEnca.setEnabled(!true);
            jBtExcluirEnca.setEnabled(!true);
            jBtSalvarEnca.setEnabled(!true);
            jBtCancelarEnca.setEnabled(!true);
            jBtAuditoriaEnca.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS");
            conecta.rs.last();
            jIdEncaminha.setText(conecta.rs.getString("IdEnca"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse registro for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o registro selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objEncaCir.setStatusEnca(statusEntrada);
            objEncaCir.setIdEnca(Integer.parseInt(jIdEncaminha.getText()));
            control.finalizarEncaminhamento(objEncaCir);
            jStatusEnca.setText(statusEntrada);
            //
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
        }
    }

    public void verificarItens() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS WHERE IdEnca='" + jIdEncaminha.getText() + "'");
            conecta.rs.first();
            codEnca = conecta.rs.getString("IdEnca");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovoEnca() {
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("00:00");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("00:00");
        jMotivo.setText("");
        jDestino.setText("");
        //       
        jEncaminhaCirurgiaEspecialista.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHoraSaida.setEnabled(true);
        jDataRetorno.setEnabled(true);
        jHoraRetorno.setEnabled(true);
        jRadioBtEncaCirurgias.setEnabled(true);
        jRadioBtEspecial.setEnabled(true);
        jRadioBtEmergencia.setEnabled(true);
        jMotivo.setEnabled(true);
        jDestino.setEnabled(true);
        //
        jBtNovoEnca.setEnabled(!true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(true);
        jBtCancelarEnca.setEnabled(true);
        jBtAuditoriaEnca.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void AlterarEnca() {
        jEncaminhaCirurgiaEspecialista.setEnabled(true);
        jDataSaida.setEnabled(true);
        jHoraSaida.setEnabled(true);
        jDataRetorno.setEnabled(true);
        jHoraRetorno.setEnabled(true);
        jRadioBtEncaCirurgias.setEnabled(true);
        jRadioBtEspecial.setEnabled(true);
        jRadioBtEmergencia.setEnabled(true);
        jMotivo.setEnabled(true);
        jDestino.setEnabled(true);
        //
        jBtNovoEnca.setEnabled(!true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(true);
        jBtCancelarEnca.setEnabled(true);
        jBtAuditoriaEnca.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void ExcluirEnca() {
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
        //       
        jEncaminhaCirurgiaEspecialista.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHoraSaida.setEnabled(!true);
        jDataRetorno.setEnabled(!true);
        jHoraRetorno.setEnabled(!true);
        jRadioBtEncaCirurgias.setEnabled(!true);
        jRadioBtEspecial.setEnabled(!true);
        jRadioBtEmergencia.setEnabled(!true);
        jMotivo.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtNovoEnca.setEnabled(true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void SalvarEnca() {
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
        //       
        jEncaminhaCirurgiaEspecialista.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHoraSaida.setEnabled(!true);
        jDataRetorno.setEnabled(!true);
        jHoraRetorno.setEnabled(!true);
        jRadioBtEncaCirurgias.setEnabled(!true);
        jRadioBtEspecial.setEnabled(!true);
        jRadioBtEmergencia.setEnabled(!true);
        jMotivo.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtNovoEnca.setEnabled(true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void CancelarEnca() {
        jIdEnca.setText("");
        jEncaminhaCirurgiaEspecialista.setText("");
        jDataSaida.setDate(null);
        jHoraSaida.setText("");
        jDataRetorno.setDate(null);
        jHoraRetorno.setText("");
        jMotivo.setText("");
        jDestino.setText("");
        //       
        jEncaminhaCirurgiaEspecialista.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jHoraSaida.setEnabled(!true);
        jDataRetorno.setEnabled(!true);
        jHoraRetorno.setEnabled(!true);
        jRadioBtEncaCirurgias.setEnabled(!true);
        jRadioBtEspecial.setEnabled(!true);
        jRadioBtEmergencia.setEnabled(!true);
        jMotivo.setEnabled(!true);
        jDestino.setEnabled(!true);
        //
        jBtNovoEnca.setEnabled(true);
        jBtAlterarEnca.setEnabled(!true);
        jBtExcluirEnca.setEnabled(!true);
        jBtSalvarEnca.setEnabled(!true);
        jBtCancelarEnca.setEnabled(!true);
        jBtAuditoriaEnca.setEnabled(!true);
        // ABA MANUTENÇÃO
        jDataEnca.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoEnca.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void buscarCodigoEncaminha() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_ENCAMINHAMENTO_CIRURGIAS_ESPECIALISTAS");
            conecta.rs.last();
            jIdEnca.setText(conecta.rs.getString("IdItemEnca"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void preencherTabelaEncaminhamento(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome Completo do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data de emissão
                dataEmissao = conecta.rs.getString("DataEnca");
                String dia = dataEmissao.substring(8, 10);
                String mes = dataEmissao.substring(5, 7);
                String ano = dataEmissao.substring(0, 4);
                dataEmissao = dia + "/" + mes + "/" + ano;
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdEnca"), dataEmissao, conecta.rs.getString("StatusEnca"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEncaminharInterno.setModel(modelo);
        jTabelaEncaminharInterno.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaEncaminharInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEncaminharInterno.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEncaminharInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEncaminharInterno.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEncaminharInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEncaminharInterno.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEncaminharInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEncaminharInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaEncaminharInterno.setAutoResizeMode(jTabelaEncaminharInterno.AUTO_RESIZE_OFF);
        jTabelaEncaminharInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome Completo do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEncaminharInterno.setModel(modelo);
        jTabelaEncaminharInterno.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaEncaminharInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEncaminharInterno.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEncaminharInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEncaminharInterno.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEncaminharInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEncaminharInterno.getColumnModel().getColumn(3).setPreferredWidth(350);
        jTabelaEncaminharInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEncaminharInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaEncaminharInterno.setAutoResizeMode(jTabelaEncaminharInterno.AUTO_RESIZE_OFF);
        jTabelaEncaminharInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEncaminharInterno.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEncaminharInterno.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEncaminharInterno.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItensEncaminhamento(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Descrição do Encaminhamento", "Data Saída", "Hora Saída", "Data Retrono", "Hora Retorno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                data1 = conecta.rs.getString("DataSaida");
                String dia1 = data1.substring(8, 10);
                String mes1 = data1.substring(5, 7);
                String ano1 = data1.substring(0, 4);
                data1 = dia1 + "/" + mes1 + "/" + ano1;
                //
                data2 = conecta.rs.getString("DataRetorno");
                if (data2 != null) {
                    String dia2 = data2.substring(8, 10);
                    String mes2 = data2.substring(5, 7);
                    String ano2 = data2.substring(0, 4);
                    data2 = dia2 + "/" + mes2 + "/" + ano2;
                }
                //
                dados.add(new Object[]{conecta.rs.getInt("IdItemEnca"), conecta.rs.getString("DescricaoEncaminhamento"), data1, conecta.rs.getString("HoraSaida"), data2, conecta.rs.getString("HoraRetorno")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensEncaminhamento.setModel(modelo);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensEncaminhamento.getTableHeader().setReorderingAllowed(false);
        jTabelaItensEncaminhamento.setAutoResizeMode(jTabelaItensEncaminhamento.AUTO_RESIZE_OFF);
        jTabelaItensEncaminhamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaEncaminhamentoCE();
        conecta.desconecta();
    }

    public void limparTabelaItensCartaoVacina() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Descrição do Encaminhamento", "Data Saída", "Hora Saída", "Data Retrono", "Hora Retorno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensEncaminhamento.setModel(modelo);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensEncaminhamento.getTableHeader().setReorderingAllowed(false);
        jTabelaItensEncaminhamento.setAutoResizeMode(jTabelaItensEncaminhamento.AUTO_RESIZE_OFF);
        jTabelaItensEncaminhamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaEncaminhamentoCE() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensEncaminhamento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaItensEncaminhamento.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdEncaminha.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog1() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdEncaminha.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserENF = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserENF + "'");
            conecta.rs.first();
            codigoUserGroupENF = conecta.rs.getInt("IdUsuario");
            codigoGrupoENF = conecta.rs.getInt("IdGrupo");
            nomeGrupoENF = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserENF + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoENF = conecta.rs.getInt("IdUsuario");
            codAbrirENF = conecta.rs.getInt("Abrir");
            codIncluirENF = conecta.rs.getInt("Incluir");
            codAlterarENF = conecta.rs.getInt("Alterar");
            codExcluirENF = conecta.rs.getInt("Excluir");
            codGravarENF = conecta.rs.getInt("Gravar");
            codConsultarENF = conecta.rs.getInt("Consultar");
            nomeTelaENF = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
