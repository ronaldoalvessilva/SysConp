/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleItensPrevisaoSaida;
import gestor.Controle.ControleItensSaidaInterno;
import gestor.Controle.ControleItensSaidaInternoPortaria;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleMovInternos;
import gestor.Controle.ControleMovSaidaEvasao;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensMovSaidaRetorno;
import gestor.Modelo.ItensPrevisaoSaida;
import gestor.Modelo.ItensSaidaInterno;
import gestor.Modelo.LogSistema;
import gestor.Modelo.PrevisaoSaida;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaSaidaInterno.jBtAlterarItem;
import static gestor.Visao.TelaSaidaInterno.jBtBuscarPrevisao;
import static gestor.Visao.TelaSaidaInterno.jBtCancelarItem;
import static gestor.Visao.TelaSaidaInterno.jBtExcluirItem;
import static gestor.Visao.TelaSaidaInterno.jBtNovoItem;
import static gestor.Visao.TelaSaidaInterno.jBtPesInterno;
import static gestor.Visao.TelaSaidaInterno.jBtSalvarItem;
import static gestor.Visao.TelaSaidaInterno.jDataRetorno;
import static gestor.Visao.TelaSaidaInterno.jIDlanc;
import static gestor.Visao.TelaSaidaInterno.jNrDocumento;
import static gestor.Visao.TelaSaidaInterno.jTabelaItensInterno;
import static gestor.Visao.TelaSaidaInterno.totalRegistrosInternos;
import java.awt.Color;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Ronaldo
 */
public class TelaBuscarPrevisaoSaidaInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    PrevisaoSaida objPrevSaida = new PrevisaoSaida();
    ItensPrevisaoSaida objItensPreSaida = new ItensPrevisaoSaida();
    ItensSaidaInterno objItemSaida = new ItensSaidaInterno();
    ItensMovSaidaRetorno objMovSaiRetornoEva = new ItensMovSaidaRetorno(); // Classe de saida com verificação de retorno
    ControleMovSaidaEvasao controlMovSaiRet = new ControleMovSaidaEvasao(); // Classe que grava os dados para retorno saida temporaria MOVISR
    ControleItensSaidaInterno control = new ControleItensSaidaInterno();
    ControleItensPrevisaoSaida controle = new ControleItensPrevisaoSaida();
    ControleItensSaidaInternoPortaria controlePort = new ControleItensSaidaInternoPortaria(); // Grava os registros na tabela de ITENSCRCPORTARIA   
    ControleMovInternos controlMov = new ControleMovInternos();  // HISTÓRICO DE MOVIMENTAÇÃO DE SAIDA NO CRC
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "CRC:Exportar Previsão de Saida de Internos";
    String nomeModuloTela2 = "CRC:Exportar Previsão de Saida de Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag;
    int acao;
    //         
    String confirmaSaida = "Não"; // CRC informa como não para portaria poder visualizar a saida
    String utilizacaoSaida = "Não";
    String evadidos = "";
    String dataInicial, dataFinal, dataSaida;
    String beneficio = "SAIDA TEMPORARIA";
    //
    String nrDocumentoRetorno = ""; //Número documeto vazio para gerar o aviso de evasão
    String evadido = "";
    int count = 0;
    int count1 = 0;
    int count2 = 0;

    /**
     * Creates new form TelaGerarValeTransporte
     */
    public TelaBuscarPrevisaoSaidaInternos() {
        initComponents();
        jDataSaida.setCalendar(Calendar.getInstance());
        jProgressBar1.setVisible(!true);
        buscarId();
        corCampos();
        setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE); //Impedir que a janela seja fechada pelo X  
//        BarraDeProgesso barra = new BarraDeProgesso(); //Retirado daqui pois, estava dando erro. Mas está logo abaixo
//        SalvarRegistros registro = new SalvarRegistros(); // Mesma coisa do de cima.Apresentando erro de thread intermitente.
//        jTabelaItensInterno.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaSaidaInternos = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jtotalRegistroSaida = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaPrevisaoSaidaInternos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jtotalRegistroPrevisao = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jBtPesqDataPrevisao = new javax.swing.JButton();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jDescricaoOp = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jBtPesqBeneficio = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jDocumento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDataPrevRetorno = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jDestinoInterno = new javax.swing.JTextField();
        jBtSair = new javax.swing.JButton();
        jBtEnviarTodos = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        lblCarregando = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Utilizar Previsão de Saida :::...");

        jBtSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSalvar.setForeground(new java.awt.Color(0, 204, 51));
        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista Saidas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jTabelaSaidaInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaSaidaInternos.setForeground(new java.awt.Color(0, 0, 255));
        jTabelaSaidaInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Código", "Nome do Interno"
            }
        ));
        jTabelaSaidaInternos.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTabelaSaidaInternos);
        if (jTabelaSaidaInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaSaidaInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaSaidaInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaSaidaInternos.getColumnModel().getColumn(1).setMinWidth(310);
            jTabelaSaidaInternos.getColumnModel().getColumn(1).setMaxWidth(310);
        }

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 255));
        jLabel13.setText("Total de Registros:");

        jtotalRegistroSaida.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistroSaida.setForeground(new java.awt.Color(0, 0, 255));
        jtotalRegistroSaida.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtotalRegistroSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jtotalRegistroSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Previsão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jTabelaPrevisaoSaidaInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPrevisaoSaidaInternos.setForeground(new java.awt.Color(255, 0, 0));
        jTabelaPrevisaoSaidaInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Código", "Nome do Interno"
            }
        ));
        jScrollPane1.setViewportView(jTabelaPrevisaoSaidaInternos);
        if (jTabelaPrevisaoSaidaInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(1).setMinWidth(315);
            jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(1).setMaxWidth(315);
        }

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Total de Registros:");

        jtotalRegistroPrevisao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistroPrevisao.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtotalRegistroPrevisao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtotalRegistroPrevisao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Previsão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Data Inicial:");

        jBtPesqDataPrevisao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDataPrevisao.setToolTipText("Pesquisar Datas Inicial e Final");
        jBtPesqDataPrevisao.setContentAreaFilled(false);
        jBtPesqDataPrevisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataPrevisaoActionPerformed(evt);
            }
        });

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Data Final:");

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDescricaoOp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoOp.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Beneficio:");

        jBtPesqBeneficio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqBeneficio.setToolTipText("Pesquisar Beneficio");
        jBtPesqBeneficio.setContentAreaFilled(false);
        jBtPesqBeneficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqBeneficioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDescricaoOp, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtPesqDataPrevisao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqBeneficio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jBtPesqBeneficio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDataPrevisao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Saída", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nr. Documento");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Saida");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDocumento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Retorno:");

        jDataPrevRetorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataPrevRetorno.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Beneficio:");

        jDestinoInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDestinoInterno.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jDataPrevRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDestinoInterno)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(19, 19, 19))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataPrevRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDestinoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jBtSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSair.setForeground(new java.awt.Color(255, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtEnviarTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtEnviarTodos.setForeground(new java.awt.Color(255, 0, 0));
        jBtEnviarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7854_16x16.png"))); // NOI18N
        jBtEnviarTodos.setText("Selecionar Internos");
        jBtEnviarTodos.setEnabled(false);
        jBtEnviarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarTodosActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Essa tarefa só poderá ser executada uma vez por beneficio. Caso o existam mais de um beneficio, faça um novo lançamento .");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Dúvidas, solicite apoio do Administrador do Sistema.");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("ATENÇÃO: ");

        jProgressBar1.setInheritsPopupMenu(true);
        jProgressBar1.setStringPainted(true);

        lblCarregando.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCarregando.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBtEnviarTodos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtSalvar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtSair))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(267, 267, 267)
                                .addComponent(lblCarregando, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtSair, jBtSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtSalvar)
                        .addComponent(jBtSair))
                    .addComponent(jBtEnviarTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCarregando, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtSair, jBtSalvar});

        setBounds(250, 10, 836, 477);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtEnviarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarTodosActionPerformed
        // TODO add your handling code here         
        jTabelaSaidaInternos.setModel(jTabelaPrevisaoSaidaInternos.getModel());
        String[] Colunas = new String[]{"Código", "     Nome do Interno "};
        //
        jTabelaSaidaInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaSaidaInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaSaidaInternos.getColumnModel().getColumn(1).setPreferredWidth(310);
        jTabelaSaidaInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaSaidaInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaSaidaInternos.setAutoResizeMode(jTabelaSaidaInternos.AUTO_RESIZE_OFF);
        jTabelaSaidaInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Limpa a tabela caso selecione todos os registros        
        preencherTabelaPrevisaoSaidaInternos("SELECT * FROM ITENSPREVISAOSAIDA "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ITENSPREVISAOSAIDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE ConfirmaSaida='" + jIdLanc.getText() + "'");
        jBtSalvar.setEnabled(true);
        jDataSaida.setEnabled(true);
        jBtEnviarTodos.setEnabled(!true);
        jDataPesqInicial.setEnabled(!true);
        jDataPesFinal.setEnabled(!true);
        jBtPesqBeneficio.setEnabled(!true);
        jBtPesqDataPrevisao.setEnabled(!true);
        if (jDestinoInterno.getText().equals("SAIDA TEMPORARIA")) {
            jDataPrevRetorno.setEnabled(true);
            jBtBuscarPrevisao.setEnabled(!true);
        }
        count1 = count1 -1;
        jtotalRegistroSaida.setText(Integer.toString(count1));
        jtotalRegistroPrevisao.setText("");
    }//GEN-LAST:event_jBtEnviarTodosActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        utilizacaoSaida = "Sim";
        if (jDescricaoOp.getText().equals("SAIDA TEMPORARIA") && jDataPrevRetorno.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data de previsão de retorno do interno.");
        } else {
            if (jDataSaida.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de Saida.");
                jDataSaida.requestFocus();
                jDataSaida.setBackground(Color.red);
            } else {
                if (jDocumento.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o número do documentos.");
                    jDocumento.requestFocus();
                    jDocumento.setBackground(Color.red);
                } else {
                    if (jTabelaSaidaInternos.getModel() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Selecione os dados dos internos a serem gerados.");
                    } else {
                        if (jDescricaoOp.getText().equals("SAIDA TEMPORARIA") && jDataPrevRetorno.getDate() == null) {
                            JOptionPane.showMessageDialog(rootPane, "Essa saida temporaria precisa de uma data de retorno.");
                            jDataPrevRetorno.requestFocus();
                            jDataPrevRetorno.setBackground(Color.red);
                        } else {
                            int resposta = JOptionPane.showConfirmDialog(this, "Essa tarefa irá transferir os registros de previsão dos internos para saida na portaria.\nAguarde até o termino da tarefa sem interrompe-la. Deseja prosseguir?", "Confirmação",
                                    JOptionPane.YES_NO_OPTION);
                            if (resposta == JOptionPane.YES_OPTION) {
                                jProgressBar1.setVisible(true);
                                jBtEnviarTodos.setEnabled(!true);
                                jBtSalvar.setEnabled(!true);
                                jBtSair.setEnabled(!true);
                                //
                                jBtNovoItem.setEnabled(true);
                                jBtAlterarItem.setEnabled(!true);
                                jBtExcluirItem.setEnabled(!true);
                                jBtSalvarItem.setEnabled(!true);
                                jBtCancelarItem.setEnabled(!true);
                                jBtPesInterno.setEnabled(!true);
                                //                                                        
                                jDataRetorno.setEnabled(!true);
                                jDestinoInterno.setEnabled(!true);
                                jNrDocumento.setEnabled(!true);
                                jBtBuscarPrevisao.setEnabled(!true);

                                jDocumento.setEnabled(!true);
                                jDataPrevRetorno.setEnabled(!true);
                                jDataSaida.setEnabled(!true);
                                //
                                jTabelaItensInterno.setVisible(true);
                                // log de usuario
                                objItensPreSaida.setUsuarioInsert(nameUser);
                                objItensPreSaida.setDataInsert(dataModFinal);
                                objItensPreSaida.setHorarioInsert(horaMov);
                                objItensPreSaida.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                                //
                                SalvarRegistros registro = new SalvarRegistros();
                                BarraDeProgesso barra = new BarraDeProgesso();
                                Thread threadBarra = new Thread(barra);
                                threadBarra.start();
                                Thread executor = new Thread(registro);  // Criação da Thread                             
                                executor.start();   // Inicio da execução da Thread                                
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        jTabelaItensInterno.setVisible(true);
        jTabelaItensInterno.setEnabled(true);
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqDataPrevisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataPrevisaoActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jDescricaoOp.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o beneficio do interno");
        } else {
            if (!jDescricaoOp.getText().equals(jDestinoInterno.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Beneficio diferente do documento de saida.");
            } else {
                if (jDataPesqInicial.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                    jDataPesqInicial.requestFocus();
                } else {
                    if (jDataPesFinal.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                        jDataPesFinal.requestFocus();
                    } else {
                        if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                            JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                        } else {
                            SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                            dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                            dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                            jTabelaSaidaInternos.setVisible(true);
                            preencherTabelaPrevisaoSaidaInternos("SELECT * FROM ITENSPREVISAOSAIDA "
                                    + "INNER JOIN PRONTUARIOSCRC "
                                    + "ON ITENSPREVISAOSAIDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                    + "WHERE DataPrevSaida BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'AND ConfirmaSaida='" + utilizacaoSaida + "'AND Beneficio='" + jDescricaoOp.getText() + "'");
                        }
                    }
                    jBtEnviarTodos.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataPrevisaoActionPerformed

    private void jBtPesqBeneficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqBeneficioActionPerformed
        // TODO add your handling code here:
        TelaPesquisaOpSaidaBuscaPrevSaida objPesOpSai = new TelaPesquisaOpSaidaBuscaPrevSaida();
        TelaModuloCRC.jPainelCRC.add(objPesOpSai);
        objPesOpSai.show();
    }//GEN-LAST:event_jBtPesqBeneficioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtEnviarTodos;
    private javax.swing.JButton jBtPesqBeneficio;
    private javax.swing.JButton jBtPesqDataPrevisao;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataPrevRetorno;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    public static javax.swing.JTextField jDescricaoOp;
    public static javax.swing.JTextField jDestinoInterno;
    public static javax.swing.JTextField jDocumento;
    public static javax.swing.JTextField jIdLanc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTabelaPrevisaoSaidaInternos;
    public static javax.swing.JTable jTabelaSaidaInternos;
    private javax.swing.JLabel jtotalRegistroPrevisao;
    private javax.swing.JLabel jtotalRegistroSaida;
    private javax.swing.JLabel lblCarregando;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jDescricaoOp.setBackground(Color.white);
        jDataPesqInicial.setBackground(Color.white);
        jDataPesFinal.setBackground(Color.white);
        jIdLanc.setBackground(Color.white);
        jDocumento.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jDataPrevRetorno.setBackground(Color.white);
        jDestinoInterno.setBackground(Color.white);
    }

    public void preencherTabelaPrevisaoSaidaInternos(String sql) {        
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count1 = count1 + 1;
                jtotalRegistroPrevisao.setText(Integer.toString(count1)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPrevisaoSaidaInternos.setModel(modelo);
        jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(1).setPreferredWidth(315);
        jTabelaPrevisaoSaidaInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPrevisaoSaidaInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPrevisaoSaidaInternos.setAutoResizeMode(jTabelaPrevisaoSaidaInternos.AUTO_RESIZE_OFF);
        jTabelaPrevisaoSaidaInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conecta.desconecta();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Seq.", "Código", "     Nome do Interno ", "  Data Saida", "  Destino", " Documento "};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1; // Contador de registros
                // Formatar a data no formato Brasil
                dataSaida = conecta.rs.getString("DataSaida");
                String dia = dataSaida.substring(8, 10);
                String mes = dataSaida.substring(5, 7);
                String ano = dataSaida.substring(0, 4);
                dataSaida = dia + "/" + mes + "/" + ano;
                totalRegistrosInternos.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), dataSaida, conecta.rs.getString("DestinoSaida"), conecta.rs.getString("DocumentoSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInterno.setModel(modelo);
        jTabelaItensInterno.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaItensInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaItensInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(4).setPreferredWidth(170);
        jTabelaItensInterno.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInterno.setAutoResizeMode(jTabelaItensInterno.AUTO_RESIZE_OFF);
        jTabelaItensInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conecta.desconecta();
    }

    // Buscar código do documento na tabela de ITENSSAIDA
    public void buscarId() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SAIDACRC WHERE IdSaida='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            jIdLanc.setText(conecta.rs.getString("IdSaida"));
            jDestinoInterno.setText(TelaSaidaInterno.jDescricaoOp.getText());
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }
    // Runnable para barra de processo

    class BarraDeProgesso implements Runnable {

        //Método de exibição da barra
        @Override
        public void run() {

            for (int i = 0; i < jTabelaSaidaInternos.getRowCount() || i <= 101; i++) {
                try {
                    sleep(100);
                } catch (InterruptedException e) {
                }
                jProgressBar1.setValue(i);
                if (jProgressBar1.getValue() == 100) {
                    lblCarregando.setText("Transferência concluida com sucesso !!!");
                    jBtSair.setEnabled(true);
                }
            }
        }
    }

    class SalvarRegistros implements Runnable {

        @Override
        public void run() {
            try {
                sleep(100);
            } catch (InterruptedException e) {
            }
            for (int i = 0; i < jTabelaSaidaInternos.getRowCount(); i++) {
                count = 0;
                objItensPreSaida.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                objItensPreSaida.setIdInternoCrc((int) jTabelaSaidaInternos.getValueAt(i, 0));
                objItensPreSaida.setNomeInterno((String) jTabelaSaidaInternos.getValueAt(i, 1));
                objItensPreSaida.setDataSaida(jDataSaida.getDate());
                objItensPreSaida.setDataPrevRetorno(jDataPrevRetorno.getDate());
                objItensPreSaida.setBeneficio(jDestinoInterno.getText());
                objItensPreSaida.setNumeroDocumento(jDocumento.getText());
                objItensPreSaida.setConfirmaSaida(confirmaSaida);
                objItensPreSaida.setUtilizadoSaida(utilizacaoSaida);
                objItensPreSaida.setEvadidos(evadidos);
                //
                control.incluirInternoPrevSaida(objItensPreSaida); // Tabela ITENSSAIDA quando utilizado a previsão
                preencherTabelaItens("SELECT * FROM ITENSSAIDA "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENSSAIDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE IdSaida='" + jIDlanc.getText() + "'");
                controle.alterarUtilizacaoPrevisaoSaida(objItensPreSaida);
                // GRAVA NA TABELA OS INTERNOS PARA SAIREM NA PORTARIA - ITENSCRCPORTARIA                               
                objItensPreSaida.setIdItem(i + 1 + objItensPreSaida.getIdLanc());
                controlePort.incluirItensSaidaCrcPortaria(objItensPreSaida); // Tabela ITENSCRCPORTARIA
                //Inserir na tabela de movimentação (SAIDA) HISTÓRICO DE MOVIMENTAÇÃO NO CRC  
                objItemSaida.setIdInternoSaida((int) jTabelaSaidaInternos.getValueAt(i, 0));
                objItemSaida.setNomeInterno((String) jTabelaSaidaInternos.getValueAt(i, 1));
                objItemSaida.setIdSaida(Integer.valueOf(jIdLanc.getText()));
                objItemSaida.setDataSaida(jDataSaida.getDate());
                objItemSaida.setNomeDestino(jDescricaoOp.getText());
                objItemSaida.setIdItemSaida((i + 1 + objItemSaida.getIdSaida()));
                controlMov.incluirMovSaida(objItemSaida); // Tabela MOVIMENTOCRC
                // Grava registros para retorno de interno (Sinalizar evasão) MOVISR                                
                objMovSaiRetornoEva.setIdInternoCrc((int) jTabelaSaidaInternos.getValueAt(i, 0));
                objMovSaiRetornoEva.setIdSaida(Integer.valueOf(jIdLanc.getText()));
                objMovSaiRetornoEva.setNrDocSaida(jDocumento.getText());
                objMovSaiRetornoEva.setDataSaida(jDataSaida.getDate());
                objMovSaiRetornoEva.setDataPrevRetorno(jDataPrevRetorno.getDate());
                objMovSaiRetornoEva.setNrDocRetorno(nrDocumentoRetorno);
                objMovSaiRetornoEva.setDataEvasao(evadido);
                controlMovSaiRet.incluirMovSaidaEvasao(objMovSaiRetornoEva); // Grava saida MOVISR para retorno de internos.                             
            }
        }
    }
}
