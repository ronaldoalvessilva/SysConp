/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleItensPrevisaoSaida;
import gestor.Controle.ControleItensSaidaInterno;
import gestor.Controle.ControleItensSaidaInternoPortaria;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleMovInternos;
import gestor.Controle.ControleMovSaidaEvasao;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Dao.listaPrevisaoSaidaCRC;
import gestor.Modelo.ItensMovSaidaRetorno;
import gestor.Modelo.ItensPrevisaoSaida;
import gestor.Modelo.ItensSaidaInterno;
import gestor.Modelo.LogSistema;
import gestor.Modelo.PrevisaoSaida;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import static gestor.Visao.TelaSaidaInterno.jBtAlterarItem;
import static gestor.Visao.TelaSaidaInterno.jBtBuscarPrevisao;
import static gestor.Visao.TelaSaidaInterno.jBtCancelarItem;
import static gestor.Visao.TelaSaidaInterno.jBtExcluirItem;
import static gestor.Visao.TelaSaidaInterno.jBtNovoItem;
import static gestor.Visao.TelaSaidaInterno.jBtPesInterno;
import static gestor.Visao.TelaSaidaInterno.jBtSalvarItem;
import static gestor.Visao.TelaSaidaInterno.jDataRetorno;
import static gestor.Visao.TelaSaidaInterno.jIDlanc;
import static gestor.Visao.TelaSaidaInterno.jNrDocumento;
import static gestor.Visao.TelaSaidaInterno.jTabelaItensInterno;
import static gestor.Visao.TelaSaidaInterno.totalRegistrosInternos;
import java.awt.Color;
import java.awt.Rectangle;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ronaldo
 */
public class TelaBuscarPrevisaoSaidaInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    PrevisaoSaida objPrevSaida = new PrevisaoSaida();
    ItensPrevisaoSaida objItensPreSaida = new ItensPrevisaoSaida();
    ItensSaidaInterno objItemSaida = new ItensSaidaInterno();
    ItensMovSaidaRetorno objMovSaiRetornoEva = new ItensMovSaidaRetorno(); // Classe de saida com verificação de retorno
    ControleMovSaidaEvasao controlMovSaiRet = new ControleMovSaidaEvasao(); // Classe que grava os dados para retorno saida temporaria MOVISR
    ControleItensSaidaInterno control = new ControleItensSaidaInterno();
    ControleItensPrevisaoSaida controle = new ControleItensPrevisaoSaida();
    ControleItensSaidaInternoPortaria controlePort = new ControleItensSaidaInternoPortaria(); // Grava os registros na tabela de ITENSCRCPORTARIA   
    //
    listaPrevisaoSaidaCRC listaDAO = new listaPrevisaoSaidaCRC();
    //
    ControleMovInternos controlMov = new ControleMovInternos();  // HISTÓRICO DE MOVIMENTAÇÃO DE SAIDA NO CRC
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "CRC:Exportar Previsão de Saida de Internos";
    String nomeModuloTela2 = "CRC:Exportar Previsão de Saida de Internos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag;
    int acao;
    //         
    String confirmaSaida = "Não"; // CRC informa como não para portaria poder visualizar a saida
    public static String utilizacaoSaida = "Não";
    String evadidos = "";
    public static String dataInicial;
    public static String dataFinal;
    String dataSaida;
    String beneficio = "SAIDA TEMPORARIA";
    //
    String nrDocumentoRetorno = ""; //Número documeto vazio para gerar o aviso de evasão
    String evadido = "";
    int count = 0;
    int count1 = 0;
    int count2 = 0;
    int qtdTotal = 0;
    int pTOTAL_REGISTROS = 0;
    public static int qtdInternosPS = 0;
    String idInterno = "";

    /**
     * Creates new form TelaGerarValeTransporte
     */
    public TelaBuscarPrevisaoSaidaInternos() {
        initComponents();
        jDataSaida.setCalendar(Calendar.getInstance());
        jProgressBar1.setVisible(!true);
        buscarId();
        corCampos();
        setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE); //Impedir que a janela seja fechada pelo X  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jBtPesqDataPrevisao = new javax.swing.JButton();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jDescricaoOp = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jBtPesqBeneficio = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaOrigemInternos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jBtSelecionarUm = new javax.swing.JButton();
        jBtSelecionarTodos = new javax.swing.JButton();
        jBtRetornarTodos = new javax.swing.JButton();
        jBtRetornarUm = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jtotalRegistrosOrigem = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTOTAL_REG_COPIADO = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jDocumento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDataPrevRetorno = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jDestinoInterno = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaDestinoInternos = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jtotalRegistrosDestino = new javax.swing.JTextField();
        jTotalRegistrosGravados = new javax.swing.JLabel();
        jTOTAL_REG_GRAVADO = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Utilizar Previsão de Saida :::...");

        jProgressBar1.setInheritsPopupMenu(true);
        jProgressBar1.setStringPainted(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Dados da Previsão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Data Inicial:");

        jBtPesqDataPrevisao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDataPrevisao.setToolTipText("Pesquisar Datas Inicial e Final");
        jBtPesqDataPrevisao.setContentAreaFilled(false);
        jBtPesqDataPrevisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataPrevisaoActionPerformed(evt);
            }
        });

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Data Final:");

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDescricaoOp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoOp.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Beneficio:");

        jBtPesqBeneficio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqBeneficio.setToolTipText("Pesquisar Beneficio");
        jBtPesqBeneficio.setContentAreaFilled(false);
        jBtPesqBeneficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqBeneficioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDescricaoOp, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtPesqDataPrevisao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqBeneficio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jBtPesqBeneficio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDataPrevisao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Lista de Previsão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jTabelaOrigemInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaOrigemInternos.setForeground(new java.awt.Color(255, 0, 0));
        jTabelaOrigemInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "CNC", "Nome do Interno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTabelaOrigemInternos);
        if (jTabelaOrigemInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaOrigemInternos.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaOrigemInternos.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaOrigemInternos.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaOrigemInternos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaOrigemInternos.getColumnModel().getColumn(2).setMinWidth(330);
            jTabelaOrigemInternos.getColumnModel().getColumn(2).setMaxWidth(330);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Seleção", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jBtSelecionarUm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/250718131515_16.png"))); // NOI18N
        jBtSelecionarUm.setToolTipText("Seleciona apenas um registro");
        jBtSelecionarUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSelecionarUmActionPerformed(evt);
            }
        });

        jBtSelecionarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/250718131115_16.png"))); // NOI18N
        jBtSelecionarTodos.setToolTipText("Seleciona todos os registros");
        jBtSelecionarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSelecionarTodosActionPerformed(evt);
            }
        });

        jBtRetornarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/250718131210_16.png"))); // NOI18N
        jBtRetornarTodos.setToolTipText("Retorno todos os registros selecionados");
        jBtRetornarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRetornarTodosActionPerformed(evt);
            }
        });

        jBtRetornarUm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/250718131526_16.png"))); // NOI18N
        jBtRetornarUm.setToolTipText("Retorno apenas um registro selecionado");
        jBtRetornarUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRetornarUmActionPerformed(evt);
            }
        });

        jBtSalvar.setForeground(new java.awt.Color(0, 204, 51));
        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtSair.setForeground(new java.awt.Color(255, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtRetornarUm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtRetornarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jBtSelecionarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtSelecionarUm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtRetornarTodos, jBtRetornarUm, jBtSair, jBtSalvar, jBtSelecionarTodos, jBtSelecionarUm});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jBtSelecionarUm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSelecionarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtRetornarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtRetornarUm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(jBtSalvar)
                .addGap(42, 42, 42)
                .addComponent(jBtSair)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtRetornarTodos, jBtRetornarUm, jBtSair, jBtSalvar, jBtSelecionarTodos, jBtSelecionarUm});

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Total de Registros:");

        jtotalRegistrosOrigem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistrosOrigem.setForeground(new java.awt.Color(204, 0, 0));
        jtotalRegistrosOrigem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtotalRegistrosOrigem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtotalRegistrosOrigem.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jtotalRegistrosOrigem.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Registros Copiados:");

        jTOTAL_REG_COPIADO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTOTAL_REG_COPIADO.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTOTAL_REG_COPIADO.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTOTAL_REG_COPIADO.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTOTAL_REG_COPIADO.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtotalRegistrosOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTOTAL_REG_COPIADO, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel14)
                        .addComponent(jTOTAL_REG_COPIADO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtotalRegistrosOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addGap(3, 3, 3))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Dados da Saída", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nr. Documento");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Saida");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDocumento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Retorno");

        jDataPrevRetorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataPrevRetorno.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Beneficio");

        jDestinoInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDestinoInterno.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jDataPrevRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jDestinoInterno)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 112, Short.MAX_VALUE))
                            .addComponent(jDocumento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataPrevRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDestinoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Lista Saidas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jTabelaDestinoInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaDestinoInternos.setForeground(new java.awt.Color(0, 0, 255));
        jTabelaDestinoInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "CNC", "Nome do Interno"
            }
        ));
        jTabelaDestinoInternos.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTabelaDestinoInternos);
        if (jTabelaDestinoInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaDestinoInternos.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaDestinoInternos.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaDestinoInternos.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaDestinoInternos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaDestinoInternos.getColumnModel().getColumn(2).setMinWidth(330);
            jTabelaDestinoInternos.getColumnModel().getColumn(2).setMaxWidth(330);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 255));
        jLabel13.setText("Total de Registros:");

        jtotalRegistrosDestino.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistrosDestino.setForeground(new java.awt.Color(0, 0, 204));
        jtotalRegistrosDestino.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtotalRegistrosDestino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtotalRegistrosDestino.setDisabledTextColor(new java.awt.Color(0, 0, 204));
        jtotalRegistrosDestino.setEnabled(false);

        jTotalRegistrosGravados.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTotalRegistrosGravados.setText("Registros Gravados:");

        jTOTAL_REG_GRAVADO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTOTAL_REG_GRAVADO.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTOTAL_REG_GRAVADO.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTOTAL_REG_GRAVADO.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTOTAL_REG_GRAVADO.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtotalRegistrosDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTotalRegistrosGravados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTOTAL_REG_GRAVADO, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jtotalRegistrosDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTotalRegistrosGravados)
                        .addComponent(jTOTAL_REG_GRAVADO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Essa tarefa só poderá ser executada uma vez por beneficio. Caso o existam mais de um beneficio, faça um novo lançamento . Dúvidas, ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("ATENÇÃO: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("solicite apoio do Administrador do Sistema.");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGap(3, 3, 3)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setBounds(250, 10, 900, 551);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        utilizacaoSaida = "Sim";
        if (jDescricaoOp.getText().equals("SAIDA TEMPORARIA") && jDataPrevRetorno.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data de previsão de retorno do interno.");
        } else {
            if (jDataSaida.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de Saida.");
                jDataSaida.requestFocus();
                jDataSaida.setBackground(Color.red);
            } else {
                if (jDocumento.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o número do documentos.");
                    jDocumento.requestFocus();
                    jDocumento.setBackground(Color.red);
                } else {
                    if (jTabelaDestinoInternos.getModel() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Selecione os dados dos internos a serem gerados.");
                    } else {
                        if (jDescricaoOp.getText().equals("SAIDA TEMPORARIA") && jDataPrevRetorno.getDate() == null) {
                            JOptionPane.showMessageDialog(rootPane, "Essa saida temporaria precisa de uma data de retorno.");
                            jDataPrevRetorno.requestFocus();
                            jDataPrevRetorno.setBackground(Color.red);
                        } else {
                            int resposta = JOptionPane.showConfirmDialog(this, "Essa tarefa irá transferir os registros de previsão dos internos para saida na portaria.\nAguarde até o termino da tarefa sem interrompe-la. Deseja prosseguir?", "Confirmação",
                                    JOptionPane.YES_NO_OPTION);
                            if (resposta == JOptionPane.YES_OPTION) {
                                jProgressBar1.setVisible(true);
                                jBtSelecionarUm.setEnabled(!true);
                                jBtSelecionarTodos.setEnabled(!true);
                                jBtRetornarTodos.setEnabled(!true);
                                jBtRetornarUm.setEnabled(!true);
                                gravarDadosBanco();
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        jTabelaItensInterno.setVisible(true);
        jTabelaItensInterno.setEnabled(true);
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqDataPrevisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataPrevisaoActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDescricaoOp.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o beneficio do interno");
            } else {
                if (!jDescricaoOp.getText().equals(jDestinoInterno.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Beneficio diferente do documento de saida.");
                } else {
                    if (jDataPesqInicial.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                        jDataPesqInicial.requestFocus();
                    } else {
                        if (jDataPesFinal.getDate() == null) {
                            JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                            jDataPesFinal.requestFocus();
                        } else {
                            if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                                JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                            } else {
                                SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                                dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                                dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                                count = 0;
                                flag = 1;
                                DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaOrigemInternos.getModel();
                                ItensPrevisaoSaida p = new ItensPrevisaoSaida();
                                try {
                                    for (ItensPrevisaoSaida pp : listaDAO.read()) {
                                        jtotalRegistrosOrigem.setText(Integer.toString(qtdInternosPS)); // Converter inteiro em string para exibir na tela 
                                        count = qtdInternosPS;
                                        dadosOrigem.addRow(new Object[]{pp.getIdInternoCrc(), pp.getCnc(), pp.getNomeInterno()});
                                        // BARRA DE ROLAGEM HORIZONTAL
                                        jTabelaOrigemInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                                        // ALINHAR TEXTO DA TABELA CENTRALIZADO
                                        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                                        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                                        //
                                        jTabelaOrigemInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                                        jTabelaOrigemInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                                    }
                                } catch (Exception ex) {
                                    Logger.getLogger(TelaMontagemPagamentoKitInterno.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDescricaoOp.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o beneficio do interno");
            } else {
                if (!jDescricaoOp.getText().equals(jDestinoInterno.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Beneficio diferente do documento de saida.");
                } else {
                    if (jDataPesqInicial.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                        jDataPesqInicial.requestFocus();
                    } else {
                        if (jDataPesFinal.getDate() == null) {
                            JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                            jDataPesFinal.requestFocus();
                        } else {
                            if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                                JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                            } else {
                                SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                                dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                                dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                                count = 0;
                                flag = 1;
                                DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaOrigemInternos.getModel();
                                ItensPrevisaoSaida p = new ItensPrevisaoSaida();
                                try {
                                    for (ItensPrevisaoSaida pp : listaDAO.read()) {
                                        jtotalRegistrosOrigem.setText(Integer.toString(qtdInternosPS)); // Converter inteiro em string para exibir na tela 
                                        count = qtdInternosPS;
                                        dadosOrigem.addRow(new Object[]{pp.getIdInternoCrc(), pp.getCnc(), pp.getNomeInterno()});
                                        // BARRA DE ROLAGEM HORIZONTAL
                                        jTabelaOrigemInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                                        // ALINHAR TEXTO DA TABELA CENTRALIZADO
                                        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                                        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                                        //
                                        jTabelaOrigemInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                                        jTabelaOrigemInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                                    }
                                } catch (Exception ex) {
                                    Logger.getLogger(TelaMontagemPagamentoKitInterno.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataPrevisaoActionPerformed

    private void jBtPesqBeneficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqBeneficioActionPerformed
        // TODO add your handling code here:
        TelaPesquisaOpSaidaBuscaPrevSaida objPesOpSai = new TelaPesquisaOpSaidaBuscaPrevSaida();
        TelaModuloCRC.jPainelCRC.add(objPesOpSai);
        objPesOpSai.show();
    }//GEN-LAST:event_jBtPesqBeneficioActionPerformed

    private void jBtSelecionarUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSelecionarUmActionPerformed
        // TODO add your handling code here:
        if (jDestinoInterno.getText().equals("SAIDA TEMPORARIA")) {
            jDataPrevRetorno.setEnabled(true);
            jBtBuscarPrevisao.setEnabled(!true);
        }
        Integer row = jTabelaDestinoInternos.getRowCount();
        boolean encontrou = !true;
        if (jTabelaOrigemInternos.getSelectedRowCount() != 0 && row == 0) { //Verifica se existe linha selecionada para não dar erro na hora de pegar os valores
            if (row == 0) {
                count2 = count2 + 1;
                qtdInternosPS = qtdInternosPS - 1;
                jtotalRegistrosDestino.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela
                jtotalRegistrosOrigem.setText(Integer.toString(qtdInternosPS));
            } else if (row != 0) {
                qtdTotal = count2 + qtdInternosPS;
                jtotalRegistrosDestino.setText(Integer.toString(qtdTotal)); // Converter inteiro em string para exibir na tela
            }
            //Pega os models das listas, para fazer as inserções e remoções
            DefaultTableModel modelOrigem = (DefaultTableModel) jTabelaOrigemInternos.getModel();
            DefaultTableModel modelDestino = (DefaultTableModel) jTabelaDestinoInternos.getModel();
            //Cria uma linha para ser incluida na tabela de destino, no meu caso tem duas colunas, adapte para as suas tabelas
            Object[] obj = {jTabelaOrigemInternos.getValueAt(jTabelaOrigemInternos.getSelectedRow(), 0), jTabelaOrigemInternos.getValueAt(jTabelaOrigemInternos.getSelectedRow(), 1), jTabelaOrigemInternos.getValueAt(jTabelaOrigemInternos.getSelectedRow(), 2)};
            // BARRA DE ROLAGEM HORIZONTAL
            jTabelaDestinoInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            // ALINHAR TEXTO DA TABELA CENTRALIZADO
            DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
            centralizado.setHorizontalAlignment(SwingConstants.CENTER);
            //
            jTabelaDestinoInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
            jTabelaDestinoInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            //Adiciona no destino e remove da origem
            modelDestino.addRow(obj);
            modelOrigem.removeRow(jTabelaOrigemInternos.getSelectedRow());
        } else if (jTabelaOrigemInternos.getSelectedRowCount() != 0 && row != 0) {
            DefaultTableModel modelOrigem = (DefaultTableModel) jTabelaOrigemInternos.getModel();
            DefaultTableModel modelDestino = (DefaultTableModel) jTabelaDestinoInternos.getModel();
            // VERIFICAR SE O PRODUTO JÁ EXISTE NA TABELA, SE EXITIR AVISA.
            for (int i = 0; i < jTabelaDestinoInternos.getRowCount(); i++) {
                String codInter = "" + jTabelaDestinoInternos.getValueAt(i, 0).toString();
                if (idInterno.equals(codInter)) {
                    encontrou = true;
                    break;
                } else {
                    encontrou = !true;
                }
            }
            if (encontrou == true) {
                JOptionPane.showMessageDialog(rootPane, "Interno já foi selecionado, escolha outro.");
            } else if (encontrou == !true) {
                count2 = count2 + 1;
                qtdInternosPS = qtdInternosPS - 1;
                jtotalRegistrosDestino.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela
                jtotalRegistrosOrigem.setText(Integer.toString(qtdInternosPS));
                //Adiciona no destino e remove da origem
                Object[] obj = {jTabelaOrigemInternos.getValueAt(jTabelaOrigemInternos.getSelectedRow(), 0), jTabelaOrigemInternos.getValueAt(jTabelaOrigemInternos.getSelectedRow(), 1), jTabelaOrigemInternos.getValueAt(jTabelaOrigemInternos.getSelectedRow(), 2)};
                modelDestino.addRow(obj);
                modelOrigem.removeRow(jTabelaOrigemInternos.getSelectedRow());
            }
            // BARRA DE ROLAGEM HORIZONTAL
            jTabelaDestinoInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            // ALINHAR TEXTO DA TABELA CENTRALIZADO
            DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
            centralizado.setHorizontalAlignment(SwingConstants.CENTER);
            //
            jTabelaDestinoInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
            jTabelaDestinoInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione pelo menos uma linha para transferir todos registros da tabela.");
            //Não tem nenhuma linha selecionada na tabela de origem, faça um aviso para o usuário ou algo do tipo.
        }
    }//GEN-LAST:event_jBtSelecionarUmActionPerformed

    private void jBtSelecionarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSelecionarTodosActionPerformed
        // TODO add your handling code here:
        if (jDestinoInterno.getText().equals("SAIDA TEMPORARIA")) {
            jDataPrevRetorno.setEnabled(true);
            jBtBuscarPrevisao.setEnabled(!true);
        }
        DefaultTableModel dadosDestino = (DefaultTableModel) jTabelaDestinoInternos.getModel();
        ItensPrevisaoSaida p = new ItensPrevisaoSaida();
        try {
            for (ItensPrevisaoSaida pp : listaDAO.read()) {
                //                jtotalRegistros.setText(Integer.toString(qtdInternosPop));
                jtotalRegistrosDestino.setText(jtotalRegistrosOrigem.getText().toString()); // Converter inteiro em string para exibir na tela
                dadosDestino.addRow(new Object[]{pp.getIdInternoCrc(), pp.getCnc(), pp.getNomeInterno()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaDestinoInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaDestinoInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaDestinoInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);

            }
        } catch (Exception ex) {
            Logger.getLogger(TelaGerarPopulacaoNominalCrc.class.getName()).log(Level.SEVERE, null, ex);
        }
        // APAGAR TODOS OS REGISTROS DA TABELA COPIADA
        DefaultTableModel tblRemove = (DefaultTableModel) jTabelaOrigemInternos.getModel();
        if (tblRemove.getRowCount() > 0) {
            for (int i = 0; i <= tblRemove.getRowCount(); i++) {
                tblRemove.removeRow(i);
                tblRemove.setRowCount(0);
                if (tblRemove.getRowCount() < i) {
                    tblRemove.removeRow(i);
                    tblRemove.setRowCount(0);
                }
            }
        }
        // LIMPAR O TOTALIZADOR DA TABELA
        jtotalRegistrosOrigem.setText("0");
        jDataPrevRetorno.setEnabled(true);
        jBtSalvar.setEnabled(true);
    }//GEN-LAST:event_jBtSelecionarTodosActionPerformed

    private void jBtRetornarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRetornarTodosActionPerformed
        // TODO add your handling code here:
        jDataPrevRetorno.setEnabled(true);
        Integer rows = jTabelaDestinoInternos.getModel().getRowCount();
        if (rows != 0) {
            DefaultTableModel dadosDestino = (DefaultTableModel) jTabelaOrigemInternos.getModel();
            ItensPrevisaoSaida p = new ItensPrevisaoSaida();
            try {
                for (ItensPrevisaoSaida pp : listaDAO.read()) {
                    jtotalRegistrosOrigem.setText(jtotalRegistrosDestino.getText()); // Converter inteiro em string para exibir na tela
                    dadosDestino.addRow(new Object[]{pp.getIdInternoCrc(), pp.getCnc(), pp.getNomeInterno()});
                    // BARRA DE ROLAGEM HORIZONTAL
                    jTabelaOrigemInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    // ALINHAR TEXTO DA TABELA CENTRALIZADO
                    DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                    centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                    //
                    jTabelaOrigemInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                    jTabelaOrigemInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);

                }
            } catch (Exception ex) {
                Logger.getLogger(TelaMontagemPagamentoKitInterno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // APAGAR DADOS DA TABELA
        while (jTabelaDestinoInternos.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaDestinoInternos.getModel()).removeRow(0);
        }
        // LIMPAR O TOTALIZADOR DA TABELA
        jtotalRegistrosDestino.setText("0");
    }//GEN-LAST:event_jBtRetornarTodosActionPerformed

    private void jBtRetornarUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRetornarUmActionPerformed
        // TODO add your handling code here:
        jDataPrevRetorno.setEnabled(true);
        Integer rows = jTabelaDestinoInternos.getModel().getRowCount();
        Integer row0 = jTabelaOrigemInternos.getModel().getRowCount();
        if (rows != 0) {
            if (jTabelaDestinoInternos.getSelectedRowCount() != 0) { //Verifica se existe linha selecionada para não dar erro na hora de pegar os valores
                if (row0 == 0) {
                    qtdInternosPS = 0;
                    qtdInternosPS++;
                    count2 = 0;
                    count2 = qtdTotal - 1;
                    jtotalRegistrosDestino.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela
                    jtotalRegistrosOrigem.setText(Integer.toString(qtdInternosPS));
                } else if (row0 != 0) {
                    qtdInternosPS++;
                    count2 = count2 - 1;
                    jtotalRegistrosDestino.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela
                    jtotalRegistrosOrigem.setText(Integer.toString(qtdInternosPS));
                }
                //Pega os models das listas, para fazer as inserções e remoções
                DefaultTableModel modelOrigem = (DefaultTableModel) jTabelaDestinoInternos.getModel();
                DefaultTableModel modelDestino = (DefaultTableModel) jTabelaOrigemInternos.getModel();
                //Cria uma linha para ser incluida na tabela de destino, no meu caso tem duas colunas, adapte para as suas tabelas
                Object[] obj = {jTabelaDestinoInternos.getValueAt(jTabelaDestinoInternos.getSelectedRow(), 0), jTabelaDestinoInternos.getValueAt(jTabelaDestinoInternos.getSelectedRow(), 1), jTabelaDestinoInternos.getValueAt(jTabelaDestinoInternos.getSelectedRow(), 2)};
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaOrigemInternos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaOrigemInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaOrigemInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                //Adiciona no destino e remove da origem
                modelDestino.addRow(obj);
                modelOrigem.removeRow(jTabelaDestinoInternos.getSelectedRow());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione pelo menos uma linha para transferir todos registros da tabela.");
                //Não tem nenhuma linha selecionada na tabela de origem, faça um aviso para o usuário ou algo do tipo.
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Não existe dados a ser excluído.");
        }
    }//GEN-LAST:event_jBtRetornarUmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtPesqBeneficio;
    private javax.swing.JButton jBtPesqDataPrevisao;
    private javax.swing.JButton jBtRetornarTodos;
    private javax.swing.JButton jBtRetornarUm;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSelecionarTodos;
    private javax.swing.JButton jBtSelecionarUm;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static com.toedter.calendar.JDateChooser jDataPrevRetorno;
    public static com.toedter.calendar.JDateChooser jDataSaida;
    public static javax.swing.JTextField jDescricaoOp;
    public static javax.swing.JTextField jDestinoInterno;
    public static javax.swing.JTextField jDocumento;
    public static javax.swing.JTextField jIdLanc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTOTAL_REG_COPIADO;
    private javax.swing.JTextField jTOTAL_REG_GRAVADO;
    public static javax.swing.JTable jTabelaDestinoInternos;
    private javax.swing.JTable jTabelaOrigemInternos;
    private javax.swing.JLabel jTotalRegistrosGravados;
    private javax.swing.JTextField jtotalRegistrosDestino;
    private javax.swing.JTextField jtotalRegistrosOrigem;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jDescricaoOp.setBackground(Color.white);
        jDataPesqInicial.setBackground(Color.white);
        jDataPesFinal.setBackground(Color.white);
        jIdLanc.setBackground(Color.white);
        jDocumento.setBackground(Color.white);
        jDataSaida.setBackground(Color.white);
        jDataPrevRetorno.setBackground(Color.white);
        jDestinoInterno.setBackground(Color.white);
        jTOTAL_REG_COPIADO.setBackground(Color.white);
        jTOTAL_REG_GRAVADO.setBackground(Color.white);
        jtotalRegistrosOrigem.setBackground(Color.white);
        jtotalRegistrosDestino.setBackground(Color.white);
    }

    public void gravarDadosBanco() {
        try {
            Thread t0 = new Thread() {
                public void run() {
                    statusMov = "Incluiu";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();
                    for (int i = 0; i < jTabelaDestinoInternos.getRowCount(); i++) {//      
                        jBtSalvar.setEnabled(!true);
                        jBtSair.setEnabled(!true);
                        //
                        jBtNovoItem.setEnabled(true);
                        jBtAlterarItem.setEnabled(!true);
                        jBtExcluirItem.setEnabled(!true);
                        jBtSalvarItem.setEnabled(!true);
                        jBtCancelarItem.setEnabled(!true);
                        jBtPesInterno.setEnabled(!true);
                        //                                                        
                        jDataRetorno.setEnabled(!true);
                        jDestinoInterno.setEnabled(!true);
                        jNrDocumento.setEnabled(!true);
                        jBtBuscarPrevisao.setEnabled(!true);

                        jDocumento.setEnabled(!true);
                        jDataPrevRetorno.setEnabled(!true);
                        jDataSaida.setEnabled(!true);
                        //
                        jTabelaItensInterno.setVisible(true);
                        // log de usuario
                        objItensPreSaida.setUsuarioInsert(nameUser);
                        objItensPreSaida.setDataInsert(dataModFinal);
                        objItensPreSaida.setHorarioInsert(horaMov);
                        objItensPreSaida.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        //
                        count = 0;
                        objItensPreSaida.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        objItensPreSaida.setIdInternoCrc((int) jTabelaDestinoInternos.getValueAt(i, 0));
                        objItensPreSaida.setNomeInterno((String) jTabelaDestinoInternos.getValueAt(i, 2));
                        objItensPreSaida.setDataSaida(jDataSaida.getDate());
                        objItensPreSaida.setDataPrevRetorno(jDataPrevRetorno.getDate());
                        objItensPreSaida.setBeneficio(jDestinoInterno.getText());
                        objItensPreSaida.setNumeroDocumento(jDocumento.getText());
                        objItensPreSaida.setConfirmaSaida(confirmaSaida);
                        objItensPreSaida.setUtilizadoSaida(utilizacaoSaida);
                        objItensPreSaida.setEvadidos(evadidos);
                        //
                        control.incluirInternoPrevSaida(objItensPreSaida); // Tabela ITENSSAIDA quando utilizado a previsão
                        preencherTabelaItens("SELECT * FROM ITENSSAIDA "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENSSAIDA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE IdSaida='" + jIDlanc.getText() + "'");
                        controle.alterarUtilizacaoPrevisaoSaida(objItensPreSaida);
                        // GRAVA NA TABELA OS INTERNOS PARA SAIREM NA PORTARIA - ITENSCRCPORTARIA                               
                        objItensPreSaida.setIdItem(i + 1 + objItensPreSaida.getIdLanc());
                        controlePort.incluirItensSaidaCrcPortaria(objItensPreSaida); // Tabela ITENSCRCPORTARIA
                        //Inserir na tabela de movimentação (SAIDA) HISTÓRICO DE MOVIMENTAÇÃO NO CRC  
                        objItemSaida.setIdInternoSaida((int) jTabelaDestinoInternos.getValueAt(i, 0));
                        objItemSaida.setNomeInterno((String) jTabelaDestinoInternos.getValueAt(i, 2));
                        objItemSaida.setIdSaida(Integer.valueOf(jIdLanc.getText()));
                        objItemSaida.setDataSaida(jDataSaida.getDate());
                        objItemSaida.setNomeDestino(jDescricaoOp.getText());
                        objItemSaida.setIdItemSaida((i + 1 + objItemSaida.getIdSaida()));
                        controlMov.incluirMovSaida(objItemSaida); // Tabela MOVIMENTOCRC
                        // Grava registros para retorno de interno (Sinalizar evasão) MOVISR                                
                        objMovSaiRetornoEva.setIdInternoCrc((int) jTabelaDestinoInternos.getValueAt(i, 0));
                        objMovSaiRetornoEva.setIdSaida(Integer.valueOf(jIdLanc.getText()));
                        objMovSaiRetornoEva.setNrDocSaida(jDocumento.getText());
                        objMovSaiRetornoEva.setDataSaida(jDataSaida.getDate());
                        objMovSaiRetornoEva.setDataPrevRetorno(jDataPrevRetorno.getDate());
                        objMovSaiRetornoEva.setNrDocRetorno(nrDocumentoRetorno);
                        objMovSaiRetornoEva.setDataEvasao(evadido);
                        controlMovSaiRet.incluirMovSaidaEvasao(objMovSaiRetornoEva); // Grava saida MOVISR para retorno de internos.      

                        //
                        pTOTAL_REGISTROS = i + 1;
                        jTOTAL_REG_GRAVADO.setText(String.valueOf(pTOTAL_REGISTROS));
                        jProgressBar1.setValue(i);
                    }
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException ex) {
                    }
                    qtdInternosPS = 0;
                    JOptionPane.showMessageDialog(rootPane, "Operação Concluída com sucesso...");
                    dispose();
                }
            };
            t0.start();
        } catch (Exception e) {
        }
        // THREAD DA BARRA DE EXECUÇÃO
        try {
            Thread t = new Thread() {
                public void run() {
                    jProgressBar1.setMaximum(jTabelaDestinoInternos.getRowCount());
                    Rectangle rect;
                    for (int i = 0; i < jTabelaDestinoInternos.getRowCount(); i++) {
                        rect = jTabelaDestinoInternos.getCellRect(i, 0, true);
                        try {
                            jTabelaDestinoInternos.scrollRectToVisible(rect);
                        } catch (java.lang.ClassCastException e) {
                        }
                        if (i == 0) {
                            jTabelaDestinoInternos.setRowSelectionInterval(i, 0);
                            jProgressBar1.setValue((i + 1));
                        } else if (i > 0) {
                            jTabelaDestinoInternos.setRowSelectionInterval(i, 1);
                            jProgressBar1.setValue((i + 1));
                            pTOTAL_REGISTROS = i + 1;
                            jTOTAL_REG_COPIADO.setText(String.valueOf(pTOTAL_REGISTROS));
                            jProgressBar1.setValue(i);
                        }
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                        }
                    }
                    try {
                    } catch (Exception e) {
                    }
                }
            };
            t.start();
        } catch (Exception e) {
        }
    }

    public void alinharCamposTabelaPrevisao() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaOrigemInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void alinharCamposTabelaAtual() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaDestinoInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Seq.", "Código", "     Nome do Interno ", "  Data Saida", "  Destino", " Documento "};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1; // Contador de registros
                // Formatar a data no formato Brasil
                dataSaida = conecta.rs.getString("DataSaida");
                String dia = dataSaida.substring(8, 10);
                String mes = dataSaida.substring(5, 7);
                String ano = dataSaida.substring(0, 4);
                dataSaida = dia + "/" + mes + "/" + ano;
                totalRegistrosInternos.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), dataSaida, conecta.rs.getString("DestinoSaida"), conecta.rs.getString("DocumentoSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInterno.setModel(modelo);
        jTabelaItensInterno.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaItensInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaItensInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaItensInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(4).setPreferredWidth(170);
        jTabelaItensInterno.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInterno.setAutoResizeMode(jTabelaItensInterno.AUTO_RESIZE_OFF);
        jTabelaItensInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conecta.desconecta();
    }

    // Buscar código do documento na tabela de ITENSSAIDA
    public void buscarId() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SAIDACRC WHERE IdSaida='" + jIDlanc.getText() + "'");
            conecta.rs.first();
            jIdLanc.setText(conecta.rs.getString("IdSaida"));
            jDestinoInterno.setText(TelaSaidaInterno.jDescricaoOp.getText());
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }
}
