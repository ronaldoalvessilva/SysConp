/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.SolicitacaoExamesMedicoPsiquiatrico;
import static gestor.Visao.TelaAdmissaoMedica.jIdInternoAdm;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaConsultaExamesSolicitados extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    SolicitacaoExamesMedicoPsiquiatrico objSoliEx = new SolicitacaoExamesMedicoPsiquiatrico();

    int flag = 1;
    /**
     * Creates new form TelaConsultaExamesSolicitados
     */
    public static TelaAdmissaoMedica telaAdmissaoMedica;
    
    public TelaConsultaExamesSolicitados(TelaAdmissaoMedica parent, boolean modal) {
        this.telaAdmissaoMedica = parent;
        this.setModal(modal);
        setLocationRelativeTo(telaAdmissaoMedica);
        initComponents();
        preencherTabelaItensExamesSolicitados("SELECT * FROM ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO "
                        + "INNER JOIN TIPOS_EXAMES_MEDICO "
                        + "ON ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdExame=TIPOS_EXAMES_MEDICO.IdExame "
                        + "INNER JOIN SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO "
                        + "ON ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdSolExame=SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdSolExame "
                        + "WHERE SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdInternoCrc='" +jIdInternoAdm.getText() + "'");
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDescricaoExameSolicitado = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPrimeiraAmostra = new javax.swing.JTextField();
        jSegundaAmostra = new javax.swing.JTextField();
        jTerceiraAmostra = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jDataSolicitacaoExame = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaExamesSolicitados = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Consulta de Exames Solicitados :::...");

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Descrição do Exame Solicitado");

        jDescricaoExameSolicitado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoExameSolicitado.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("1ª Amostra");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("2ª Amostra");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("3ª Amostra");

        jPrimeiraAmostra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPrimeiraAmostra.setEnabled(false);

        jSegundaAmostra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSegundaAmostra.setEnabled(false);

        jTerceiraAmostra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTerceiraAmostra.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Data Solicitação");

        jDataSolicitacaoExame.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSolicitacaoExame.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jPrimeiraAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jSegundaAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jTerceiraAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jDataSolicitacaoExame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDescricaoExameSolicitado)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPrimeiraAmostra, jSegundaAmostra, jTerceiraAmostra});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDescricaoExameSolicitado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataSolicitacaoExame, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPrimeiraAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSegundaAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTerceiraAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaExamesSolicitados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaExamesSolicitados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Registro", "Descrição do Exame", "1ª Amostra", "2ª Amostra", "3ª Amostra"
            }
        ));
        jTabelaExamesSolicitados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaExamesSolicitadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaExamesSolicitados);
        if (jTabelaExamesSolicitados.getColumnModel().getColumnCount() > 0) {
            jTabelaExamesSolicitados.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaExamesSolicitados.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaExamesSolicitados.getColumnModel().getColumn(1).setMinWidth(250);
            jTabelaExamesSolicitados.getColumnModel().getColumn(1).setMaxWidth(250);
            jTabelaExamesSolicitados.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaExamesSolicitados.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaExamesSolicitados.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaExamesSolicitados.getColumnModel().getColumn(3).setMaxWidth(100);
            jTabelaExamesSolicitados.getColumnModel().getColumn(4).setMinWidth(100);
            jTabelaExamesSolicitados.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabelaExamesSolicitadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaExamesSolicitadosMouseClicked
        // TODO add your handling code here:
         if (flag == 1) {
            String idRegistro = "" + jTabelaExamesSolicitados.getValueAt(jTabelaExamesSolicitados.getSelectedRow(), 0);            
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO "
                        + "INNER JOIN TIPOS_EXAMES_MEDICO "
                        + "ON ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdExame=TIPOS_EXAMES_MEDICO.IdExame "
                        + "INNER JOIN SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO "
                        + "ON ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdSolExame=SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdSolExame "
                        + "WHERE ITENS_SOLICITACAO_EXAMES_MEDICO_PSIQUIATRICO.IdItemExame='" + idRegistro + "'");
                conecta.rs.first(); 
                jDataSolicitacaoExame.setDate(conecta.rs.getDate("DataSolExame"));
                jDescricaoExameSolicitado.setText(conecta.rs.getString("DescricaoExame"));
                jPrimeiraAmostra.setText(conecta.rs.getString("PrimeiraAmostra"));
                jSegundaAmostra.setText(conecta.rs.getString("SegundaAmostra"));
                jTerceiraAmostra.setText(conecta.rs.getString("TerceiraAmostra"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível exibir registro.\nERRO: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaExamesSolicitadosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaExamesSolicitados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaExamesSolicitados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaExamesSolicitados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaExamesSolicitados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaConsultaExamesSolicitados dialog = new TelaConsultaExamesSolicitados(telaAdmissaoMedica, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDataSolicitacaoExame;
    private javax.swing.JTextField jDescricaoExameSolicitado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPrimeiraAmostra;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSegundaAmostra;
    private javax.swing.JTable jTabelaExamesSolicitados;
    private javax.swing.JTextField jTerceiraAmostra;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jDataSolicitacaoExame.setBackground(Color.white);
        jDescricaoExameSolicitado.setBackground(Color.white);
        jPrimeiraAmostra.setBackground(Color.white);
        jSegundaAmostra.setBackground(Color.white);
        jTerceiraAmostra.setBackground(Color.white);
    }
     public void preencherTabelaItensExamesSolicitados(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Tipo de Exame", "1ª Amostra", "2ª Amostra", "3ª Amostra"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdItemExame"), conecta.rs.getString("DescricaoExame"), conecta.rs.getString("PrimeiraAmostra"), conecta.rs.getString("SegundaAmostra"), conecta.rs.getString("TerceiraAmostra")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {           
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaExamesSolicitados.setModel(modelo);
        jTabelaExamesSolicitados.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaExamesSolicitados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaExamesSolicitados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaExamesSolicitados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaExamesSolicitados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTabelaExamesSolicitados.getColumnModel().getColumn(4).setResizable(false);
        jTabelaExamesSolicitados.getTableHeader().setReorderingAllowed(false);
        jTabelaExamesSolicitados.setAutoResizeMode(jTabelaExamesSolicitados.AUTO_RESIZE_OFF);
        jTabelaExamesSolicitados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaExamesSolicitados();
        conecta.desconecta();
    }

    public void limparTabelaExamesSolicitado() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Tipo de Exame", "1ª Amostra", "2ª Amostra", "3ª Amostra"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaExamesSolicitados.setModel(modelo);
        jTabelaExamesSolicitados.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaExamesSolicitados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTabelaExamesSolicitados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaExamesSolicitados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaExamesSolicitados.getColumnModel().getColumn(3).setResizable(false);
        jTabelaExamesSolicitados.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTabelaExamesSolicitados.getColumnModel().getColumn(4).setResizable(false);
        jTabelaExamesSolicitados.getTableHeader().setReorderingAllowed(false);
        jTabelaExamesSolicitados.setAutoResizeMode(jTabelaExamesSolicitados.AUTO_RESIZE_OFF);
        jTabelaExamesSolicitados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaExamesSolicitados() {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaExamesSolicitados.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }
}
