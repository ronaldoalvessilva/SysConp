/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleVisitasDiversas;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitos;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.LogSistema;
import gestor.Modelo.VisitasDiversas;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortariaExterna.codAbrirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codAlterarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codConsultarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codExcluirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codGravarP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codIncluirP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codUserAcessoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoGrupoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoUserGroupP1E;
import static gestor.Visao.TelaModuloPortariaExterna.codigoUserP1E;
import static gestor.Visao.TelaModuloPortariaExterna.nomeGrupoP1E;
import static gestor.Visao.TelaModuloPortariaExterna.nomeTelaP1E;
import static gestor.Visao.TelaModuloPortariaExterna.telaCadastroVisitasDiversasManuP1E;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import org.opencv.core.Core;

/**
 *
 * @author user
 */
public class TelaVisitasDiversasExterna extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    VisitasDiversas objViDi = new VisitasDiversas();
    ControleVisitasDiversas control = new ControleVisitasDiversas();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria Externa:Cadastro de Visitas Diversas:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int flag;
    int acao;
    public static String caminhoFotoVisitaExt = null;
    String codVisita;
    String nomeVisita;
    int count = 0;
    String rgVisita = "";

    /**
     * Creates new form TelaVisitasDiversas
     */
    public static TelaWebCamVisitaInternoPortExt webCamPE;

    public TelaVisitasDiversasExterna() {
        initComponents();
        corCampo();
        formatarCampos();
    }

    public void mostrarWebCamPE() {
        webCamPE = new TelaWebCamVisitaInternoPortExt(this, true);
        webCamPE.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPesqNomeVisitas = new javax.swing.JTextField();
        jBtPesqNome = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaVisitasDiversas = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDataCadastro = new com.toedter.calendar.JDateChooser();
        jIdVisita = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jNomeVisita = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        FotoVisitaDiversas = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRG = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jCPF = new javax.swing.JFormattedTextField();
        jBtNovaFoto = new javax.swing.JButton();
        jBtExcluirFoto = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jObservacao = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jCNH = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jClasse = new javax.swing.JTextField();
        jBtWebCam = new javax.swing.JButton();
        jComboBoxTipoVisita = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Visitas Diversas :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Nome Visitante:");

        jPesqNomeVisitas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNome.setContentAreaFilled(false);
        jBtPesqNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesqNomeVisitas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(jPesqNomeVisitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNome)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaVisitasDiversas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaVisitasDiversas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome da Visita", "RG", "CPF"
            }
        ));
        jTabelaVisitasDiversas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaVisitasDiversasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaVisitasDiversas);
        if (jTabelaVisitasDiversas.getColumnModel().getColumnCount() > 0) {
            jTabelaVisitasDiversas.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaVisitasDiversas.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaVisitasDiversas.getColumnModel().getColumn(1).setMinWidth(225);
            jTabelaVisitasDiversas.getColumnModel().getColumn(1).setMaxWidth(225);
            jTabelaVisitasDiversas.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaVisitasDiversas.getColumnModel().getColumn(2).setMaxWidth(100);
            jTabelaVisitasDiversas.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaVisitasDiversas.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Cadastro");

        jDataCadastro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataCadastro.setEnabled(false);

        jIdVisita.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdVisita.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nome Completo da Visita");

        jNomeVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisita.setEnabled(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(FotoVisitaDiversas, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(FotoVisitaDiversas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("RG");

        jRG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRG.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("C.P.F");

        jCPF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCPF.setEnabled(false);

        jBtNovaFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovaFoto.setEnabled(false);
        jBtNovaFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaFotoActionPerformed(evt);
            }
        });

        jBtExcluirFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirFoto.setEnabled(false);
        jBtExcluirFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirFotoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Observação");

        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("CNH");

        jCNH.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCNH.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Classe");

        jClasse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jClasse.setEnabled(false);

        jBtWebCam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/webcam_start.png"))); // NOI18N
        jBtWebCam.setEnabled(false);
        jBtWebCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtWebCamActionPerformed(evt);
            }
        });

        jComboBoxTipoVisita.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoVisita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Visita Comum", "Religiosa", "Visita de Interno", "Inativa" }));
        jComboBoxTipoVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoVisita.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Tipo de Visita");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setText("*");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jObservacao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jCNH, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBtNovaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtExcluirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBtWebCam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addGap(180, 180, 180)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11)
                                        .addComponent(jClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(380, 380, 380))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(2, 2, 2)
                                            .addComponent(jLabel13)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel2))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                            .addComponent(jRG)
                                                            .addGap(10, 10, 10))
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                            .addComponent(jLabel5)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jLabel12)
                                                            .addGap(117, 117, 117)))
                                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel6)
                                                        .addComponent(jCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(jNomeVisita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jIdVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBoxTipoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtExcluirFoto, jBtNovaFoto});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel8)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jComboBoxTipoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel13))
                        .addGap(8, 8, 8)
                        .addComponent(jNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtNovaFoto)
                    .addComponent(jBtWebCam)
                    .addComponent(jBtExcluirFoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtExcluirFoto, jBtNovaFoto});

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoria.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoria.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtSair)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAuditoria))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 254, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 20, 516, 377);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeVisitas.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome ou parte dele para pesquisa.");
            jPesqNomeVisitas.requestFocus();
        } else {
            pesquisarNomesVisitas("SELECT * FROM VISITASDIVERSAS "
                    + "WHERE NomeVisita LIKE'%" + jPesqNomeVisitas.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeActionPerformed

    private void jTabelaVisitasDiversasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaVisitasDiversasMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            nomeVisita = "" + jTabelaVisitasDiversas.getValueAt(jTabelaVisitasDiversas.getSelectedRow(), 1);
            jPesqNomeVisitas.setText(nomeVisita);
            String idVisita = "" + jTabelaVisitasDiversas.getValueAt(jTabelaVisitasDiversas.getSelectedRow(), 0);
            jIdVisita.setText(idVisita);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
            // Limpar campos
            limparCampos();
            bloquearCampos();
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM VISITASDIVERSAS "
                        + "WHERE NomeVisita='" + nomeVisita + "'");
                conecta.rs.first();
                jIdVisita.setText(String.valueOf(conecta.rs.getInt("IdVisita")));
                jComboBoxTipoVisita.setSelectedItem(conecta.rs.getString("TipoVisita"));
                jDataCadastro.setDate(conecta.rs.getDate("DataCadastro"));
                jNomeVisita.setText(conecta.rs.getString("NomeVisita"));
                caminhoFotoVisitaExt = conecta.rs.getString("FotoVisita");
                if (caminhoFotoVisitaExt != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoFotoVisitaExt);
                    FotoVisitaDiversas.setIcon(i);
                    FotoVisitaDiversas.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoVisitaDiversas.getWidth(), FotoVisitaDiversas.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVD"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(FotoVisitaDiversas.getWidth(), FotoVisitaDiversas.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    FotoVisitaDiversas.setIcon(icon);
                }
                jRG.setText(conecta.rs.getString("RgVisita"));
                jCPF.setText(conecta.rs.getString("CpfVisita"));
                jCNH.setText(conecta.rs.getString("CnhVisita"));
                jClasse.setText(conecta.rs.getString("ClasseVisita"));
                jObservacao.setText(conecta.rs.getString("ObsVisita"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa por nome" + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaVisitasDiversasMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroVisitasDiversasManuP1E);
        if (codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaCadastroVisitasDiversasManuP1E) && codIncluirP1E == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES")) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroVisitasDiversasManuP1E);
        if (codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaCadastroVisitasDiversasManuP1E) && codAlterarP1E == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES")) {
            acao = 2;
            Alterar();
            corCampo();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroVisitasDiversasManuP1E);
        if (codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaCadastroVisitasDiversasManuP1E) && codExcluirP1E == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES")) {
            VerificarEntVisitas();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroVisitasDiversasManuP1E);
        if (codigoUserP1E == codUserAcessoP1E && nomeTelaP1E.equals(telaCadastroVisitasDiversasManuP1E) && codGravarP1E == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1E.equals("ADMINISTRADORES")) {
            if (jDataCadastro.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de cadastro.");
                jDataCadastro.requestFocus();
                jDataCadastro.setBackground(Color.red);
            } else if (jNomeVisita.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome da visita.");
                jNomeVisita.requestFocus();
                jNomeVisita.setBackground(Color.red);
            } else if (FotoVisitaDiversas.getIcon() == null) {
                JOptionPane.showMessageDialog(rootPane, "Coloque a foto da Visita.");
            } else if (jRG.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o número do RG do visitante.");
            } else if (jComboBoxTipoVisita.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de visita.");
            } else if (jComboBoxTipoVisita.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de visita.");
            } else if (jComboBoxTipoVisita.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de visita.");
            } else {
                objViDi.setDataCadastro(jDataCadastro.getDate());
                objViDi.setFotoVisita(caminhoFotoVisitaExt);
                objViDi.setNomeVisita(jNomeVisita.getText().trim());
                objViDi.setRgVisita(jRG.getText());
                objViDi.setCpfVisita(jCPF.getText());
                objViDi.setCnhVisita(jCNH.getText());
                objViDi.setClasseVisita(jClasse.getText());
                objViDi.setObsVisita(jObservacao.getText());
                objViDi.setTipoVisita((String) jComboBoxTipoVisita.getSelectedItem());
                // log de usuario
                objViDi.setUsuarioInsert(nameUser);
                objViDi.setDataInsert(dataModFinal);
                objViDi.setHoraInsert(horaMov);
                try {
                    conecta.abrirConexao();
                    conecta.executaSQL("SELECT * FROM VISITASDIVERSAS "
                            + "WHERE NomeVisita='" + jNomeVisita.getText() + "'");
                    conecta.rs.first();
                    rgVisita = conecta.rs.getString("RgVisita");
                    nomeVisita = conecta.rs.getString("NomeVisita");
                } catch (Exception e) {
                }
                // PREPARAR FOTO PARA GRAVAR NO BANCO DE DADOS - FOTO DE FRENTE   
                if (FotoVisitaDiversas.getIcon() != null) {
                    Image img = ((ImageIcon) FotoVisitaDiversas.getIcon()).getImage();
                    BufferedImage bi = new BufferedImage(//é a imagem na memória e que pode ser alterada
                            img.getWidth(null),
                            img.getHeight(null),
                            BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2 = bi.createGraphics();
                    g2.drawImage(img, 0, 0, null);
                    ByteArrayOutputStream buffer = new ByteArrayOutputStream();
                    try {
                        ImageIO.write(bi, "jpg", buffer);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(TelaVisitasDiversasExterna.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(TelaVisitasDiversasExterna.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    objViDi.setImagemFrenteVD(buffer.toByteArray());
                }
                if (acao == 1) {
                    if (jNomeVisita.getText().trim().equals(nomeVisita) && jRG.getText().equals(rgVisita)) {
                        JOptionPane.showMessageDialog(rootPane, "Vista já cadastrada.");
                    } else {
                        control.incluirVisitas(objViDi);
                        buscarID();
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Salvar();
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                }
                if (acao == 2) {
                    // log de usuario
                    objViDi.setUsuarioUp(nameUser);
                    objViDi.setDataUp(dataModFinal);
                    objViDi.setHoraUp(horaMov);
                    objViDi.setIdVisita(Integer.valueOf(jIdVisita.getText()));
                    control.alterarVisitas(objViDi);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtNovaFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaFotoActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser seletor = new javax.swing.JFileChooser();
        int acao = seletor.showOpenDialog(this);
        if (acao == JFileChooser.APPROVE_OPTION) {
            java.io.File f = seletor.getSelectedFile();
            caminhoFotoVisitaExt = f.getPath();
            javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoFotoVisitaExt);
            FotoVisitaDiversas.setIcon(i);
            ImageIcon image = new ImageIcon(seletor.getSelectedFile().getPath());
            FotoVisitaDiversas.setIcon(new ImageIcon(image.getImage().getScaledInstance(FotoVisitaDiversas.getWidth(), FotoVisitaDiversas.getHeight(), Image.SCALE_DEFAULT)));
            caminhoFotoVisitaExt = f.getPath();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleção da foto foi cancelada");
        }
    }//GEN-LAST:event_jBtNovaFotoActionPerformed

    private void jBtExcluirFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirFotoActionPerformed
        // TODO add your handling code here:
        FotoVisitaDiversas.setIcon(null);
    }//GEN-LAST:event_jBtExcluirFotoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.pesquisarTodasVisitas();
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtWebCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtWebCamActionPerformed
        // TODO add your handling code here:
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        mostrarWebCamPE();
    }//GEN-LAST:event_jBtWebCamActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaVisitasDiversasExterna objAudVisDiv = new TelaAuditoriaVisitasDiversasExterna();
        TelaModuloPortariaExterna.jPainelPortariaExterna.add(objAudVisDiv);
        objAudVisDiv.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoVisitaDiversas;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirFoto;
    private javax.swing.JButton jBtNovaFoto;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqNome;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtWebCam;
    private javax.swing.JTextField jCNH;
    private javax.swing.JFormattedTextField jCPF;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jClasse;
    private javax.swing.JComboBox jComboBoxTipoVisita;
    private com.toedter.calendar.JDateChooser jDataCadastro;
    public static javax.swing.JTextField jIdVisita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNomeVisita;
    private javax.swing.JTextField jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jPesqNomeVisitas;
    private javax.swing.JFormattedTextField jRG;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaVisitasDiversas;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jNomeVisita.setDocument(new LimiteDigitos(50));
        jObservacao.setDocument(new LimiteDigitosAlfa(50));
//        try {
//            // Formatação para CPF
//            MaskFormatter cpf = new MaskFormatter("###.###.###-##");
//            jCPF.setFormatterFactory(new DefaultFormatterFactory(cpf));
//            //Formatação para RG
//            MaskFormatter rg = new MaskFormatter("##.###.###-##");
//            jRG.setFormatterFactory(new DefaultFormatterFactory(rg));
//        } catch (Exception e) {
//        }
    }

    public void corCampo() {
        jIdVisita.setBackground(Color.white);
        jComboBoxTipoVisita.setBackground(Color.white);
        jDataCadastro.setBackground(Color.white);
        jNomeVisita.setBackground(Color.white);
        jRG.setBackground(Color.white);
        jCPF.setBackground(Color.white);
        jCNH.setBackground(Color.white);
        jClasse.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
    }

    public void limparCampos() {
        jIdVisita.setText("");
        jDataCadastro.setDate(null);
        jNomeVisita.setText("");
        FotoVisitaDiversas.setIcon(null);
        jRG.setText("");
        jCPF.setText("");
        jCNH.setText("");
        jClasse.setText("");
        jObservacao.setText("");
    }

    public void bloquearCampos() {
        jIdVisita.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeVisita.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jCNH.setEnabled(!true);
        jClasse.setEnabled(!true);
        jObservacao.setEnabled(!true);
    }

    public void Novo() {
        // Limpar campos
        jIdVisita.setText("");
        jComboBoxTipoVisita.setSelectedItem("Selecione...");
        jDataCadastro.setCalendar(Calendar.getInstance());
        jNomeVisita.setText("");
        FotoVisitaDiversas.setIcon(null);
        caminhoFotoVisitaExt = null;
        jRG.setText("");
        jCPF.setText("");
        jCNH.setText("");
        jClasse.setText("");
        jObservacao.setText("");
        //Habilitar/Desabilitar campos
        jComboBoxTipoVisita.setEnabled(true);
        jDataCadastro.setEnabled(true);
        jNomeVisita.setEnabled(true);
        jRG.setEnabled(true);
        jCPF.setEnabled(true);
        jCNH.setEnabled(true);
        jClasse.setEnabled(true);
        jObservacao.setEnabled(true);
        //Habilitar/Desabilitar botões de foto
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtWebCam.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Alterar() {
        //Habilitar/Desabilitar campos
        jComboBoxTipoVisita.setEnabled(true);
        jDataCadastro.setEnabled(true);
        jNomeVisita.setEnabled(true);
        jRG.setEnabled(true);
        jCPF.setEnabled(true);
        jCNH.setEnabled(true);
        jClasse.setEnabled(true);
        jObservacao.setEnabled(true);
        //Habilitar/Desabilitar botões de foto
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtWebCam.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Excluir() {
        // Limpar campos
        jIdVisita.setText("");
        jComboBoxTipoVisita.setSelectedItem("Selecione...");
        jDataCadastro.setDate(null);
        jNomeVisita.setText("");
        FotoVisitaDiversas.setIcon(null);
        jRG.setText("");
        jCPF.setText("");
        jCNH.setText("");
        jClasse.setText("");
        jObservacao.setText("");
        //Habilitar/Desabilitar campos
        jComboBoxTipoVisita.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeVisita.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jCNH.setEnabled(!true);
        jClasse.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões de foto
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtWebCam.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Salvar() {
        //Habilitar/Desabilitar campos
        jComboBoxTipoVisita.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeVisita.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jCNH.setEnabled(!true);
        jClasse.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões de foto
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtWebCam.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
    }

    public void Cancelar() {
        //Habilitar/Desabilitar campos
        jComboBoxTipoVisita.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeVisita.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jCNH.setEnabled(!true);
        jClasse.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar botões de foto
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        //Habilitar/Desabilitar botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtWebCam.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void pesquisarTodasVisitas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome da Visita", "RG", "CPF"};
        conecta.abrirConexao();
        conecta.executaSQL("SELECT * FROM VISITASDIVERSAS ORDER BY NomeVisita");;
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdVisita"), conecta.rs.getString("NomeVisita"), conecta.rs.getString("RgVisita"), conecta.rs.getString("CpfVisita")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe dados a ser exibido!!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisitasDiversas.setModel(modelo);
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(1).setPreferredWidth(225);
        jTabelaVisitasDiversas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisitasDiversas.getTableHeader().setReorderingAllowed(false);
        jTabelaVisitasDiversas.setAutoResizeMode(jTabelaVisitasDiversas.AUTO_RESIZE_OFF);
        jTabelaVisitasDiversas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaVisitas();
        conecta.desconecta();
    }

    public void pesquisarNomesVisitas(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Codigo", "Nome da Visita", "RG", "CPF"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);;
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdVisita"), conecta.rs.getString("NomeVisita"), conecta.rs.getString("RgVisita"), conecta.rs.getString("CpfVisita")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe dados a ser exibido!!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisitasDiversas.setModel(modelo);
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(1).setPreferredWidth(225);
        jTabelaVisitasDiversas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisitasDiversas.getTableHeader().setReorderingAllowed(false);
        jTabelaVisitasDiversas.setAutoResizeMode(jTabelaVisitasDiversas.AUTO_RESIZE_OFF);
        jTabelaVisitasDiversas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaVisitas();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Codigo", "Nome da Visita", "RG", "CPF"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaVisitasDiversas.setModel(modelo);
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(1).setPreferredWidth(225);
        jTabelaVisitasDiversas.getColumnModel().getColumn(1).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setResizable(false);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setResizable(false);
        jTabelaVisitasDiversas.getTableHeader().setReorderingAllowed(false);
        jTabelaVisitasDiversas.setAutoResizeMode(jTabelaVisitasDiversas.AUTO_RESIZE_OFF);
        jTabelaVisitasDiversas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaVisitas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaVisitasDiversas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaVisitasDiversas.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaVisitasDiversas.getColumnModel().getColumn(3).setCellRenderer(centralizado);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM VISITASDIVERSAS");
            conecta.rs.last();
            jIdVisita.setText(conecta.rs.getString("IdVisita"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Nao foi possível pegar código do advogado.\nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void VerificarEntVisitas() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        objViDi.setIdVisita(Integer.valueOf(jIdVisita.getText()));
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSVISITASDIVERSAS WHERE IdVisita='" + jIdVisita.getText() + "'");
            conecta.rs.first();
            codVisita = conecta.rs.getString("IdVisita");
            conecta.desconecta();
        } catch (SQLException ex) {
        }
        if (jIdVisita.getText().equals(codVisita)) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo está relacionado a ENTRADA DE VISITAS DIVERSAS!!!");
        } else {
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAVEICULOCARGA WHERE IdVisita='" + jIdVisita.getText() + "'");
                conecta.rs.first();
                codVisita = conecta.rs.getString("IdVisita");
                conecta.desconecta();
            } catch (SQLException ex) {
            }
            if (jIdVisita.getText().equals(codVisita)) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo está relacionado ao documento de ENTRADA DE VEICULOS DE CARGAS!!!");
            } else {
                try {
                    conecta.executaSQL("SELECT * FROM ITENSVEICULOSTERCEIRO WHERE IdVisita='" + jIdVisita.getText() + "'");
                    conecta.rs.first();
                    codVisita = conecta.rs.getString("IdVisita");
                    conecta.desconecta();
                } catch (SQLException ex) {
                }
                if (jIdVisita.getText().equals(codVisita)) {
                    JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo está relacionado ao documento de ENTRADA DE VEICULOS DE TERCEIROS!!!");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o interno selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objViDi.setIdVisita(Integer.valueOf(jIdVisita.getText()));
                        control.excluirVisitas(objViDi);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        Excluir();
                    }
                    conecta.desconecta();
                }
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdVisita.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1E = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1E + "'");
            conecta.rs.first();
            codigoUserGroupP1E = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1E = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1E = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1E + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1E = conecta.rs.getInt("IdUsuario");
            codAbrirP1E = conecta.rs.getInt("Abrir");
            codIncluirP1E = conecta.rs.getInt("Incluir");
            codAlterarP1E = conecta.rs.getInt("Alterar");
            codExcluirP1E = conecta.rs.getInt("Excluir");
            codGravarP1E = conecta.rs.getInt("Gravar");
            codConsultarP1E = conecta.rs.getInt("Consultar");
            nomeTelaP1E = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
//    // Executar programa externo da webcam
//    public void webCam() {
//        try {
//            Process p = Runtime.getRuntime().exec("C:\\SysConp\\MyCam/MyCam.exe");
//            if (p.exitValue() == 0) {
//                System.out.println("Programa terminou normalmente");
//            }
//        } catch (Exception e) {
//        }
//    }
}
