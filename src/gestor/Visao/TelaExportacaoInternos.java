/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleExportacaoInterno;
import gestor.Controle.ControleItensTransfInterno;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ConexaoBancoDadosBAR;
import gestor.Dao.ConexaoBancoDadosITB;
import gestor.Dao.ConexaoBancoDadosLF;
import gestor.Dao.ConexaoBancoDadosSSA;
import gestor.Dao.ConexaoBancoDadosVC;
import Utilitarios.ModeloTabela;
import gestor.Modelo.DadosFisicosInternos;
import gestor.Modelo.DadosPenaisCrc;
import gestor.Modelo.ProntuarioCrc;
import gestor.Modelo.ProntuarioFisicosPenaisInternos;
import static gestor.Visao.TelaLoginSenha.descricaoUnidade;
import static gestor.Visao.TelaTransfInterno.jDataLancamento;
import static gestor.Visao.TelaTransfInterno.jDataTransf;
import static gestor.Visao.TelaTransfInterno.jIDlanc;
import java.awt.Desktop;
import java.awt.Rectangle;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ronaldo.silva7
 */
public class TelaExportacaoInternos extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ConexaoBancoDadosLF conectaLF = new ConexaoBancoDadosLF();
    ConexaoBancoDadosSSA conectaSSA = new ConexaoBancoDadosSSA();
    ConexaoBancoDadosITB conectaITB = new ConexaoBancoDadosITB();
    ConexaoBancoDadosVC conectaVC = new ConexaoBancoDadosVC();
    ConexaoBancoDadosBAR conectaBAR = new ConexaoBancoDadosBAR();
    //
    ProntuarioCrc objProCrc = new ProntuarioCrc();
    DadosPenaisCrc objDadosPena = new DadosPenaisCrc();
    DadosFisicosInternos objDadosFis = new DadosFisicosInternos();
    //
    ProntuarioFisicosPenaisInternos pPront = new ProntuarioFisicosPenaisInternos();
    ControleExportacaoInterno control = new ControleExportacaoInterno();
    //
    int flag;
    String dataTransf;
    int count = 0;
    private final String ruta = System.getProperties().getProperty("user.dir");
    String nomeUnidade = "";
    String respostaTrans = "Sim";

    /**
     * Creates new form TelaExportacaoInternos
     */
    public static TelaTransfInterno telaTransInterno;

    public TelaExportacaoInternos(TelaTransfInterno parent, boolean modal) {
        this.telaTransInterno = parent;
        this.setModal(modal);
        setLocationRelativeTo(telaTransInterno);
        initComponents();
        buscarEmpresa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTabelaItensInterno = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jIDPesqInt = new javax.swing.JTextField();
        jBtIdInternoCrc = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtNomeInterno = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jBtConfirmar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxUnidadeDestino = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: EPIOU - Exportar Prontuário de Internos para Outra Unidade :::...");

        jTabelaItensInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensInterno.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTabelaItensInterno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "CNC", "Nome do Interno", "Data Transf.", "Unidade Destino", "Documento"
            }
        ));
        jTabelaItensInterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensInternoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTabelaItensInterno);
        if (jTabelaItensInterno.getColumnModel().getColumnCount() > 0) {
            jTabelaItensInterno.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaItensInterno.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaItensInterno.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaItensInterno.getColumnModel().getColumn(2).setMinWidth(330);
            jTabelaItensInterno.getColumnModel().getColumn(2).setMaxWidth(330);
            jTabelaItensInterno.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaItensInterno.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaItensInterno.getColumnModel().getColumn(4).setMinWidth(250);
            jTabelaItensInterno.getColumnModel().getColumn(4).setMaxWidth(250);
            jTabelaItensInterno.getColumnModel().getColumn(5).setMinWidth(80);
            jTabelaItensInterno.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Código:");

        jIDPesqInt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqInt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtIdInternoCrc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIdInternoCrc.setContentAreaFilled(false);
        jBtIdInternoCrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIdInternoCrcActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome do Interno:");

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtNomeInterno.setContentAreaFilled(false);
        jBtNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNomeInternoActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel2))
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jIDPesqInt, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtIdInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBox1)
                    .addComponent(jBtIdInternoCrc)
                    .addComponent(jIDPesqInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtNomeInterno))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtConfirmar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtConfirmar.setForeground(new java.awt.Color(0, 102, 0));
        jBtConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/xlsx.png"))); // NOI18N
        jBtConfirmar.setText("Exportar");
        jBtConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtConfirmarActionPerformed(evt);
            }
        });

        jBtSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSair.setForeground(new java.awt.Color(204, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/shutdown-icone-6920-32.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Unidade de Destino:");

        jComboBoxUnidadeDestino.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidadeDestino.setForeground(new java.awt.Color(0, 0, 255));
        jComboBoxUnidadeDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Outra Unidade Prisional - (Não Socializa)" }));
        jComboBoxUnidadeDestino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("OBS.: Selecione a Unidade Prisional a qual irá receber o(s) prontuário(s) do(s) interno(s).");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxUnidadeDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(jComboBoxUnidadeDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jProgressBar1.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel30, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabelaItensInternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensInternoMouseClicked
        // TODO add your handling code here:
//        if (flag == 1) {
//            String nomeInterno = "" + jTabelaItensInterno.getValueAt(jTabelaItensInterno.getSelectedRow(), 1);
//            jNomeInterno.setText(nomeInterno);
//            idItem = "" + jTabelaItensInterno.getValueAt(jTabelaItensInterno.getSelectedRow(), 0);
//            nrDoc = "" + jTabelaItensInterno.getValueAt(jTabelaItensInterno.getSelectedRow(), 4);
        // Habilitar os botões

//            conecta.abrirConexao();
//            try {
//                conecta.executaSQL("SELECT * FROM ITENSTRANSFERENCIA "
//                    + "INNER JOIN PRONTUARIOSCRC "
//                    + "ON ITENSTRANSFERENCIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
//                    + "INNER JOIN UNIDADE "
//                    + "ON ITENSTRANSFERENCIA.IdUnid=UNIDADE.IdUnid "
//                    + "WHERE NomeInternoCrc='" + jNomeInterno.getText() + "' AND IdTransf='" + jIDlanc.getText() + "'AND DocumentoTransf='" + nrDoc + "'AND IdItem='" + idItem + "'");
//                conecta.rs.first();
//                jIDInterno.setText(conecta.rs.getString("IdInternoCrc"));
//                jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc"));
        // Capturando foto                
//                idItem = conecta.rs.getString("IdItem");
//                jDataTransf.setDate(conecta.rs.getDate("DataTransf"));
//                jDestinoInterno.setText(conecta.rs.getString("DescricaoUnid"));
//                jNrDocumento.setText(conecta.rs.getString("DocumentoTransf"));
//                conecta.desconecta();
//            } catch (SQLException ex) {
//                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
//            }
//        }
    }//GEN-LAST:event_jTabelaItensInternoMouseClicked

    private void jBtIdInternoCrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIdInternoCrcActionPerformed
        // TODO add your handling code here:
        count = 0;
        preencherTabelaItens("SELECT * FROM ITENSTRANSFERENCIA "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ITENSTRANSFERENCIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "INNER JOIN UNIDADE "
                + "ON ITENSTRANSFERENCIA.IdUnid=UNIDADE.IdUnid "
                + "WHERE PRONTUARIOSCRC.IdInternoCrc='" + jIDPesqInt.getText() + "' "
                + "AND TRANSFERENCIACRC.IdTtransf='" + jIDlanc.getText() + "'");
    }//GEN-LAST:event_jBtIdInternoCrcActionPerformed

    private void jBtNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquuisa.");
        } else {
            preencherTabelaItens("SELECT * FROM ITENSTRANSFERENCIA "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSTRANSFERENCIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN UNIDADE "
                    + "ON ITENSTRANSFERENCIA.IdUnid=UNIDADE.IdUnid "
                    + "WHERE PRONTUARIOSCRC.NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%' "
                    + "AND TRANSFERENCIACRC.IdTtransf='" + jIDlanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaItens("SELECT * FROM ITENSTRANSFERENCIA "
                    + "INNER JOIN TRANSFERENCIACRC "
                    + "ON ITENSTRANSFERENCIA.IdTransf=TRANSFERENCIACRC.IdTransf "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSTRANSFERENCIA.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN UNIDADE "
                    + "ON ITENSTRANSFERENCIA.IdUnid=UNIDADE.IdUnid "
                    + "WHERE TRANSFERENCIACRC.IdTransf='" + jIDlanc.getText() + "'");
        } else {
            jtotalRegistros.setText("");
            limparTabelaItens();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConfirmarActionPerformed
        // TODO add your handling code here:
        pesquisarUnidadePenal();
        Integer rows = jTabelaItensInterno.getModel().getRowCount();
        if (rows == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não existe dados a ser exportador.");
        } else if (jComboBoxUnidadeDestino.getSelectedItem().equals("Selecione...") || jComboBoxUnidadeDestino.getSelectedItem().equals("") || jComboBoxUnidadeDestino.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma unidade para transferir o(s) prontuário(s).");
        } else if (jComboBoxUnidadeDestino.getSelectedItem().equals(nomeUnidade)) {
            JOptionPane.showMessageDialog(rootPane, "Selecione outra unidade prisional diferente da sua unidade.");
        } else if (jComboBoxUnidadeDestino.getSelectedItem().equals("Outra Unidade Prisional - (Não Socializa)")) {
            // PLANILHA - Outra Unidade Prisional - (Não Socializa)
            try {
                Thread t = new Thread() {
                    public void run() {
                        XSSFWorkbook workbook = new XSSFWorkbook();
                        XSSFSheet hoja = workbook.createSheet();
                        XSSFRow fila = hoja.createRow(0);
                        fila.createCell(0).setCellValue("Código");
                        fila.createCell(1).setCellValue("CNC");
                        fila.createCell(2).setCellValue("Nome do Interno");
                        fila.createCell(3).setCellValue("Data Transf.");
                        fila.createCell(4).setCellValue("Unidade Destino");
                        fila.createCell(5).setCellValue("Documento");
                        jProgressBar1.setMaximum(jTabelaItensInterno.getRowCount());
                        XSSFRow filas;
                        Rectangle rect;
                        for (int i = 0; i < jTabelaItensInterno.getRowCount(); i++) {
                            rect = jTabelaItensInterno.getCellRect(i, 0, true);
                            try {
                                jTabelaItensInterno.scrollRectToVisible(rect);
                            } catch (java.lang.ClassCastException e) {
                            }
                            jTabelaItensInterno.setRowSelectionInterval(i, 1);
                            jProgressBar1.setValue((i + 1));
                            filas = hoja.createRow((i + 1));
                            filas.createCell(0).setCellValue(jTabelaItensInterno.getValueAt(i, 0).toString());
                            if (jTabelaItensInterno.getValueAt(i, 1) != null) {
                                filas.createCell(1).setCellValue(jTabelaItensInterno.getValueAt(i, 1).toString());
                            }
                            filas.createCell(2).setCellValue(jTabelaItensInterno.getValueAt(i, 2).toString());
                            filas.createCell(3).setCellValue(jTabelaItensInterno.getValueAt(i, 3).toString());
                            filas.createCell(4).setCellValue(jTabelaItensInterno.getValueAt(i, 4).toString());
                            filas.createCell(5).setCellValue(jTabelaItensInterno.getValueAt(i, 5).toString());
                            try {
                                Thread.sleep(20);
                            } catch (InterruptedException ex) {
                            }
                        }
                        jProgressBar1.setValue(0);
                        try {
                            workbook.write(new FileOutputStream(new File(ruta + "//TRANSFERENCIA_PRONTUARIO_INTERNOS_ENTRE_UNIDADES.xlsx")));
                            Desktop.getDesktop().open(new File(ruta + "//TRANSFERENCIA_PRONTUARIO_INTERNOS_ENTRE_UNIDADES.xlsx"));
                        } catch (Exception e) {
                        }
                    }
                };
                t.start();
            } catch (Exception e) {
            }
        } else {
            // PRESISTENCIA NO BANCO DE DADOS
            ControleItensTransfInterno digiControlSaida = new ControleItensTransfInterno();
            try {
                for (ProntuarioFisicosPenaisInternos dd : digiControlSaida.read()) {
                    if (jComboBoxUnidadeDestino.getSelectedItem().equals("Conjunto Penal de Lauro de Freitas - CPLF")) {
                        dd.setDataTrans(jDataLancamento.getDate());
                        dd.setTransConf(respostaTrans);
                        dd.setUnidadeOrigem(descricaoUnidade);
                        dd.setUnidadeDestino((String) jComboBoxUnidadeDestino.getSelectedItem());
                        dd.setConfirmaExp(respostaTrans);
                        control.incluirProntuarioInternoLF(dd);
                    } else if (jComboBoxUnidadeDestino.getSelectedItem().equals("Conjunto Penal de Itabuna - CPIT")) {
                        dd.setDataTrans(jDataTransf.getDate());
                        dd.setTransConf(respostaTrans);
                        dd.setUnidadeOrigem(descricaoUnidade);
                        dd.setUnidadeDestino((String) jComboBoxUnidadeDestino.getSelectedItem());
                        dd.setConfirmaExp(respostaTrans);
                        control.incluirProntuarioInternoITB(dd);
                    } else if (jComboBoxUnidadeDestino.getSelectedItem().equals("Conjunto Penal de Vitória da Conquista - CPVC")) {
                        dd.setDataTrans(jDataTransf.getDate());
                        dd.setTransConf(respostaTrans);
                        dd.setUnidadeOrigem(descricaoUnidade);
                        dd.setUnidadeDestino((String) jComboBoxUnidadeDestino.getSelectedItem());
                        dd.setConfirmaExp(respostaTrans);
                        control.incluirProntuarioInternoVC(dd);
                    } else if (jComboBoxUnidadeDestino.getSelectedItem().equals("Conjunto Penal Masculino de Salvador - CPMS")) {
                        dd.setDataTrans(jDataTransf.getDate());
                        dd.setTransConf(respostaTrans);
                        dd.setUnidadeOrigem(descricaoUnidade);
                        dd.setUnidadeDestino((String) jComboBoxUnidadeDestino.getSelectedItem());
                        dd.setConfirmaExp(respostaTrans);
                        control.incluirProntuarioInternoSSA(dd);
                    }else if(jComboBoxUnidadeDestino.getSelectedItem().equals("Conjunto Penal de Barreiras - CPBA")){
                        dd.setDataTrans(jDataTransf.getDate());
                        dd.setTransConf(respostaTrans);
                        dd.setUnidadeOrigem(descricaoUnidade);
                        dd.setUnidadeDestino((String) jComboBoxUnidadeDestino.getSelectedItem());
                        dd.setConfirmaExp(respostaTrans);
                        control.incluirProntuarioInternoBAR(dd);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaExportacaoInternos.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                Thread t = new Thread() {
                    public void run() {
                        XSSFWorkbook workbook = new XSSFWorkbook();
                        XSSFSheet hoja = workbook.createSheet();
                        XSSFRow fila = hoja.createRow(0);
                        fila.createCell(0).setCellValue("Código");
                        fila.createCell(1).setCellValue("CNC");
                        fila.createCell(2).setCellValue("Nome do Interno");
                        fila.createCell(3).setCellValue("Data Transf.");
                        fila.createCell(4).setCellValue("Unidade Destino");
                        fila.createCell(5).setCellValue("Documento");
                        jProgressBar1.setMaximum(jTabelaItensInterno.getRowCount());
                        XSSFRow filas;
                        Rectangle rect;
                        for (int i = 0; i < jTabelaItensInterno.getRowCount(); i++) {
                            rect = jTabelaItensInterno.getCellRect(i, 0, true);
                            try {
                                jTabelaItensInterno.scrollRectToVisible(rect);
                            } catch (java.lang.ClassCastException e) {
                            }
                            jTabelaItensInterno.setRowSelectionInterval(i, 1);
                            jProgressBar1.setValue((i + 1));
                            filas = hoja.createRow((i + 1));
                            filas.createCell(0).setCellValue(jTabelaItensInterno.getValueAt(i, 0).toString());
                            if (jTabelaItensInterno.getValueAt(i, 1) != null) {
                                filas.createCell(1).setCellValue(jTabelaItensInterno.getValueAt(i, 1).toString());
                            }
                            filas.createCell(2).setCellValue(jTabelaItensInterno.getValueAt(i, 2).toString());
                            filas.createCell(3).setCellValue(jTabelaItensInterno.getValueAt(i, 3).toString());
                            filas.createCell(4).setCellValue(jTabelaItensInterno.getValueAt(i, 4).toString());
                            filas.createCell(5).setCellValue(jTabelaItensInterno.getValueAt(i, 5).toString());
                            try {
                                Thread.sleep(20);
                            } catch (InterruptedException ex) {
                            }
                        }
                        jProgressBar1.setValue(0);
                        try {
                            workbook.write(new FileOutputStream(new File(ruta + "//TRANSFERENCIA_PRONTUARIO_INTERNOS_ENTRE_UNIDADES.xlsx")));
                            Desktop.getDesktop().open(new File(ruta + "//TRANSFERENCIA_PRONTUARIO_INTERNOS_ENTRE_UNIDADES.xlsx"));
                        } catch (Exception e) {
                        }
                    }
                };
                t.start();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jBtConfirmarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaExportacaoInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaExportacaoInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaExportacaoInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaExportacaoInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaExportacaoInternos dialog = new TelaExportacaoInternos(telaTransInterno, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtConfirmar;
    private javax.swing.JButton jBtIdInternoCrc;
    private javax.swing.JButton jBtNomeInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBoxUnidadeDestino;
    private javax.swing.JTextField jIDPesqInt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTabelaItensInterno;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void buscarEmpresa() {

        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM UNIDADE_PENAL_EMPRESA");
            conecta.rs.first();
            do {
                jComboBoxUnidadeDestino.addItem(conecta.rs.getString("DescricaoUnidade"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void pesquisarUnidadePenal() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM UNIDADE_PENAL_EMPRESA");
            conecta.rs.first();
            nomeUnidade = conecta.rs.getString("DescricaoUnidade");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "CNC", "Nome do Interno", "Data Transf.", "Unidade Destino", "Documento"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataTransf = conecta.rs.getString("DataTransf");
                String dia = dataTransf.substring(8, 10);
                String mes = dataTransf.substring(5, 7);
                String ano = dataTransf.substring(0, 4);
                dataTransf = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("Cnc"), conecta.rs.getString("NomeInternoCrc"), dataTransf, conecta.rs.getString("DescricaoUnid"), conecta.rs.getString("DocumentoTransf")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInterno.setModel(modelo);
        jTabelaItensInterno.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(2).setPreferredWidth(330);
        jTabelaItensInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(4).setPreferredWidth(250);
        jTabelaItensInterno.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInterno.setAutoResizeMode(jTabelaItensInterno.AUTO_RESIZE_OFF);
        jTabelaItensInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "CNC", "Nome do Interno", "Data Transf.", "Unidade Destino", "Documento"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensInterno.setModel(modelo);
        jTabelaItensInterno.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaItensInterno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(2).setPreferredWidth(330);
        jTabelaItensInterno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(4).setPreferredWidth(250);
        jTabelaItensInterno.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItensInterno.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTabelaItensInterno.getColumnModel().getColumn(5).setResizable(false);
        jTabelaItensInterno.getTableHeader().setReorderingAllowed(false);
        jTabelaItensInterno.setAutoResizeMode(jTabelaItensInterno.AUTO_RESIZE_OFF);
        jTabelaItensInterno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensInterno.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensInterno.getColumnModel().getColumn(1).setCellRenderer(direita);
        jTabelaItensInterno.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaItensInterno.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }
}
