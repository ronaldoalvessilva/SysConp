/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEntradaPertences;
import gestor.Controle.ControleItensPertences;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.LimiteDigitos;
import Utilitarios.ModeloTabela;
import gestor.Modelo.EntradaPertences;
import gestor.Modelo.ItensPertences;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortarias.codigoUserGroupP1;
import static gestor.Visao.TelaModuloPortarias.codigoGrupoP1;
import static gestor.Visao.TelaModuloPortarias.codAbrirP1;
import static gestor.Visao.TelaModuloPortarias.codAlterarP1;
import static gestor.Visao.TelaModuloPortarias.codExcluirP1;
import static gestor.Visao.TelaModuloPortarias.codGravarP1;
import static gestor.Visao.TelaModuloPortarias.codConsultarP1;
import static gestor.Visao.TelaModuloPortarias.codIncluirP1;
import static gestor.Visao.TelaModuloPortarias.codUserAcessoP1;
import static gestor.Visao.TelaModuloPortarias.codigoUserP1;
import static gestor.Visao.TelaModuloPortarias.nomeGrupoP1;
import static gestor.Visao.TelaModuloPortarias.nomeTelaP1;
import static gestor.Visao.TelaModuloPortarias.telaEntradaPertencesInternosIntP1;
import static gestor.Visao.TelaModuloPortarias.telaEntradaPertencesInternosManuP1;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author user
 */
public class TelaEntradaSaidaPertences extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    EntradaPertences objEntPert = new EntradaPertences();
    ItensPertences objItensPert = new ItensPertences();
    ControleEntradaPertences control = new ControleEntradaPertences();
    ControleItensPertences controle = new ControleItensPertences();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria:Entrada/Saida de Pertences de Internos:Manutenção";
    String nomeModuloTela2 = "Portaria:Entrada/Saida de Pertences de Internos:Pertences";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String dataEntrada;
    String dataSaida;
    String dataInicial;
    String dataFinal;
    String situacaoEnt = "ABERTO";
    public static String idItem;
    String codLanc;
    String caminho, caminhoVis;
    int count = 0;

    /**
     * Creates new form TelaEntradaSaidaPertences
     */
    public TelaEntradaSaidaPertences() {
        initComponents();
        corCampo();
        formatarCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIdPesqPertences = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPesqDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jPesqDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqId = new javax.swing.JButton();
        jBtPesqData = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaPertencesInternos = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jIDLanc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jDataLancamento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jSituacao = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jIDPertence = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jDescricaoPertence = new javax.swing.JTextField();
        jComboBoxUnidade = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jQtd = new javax.swing.JTextField();
        jBtPesqPertence = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaItensPertences = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoriaManu = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jIDVisita = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jNomeVisita = new javax.swing.JTextField();
        jBtPesqVisita = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jFotoVisita = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jIDInterno = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jNomeInterno = new javax.swing.JTextField();
        jBtPesqInterno = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jFotoInterno = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jBtNovoPertence = new javax.swing.JButton();
        jBtAlterarPertence = new javax.swing.JButton();
        jBtExcluirPertence = new javax.swing.JButton();
        jBtSalvarPertence = new javax.swing.JButton();
        jBtCancelarPertence = new javax.swing.JButton();
        jBtSairPertence = new javax.swing.JButton();
        jBtAuditoriaItens = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Entrada de Pertences {P1} :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jIdPesqPertences.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPesqPertences.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nome Interno:");

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Inicial:");

        jPesqDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Final:");

        jPesqDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqId.setContentAreaFilled(false);
        jBtPesqId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIdActionPerformed(evt);
            }
        });

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jIdPesqPertences, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPesqDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPesqDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jIdPesqPertences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqId)
                    .addComponent(jLabel2)
                    .addComponent(jPesqDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jPesqDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaPertencesInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPertencesInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome do Interno", "Nome da Visita"
            }
        ));
        jTabelaPertencesInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaPertencesInternosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaPertencesInternos);
        if (jTabelaPertencesInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaPertencesInternos.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaPertencesInternos.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaPertencesInternos.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaPertencesInternos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaPertencesInternos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaPertencesInternos.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaPertencesInternos.getColumnModel().getColumn(3).setMinWidth(260);
            jTabelaPertencesInternos.getColumnModel().getColumn(3).setMaxWidth(260);
            jTabelaPertencesInternos.getColumnModel().getColumn(4).setMinWidth(260);
            jTabelaPertencesInternos.getColumnModel().getColumn(4).setMaxWidth(260);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Código:");

        jIDLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDLanc.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Data Cadastro:");

        jDataLancamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLancamento.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Status:");

        jSituacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jSituacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSituacao.setEnabled(false);

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Observação");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIDLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSituacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel7)
                            .addComponent(jSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jIDLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados dos Pertences", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Código");

        jIDPertence.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPertence.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDPertence.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Descrição do Pertence");

        jDescricaoPertence.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoPertence.setEnabled(false);

        jComboBoxUnidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UN", "CX", "PCT", "KG", "PC", "MT", "LT" }));
        jComboBoxUnidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidade.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Unidade");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Qtd.");

        jQtd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQtd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQtd.setEnabled(false);

        jBtPesqPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqPertence.setText("Pesquisar");
        jBtPesqPertence.setEnabled(false);
        jBtPesqPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqPertenceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jIDPertence, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jDescricaoPertence)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jComboBoxUnidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtPesqPertence, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIDPertence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDescricaoPertence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqPertence)
                    .addComponent(jQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaItensPertences.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItensPertences.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Descrição do Pertence", "UN", "QTD"
            }
        ));
        jTabelaItensPertences.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensPertencesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaItensPertences);
        if (jTabelaItensPertences.getColumnModel().getColumnCount() > 0) {
            jTabelaItensPertences.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaItensPertences.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaItensPertences.getColumnModel().getColumn(1).setMinWidth(350);
            jTabelaItensPertences.getColumnModel().getColumn(1).setMaxWidth(350);
            jTabelaItensPertences.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaItensPertences.getColumnModel().getColumn(2).setMaxWidth(70);
            jTabelaItensPertences.getColumnModel().getColumn(3).setMinWidth(70);
            jTabelaItensPertences.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtFinalizar.setForeground(new java.awt.Color(255, 0, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoriaManu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaManu.setForeground(new java.awt.Color(0, 0, 255));
        jBtAuditoriaManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaManu.setToolTipText("Auditoria");
        jBtAuditoriaManu.setContentAreaFilled(false);
        jBtAuditoriaManu.setEnabled(false);
        jBtAuditoriaManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaManuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtFinalizar)
                    .addComponent(jBtAuditoriaManu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSalvar});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaManu))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtAuditoriaManu, jBtCancelar, jBtExcluir, jBtFinalizar, jBtNovo, jBtSalvar});

        jTabbedPane2.setForeground(new java.awt.Color(255, 0, 0));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Código");

        jIDVisita.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDVisita.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome do Visitante");

        jNomeVisita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeVisita.setEnabled(false);

        jBtPesqVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqVisita.setText("Pesquisar");
        jBtPesqVisita.setEnabled(false);
        jBtPesqVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqVisitaActionPerformed(evt);
            }
        });

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Visita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVisita, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoVisita, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeVisita)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jIDVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                        .addComponent(jBtPesqVisita)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIDVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqVisita))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados da Visita", jPanel8);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código");

        jIDInterno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDInterno.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nome do Interno");

        jNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInterno.setEnabled(false);

        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setText("Pesquisar");
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInterno)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jIDInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                        .addComponent(jBtPesqInterno)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jIDInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqInterno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados do Interno", jPanel9);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jBtNovoPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoPertence.setText("Novo");
        jBtNovoPertence.setEnabled(false);
        jBtNovoPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoPertenceActionPerformed(evt);
            }
        });

        jBtAlterarPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarPertence.setText("Alterar");
        jBtAlterarPertence.setEnabled(false);
        jBtAlterarPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarPertenceActionPerformed(evt);
            }
        });

        jBtExcluirPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirPertence.setText("Excluir");
        jBtExcluirPertence.setEnabled(false);
        jBtExcluirPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirPertenceActionPerformed(evt);
            }
        });

        jBtSalvarPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarPertence.setText("Gravar");
        jBtSalvarPertence.setEnabled(false);
        jBtSalvarPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarPertenceActionPerformed(evt);
            }
        });

        jBtCancelarPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarPertence.setText("Cancelar");
        jBtCancelarPertence.setEnabled(false);
        jBtCancelarPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarPertenceActionPerformed(evt);
            }
        });

        jBtSairPertence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairPertence.setText("Sair");
        jBtSairPertence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairPertenceActionPerformed(evt);
            }
        });

        jBtAuditoriaItens.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoriaItens.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoriaItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaItens.setToolTipText("Auditoria");
        jBtAuditoriaItens.setContentAreaFilled(false);
        jBtAuditoriaItens.setEnabled(false);
        jBtAuditoriaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaItensActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovoPertence)
                    .addComponent(jBtAlterarPertence)
                    .addComponent(jBtExcluirPertence)
                    .addComponent(jBtSalvarPertence)
                    .addComponent(jBtCancelarPertence)
                    .addComponent(jBtSairPertence)
                    .addComponent(jBtAuditoriaItens, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarPertence, jBtCancelarPertence, jBtExcluirPertence, jBtNovoPertence, jBtSairPertence, jBtSalvarPertence});

        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jBtNovoPertence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarPertence)
                .addGap(10, 10, 10)
                .addComponent(jBtExcluirPertence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarPertence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarPertence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSairPertence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAuditoriaItens))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarPertence, jBtAuditoriaItens, jBtCancelarPertence, jBtExcluirPertence, jBtNovoPertence, jBtSairPertence, jBtSalvarPertence});

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("PERTENCES");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel11, jPanel13});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(7, 7, 7))))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(250, 20, 707, 592);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosManuP1) && codIncluirP1 == 1) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosManuP1) && codAlterarP1 == 1) {
            objEntPert.setSituacaoEnt(jSituacao.getText());
            if (jSituacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  Lançamento não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampo();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosManuP1) && codExcluirP1 == 1) {
            objEntPert.setSituacaoEnt(jSituacao.getText());
            if (jSituacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  Lançamento não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                verificarItens();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosManuP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosManuP1) && codGravarP1 == 1) {
            if (jDataLancamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de cadastro.");
                jDataLancamento.requestFocus();
                jDataLancamento.setBackground(Color.red);
            } else {
                if (jIDVisita.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe o nome do visitante.");
                } else {
                    if (jIDVisita.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno.");
                    } else {
                        if (jNomeInterno.getText().equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno.");
                        } else {
                            if (acao == 1) {
                                // log de usuario
                                objEntPert.setUsuarioInsert(nameUser);
                                objEntPert.setDataInsert(dataModFinal);
                                objEntPert.setHoraInsert(horaMov);
                                objEntPert.setSituacaoEnt(situacaoEnt);
                                objEntPert.setDataLanc(jDataLancamento.getDate());
                                objEntPert.setNomeVisita(jNomeVisita.getText());
                                objEntPert.setNomeInterno(jNomeInterno.getText());
                                objEntPert.setObservacao(jObservacao.getText());
                                control.incluirEntradaPertences(objEntPert);
                                buscarId(); // Pega o ID para gravar na tabela de "pertences"
                                objLog();
                                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                Salvar();
                            }
                            if (acao == 2) {
                                // log de usuario
                                objEntPert.setUsuarioUp(nameUser);
                                objEntPert.setDataUp(dataModFinal);
                                objEntPert.setHoraUp(horaMov);
                                objEntPert.setSituacaoEnt(situacaoEnt);
                                objEntPert.setDataLanc(jDataLancamento.getDate());
                                objEntPert.setNomeVisita(jNomeVisita.getText());
                                objEntPert.setNomeInterno(jNomeInterno.getText());
                                objEntPert.setObservacao(jObservacao.getText());
                                objEntPert.setIdLanc(Integer.valueOf(jIDLanc.getText()));
                                control.alterarEntradaPertences(objEntPert);
                                objLog();
                                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                                Salvar();
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADAPERTENCES WHERE IdLanc='" + jIDLanc.getText() + "'");
            conecta.rs.first();
            jSituacao.setText(conecta.rs.getString("SituacaoEnt"));
            if (jSituacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtNovoPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoPertenceActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosIntP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosIntP1) && codIncluirP1 == 1) {
            objEntPert.setSituacaoEnt(jSituacao.getText());
            if (jSituacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Ess pertence de interno não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovoPertence();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoPertenceActionPerformed

    private void jBtAlterarPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarPertenceActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosIntP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosIntP1) && codAlterarP1 == 1) {
            acao = 4;
            objEntPert.setSituacaoEnt(jSituacao.getText());
            if (jSituacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse pertence de interno não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                AlterarPertence();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarPertenceActionPerformed

    private void jBtExcluirPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirPertenceActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosIntP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosIntP1) && codExcluirP1 == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objEntPert.setSituacaoEnt(jSituacao.getText());
            if (jSituacao.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse  pertence não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o interno selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensPert.setIdItem(Integer.valueOf(idItem));
                    controle.excluirItensPertences(objItensPert);
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirPertence();
                    preencherTabelaItensPertences("SELECT * FROM ITENSPERTENCES "
                            + "INNER JOIN PERTENCES "
                            + "ON ITENSPERTENCES.IdPertence=PERTENCES.IdPertence "
                            + "WHERE IdLanc='" + jIDLanc.getText() + "'");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirPertenceActionPerformed

    private void jBtSalvarPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarPertenceActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaEntradaPertencesInternosIntP1);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES") || codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaEntradaPertencesInternosIntP1) && codGravarP1 == 1) {
            if (jDescricaoPertence.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o pertence do interno.");
            } else {
                if (jComboBoxUnidade.getSelectedItem() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a unidade de armazenamento do pertence.");
                    jComboBoxUnidade.requestFocus();
                    jComboBoxUnidade.setBackground(Color.red);
                } else {
                    if (jQtd.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a quantidade de pertences.");
                        jQtd.requestFocus();
                        jQtd.setBackground(Color.red);
                    } else {
                        objItensPert.setUndPertence((String) jComboBoxUnidade.getSelectedItem());
                        objItensPert.setQtdPertence(Integer.valueOf(jQtd.getText()));
                        // Para o log do registro
                        objItensPert.setUsuarioInsert(nameUser);
                        objItensPert.setDataInsert(dataModFinal);
                        objItensPert.setHoraInsert(horaMov);
                        if (acao == 3) {
                            objItensPert.setIdVisita(Integer.valueOf(jIDVisita.getText()));
                            objItensPert.setNomeVisita(jNomeVisita.getText());
                            objItensPert.setIdInternoCrc(Integer.valueOf(jIDInterno.getText()));
                            objItensPert.setNomeInterno(jNomeInterno.getText());
                            objItensPert.setDescrcaoPertence(jDescricaoPertence.getText());
                            objItensPert.setIdLanc(Integer.valueOf(jIDLanc.getText()));
                            controle.incluirItensPertences(objItensPert);
                            objLog2();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso");
                            SalvarPertence();
                        }
                        if (acao == 4) {
                            // log de usuario
                            objItensPert.setUsuarioUp(nameUser);
                            objItensPert.setDataUp(dataModFinal);
                            objItensPert.setHoraUp(horaMov);
                            objItensPert.setIdVisita(Integer.valueOf(jIDVisita.getText()));
                            objItensPert.setNomeVisita(jNomeVisita.getText());
                            objItensPert.setIdInternoCrc(Integer.valueOf(jIDInterno.getText()));
                            objItensPert.setNomeInterno(jNomeInterno.getText());
                            objItensPert.setDescrcaoPertence(jDescricaoPertence.getText());
                            objItensPert.setIdLanc(Integer.valueOf(jIDLanc.getText()));
                            objItensPert.setIdItem(Integer.valueOf(idItem));
                            controle.alterarItensPertences(objItensPert);
                            objLog2();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso");
                            SalvarPertence();
                        }
                        preencherTabelaItensPertences("SELECT * FROM ITENSPERTENCES "
                                + "INNER JOIN PERTENCES "
                                + "ON ITENSPERTENCES.IdPertence=PERTENCES.IdPertence "
                                + "WHERE IdLanc='" + jIDLanc.getText() + "'");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarPertenceActionPerformed

    private void jBtCancelarPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarPertenceActionPerformed
        // TODO add your handling code here:
        CancelarPertence();
    }//GEN-LAST:event_jBtCancelarPertenceActionPerformed

    private void jBtSairPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairPertenceActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairPertenceActionPerformed

    private void jBtPesqVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqVisitaActionPerformed
        // TODO add your handling code here:
        TelaPesqVisitasPertences objPesVisitaPer = new TelaPesqVisitasPertences();
        TelaModuloPortarias.jPainelPortarias.add(objPesVisitaPer);
        objPesVisitaPer.show();
    }//GEN-LAST:event_jBtPesqVisitaActionPerformed

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jPesqDataInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jPesqDataInicial.requestFocus();
        } else {
            if (jPesqDataFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jPesqDataFinal.requestFocus();
            } else {
                if (jPesqDataInicial.getDate().after(jPesqDataFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jPesqDataInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jPesqDataFinal.getDate().getTime());
                    preencherTodasEntPertences("SELECT * FROM ENTRADAPERTENCES "
                            + "INNER JOIN PRONTUARIOSCRC "
                            + "ON ENTRADAPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                            + "INNER JOIN VISITASINTERNO "
                            + "ON ENTRADAPERTENCES.IdVisita= VISITASINTERNO.IdVisita "
                            + "WHERE DataLanc BETWEEN'" + dataInicial + "'AND'" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para pesquisa.");
        } else {
            preencherTodasEntPertences("SELECT * FROM ENTRADAPERTENCES "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ENTRADAPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN VISITASINTERNO "
                    + "ON ENTRADAPERTENCES.IdVisita=VISITASINTERNO.IdVisita "
                    + "WHERE NomeInternoCrc LIKE'" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jBtPesqIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIdActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIdPesqPertences.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código de Lançamento para pesquisa.");
        } else {
            preencherTodasEntPertences("SELECT * FROM ENTRADAPERTENCES "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ENTRADAPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN VISITASINTERNO "
                    + "ON ENTRADAPERTENCES.IdVisita=VISITASINTERNO.IdVisita "
                    + "WHERE IdLanc='" + jIdPesqPertences.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIdActionPerformed

    private void jTabelaPertencesInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaPertencesInternosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeInterno = "" + jTabelaPertencesInternos.getValueAt(jTabelaPertencesInternos.getSelectedRow(), 3);
            jPesqNomeInterno.setText(nomeInterno);
            String idLanc = "" + jTabelaPertencesInternos.getValueAt(jTabelaPertencesInternos.getSelectedRow(), 0);
            jIDLanc.setText(idLanc);                        
            //
            bloquearCamposPesquisa();
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoriaManu.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ENTRADAPERTENCES "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ENTRADAPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN VISITASINTERNO "
                        + "ON ENTRADAPERTENCES.IdVisita= VISITASINTERNO.IdVisita "
                        + "WHERE IdLanc='" + jIDLanc.getText() + "'");
                conecta.rs.first();
                jIDLanc.setText(conecta.rs.getString("IdLanc")); // 0
                jSituacao.setText(conecta.rs.getString("SituacaoEnt")); //2
                jDataLancamento.setDate(conecta.rs.getDate("DataLanc")); // 1
                jIDVisita.setText(conecta.rs.getString("IdVisita"));
                jNomeVisita.setText(conecta.rs.getString("NomeVisita"));
                // Capturando foto
                caminhoVis = conecta.rs.getString("ImagemVisita");
                if (caminhoVis != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoVis);
                    jFotoVisita.setIcon(i);
                    jFotoVisita.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoVisita.getWidth(), jFotoVisita.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] img2Bytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteVI"));
                if (img2Bytes != null) {
                    ImageIcon pic2 = null;
                    pic2 = new ImageIcon(img2Bytes);
                    Image scaled2 = pic2.getImage().getScaledInstance(jFotoVisita.getWidth(), jFotoVisita.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon2 = new ImageIcon(scaled2);
                    jFotoVisita.setIcon(icon2);
                }
                jIDInterno.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInterno.setText(conecta.rs.getString("NomeInternoCrc")); //3
                jObservacao.setText(conecta.rs.getString("Observacao"));
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                if (caminho != null) {
                    javax.swing.ImageIcon v = new javax.swing.ImageIcon(caminho);
                    jFotoInterno.setIcon(v);
                    jFotoInterno.setIcon(new ImageIcon(v.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrente"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(jFotoInterno.getWidth(), jFotoInterno.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    jFotoInterno.setIcon(icon);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível selecionar o registro.\nERRO: " + e);
            }
            preencherTabelaItensPertences("SELECT * FROM ITENSPERTENCES "
                    + "INNER JOIN PERTENCES "
                    + "ON ITENSPERTENCES.IdPertence=PERTENCES.IdPertence "
                    + "WHERE IdLanc='" + jIDLanc.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaPertencesInternosMouseClicked

    private void jBtPesqPertenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqPertenceActionPerformed
        // TODO add your handling code here:
        TelaPesqPertencesInterno objPesqPertInternos = new TelaPesqPertencesInterno();
        TelaModuloPortarias.jPainelPortarias.add(objPesqPertInternos);
        objPesqPertInternos.show();
    }//GEN-LAST:event_jBtPesqPertenceActionPerformed

    private void jTabelaItensPertencesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensPertencesMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String descricaoPertence = "" + jTabelaItensPertences.getValueAt(jTabelaItensPertences.getSelectedRow(), 1);
            jDescricaoPertence.setText(descricaoPertence);
            idItem = "" + jTabelaItensPertences.getValueAt(jTabelaItensPertences.getSelectedRow(), 2);
            // Habilitar os botões
            jBtNovoPertence.setEnabled(!true);
            jBtAlterarPertence.setEnabled(true);
            jBtExcluirPertence.setEnabled(true);
            jBtSalvarPertence.setEnabled(!true);
            jBtCancelarPertence.setEnabled(true);
            jBtAuditoriaItens.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSPERTENCES "
                        + "INNER JOIN PERTENCES "
                        + "ON ITENSPERTENCES.IdPertence=PERTENCES.IdPertence "
                        + "WHERE DescricaoPertence='" + jDescricaoPertence.getText() + "' "
                        + "AND IdLanc='" + jIDLanc.getText() + "'");
                conecta.rs.first();
                jIDPertence.setText(conecta.rs.getString("IdPertence")); //Coluna 0
                jDescricaoPertence.setText(conecta.rs.getString("DescricaoPertence")); // Coluna 1
                idItem = conecta.rs.getString("IdItem"); // Coluna 2
                jComboBoxUnidade.setSelectedItem(conecta.rs.getString("UndPertence"));
                jQtd.setText(conecta.rs.getString("QtdPertence"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaItensPertencesMouseClicked

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaPertencesInternos.setVisible(true);
            this.preencherTodasEntPertences("SELECT * FROM ENTRADAPERTENCES "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ENTRADAPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN VISITASINTERNO "
                    + "ON ENTRADAPERTENCES.IdVisita= VISITASINTERNO.IdVisita");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtAuditoriaManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaManuActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaEntSaiPertences objPertInt = new TelaAuditoriaEntSaiPertences();
        TelaModuloPortarias.jPainelPortarias.add(objPertInt);
        objPertInt.show();
    }//GEN-LAST:event_jBtAuditoriaManuActionPerformed

    private void jBtAuditoriaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaItensActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensEntSaiPertences objItensPert = new TelaAuditoriaItensEntSaiPertences();
        TelaModuloPortarias.jPainelPortarias.add(objItensPert);
        objItensPert.show();
    }//GEN-LAST:event_jBtAuditoriaItensActionPerformed

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        TelaPesqInternosPertence objInterPerten = new TelaPesqInternosPertence();
        TelaModuloPortarias.jPainelPortarias.add(objInterPerten);
        objInterPerten.show();
    }//GEN-LAST:event_jBtPesqInternoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarPertence;
    private javax.swing.JButton jBtAuditoriaItens;
    private javax.swing.JButton jBtAuditoriaManu;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarPertence;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirPertence;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoPertence;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqId;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesqPertence;
    private javax.swing.JButton jBtPesqVisita;
    private javax.swing.JButton jBtSairPertence;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarPertence;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxUnidade;
    private com.toedter.calendar.JDateChooser jDataLancamento;
    public static javax.swing.JTextField jDescricaoPertence;
    public static javax.swing.JLabel jFotoInterno;
    public static javax.swing.JLabel jFotoVisita;
    public static javax.swing.JTextField jIDInterno;
    public static javax.swing.JTextField jIDLanc;
    public static javax.swing.JTextField jIDPertence;
    public static javax.swing.JTextField jIDVisita;
    private javax.swing.JTextField jIdPesqPertences;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInterno;
    public static javax.swing.JTextField jNomeVisita;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private com.toedter.calendar.JDateChooser jPesqDataFinal;
    private com.toedter.calendar.JDateChooser jPesqDataInicial;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JTextField jQtd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jSituacao;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaItensPertences;
    private javax.swing.JTable jTabelaPertencesInternos;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    // Pegar o ID do ultimo registro no momento da gravação
    public void buscarId() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ENTRADAPERTENCES");
            conecta.rs.last();
            jIDLanc.setText(String.valueOf(conecta.rs.getInt("IdLanc")));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível buscar o ID do lançamento.\nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void bloquearCamposPesquisa() {
        jDataLancamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        //
        jIDPertence.setText("");
        jFotoVisita.setIcon(null);
        jFotoInterno.setIcon(null);
        jDescricaoPertence.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQtd.setText("");
        //
        jIDPertence.setEnabled(!true);
        jDescricaoPertence.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQtd.setEnabled(!true);
        jBtPesqPertence.setEnabled(!true);
        //
        jBtNovoPertence.setEnabled(true);
        jBtAlterarPertence.setEnabled(!true);
        jBtExcluirPertence.setEnabled(!true);
        jBtSalvarPertence.setEnabled(!true);
        jBtCancelarPertence.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void corCampo() {
        jIDLanc.setBackground(Color.white);
        jIDPertence.setBackground(Color.white);
        jSituacao.setBackground(Color.white);
        jDataLancamento.setBackground(Color.white);
        jIDInterno.setBackground(Color.white);
        jNomeVisita.setBackground(Color.white);
        jIDVisita.setBackground(Color.white);
        jNomeInterno.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIDPertence.setBackground(Color.white);
        jDescricaoPertence.setBackground(Color.white);
        jComboBoxUnidade.setBackground(Color.white);
        jQtd.setBackground(Color.white);
    }

    public void formatarCampo() {
        jPesqNomeInterno.setDocument(new LimiteDigitos(50));
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void Novo() {
        if (!jIDLanc.getText().equals("")) {
            // Limpar os campos para insersaão
            jIDLanc.setText("");
            jSituacao.setText("ABERTO");
            jDataLancamento.setCalendar(Calendar.getInstance());
            jIDVisita.setText("");
            jFotoVisita.setIcon(null);
            jFotoInterno.setIcon(null);
            jNomeVisita.setText("");
            jIDVisita.setText("");
            jNomeInterno.setText("");
            jObservacao.setText("");
            //
            jIDPertence.setText("");
            jDescricaoPertence.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jQtd.setText("");
            limparTabelaPertences();
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
        } else {
            // Limpar os campos para insersaão
            jIDLanc.setText("");
            jSituacao.setText("ABERTO");
            jDataLancamento.setCalendar(Calendar.getInstance());
            jIDVisita.setText("");
            jFotoVisita.setIcon(null);
            jFotoInterno.setIcon(null);
            jNomeVisita.setText("");
            jIDVisita.setText("");
            jIDInterno.setText("");
            jNomeInterno.setText("");
            jObservacao.setText("");
            //
            jIDPertence.setText("");
            jDescricaoPertence.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jQtd.setText("");
            // Habilitar/Desabiliar Campos        
            jDataLancamento.setEnabled(true);
            jBtPesqVisita.setEnabled(true);
            jBtPesqInterno.setEnabled(true);
            jObservacao.setEnabled(true);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoriaManu.setEnabled(!true);
            limparTabelaPertences();
        }
    }

    public void Alterar() {
        // Habilitar/Desabiliar Campos        
        jDataLancamento.setEnabled(true);
        jBtPesqVisita.setEnabled(true);
        jBtPesqVisita.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        //
        jBtNovoPertence.setEnabled(!true);
    }

    public void Excluir() {
        jSituacao.setText("");
        jDataLancamento.setDate(null);
        jIDVisita.setText("");
        jFotoInterno.setIcon(null);
        jFotoVisita.setIcon(null);
        jNomeVisita.setText("");
        jIDVisita.setText("");
        jNomeInterno.setText("");
        jObservacao.setText("");
        //
        jIDPertence.setText("");
        jDescricaoPertence.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQtd.setText("");
        // Habilitar/Desabiliar Campos        
        jDataLancamento.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(!true);
        //
        jBtNovoPertence.setEnabled(!true);
    }

    public void Salvar() {
        //
        jDataLancamento.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jBtPesqInterno.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //Habilitar/Desabilitar
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoriaManu.setEnabled(true);
        //
        jBtNovoPertence.setEnabled(true);
    }

    public void Cancelar() {
        if (jIDLanc.getText().equals("")) {
            // Limpar os campos para insersaão
            jIDLanc.setText("");
            jSituacao.setText("");
            jDataLancamento.setDate(null);
            jIDVisita.setText("");
            jFotoVisita.setIcon(null);
            jFotoInterno.setIcon(null);
            jNomeVisita.setText("");
            jIDVisita.setText("");
            jNomeInterno.setText("");
            jObservacao.setText("");
            //
            // Habilitar/Desabiliar Campos        
            jDataLancamento.setEnabled(!true);
            jBtPesqVisita.setEnabled(!true);
            jBtPesqVisita.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoPertence.setEnabled(!true);
        }
        // Habilitar/Desabiliar Campos        
        jDataLancamento.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
        //
        jBtNovoPertence.setEnabled(!true);
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusLanc = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse Lançamento for finaliza,\nvocê não poderá mais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente finalizar assim mesmo o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objEntPert.setSituacaoEnt(statusLanc);
            objEntPert.setIdLanc(Integer.parseInt(jIDLanc.getText()));
            control.finalizarEntradaPertences(objEntPert);
            jSituacao.setText("FINALIZADO");
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            //
            jBtPesqVisita.setEnabled(!true);
            jBtPesqVisita.setEnabled(!true);
            jDataLancamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqPertence.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jQtd.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoPertence.setEnabled(!true);
            jBtAlterarPertence.setEnabled(!true);
            jBtExcluirPertence.setEnabled(!true);
            jBtSalvarPertence.setEnabled(!true);
            jBtCancelarPertence.setEnabled(!true);
        }
    }

    public void NovoPertence() {
        // Limpar campos para inclusão
        jIDPertence.setText("");
        jFotoVisita.setIcon(null);
        jFotoInterno.setIcon(null);
        jDescricaoPertence.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQtd.setText("");
        // Habilitar/Desabilitar Campos
        jBtPesqPertence.setEnabled(true);
        jComboBoxUnidade.setEnabled(true);
        jQtd.setEnabled(true);
        //
        jBtNovoPertence.setEnabled(!true);
        jBtAlterarPertence.setEnabled(!true);
        jBtExcluirPertence.setEnabled(!true);
        jBtSalvarPertence.setEnabled(true);
        jBtCancelarPertence.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void AlterarPertence() {
        //
        jDataLancamento.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jBtPesqVisita.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Habilitar/Desabilitar Campos
        jBtPesqPertence.setEnabled(true);
        jComboBoxUnidade.setEnabled(true);
        jQtd.setEnabled(true);
        //
        jBtNovoPertence.setEnabled(!true);
        jBtAlterarPertence.setEnabled(!true);
        jBtExcluirPertence.setEnabled(!true);
        jBtSalvarPertence.setEnabled(true);
        jBtCancelarPertence.setEnabled(true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void ExcluirPertence() {
        // Limpar campos para inclusão
        jIDPertence.setText("");
        jFotoVisita.setIcon(null);
        jFotoInterno.setIcon(null);
        jDescricaoPertence.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQtd.setText("");
        // Habilitar/Desabilitar Campos
        jBtPesqPertence.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQtd.setEnabled(!true);
        jBtNovoPertence.setEnabled(true);
        jBtAlterarPertence.setEnabled(!true);
        jBtExcluirPertence.setEnabled(!true);
        jBtSalvarPertence.setEnabled(!true);
        jBtCancelarPertence.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void SalvarPertence() {
        jIDPertence.setText("");
        jDescricaoPertence.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQtd.setText("");
        //
        jComboBoxUnidade.setEnabled(!true);
        jQtd.setEnabled(!true);
        jBtPesqPertence.setEnabled(!true);
        //
        jBtNovoPertence.setEnabled(true);
        jBtAlterarPertence.setEnabled(!true);
        jBtExcluirPertence.setEnabled(!true);
        jBtSalvarPertence.setEnabled(!true);
        jBtCancelarPertence.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void CancelarPertence() {
        //
        jComboBoxUnidade.setEnabled(!true);
        jQtd.setEnabled(!true);
        jBtPesqPertence.setEnabled(!true);
        //
        jBtNovoPertence.setEnabled(true);
        jBtAlterarPertence.setEnabled(!true);
        jBtExcluirPertence.setEnabled(!true);
        jBtSalvarPertence.setEnabled(!true);
        jBtCancelarPertence.setEnabled(!true);
        jBtAuditoriaItens.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoriaManu.setEnabled(true);
    }

    public void preencherTodasEntPertences(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno", "Nome Visitante"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataLanc");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdLanc"), dataEntrada, conecta.rs.getString("SituacaoEnt"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("NomeVisita")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPertencesInternos.setModel(modelo);
        jTabelaPertencesInternos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaPertencesInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaPertencesInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaPertencesInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(3).setPreferredWidth(260);
        jTabelaPertencesInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(4).setPreferredWidth(260);
        jTabelaPertencesInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaPertencesInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPertencesInternos.setAutoResizeMode(jTabelaPertencesInternos.AUTO_RESIZE_OFF);
        jTabelaPertencesInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno", "Nome Visitante"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPertencesInternos.setModel(modelo);
        jTabelaPertencesInternos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaPertencesInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaPertencesInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaPertencesInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(3).setPreferredWidth(260);
        jTabelaPertencesInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPertencesInternos.getColumnModel().getColumn(4).setPreferredWidth(260);
        jTabelaPertencesInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaPertencesInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPertencesInternos.setAutoResizeMode(jTabelaPertencesInternos.AUTO_RESIZE_OFF);
        jTabelaPertencesInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPertencesInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaPertencesInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaPertencesInternos.getColumnModel().getColumn(2).setCellRenderer(direita);
    }

    public void preencherTabelaItensPertences(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Descrição Pertence", "UN", "QTD"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getString("IdItem"), conecta.rs.getString("DescricaoPertence"), conecta.rs.getString("UndPertence"), conecta.rs.getString("QtdPertence")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensPertences.setModel(modelo);
        jTabelaItensPertences.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItensPertences.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensPertences.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaItensPertences.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensPertences.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaItensPertences.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensPertences.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaItensPertences.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensPertences.getTableHeader().setReorderingAllowed(false);
        jTabelaItensPertences.setAutoResizeMode(jTabelaItensPertences.AUTO_RESIZE_OFF);
        jTabelaItensPertences.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinarCamposTabelaPertences();
        conecta.desconecta();
    }

    public void limparTabelaPertences() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Descrição Pertence", "UN", "QTD"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItensPertences.setModel(modelo);
        jTabelaItensPertences.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItensPertences.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItensPertences.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaItensPertences.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItensPertences.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaItensPertences.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItensPertences.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaItensPertences.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItensPertences.getTableHeader().setReorderingAllowed(false);
        jTabelaItensPertences.setAutoResizeMode(jTabelaItensPertences.AUTO_RESIZE_OFF);
        jTabelaItensPertences.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinarCamposTabelaPertences() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItensPertences.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItensPertences.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaItensPertences.getColumnModel().getColumn(3).setCellRenderer(direita);
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSPERTENCES WHERE IdLanc='" + jIDLanc.getText() + "'");
            conecta.rs.first();
            codLanc = conecta.rs.getString("IdLanc");
            if (jIDLanc.getText().equals(codLanc)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o interno selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objEntPert.setIdLanc(Integer.valueOf(jIDLanc.getText()));
                control.excluirEntradaPertences(objEntPert);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIDLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1 = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1 + "'");
            conecta.rs.first();
            codigoUserGroupP1 = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1 = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1 = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1 + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1 = conecta.rs.getInt("IdUsuario");
            codAbrirP1 = conecta.rs.getInt("Abrir");
            codIncluirP1 = conecta.rs.getInt("Incluir");
            codAlterarP1 = conecta.rs.getInt("Alterar");
            codExcluirP1 = conecta.rs.getInt("Excluir");
            codGravarP1 = conecta.rs.getInt("Gravar");
            codConsultarP1 = conecta.rs.getInt("Consultar");
            nomeTelaP1 = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
