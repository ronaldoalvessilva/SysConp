/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Dao.ConexaoBancoDados;
import gestor.Controle.PesquisaComposicaoDescricaoKit;
import gestor.Controle.PesquisaComposicaoTodosKit;
import gestor.Modelo.ComposicaoKitPesquisa;
import static gestor.Visao.TelaCancelamentoPagamentoKits.jComboBoxTiposKits;
import static gestor.Visao.TelaCancelamentoPagamentoKits.jDataComposicaoKit;
import static gestor.Visao.TelaCancelamentoPagamentoKits.jRegistroKit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class TelaPesquisarComposicaoKit_CA extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ComposicaoKitPesquisa objCancelaKit = new ComposicaoKitPesquisa();
    PesquisaComposicaoTodosKit listarTodos = new PesquisaComposicaoTodosKit();
    PesquisaComposicaoDescricaoKit listarDescricao = new PesquisaComposicaoDescricaoKit();
    int flag;
    //
    String pNOME_kit = "";
    // VARIÁVEIS PARA OS KITS INICIAL E 15 DIAS    
    public static int pCODIGO_KIT_Inicial = 0;
    public static int pCODIGO_KIT_Decendial = 0;
    public static int pCODIGO_KIT_Quinzenal = 0;
    public static int pCODIGO_KIT_Mensal = 0;
    public static int pCODIGO_KIT_Semestral = 0;
    public static int pCODIGO_KIT_Anual = 0;
    //
    int pKIT_ativo = 1;

    /**
     * Creates new form TelaPesqProdutoFarmacia
     */
    public TelaPesquisarComposicaoKit_CA() {
        initComponents();
        PESQUISAR_CODIGO_Kit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPesqDescricaoPav = new javax.swing.JTextField();
        jBtPesqDescricaoProd = new javax.swing.JButton();
        jCheckBoxPesqTodosProd = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaPesquisaKits = new javax.swing.JTable();
        jBtEnviar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Listagem de Composição de Kits de Higiene :::...");

        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Pavilhão:");

        jPesqDescricaoPav.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDescricaoProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDescricaoProd.setContentAreaFilled(false);
        jBtPesqDescricaoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDescricaoProdActionPerformed(evt);
            }
        });

        jCheckBoxPesqTodosProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxPesqTodosProd.setText("Todos");
        jCheckBoxPesqTodosProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxPesqTodosProdItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesqDescricaoPav)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqDescricaoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxPesqTodosProd)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxPesqTodosProd)
                    .addComponent(jBtPesqDescricaoProd)
                    .addComponent(jPesqDescricaoPav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaPesquisaKits.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPesquisaKits.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Registro", "Data", "Tipo de Kit", "Pavilhão"
            }
        ));
        jTabelaPesquisaKits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaPesquisaKitsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaPesquisaKits);
        if (jTabelaPesquisaKits.getColumnModel().getColumnCount() > 0) {
            jTabelaPesquisaKits.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaPesquisaKits.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaPesquisaKits.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaPesquisaKits.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaPesquisaKits.getColumnModel().getColumn(2).setMinWidth(200);
            jTabelaPesquisaKits.getColumnModel().getColumn(2).setMaxWidth(200);
            jTabelaPesquisaKits.getColumnModel().getColumn(3).setMinWidth(200);
            jTabelaPesquisaKits.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        jBtEnviar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtEnviar.setForeground(new java.awt.Color(0, 0, 255));
        jBtEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtEnviar.setText("Enviar");
        jBtEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarActionPerformed(evt);
            }
        });

        jBtSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtSair.setForeground(new java.awt.Color(255, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtEnviar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair)
                        .addGap(0, 269, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtEnviar, jBtSair});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtEnviar)
                    .addComponent(jBtSair)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtEnviar, jBtSair});

        jTabbedPane1.addTab("Pesquisas", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(300, 10, 490, 281);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqDescricaoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDescricaoProdActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jPesqDescricaoPav.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe uma descrição do produto para pesquisa.");
        } else {
            mostrarDescricao();
        }
    }//GEN-LAST:event_jBtPesqDescricaoProdActionPerformed

    private void jBtEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jPesqDescricaoPav.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o nome do pavilhão e clique no botão ENVIAR");
        } else {
            try {
                for (ComposicaoKitPesquisa dd : listarDescricao.read()) {
                    jRegistroKit.setText(String.valueOf(dd.getIdRegistroComp()));
                    jDataComposicaoKit.setDate(dd.getDataComp());
                }
            } catch (Exception ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            dispose();
        }
    }//GEN-LAST:event_jBtEnviarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jTabelaPesquisaKitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaPesquisaKitsMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String nomeProduto = "" + jTabelaPesquisaKits.getValueAt(jTabelaPesquisaKits.getSelectedRow(), 1);
            jPesqDescricaoPav.setText(nomeProduto);
        }
    }//GEN-LAST:event_jTabelaPesquisaKitsMouseClicked

    private void jCheckBoxPesqTodosProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxPesqTodosProdItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            mostrarTodos();
        } else {
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBoxPesqTodosProdItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtEnviar;
    private javax.swing.JButton jBtPesqDescricaoProd;
    private javax.swing.JButton jBtSair;
    private javax.swing.JCheckBox jCheckBoxPesqTodosProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JTextField jPesqDescricaoPav;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaPesquisaKits;
    // End of variables declaration//GEN-END:variables

    public void PESQUISAR_CODIGO_Kit() {

        if (jComboBoxTiposKits.getSelectedItem().equals("Kit Incial")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE KitInicial='" + pKIT_ativo + "'");
                conecta.rs.first();
                pCODIGO_KIT_Inicial = conecta.rs.getInt("IdKit");
                pNOME_kit = "Kit Inicial";
            } catch (SQLException ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            conecta.desconecta();
        } else if (jComboBoxTiposKits.getSelectedItem().equals("Kit Decendial")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE KitDecendial='" + pKIT_ativo + "'");
                conecta.rs.first();
                pCODIGO_KIT_Decendial = conecta.rs.getInt("IdKit");
                pNOME_kit = "Kit Decendial";
            } catch (SQLException ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            conecta.desconecta();
        } else if (jComboBoxTiposKits.getSelectedItem().equals("Kit Quinzenal")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE KitQuinzenal='" + pKIT_ativo + "'");
                conecta.rs.first();
                pCODIGO_KIT_Quinzenal = conecta.rs.getInt("IdKit");
                pNOME_kit = "Kit Quinzenal";
            } catch (SQLException ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            conecta.desconecta();
        } else if (jComboBoxTiposKits.getSelectedItem().equals("Kit Mensal")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE KitMensal='" + pKIT_ativo + "'");
                conecta.rs.first();
                pCODIGO_KIT_Mensal = conecta.rs.getInt("IdKit");
                pNOME_kit = "Kit Mensal";
            } catch (SQLException ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            conecta.desconecta();
        } else if (jComboBoxTiposKits.getSelectedItem().equals("Kit Semestral")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE KitSemestral='" + pKIT_ativo + "'");
                conecta.rs.first();
                pCODIGO_KIT_Semestral = conecta.rs.getInt("IdKit");
                pNOME_kit = "Kit Semestral";
            } catch (SQLException ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            conecta.desconecta();
        } else if (jComboBoxTiposKits.getSelectedItem().equals("Kit Anual")) {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE KitAnual'" + pKIT_ativo + "'");
                conecta.rs.first();
                pCODIGO_KIT_Anual = conecta.rs.getInt("IdKit");
                pNOME_kit = "Kit Anual";
            } catch (SQLException ex) {
                Logger.getLogger(TelaPesquisarComposicaoKit_CA.class.getName()).log(Level.SEVERE, null, ex);
            }
            conecta.desconecta();
        }
    }

    public void mostrarTodos() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaPesquisaKits.getModel();
        ComposicaoKitPesquisa d = new ComposicaoKitPesquisa();
        try {
            for (ComposicaoKitPesquisa dd : listarTodos.read()) {
                dadosOrigem.addRow(new Object[]{dd.getIdRegistroComp(), dd.getDataComp(), dd.getDescricaoKit(), dd.getDescricaoPav()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaPesquisaKits.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaPesquisaKits.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaPesquisaKits.getColumnModel().getColumn(2).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCancelamentoPagamentoKits.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void mostrarDescricao() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaPesquisaKits.getModel();
        ComposicaoKitPesquisa d = new ComposicaoKitPesquisa();
        try {
            for (ComposicaoKitPesquisa dd : listarDescricao.read()) {
                dadosOrigem.addRow(new Object[]{dd.getIdRegistroComp(), dd.getDataComp(), dd.getDescricaoKit(), dd.getDescricaoPav()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaPesquisaKits.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaPesquisaKits.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaPesquisaKits.getColumnModel().getColumn(2).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCancelamentoPagamentoKits.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void limparTabela() {
        // APAGAR DADOS DA TABELA
        while (jTabelaPesquisaKits.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaPesquisaKits.getModel()).removeRow(0);
        }
    }
}
