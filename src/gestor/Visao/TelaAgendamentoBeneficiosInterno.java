/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAgendaBeneficiosInternos;
import gestor.Controle.ControleItensAgendaBeneficiaria;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.AgendaBeneficioInternos;
import gestor.Modelo.ItensAgendaBeneficioInternos;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloJuridico.codigoUserGroupJURI;
import static gestor.Visao.TelaModuloJuridico.codigoGrupoJURI;
import static gestor.Visao.TelaModuloJuridico.codIncluirJURI;
import static gestor.Visao.TelaModuloJuridico.codAlterarJURI;
import static gestor.Visao.TelaModuloJuridico.codExcluirJURI;
import static gestor.Visao.TelaModuloJuridico.codGravarJURI;
import static gestor.Visao.TelaModuloJuridico.codConsultarJURI;
import static gestor.Visao.TelaModuloJuridico.codAbrirJURI;
import static gestor.Visao.TelaModuloJuridico.codUserAcessoJURI;
import static gestor.Visao.TelaModuloJuridico.codigoUserJURI;
import static gestor.Visao.TelaModuloJuridico.nomeGrupoJURI;
import static gestor.Visao.TelaModuloJuridico.nomeTelaJURI;
import static gestor.Visao.TelaModuloJuridico.telaAgendamentoBeneficioManuJURI;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaAgendamentoBeneficiosInterno extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    AgendaBeneficioInternos objAgendaBene = new AgendaBeneficioInternos();
    ControleAgendaBeneficiosInternos control = new ControleAgendaBeneficiosInternos();
    ItensAgendaBeneficioInternos objItens = new ItensAgendaBeneficioInternos();
    ControleItensAgendaBeneficiaria controleItens = new ControleItensAgendaBeneficiaria();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Juridico:Agendamento de Benefício:Manutenção";
    //
    int flag, acao;
    String statusMov;
    String horaMov;
    String dataModFinal;
    String dataAgenda;
    int count = 0;
    String codigoRegistro;
    String dataInicial, dataFinal;
    public static String idItem;
    /**
     * Creates new form TelaAgendamentoBeneficiosInterno
     */
    public static TelaInternosAgendaLaborativa internosAgentaLab;

    public TelaAgendamentoBeneficiosInterno() {
        super();
        initComponents();
        setResizable(false);
        formatarCampos();
        corCampos();
    }

    public void mostrarTelaInternos() {
        internosAgentaLab = new TelaInternosAgendaLaborativa(this, true);
        internosAgentaLab.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jIdRegPesquisa = new javax.swing.JTextField();
        jBtPesqCodigoReg = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqData = new javax.swing.JButton();
        jNomeInternoPesquisa = new javax.swing.JTextField();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaAgendamentoBeneficios = new javax.swing.JTable();
        jPanel34 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdRegistro = new javax.swing.JTextField();
        jComboBoxStatusRegistro = new javax.swing.JComboBox();
        jDataRegistro = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxBeneficio = new javax.swing.JComboBox();
        jDataAgendamento = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaAgendaBeneficioInternos = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jBtPesqInternoCrc = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBtAuditoriaInternos = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Agendamento de Benefícios de Internos :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código:");

        jIdRegPesquisa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegPesquisa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigoReg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigoReg.setContentAreaFilled(false);
        jBtPesqCodigoReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoRegActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Data Inicial:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Data Final:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nome Interno:");

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jNomeInternoPesquisa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jNomeInternoPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jIdRegPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigoReg, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodos)))
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jBtPesqCodigoReg, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jIdRegPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(jCheckBoxTodos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jNomeInternoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaAgendamentoBeneficios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAgendamentoBeneficios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Benefício", "Observação"
            }
        ));
        jTabelaAgendamentoBeneficios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAgendamentoBeneficiosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaAgendamentoBeneficios);
        if (jTabelaAgendamentoBeneficios.getColumnModel().getColumnCount() > 0) {
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setMinWidth(150);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setMaxWidth(150);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setMinWidth(250);
            jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setMaxWidth(250);
        }

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Registro");

        jIdRegistro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdRegistro.setEnabled(false);

        jComboBoxStatusRegistro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatusRegistro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não Realizado", "Realizado", "Cancelado" }));
        jComboBoxStatusRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatusRegistro.setEnabled(false);

        jDataRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataRegistro.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Tipo de Benefício");

        jComboBoxBeneficio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxBeneficio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Saída Temporária", "Progressão de Regime", "Livramento Condicional", "Alvará de Soltura" }));
        jComboBoxBeneficio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxBeneficio.setEnabled(false);

        jDataAgendamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataAgendamento.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Data Agenda");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxBeneficio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jComboBoxStatusRegistro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(8, 8, 8)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxStatusRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBeneficio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_white_star.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setToolTipText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtNovo)
                .addComponent(jBtAlterar)
                .addComponent(jBtExcluir)
                .addComponent(jBtSair)
                .addComponent(jBtCancelar)
                .addComponent(jBtSalvar)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabelaAgendaBeneficioInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAgendaBeneficioInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Nome do Interno", "Benefício", "Data Agenda"
            }
        ));
        jTabelaAgendaBeneficioInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAgendaBeneficioInternosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaAgendaBeneficioInternos);
        if (jTabelaAgendaBeneficioInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setMinWidth(60);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setMaxWidth(60);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setMinWidth(150);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setMaxWidth(150);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtPesqInternoCrc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_white_text.png"))); // NOI18N
        jBtPesqInternoCrc.setEnabled(false);
        jBtPesqInternoCrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoCrcActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jButton2.setEnabled(false);

        jBtAuditoriaInternos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaInternos.setContentAreaFilled(false);
        jBtAuditoriaInternos.setEnabled(false);
        jBtAuditoriaInternos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaInternosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtAuditoriaInternos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInternoCrc, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtPesqInternoCrc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jBtAuditoriaInternos)
                .addGap(30, 30, 30))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAuditoriaInternos, jBtPesqInternoCrc, jButton2});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(300, 30, 538, 526);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoRegActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIdRegPesquisa.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código para pesquisa.");
        } else {
            preencherTabelaAgendaBeneficio("SELECT * FROM AGENDA_BENEFICIO_INTERNOS "
                    + "WHERE IdReg='" + jIdRegPesquisa.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoRegActionPerformed

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaAgendaBeneficio("SELECT * FROM AGENDA_BENEFICIO_INTERNOS");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        preencherTabelaAgendaBeneficioInterno("SELECT * FROM AGENDA_BENEFICIO_INTERNOS "
                                + "INNER JOIN ITENS_AGENDA_BENEFICIO_INTERNOS "
                                + "ON AGENDA_BENEFICIO_INTERNOS.IdReg=ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataReg BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataInicial.requestFocus();
            } else {
                if (jDataFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataFinal.requestFocus();
                } else {
                    if (jDataInicial.getDate().after(jDataFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
                        preencherTabelaAgendaBeneficioInterno("SELECT * FROM AGENDA_BENEFICIO_INTERNOS "
                                + "INNER JOIN ITENS_AGENDA_BENEFICIO_INTERNOS "
                                + "ON AGENDA_BENEFICIO_INTERNOS.IdReg=ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataReg BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jNomeInternoPesquisa.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome ou parte do nome para pesquisa.");
        } else {
            preencherTabelaAgendaBeneficioInterno("SELECT * FROM AGENDA_BENEFICIO_INTERNOS "
                    + "INNER JOIN ITENS_AGENDA_BENEFICIO_INTERNOS "
                    + "ON AGENDA_BENEFICIO_INTERNOS.IdReg=ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jNomeInternoPesquisa.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jTabelaAgendamentoBeneficiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAgendamentoBeneficiosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String IdLanc = "" + jTabelaAgendamentoBeneficios.getValueAt(jTabelaAgendamentoBeneficios.getSelectedRow(), 0);
            //
            jIdRegPesquisa.setText(IdLanc);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtPesqInternoCrc.setEnabled(true);
            jBtAuditoriaInternos.setEnabled(!true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM AGENDA_BENEFICIO_INTERNOS "
                        + "WHERE IdReg='" + IdLanc + "'");
                conecta.rs.first();
                jIdRegistro.setText(String.valueOf(conecta.rs.getInt("IdReg")));
                jComboBoxStatusRegistro.setSelectedItem(conecta.rs.getString("StatusReg"));
                jDataRegistro.setDate(conecta.rs.getDate("DataReg"));
                jComboBoxBeneficio.setSelectedItem(conecta.rs.getString("TipoBeneficio"));
                jDataAgendamento.setDate(conecta.rs.getDate("DataAg"));
                jObservacao.setText(conecta.rs.getString("Observacao"));

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível pesquisar dos dados...\nERRO: " + e);
            }
            preencherTabelaAgenda("SELECT * FROM ITENS_AGENDA_BENEFICIO_INTERNOS "
                    + "INNER JOIN AGENDA_BENEFICIO_INTERNOS "
                    + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg=AGENDA_BENEFICIO_INTERNOS.IdReg "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg='" + jIdRegistro.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaAgendamentoBeneficiosMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAgendamentoBeneficioManuJURI);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoJURI.equals("ADMINISTRADORES") || codigoUserJURI == codUserAcessoJURI && nomeTelaJURI.equals(telaAgendamentoBeneficioManuJURI) && codIncluirJURI == 1) {
            acao = 1;
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAgendamentoBeneficioManuJURI);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoJURI.equals("ADMINISTRADORES") || codigoUserJURI == codUserAcessoJURI && nomeTelaJURI.equals(telaAgendamentoBeneficioManuJURI) && codAlterarJURI == 1) {
            if (jComboBoxStatusRegistro.getSelectedItem().equals("Realizado") || jComboBoxStatusRegistro.getSelectedItem().equals("Cancelado")) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro.");
            } else {
                acao = 2;
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAgendamentoBeneficioManuJURI);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoJURI.equals("ADMINISTRADORES") || codigoUserJURI == codUserAcessoJURI && nomeTelaJURI.equals(telaAgendamentoBeneficioManuJURI) && codExcluirJURI == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            if (jComboBoxStatusRegistro.getSelectedItem().equals("Realizado") || jComboBoxStatusRegistro.getSelectedItem().equals("Cancelado")) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível excluir esse registro.");
            } else {
                verificarInternos();
                if (jIdRegistro.getText().equals(codigoRegistro)) {
                    JOptionPane.showMessageDialog(rootPane, "Não é possível excluir o registro, existe outros registros relacionados.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objAgendaBene.setIdReg(Integer.valueOf(jIdRegistro.getText()));
                        control.excluirAgendaBeneicios(objAgendaBene);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        Excluir();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaAgendamentoBeneficioManuJURI);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoJURI.equals("ADMINISTRADORES") || codigoUserJURI == codUserAcessoJURI && nomeTelaJURI.equals(telaAgendamentoBeneficioManuJURI) && codGravarJURI == 1) {
            if (jDataAgendamento.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do Agendamento.");
            } else if (jDataRegistro.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do Registro.");
            } else {
                objAgendaBene.setStatusReg((String) jComboBoxStatusRegistro.getSelectedItem());
                objAgendaBene.setDataReg(jDataRegistro.getDate());
                objAgendaBene.setTipoBeneficio((String) jComboBoxBeneficio.getSelectedItem());
                objAgendaBene.setDataAg(jDataAgendamento.getDate());
                objAgendaBene.setObservacao(jObservacao.getText());
                if (acao == 1) {
                    objAgendaBene.setUsuarioInsert(nameUser);
                    objAgendaBene.setDataInsert(dataModFinal);
                    objAgendaBene.setHorarioInsert(horaMov);
                    control.incluirAgendaBeneicios(objAgendaBene);
                    buscarCodigo();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso !!!");
                }
                if (acao == 2) {
                    objAgendaBene.setUsuarioInsert(nameUser);
                    objAgendaBene.setDataInsert(dataModFinal);
                    objAgendaBene.setHorarioInsert(horaMov);
                    objAgendaBene.setIdReg(Integer.valueOf(jIdRegistro.getText()));
                    control.alterarAgendaBeneicios(objAgendaBene);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso !!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaAgendamentoBeneficio objAgendaBene = new TelaAuditoriaAgendamentoBeneficio();
        TelaModuloJuridico.jPainelJuridico.add(objAgendaBene);
        objAgendaBene.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jTabelaAgendaBeneficioInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAgendaBeneficioInternosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String iditem = "" + jTabelaAgendaBeneficioInternos.getValueAt(jTabelaAgendaBeneficioInternos.getSelectedRow(), 0);
            jBtAuditoriaInternos.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_AGENDA_BENEFICIO_INTERNOS "
                        + "INNER JOIN AGENDA_BENEFICIO_INTERNOS "
                        + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg=AGENDA_BENEFICIO_INTERNOS.IdReg "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ITENS_AGENDA_BENEFICIO_INTERNOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE ITENS_AGENDA_BENEFICIO_INTERNOS.IdReg='" + jIdRegistro.getText() + "'AND IdItem='" + iditem + "'");
                conecta.rs.first();
                idItem = conecta.rs.getString("IdItem");
                conecta.desconecta();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
        }
    }//GEN-LAST:event_jTabelaAgendaBeneficioInternosMouseClicked

    private void jBtPesqInternoCrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoCrcActionPerformed
        // TODO add your handling code here:
        if (jComboBoxStatusRegistro.getSelectedItem().equals("Realizado") || jComboBoxStatusRegistro.getSelectedItem().equals("Cancelado")) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro.");
        } else {
            jBtAuditoriaInternos.setEnabled(!true);
            mostrarTelaInternos();
        }
    }//GEN-LAST:event_jBtPesqInternoCrcActionPerformed

    private void jBtAuditoriaInternosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaInternosActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensAgendabeneficios objAudiInter = new TelaAuditoriaItensAgendabeneficios();
        TelaModuloJuridico.jPainelJuridico.add(objAudiInter);
        objAudiInter.show();
    }//GEN-LAST:event_jBtAuditoriaInternosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jBtAlterar;
    public static javax.swing.JButton jBtAuditoria;
    public static javax.swing.JButton jBtAuditoriaInternos;
    public static javax.swing.JButton jBtCancelar;
    public static javax.swing.JButton jBtExcluir;
    public static javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqCodigoReg;
    private javax.swing.JButton jBtPesqData;
    public static javax.swing.JButton jBtPesqInternoCrc;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtSair;
    public static javax.swing.JButton jBtSalvar;
    public static javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBoxTodos;
    public static javax.swing.JComboBox jComboBoxBeneficio;
    public static javax.swing.JComboBox jComboBoxStatusRegistro;
    public static com.toedter.calendar.JDateChooser jDataAgendamento;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    public static com.toedter.calendar.JDateChooser jDataRegistro;
    public static javax.swing.JTextField jIdRegPesquisa;
    public static javax.swing.JTextField jIdRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNomeInternoPesquisa;
    public static javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTabelaAgendaBeneficioInternos;
    public static javax.swing.JTable jTabelaAgendamentoBeneficios;
    public static javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdRegistro.setBackground(Color.white);
        jComboBoxStatusRegistro.setBackground(Color.white);
        jDataRegistro.setBackground(Color.white);
        jComboBoxBeneficio.setBackground(Color.white);
        jDataAgendamento.setBackground(Color.white);
    }

    public void Novo() {
        jComboBoxStatusRegistro.setSelectedItem("Não Realizado");
        jDataRegistro.setCalendar(Calendar.getInstance());
        jComboBoxBeneficio.setSelectedItem("Saída Temporária");
        jDataAgendamento.setCalendar(Calendar.getInstance());
        jObservacao.setText("");
        //       
        jComboBoxStatusRegistro.setEnabled(true);
        jDataRegistro.setEnabled(true);
        jComboBoxBeneficio.setEnabled(true);
        jDataAgendamento.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInternoCrc.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        limparTabelaInternos();
    }

    public void Alterar() {
        jComboBoxStatusRegistro.setEnabled(true);
        jDataRegistro.setEnabled(true);
        jComboBoxBeneficio.setEnabled(true);
        jDataAgendamento.setEnabled(true);
        jObservacao.setEnabled(true);
        jBtPesqInternoCrc.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Excluir() {
        jComboBoxStatusRegistro.setSelectedItem("Não Realizado");
        jDataRegistro.setDate(null);
        jComboBoxBeneficio.setSelectedItem("Saída Temporária");
        jDataAgendamento.setDate(null);
        jObservacao.setText("");
        //       
        jComboBoxStatusRegistro.setEnabled(!true);
        jDataRegistro.setEnabled(!true);
        jComboBoxBeneficio.setEnabled(!true);
        jDataAgendamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoCrc.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Salvar() {
        jComboBoxStatusRegistro.setEnabled(!true);
        jDataRegistro.setEnabled(!true);
        jComboBoxBeneficio.setEnabled(!true);
        jDataAgendamento.setEnabled(!true);
        jObservacao.setEnabled(!true);
        jBtPesqInternoCrc.setEnabled(true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdRegistro.getText().equals("")) {
            jComboBoxStatusRegistro.setSelectedItem("Não Realizado");
            jDataRegistro.setDate(null);
            jComboBoxBeneficio.setSelectedItem("Saída Temporária");
            jDataAgendamento.setDate(null);
            //       
            jComboBoxStatusRegistro.setEnabled(!true);
            jDataRegistro.setEnabled(!true);
            jComboBoxBeneficio.setEnabled(!true);
            jDataAgendamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqInternoCrc.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
        } else {
            jComboBoxStatusRegistro.setEnabled(!true);
            jDataRegistro.setEnabled(!true);
            jComboBoxBeneficio.setEnabled(!true);
            jDataAgendamento.setEnabled(!true);
            jObservacao.setEnabled(!true);
            jBtPesqInternoCrc.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM AGENDA_BENEFICIO_INTERNOS");
            conecta.rs.last();
            jIdRegistro.setText(conecta.rs.getString("IdReg"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
        conecta.desconecta();
    }

    public void verificarInternos() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_AGENDA_BENEFICIO_INTERNOS WHERE IdReg='" + jIdRegistro.getText() + "'");
            conecta.rs.first();
            codigoRegistro = conecta.rs.getString("IdReg");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaAgenda(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Benefício", "Data Agenda"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataAgenda = conecta.rs.getString("DataAg");
                String diae = dataAgenda.substring(8, 10);
                String mese = dataAgenda.substring(5, 7);
                String anoe = dataAgenda.substring(0, 4);
                dataAgenda = diae + "/" + mese + "/" + anoe;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("TipoBeneficio"), dataAgenda});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendaBeneficioInternos.setModel(modelo);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setPreferredWidth(270);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgendaBeneficioInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendaBeneficioInternos.setAutoResizeMode(jTabelaAgendaBeneficioInternos.AUTO_RESIZE_OFF);
        jTabelaAgendaBeneficioInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgenda();
        conecta.desconecta();
    }

    public void limparTabelaInternos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Nome do Interno", "Benefício", "Data Agenda"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendaBeneficioInternos.setModel(modelo);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setPreferredWidth(270);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgendaBeneficioInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendaBeneficioInternos.setAutoResizeMode(jTabelaAgendaBeneficioInternos.AUTO_RESIZE_OFF);
        jTabelaAgendaBeneficioInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaAgenda() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaAgendaBeneficioInternos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }

    public void preencherTabelaAgendaBeneficio(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Agenda", "Benefício", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataAgenda = conecta.rs.getString("DataReg");
                String diae = dataAgenda.substring(8, 10);
                String mese = dataAgenda.substring(5, 7);
                String anoe = dataAgenda.substring(0, 4);
                dataAgenda = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count));
                dados.add(new Object[]{conecta.rs.getInt("IdReg"), dataAgenda, conecta.rs.getString("TipoBeneficio"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendamentoBeneficios.setModel(modelo);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendamentoBeneficios.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendamentoBeneficios.setAutoResizeMode(jTabelaAgendamentoBeneficios.AUTO_RESIZE_OFF);
        jTabelaAgendamentoBeneficios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgendaBeneficio();
        conecta.desconecta();
    }

    public void preencherTabelaAgendaBeneficioInterno(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Agenda", "Nome do Interno", "Benefício"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataAgenda = conecta.rs.getString("DataReg");
                String diae = dataAgenda.substring(8, 10);
                String mese = dataAgenda.substring(5, 7);
                String anoe = dataAgenda.substring(0, 4);
                dataAgenda = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count));
                dados.add(new Object[]{conecta.rs.getInt("IdReg"), dataAgenda, conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("TipoBeneficio")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendamentoBeneficios.setModel(modelo);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendamentoBeneficios.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendamentoBeneficios.setAutoResizeMode(jTabelaAgendamentoBeneficios.AUTO_RESIZE_OFF);
        jTabelaAgendamentoBeneficios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaAgendaBeneficio();
        conecta.desconecta();
    }

    public void alinharTabelaAgendaBeneficio() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Agenda", "Benefício", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgendamentoBeneficios.setModel(modelo);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaAgendamentoBeneficios.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgendamentoBeneficios.getTableHeader().setReorderingAllowed(false);
        jTabelaAgendamentoBeneficios.setAutoResizeMode(jTabelaAgendamentoBeneficios.AUTO_RESIZE_OFF);
        jTabelaAgendamentoBeneficios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdRegistro.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserJURI = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserJURI + "'");
            conecta.rs.first();
            codigoUserGroupJURI = conecta.rs.getInt("IdUsuario");
            codigoGrupoJURI = conecta.rs.getInt("IdGrupo");
            nomeGrupoJURI = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserJURI + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoJURI = conecta.rs.getInt("IdUsuario");
            codAbrirJURI = conecta.rs.getInt("Abrir");
            codIncluirJURI = conecta.rs.getInt("Incluir");
            codAlterarJURI = conecta.rs.getInt("Alterar");
            codExcluirJURI = conecta.rs.getInt("Excluir");
            codGravarJURI = conecta.rs.getInt("Gravar");
            codConsultarJURI = conecta.rs.getInt("Consultar");
            nomeTelaJURI = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
