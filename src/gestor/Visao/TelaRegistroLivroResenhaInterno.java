/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleResenhaInterno;
import gestor.Dao.ConexaoBancoDados;
import Utilitarios.ModeloTabela;
import gestor.Modelo.LogSistema;
import gestor.Modelo.ResenhaRemicaoInterno;
import gestor.Modelo.UnidadePenal;
import static gestor.Visao.TelaLoginSenha.descricaoUnidade;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPedagogia.codAbrirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codAlterarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codConsultarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codExcluirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codGravarPEDA;
import static gestor.Visao.TelaModuloPedagogia.codIncluirPEDA;
import static gestor.Visao.TelaModuloPedagogia.codUserAcessoPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoGrupoPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoUserGroupPEDA;
import static gestor.Visao.TelaModuloPedagogia.codigoUserPEDA;
import static gestor.Visao.TelaModuloPedagogia.nomeGrupoPEDA;
import static gestor.Visao.TelaModuloPedagogia.nomeTelaPEDA;
import static gestor.Visao.TelaModuloPedagogia.telaRegistroResenhaPEDA;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.HashMap;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Socializa TI 02
 */
public class TelaRegistroLivroResenhaInterno extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ResenhaRemicaoInterno objResenha = new ResenhaRemicaoInterno();
    ControleResenhaInterno control = new ControleResenhaInterno();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "PEDAGOGIA:Registro de Resenha de Internos:Manutenção";
    //
    String statusMov;
    String horaMov;
    String dataModFinal;
    int acao;
    int flag;
    int count = 0;
    int count1 = 0;
    String dataInicial;
    String dataFinal;
    String dataEntrada;
    String dataSaida;
    public static int idColaborador = 0;
    //
    Float pValidacaoResenha;
    Float pParagrafo;
    Float pMargens;
    Float pLegivel;
    Float pRasuras;
    Float pCompreensao;
    Float pCompatibilidade;
    Float pTema;
    //
    int pDiasRemissao = 0;
    int pDiasTotal = 0;
    float pNotaAvaliacao = 0;
    String pAvalicaoAprovado = "";
    String pValorNota;

    /**
     * Creates new form TelaRegistroLivroResenhaInterno
     */
    public TelaRegistroLivroResenhaInterno() {
        initComponents();
        corCampos();
        formatarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jIDPesqLanc = new javax.swing.JTextField();
        jBtPesqID = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jPesqNomeInternoVisitado = new javax.swing.JTextField();
        jBtPesqData = new javax.swing.JButton();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaEntradaSaidaVisitasInternos = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdRegistro = new javax.swing.JTextField();
        jStatusRegistro = new javax.swing.JTextField();
        jDataRealizacao = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jIdLivro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jNomeLivroRevista = new javax.swing.JTextField();
        jBtPesquisarLivro = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jAutor = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jResponsavelAplicacaoResenha = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jBtImpressao = new javax.swing.JButton();
        jBtManual = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jBtColaborador = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jIdInternoCrcPEDA = new javax.swing.JTextField();
        jCnc = new javax.swing.JTextField();
        jEnderecoCela = new javax.swing.JTextField();
        jNomeInternoPEDA = new javax.swing.JTextField();
        jBtPesquisarInterno = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxResenha = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jDataEntregaResenha = new com.toedter.calendar.JDateChooser();
        jValidacaoResenha = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jNrResenha = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jParagrafo = new javax.swing.JFormattedTextField();
        jMargens = new javax.swing.JFormattedTextField();
        jLegivel = new javax.swing.JFormattedTextField();
        jRasuras = new javax.swing.JFormattedTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTema = new javax.swing.JFormattedTextField();
        jCompatibilidade = new javax.swing.JFormattedTextField();
        jCompreensao = new javax.swing.JFormattedTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jFidedignidade = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacaoPEDA = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        jBtNovo1 = new javax.swing.JButton();
        jBtAlterar1 = new javax.swing.JButton();
        jBtExcluir1 = new javax.swing.JButton();
        jBtSalvar1 = new javax.swing.JButton();
        jBtCancelar1 = new javax.swing.JButton();
        jBtAuditoria1 = new javax.swing.JButton();
        jBtSair1 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTotalDiasAcumulado = new javax.swing.JFormattedTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaDiasRemissao = new javax.swing.JTable();
        jPanel33 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jtotalRegistrosDias = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Formulário para Construção da  Resenha - CNJ Nº 44/2013 :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código:");

        jIDPesqLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDPesqLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqID.setContentAreaFilled(false);
        jBtPesqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqIDActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Data Inicial:");

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPesqNomeInternoVisitado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqData.setContentAreaFilled(false);
        jBtPesqData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataActionPerformed(evt);
            }
        });

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Data Final:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nome Interno:");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInternoVisitado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17)
                    .addComponent(jIDPesqLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqID)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18)
                    .addComponent(jPesqNomeInternoVisitado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInterno))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabelaEntradaSaidaVisitasInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEntradaSaidaVisitasInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Observação"
            }
        ));
        jTabelaEntradaSaidaVisitasInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEntradaSaidaVisitasInternosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaEntradaSaidaVisitasInternos);
        if (jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setMinWidth(250);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Realização");

        jIdRegistro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdRegistro.setEnabled(false);

        jStatusRegistro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusRegistro.setForeground(new java.awt.Color(204, 0, 0));
        jStatusRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusRegistro.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jStatusRegistro.setEnabled(false);

        jDataRealizacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataRealizacao.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jIdLivro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLivro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLivro.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome/Titulo do Livro");

        jNomeLivroRevista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeLivroRevista.setEnabled(false);

        jBtPesquisarLivro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarLivro.setToolTipText("Pesquisar Livro/Revista");
        jBtPesquisarLivro.setContentAreaFilled(false);
        jBtPesquisarLivro.setEnabled(false);
        jBtPesquisarLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarLivroActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Autor");

        jAutor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jAutor.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Responsável pela aplicação da Resenha:");

        jResponsavelAplicacaoResenha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jResponsavelAplicacaoResenha.setEnabled(false);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressao.setContentAreaFilled(false);
        jBtImpressao.setEnabled(false);
        jBtImpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImpressaoActionPerformed(evt);
            }
        });

        jBtManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Pdf16.png"))); // NOI18N
        jBtManual.setToolTipText("Texto sobre a lei de remição");
        jBtManual.setContentAreaFilled(false);
        jBtManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtManualActionPerformed(evt);
            }
        });

        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/tick.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar Registro");
        jBtFinalizar.setContentAreaFilled(false);
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtManual, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtImpressao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtImpressao, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jBtManual, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jBtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtFinalizar, jBtImpressao, jBtManual});

        jBtColaborador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtColaborador.setContentAreaFilled(false);
        jBtColaborador.setEnabled(false);
        jBtColaborador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtColaboradorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeLivroRevista)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesquisarLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAutor))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jStatusRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDataRealizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(68, 68, 68)
                                .addComponent(jLabel7))
                            .addComponent(jLabel20))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jResponsavelAplicacaoResenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdLivro, jIdRegistro});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jStatusRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataRealizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesquisarLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeLivroRevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jResponsavelAplicacaoResenha)
                    .addComponent(jBtColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dados do Interno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Código");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("CNC");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Cela");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome do Interno");

        jIdInternoCrcPEDA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrcPEDA.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrcPEDA.setEnabled(false);

        jCnc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCnc.setEnabled(false);

        jEnderecoCela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jEnderecoCela.setEnabled(false);

        jNomeInternoPEDA.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoPEDA.setEnabled(false);

        jBtPesquisarInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarInterno.setContentAreaFilled(false);
        jBtPesquisarInterno.setEnabled(false);
        jBtPesquisarInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarInternoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNomeInternoPEDA)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jIdInternoCrcPEDA, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCnc, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jEnderecoCela))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesquisarInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jEnderecoCela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisarInterno)
                    .addComponent(jCnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdInternoCrcPEDA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(8, 8, 8)
                .addComponent(jNomeInternoPEDA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Resenha entregue?");

        jComboBoxResenha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxResenha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Não", "Sim" }));
        jComboBoxResenha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxResenha.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data Entrega:");

        jDataEntregaResenha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataEntregaResenha.setEnabled(false);

        jValidacaoResenha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValidacaoResenha.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValidacaoResenha.setToolTipText("Nota de (0 a 10 pontos)");
        jValidacaoResenha.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Validação Resenha:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Resenha Nº:");

        jNrResenha.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jNrResenha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNrResenha.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxResenha, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataEntregaResenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jValidacaoResenha)
                    .addComponent(jNrResenha))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxResenha, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jNrResenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19)
                    .addComponent(jValidacaoResenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataEntregaResenha, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtSair)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo)
                        .addComponent(jBtAlterar)
                        .addComponent(jBtExcluir)
                        .addComponent(jBtSalvar)
                        .addComponent(jBtCancelar)))
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Estética (2 pontos)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Parágrafo:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Respeito as margens:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Letra legível:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Rasuras:");

        jParagrafo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jParagrafo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jParagrafo.setEnabled(false);

        jMargens.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jMargens.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jMargens.setEnabled(false);

        jLegivel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLegivel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLegivel.setEnabled(false);

        jRasuras.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRasuras.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jRasuras.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jMargens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLegivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRasuras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jParagrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLegivel, jMargens, jParagrafo, jRasuras});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jParagrafo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jMargens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLegivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jRasuras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Limitação ao tema (6 pontos)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Compreensão:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Compatibilidade:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Pertinência e limitação ao tema:");

        jTema.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTema.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTema.setEnabled(false);

        jCompatibilidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCompatibilidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCompatibilidade.setEnabled(false);

        jCompreensao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCompreensao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCompreensao.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCompreensao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCompatibilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTema, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCompatibilidade, jCompreensao, jTema});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel25)
                    .addComponent(jCompreensao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel26)
                    .addComponent(jCompatibilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel27)
                    .addComponent(jTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Fidedignidade (2 pontos)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 102, 0))); // NOI18N

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jFidedignidade.setColumns(20);
        jFidedignidade.setRows(5);
        jFidedignidade.setEnabled(false);
        jScrollPane2.setViewportView(jFidedignidade);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(153, 0, 102))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jObservacaoPEDA.setColumns(20);
        jObservacaoPEDA.setRows(5);
        jObservacaoPEDA.setEnabled(false);
        jScrollPane1.setViewportView(jObservacaoPEDA);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo1.setText("Novo");
        jBtNovo1.setContentAreaFilled(false);
        jBtNovo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovo1ActionPerformed(evt);
            }
        });

        jBtAlterar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar1.setText("Alterar");
        jBtAlterar1.setContentAreaFilled(false);
        jBtAlterar1.setEnabled(false);
        jBtAlterar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterar1ActionPerformed(evt);
            }
        });

        jBtExcluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir1.setText("Excluir");
        jBtExcluir1.setContentAreaFilled(false);
        jBtExcluir1.setEnabled(false);
        jBtExcluir1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluir1ActionPerformed(evt);
            }
        });

        jBtSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar1.setText("Gravar");
        jBtSalvar1.setContentAreaFilled(false);
        jBtSalvar1.setEnabled(false);
        jBtSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvar1ActionPerformed(evt);
            }
        });

        jBtCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar1.setText("Cancelar");
        jBtCancelar1.setContentAreaFilled(false);
        jBtCancelar1.setEnabled(false);
        jBtCancelar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelar1ActionPerformed(evt);
            }
        });

        jBtAuditoria1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria1.setToolTipText("Auditoria");
        jBtAuditoria1.setContentAreaFilled(false);
        jBtAuditoria1.setEnabled(false);
        jBtAuditoria1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoria1ActionPerformed(evt);
            }
        });

        jBtSair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair1.setText("Sair");
        jBtSair1.setContentAreaFilled(false);
        jBtSair1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSair1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jBtNovo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jBtAuditoria1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtSair1)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtNovo1)
                        .addComponent(jBtAlterar1)
                        .addComponent(jBtExcluir1)
                        .addComponent(jBtSalvar1)
                        .addComponent(jBtCancelar1)))
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoria1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        jTabbedPane1.addTab("Itens Avaliados/Pontuação", jPanel8);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Total de Dias Acumulado:");

        jTotalDiasAcumulado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTotalDiasAcumulado.setForeground(new java.awt.Color(204, 0, 0));
        jTotalDiasAcumulado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTotalDiasAcumulado.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jTotalDiasAcumulado.setEnabled(false);
        jTotalDiasAcumulado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTotalDiasAcumulado, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTotalDiasAcumulado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabelaDiasRemissao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaDiasRemissao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data Registro", "Dias", "Validação Resenha", "Aprovado/Reprovado"
            }
        ));
        jScrollPane4.setViewportView(jTabelaDiasRemissao);
        if (jTabelaDiasRemissao.getColumnModel().getColumnCount() > 0) {
            jTabelaDiasRemissao.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaDiasRemissao.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaDiasRemissao.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaDiasRemissao.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaDiasRemissao.getColumnModel().getColumn(2).setMinWidth(60);
            jTabelaDiasRemissao.getColumnModel().getColumn(2).setMaxWidth(60);
            jTabelaDiasRemissao.getColumnModel().getColumn(3).setMinWidth(100);
            jTabelaDiasRemissao.getColumnModel().getColumn(3).setMaxWidth(100);
            jTabelaDiasRemissao.getColumnModel().getColumn(4).setMinWidth(120);
            jTabelaDiasRemissao.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel64.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel64))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel64)
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistrosDias.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistrosDias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistrosDias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Dias Remição", jPanel15);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 40, 518, 534);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqIDActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIDPesqLanc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um ID para pesquisa.");
        } else {
            preencherTodasEntSai("SELECT * FROM RESENHA_REMICAO_INTERNO "
                    + "WHERE IdResenha='" + jIDPesqLanc.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqIDActionPerformed

    private void jBtPesqDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        preencherTodasEntSai("SELECT * FROM RESENHA_REMICAO_INTERNO "
                                + "WHERE DataResenha BETWEEN'" + dataInicial + "' "
                                + "AND'" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                jDataPesqInicial.requestFocus();
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                    jDataPesqFinal.requestFocus();
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        preencherTodasEntSai("SELECT * FROM RESENHA_REMICAO_INTERNO "
                                + "WHERE DataResenha BETWEEN'" + dataInicial + "' "
                                + "AND'" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeInternoVisitado.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome ou parte do nome para pesquisa.");
        } else {
            popularTabelaNomeInterno("SELECT * FROM RESENHA_REMICAO_INTERNO "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON RESENHA_REMICAO_INTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInternoVisitado.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTodasEntSai("SELECT * FROM RESENHA_REMICAO_INTERNO");
        } else {
            jtotalRegistros.setText("");
            limparTabelaEntradaVisitas();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jTabelaEntradaSaidaVisitasInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEntradaSaidaVisitasInternosMouseClicked
        // TODO add your handling code here:   
        pDiasTotal = 0;
        count = 0;
        count1 = 0;
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaEntradaSaidaVisitasInternos.getValueAt(jTabelaEntradaSaidaVisitasInternos.getSelectedRow(), 0);
            jIDPesqLanc.setText(IdLanc);
            //
            bloquearCampos();
            bloquearBotoes();
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtImpressao.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovo1.setEnabled(true);
            jBtAlterar1.setEnabled(true);
            jBtExcluir1.setEnabled(true);
            jBtSalvar1.setEnabled(!true);
            jBtCancelar1.setEnabled(true);
            jBtAuditoria1.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM RESENHA_REMICAO_INTERNO "
                        + "INNER JOIN LIVROS_REVISTAS_JORNAIS "
                        + "ON RESENHA_REMICAO_INTERNO.IdLivro=LIVROS_REVISTAS_JORNAIS.IdLivro "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON RESENHA_REMICAO_INTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "INNER JOIN ITENS_AUTOR_LIVROS "
                        + "ON LIVROS_REVISTAS_JORNAIS.IdLivro=ITENS_AUTOR_LIVROS.IdLivro "
                        + "INNER JOIN ITENSLOCACAOINTERNO "
                        + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                        + "INNER JOIN CELAS "
                        + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                        + "INNER JOIN AUTORES_LIVROS "
                        + "ON ITENS_AUTOR_LIVROS.IdAutor=AUTORES_LIVROS.IdAutor "
                        + "INNER JOIN COLABORADOR "
                        + "ON RESENHA_REMICAO_INTERNO.IdFunc=COLABORADOR.IdFunc "
                        + "WHERE IdResenha='" + IdLanc + "'");
                conecta.rs.first();
                jIdRegistro.setText(String.valueOf(conecta.rs.getInt("IdResenha")));
                jStatusRegistro.setText(conecta.rs.getString("StatusResenha"));
                jDataRealizacao.setDate(conecta.rs.getDate("DataResenha"));
                jIdLivro.setText(conecta.rs.getString("IdLivro"));
                jAutor.setText(conecta.rs.getString("NomeAutor"));
                jNomeLivroRevista.setText(conecta.rs.getString("TituloLivro"));
                idColaborador = conecta.rs.getInt("IdFunc");
                jResponsavelAplicacaoResenha.setText(conecta.rs.getString("NomeFunc"));
                jIdInternoCrcPEDA.setText(conecta.rs.getString("IdInternoCrc"));
                jCnc.setText(conecta.rs.getString("Cnc"));
                jEnderecoCela.setText(conecta.rs.getString("EndCelaPav"));
                jNomeInternoPEDA.setText(conecta.rs.getString("NomeInternoCrc"));
                jComboBoxResenha.setSelectedItem(conecta.rs.getString("ResenhaEntregue"));
                jDataEntregaResenha.setDate(conecta.rs.getDate("DataEntraga"));
                jNrResenha.setText(conecta.rs.getString("NrResenha"));
                //
                pValidacaoResenha = conecta.rs.getFloat("ValidacaoResenha");
                DecimalFormat vr = new DecimalFormat("#,##0.00");
                String vlCusto = vr.format(pValidacaoResenha);
                jValidacaoResenha.setText(vlCusto);
                //
                pParagrafo = conecta.rs.getFloat("Paragrafo");
                DecimalFormat vp = new DecimalFormat("#,##0.00");
                String vlparagrafo = vp.format(pParagrafo);
                jParagrafo.setText(vlparagrafo);
                //
                pMargens = conecta.rs.getFloat("Margens");
                DecimalFormat vm = new DecimalFormat("#,##0.00");
                String vlMargens = vm.format(pMargens);
                jMargens.setText(vlMargens);
                //
                pLegivel = conecta.rs.getFloat("Legivel");
                DecimalFormat vl = new DecimalFormat("#,##0.00");
                String vlLegivel = vl.format(pLegivel);
                jLegivel.setText(vlLegivel);
                //
                pRasuras = conecta.rs.getFloat("Rasuras");
                DecimalFormat vr0 = new DecimalFormat("#,##0.00");
                String vlRasuras = vr0.format(pRasuras);
                jRasuras.setText(vlRasuras);
                //
                pCompreensao = conecta.rs.getFloat("Compreensao");
                DecimalFormat vc = new DecimalFormat("#,##0.00");
                String vlCompreensao = vc.format(pCompreensao);
                jCompreensao.setText(vlCompreensao);
                //
                pCompatibilidade = conecta.rs.getFloat("Compatibilidade");
                DecimalFormat vcc = new DecimalFormat("#,##0.00");
                String vlCompatibilidade = vcc.format(pCompatibilidade);
                jCompatibilidade.setText(vlCompatibilidade);
                //
                pTema = conecta.rs.getFloat("Tema");
                DecimalFormat vt = new DecimalFormat("#,##0.00");
                String vlTema = vt.format(pTema);
                jTema.setText(vlTema);
                //
                jFidedignidade.setText(conecta.rs.getString("Fidedignidade"));
                jObservacaoPEDA.setText(conecta.rs.getString("Observacao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            conecta.desconecta();
            popularTabelaDiasRemicaoInterno("SELECT * FROM ACUMULADOR_REMICAO_INTERNO "
                    + "INNER JOIN RESENHA_REMICAO_INTERNO "
                    + "ON ACUMULADOR_REMICAO_INTERNO.IdResenha=RESENHA_REMICAO_INTERNO.IdResenha "
                    + "WHERE ACUMULADOR_REMICAO_INTERNO.IdInternoCrc='" + jIdInternoCrcPEDA.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaEntradaSaidaVisitasInternosMouseClicked

    private void jBtPesquisarLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarLivroActionPerformed
        // TODO add your handling code here:
        TelaPesqLivroAcervoResenha objPesquisaAutorLivro = new TelaPesqLivroAcervoResenha();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesquisaAutorLivro);
        objPesquisaAutorLivro.show();
    }//GEN-LAST:event_jBtPesquisarLivroActionPerformed

    private void jBtPesquisarInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarInternoActionPerformed
        // TODO add your handling code here:
        TelaPesquisarInternoResenha objPesquisaInterno = new TelaPesquisarInternoResenha();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesquisaInterno);
        objPesquisaInterno.show();
    }//GEN-LAST:event_jBtPesquisarInternoActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        objResenha.setStatusResenha(jStatusRegistro.getText());
        if (jStatusRegistro.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa registro já foi FINALIZADO.");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o registro selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                statusMov = "Finalizou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                String statusEntrada = "FINALIZADO";
                objResenha.setStatusResenha(statusEntrada);
                objResenha.setIdResenha(Integer.parseInt(jIdRegistro.getText()));
                control.finalizarResenhaInterno(objResenha);
                jStatusRegistro.setText(statusEntrada);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            }
        }
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codIncluirPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            acao = 1;
            limparCampos();
            bloquearCampos();
            bloquearBotoes();
            limparTabelaRemicao();
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codAlterarPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            objResenha.setStatusResenha(jStatusRegistro.getText());
            if (jStatusRegistro.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                bloquearCampos();
                bloquearBotoes();
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codExcluirPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            objResenha.setStatusResenha(jStatusRegistro.getText());
            if (jStatusRegistro.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                statusMov = "Excluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objResenha.setIdResenha(Integer.parseInt(jIdRegistro.getText()));
                    control.excluirResenhaInterno(objResenha);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    limparCampos();
                    bloquearCampos();
                    bloquearBotoes();
                    Excluir();

                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codGravarPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            DecimalFormat valorReal = new DecimalFormat("###,##00.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jDataRealizacao.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de realização do resumo.");
            } else if (jIdLivro.getText().equals("") || jNomeLivroRevista.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual livro para o resumo.");
            } else if (jResponsavelAplicacaoResenha.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Favor informar o responsavél pelo resumo.");
            } else if (jIdInternoCrcPEDA.getText().equals("") || jNomeInternoPEDA.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar para qual interno foi aplicado a resenha.");
            } else if (jDataEntregaResenha.getDate() == null && jComboBoxResenha.getSelectedItem().equals("Sim")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar a data de entrega da resenha.");
            } else {
                objResenha.setStatusResenha(jStatusRegistro.getText());
                objResenha.setDataResenha(jDataRealizacao.getDate());
                objResenha.setIdLivro(Integer.valueOf(jIdLivro.getText()));
                objResenha.setTituloLivro(jNomeLivroRevista.getText());
                objResenha.setAutorLivro(jAutor.getText());
                objResenha.setIdFunc(idColaborador);
                objResenha.setNomeColaboradorResp(jResponsavelAplicacaoResenha.getText());
                objResenha.setIdInternoCrc(Integer.valueOf(jIdInternoCrcPEDA.getText()));
                objResenha.setNomeInternoCrc(jNomeInternoPEDA.getText());
                objResenha.setResenhaEntregue((String) jComboBoxResenha.getSelectedItem());
                objResenha.setNrResenha(Integer.valueOf(jNrResenha.getText()));
                objResenha.setDataEntraga(jDataEntregaResenha.getDate());
                try {
                    objResenha.setValidacaoResenha(valorReal.parse(jValidacaoResenha.getText()).floatValue());
                    objResenha.setParagrafo(valorReal.parse(jParagrafo.getText()).floatValue());
                    objResenha.setMargens(valorReal.parse(jMargens.getText()).floatValue());
                    objResenha.setLegivel(valorReal.parse(jLegivel.getText()).floatValue());
                    objResenha.setRasuras(valorReal.parse(jRasuras.getText()).floatValue());
                    objResenha.setCompreensao(valorReal.parse(jCompreensao.getText()).floatValue());
                    objResenha.setCompatibilidade(valorReal.parse(jCompatibilidade.getText()).floatValue());
                    objResenha.setTema(valorReal.parse(jTema.getText()).floatValue());
                } catch (ParseException ex) {
                    Logger.getLogger(TelaRegistroLivroResenhaInterno.class.getName()).log(Level.SEVERE, null, ex);
                }
                objResenha.setFidedignidade(jFidedignidade.getText());
                objResenha.setObservacao(jObservacaoPEDA.getText());
                if (acao == 1) {
                    objResenha.setUsuarioInsert(nameUser);
                    objResenha.setDataInsert(dataModFinal);
                    objResenha.setHorarioInsert(horaMov);
                    //
                    control.incluirResenhaInterno(objResenha);
                    BuscarCodigo();
                    //INCLUIR DIAS DE REMIÇÃO (4)
                    objResenha.setDataResenha(jDataRealizacao.getDate());
                    objResenha.setIdInternoCrc(Integer.valueOf(jIdInternoCrcPEDA.getText()));
                    objResenha.setNomeInternoCrc(jNomeInternoPEDA.getText());
                    if (objResenha.getValidacaoResenha() >= 6) {
                        pDiasRemissao = 4;
                    } else if (objResenha.getValidacaoResenha() <= 5.9) {
                        pDiasRemissao = 0;
                    }
                    objResenha.setDiaResenha(pDiasRemissao);
                    objResenha.setIdResenha(Integer.valueOf(jIdRegistro.getText()));
                    control.incluirDiaResenhaInterno(objResenha);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos();
                    bloquearBotoes();
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 2) {
                    objResenha.setUsuarioUp(nameUser);
                    objResenha.setDataUp(dataModFinal);
                    objResenha.setHorarioUp(horaMov);
                    //
                    objResenha.setIdResenha(Integer.valueOf(jIdRegistro.getText()));
                    control.alterarResenhaInterno(objResenha);
                    //INCLUIR DIAS DE REMIÇÃO (4)
                    objResenha.setDataResenha(jDataRealizacao.getDate());
                    objResenha.setIdInternoCrc(Integer.valueOf(jIdInternoCrcPEDA.getText()));
                    objResenha.setNomeInternoCrc(jNomeInternoPEDA.getText());
                    if (objResenha.getValidacaoResenha() >= 6) {
                        pDiasRemissao = 4;
                    } else if (objResenha.getValidacaoResenha() <= 5.9) {
                        pDiasRemissao = 0;
                    }
                    objResenha.setDiaResenha(pDiasRemissao);
                    objResenha.setIdResenha(Integer.valueOf(jIdRegistro.getText()));
                    control.alterarDiaResenhaInterno(objResenha);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos();
                    bloquearBotoes();
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        bloquearCampos();
        bloquearBotoes();
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaRemicao objAudiRemi = new TelaAuditoriaRemicao();
        TelaModuloPedagogia.jPainelPedagogia.add(objAudiRemi);
        objAudiRemi.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovo1ActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codIncluirPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            acao = 1;
            limparCampos();
            bloquearCampos();
            bloquearBotoes();
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovo1ActionPerformed

    private void jBtAlterar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterar1ActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codAlterarPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            objResenha.setStatusResenha(jStatusRegistro.getText());
            if (jStatusRegistro.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                bloquearCampos();
                bloquearBotoes();
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterar1ActionPerformed

    private void jBtExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluir1ActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codExcluirPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            objResenha.setStatusResenha(jStatusRegistro.getText());
            if (jStatusRegistro.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                statusMov = "Excluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objResenha.setIdResenha(Integer.parseInt(jIdRegistro.getText()));
                    control.excluirResenhaInterno(objResenha);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    limparCampos();
                    bloquearCampos();
                    bloquearBotoes();
                    Excluir();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluir1ActionPerformed

    private void jBtSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvar1ActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroResenhaPEDA);
        if (codigoUserPEDA == codUserAcessoPEDA && nomeTelaPEDA.equals(telaRegistroResenhaPEDA) && codGravarPEDA == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoPEDA.equals("ADMINISTRADORES")) {
            DecimalFormat valorReal = new DecimalFormat("###,##00.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jDataRealizacao.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de realização do resumo.");
            } else if (jIdLivro.getText().equals("") || jNomeLivroRevista.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual livro para o resumo.");
            } else if (jResponsavelAplicacaoResenha.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Favor informar o responsavél pelo resumo.");
            } else if (jIdInternoCrcPEDA.getText().equals("") || jNomeInternoPEDA.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar para qual interno foi aplicado a resenha.");
            } else if (jDataEntregaResenha.getDate() == null && jComboBoxResenha.getSelectedItem().equals("Sim")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar a data de entrega da resenha.");
            } else {
                objResenha.setStatusResenha(jStatusRegistro.getText());
                objResenha.setDataResenha(jDataRealizacao.getDate());
                objResenha.setIdLivro(Integer.valueOf(jIdLivro.getText()));
                objResenha.setTituloLivro(jNomeLivroRevista.getText());
                objResenha.setAutorLivro(jAutor.getText());
                objResenha.setIdFunc(idColaborador);
                objResenha.setNomeColaboradorResp(jResponsavelAplicacaoResenha.getText());
                objResenha.setIdInternoCrc(Integer.valueOf(jIdInternoCrcPEDA.getText()));
                objResenha.setNomeInternoCrc(jNomeInternoPEDA.getText());
                objResenha.setResenhaEntregue((String) jComboBoxResenha.getSelectedItem());
                objResenha.setNrResenha(Integer.valueOf(jNrResenha.getText()));
                objResenha.setDataEntraga(jDataEntregaResenha.getDate());
                try {
                    objResenha.setValidacaoResenha(valorReal.parse(jValidacaoResenha.getText()).floatValue());
                    objResenha.setParagrafo(valorReal.parse(jParagrafo.getText()).floatValue());
                    objResenha.setMargens(valorReal.parse(jMargens.getText()).floatValue());
                    objResenha.setLegivel(valorReal.parse(jLegivel.getText()).floatValue());
                    objResenha.setRasuras(valorReal.parse(jRasuras.getText()).floatValue());
                    objResenha.setCompreensao(valorReal.parse(jCompreensao.getText()).floatValue());
                    objResenha.setCompatibilidade(valorReal.parse(jCompatibilidade.getText()).floatValue());
                    objResenha.setTema(valorReal.parse(jTema.getText()).floatValue());
                } catch (ParseException ex) {
                    Logger.getLogger(TelaRegistroLivroResenhaInterno.class.getName()).log(Level.SEVERE, null, ex);
                }
                objResenha.setFidedignidade(jFidedignidade.getText());
                objResenha.setObservacao(jObservacaoPEDA.getText());
                if (acao == 1) {
                    objResenha.setUsuarioInsert(nameUser);
                    objResenha.setDataInsert(dataModFinal);
                    objResenha.setHorarioInsert(horaMov);
                    //
                    control.incluirResenhaInterno(objResenha);
                    BuscarCodigo();
                    //INCLUIR DIAS DE REMIÇÃO (4)
                    objResenha.setDataResenha(jDataRealizacao.getDate());
                    objResenha.setIdInternoCrc(Integer.valueOf(jIdInternoCrcPEDA.getText()));
                    objResenha.setNomeInternoCrc(jNomeInternoPEDA.getText());                 
                    if (objResenha.getValidacaoResenha() >= 6) {
                        pDiasRemissao = 4;
                    } else if (objResenha.getValidacaoResenha() <= 5.9) {
                        pDiasRemissao = 0;
                    }
                    objResenha.setDiaResenha(pDiasRemissao);
                    objResenha.setIdResenha(Integer.valueOf(jIdRegistro.getText()));
                    control.incluirDiaResenhaInterno(objResenha);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos();
                    bloquearBotoes();
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 2) {
                    objResenha.setUsuarioUp(nameUser);
                    objResenha.setDataUp(dataModFinal);
                    objResenha.setHorarioUp(horaMov);
                    //
                    objResenha.setIdResenha(Integer.valueOf(jIdRegistro.getText()));
                    control.alterarResenhaInterno(objResenha);
                    //INCLUIR DIAS DE REMIÇÃO (4)
                    objResenha.setDataResenha(jDataRealizacao.getDate());
                    objResenha.setIdInternoCrc(Integer.valueOf(jIdInternoCrcPEDA.getText()));
                    objResenha.setNomeInternoCrc(jNomeInternoPEDA.getText());
                    if (objResenha.getValidacaoResenha() >= 6) {
                        pDiasRemissao = 4;
                    } else if (objResenha.getValidacaoResenha() <= 5.9) {
                        pDiasRemissao = 0;
                    }
                    objResenha.setDiaResenha(pDiasRemissao);
                    objResenha.setIdResenha(Integer.valueOf(jIdRegistro.getText()));
                    control.alterarDiaResenhaInterno(objResenha);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos();
                    bloquearBotoes();
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvar1ActionPerformed

    private void jBtCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelar1ActionPerformed
        // TODO add your handling code here:
        bloquearCampos();
        bloquearBotoes();
        Cancelar();
    }//GEN-LAST:event_jBtCancelar1ActionPerformed

    private void jBtAuditoria1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoria1ActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaRemicao objAudiRemi = new TelaAuditoriaRemicao();
        TelaModuloPedagogia.jPainelPedagogia.add(objAudiRemi);
        objAudiRemi.show();
    }//GEN-LAST:event_jBtAuditoria1ActionPerformed

    private void jBtSair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSair1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSair1ActionPerformed

    private void jBtColaboradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtColaboradorActionPerformed
        // TODO add your handling code here:
        TelaPesquisarColaboradorResenha objPesquisarCola = new TelaPesquisarColaboradorResenha();
        TelaModuloPedagogia.jPainelPedagogia.add(objPesquisarCola);
        objPesquisarCola.show();
    }//GEN-LAST:event_jBtColaboradorActionPerformed

    private void jBtManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtManualActionPerformed
        // TODO add your handling code here:
        Desktop desktop = Desktop.getDesktop();
        try {
            desktop.open(new File("C:\\SysConp\\Manuais\\Projeto Remicao pela Leitura.pdf\\"));
        } catch (IOException ex) {
            Logger.getLogger(TelaRegistroLivroResenhaInterno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtManualActionPerformed

    private void jBtImpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImpressaoActionPerformed
        // TODO add your handling code here:
        try {
            conecta.abrirConexao();
            String path = "reports/RelatorioResenhaInterno.jasper";
            conecta.executaSQL("SELECT * FROM RESENHA_REMICAO_INTERNO "
                    + "INNER JOIN LIVROS_REVISTAS_JORNAIS "
                    + "ON RESENHA_REMICAO_INTERNO.IdLivro=LIVROS_REVISTAS_JORNAIS.IdLivro "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON RESENHA_REMICAO_INTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "INNER JOIN ITENS_AUTOR_LIVROS "
                    + "ON LIVROS_REVISTAS_JORNAIS.IdLivro=ITENS_AUTOR_LIVROS.IdLivro "
                    + "INNER JOIN ITENSLOCACAOINTERNO "
                    + "ON PRONTUARIOSCRC.IdInternoCrc=ITENSLOCACAOINTERNO.IdInternoCrc "
                    + "INNER JOIN CELAS "
                    + "ON ITENSLOCACAOINTERNO.IdCela=CELAS.IdCela "
                    + "INNER JOIN AUTORES_LIVROS "
                    + "ON ITENS_AUTOR_LIVROS.IdAutor=AUTORES_LIVROS.IdAutor "
                    + "INNER JOIN COLABORADOR "
                    + "ON RESENHA_REMICAO_INTERNO.IdFunc=COLABORADOR.IdFunc "
                    + "WHERE RESENHA_REMICAO_INTERNO.IdResenha='" + jIdRegistro.getText() + "'");
            HashMap parametros = new HashMap();
            parametros.put("pUnidade", descricaoUnidade);
            parametros.put("pRegistro", jIdRegistro.getText());
            parametros.put("pNomeUsuario", nameUser);
            JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
            JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
            JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
            jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
            jv.setTitle("Relatório Resenha de Internos");
            jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
            jv.toFront(); // Traz o relatorio para frente da aplicação            
            conecta.desconecta();
        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório \n\nERRO :" + e);
        }
    }//GEN-LAST:event_jBtImpressaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField jAutor;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterar1;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoria1;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelar1;
    private javax.swing.JButton jBtColaborador;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluir1;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImpressao;
    private javax.swing.JButton jBtManual;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovo1;
    private javax.swing.JButton jBtPesqData;
    private javax.swing.JButton jBtPesqID;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtPesquisarInterno;
    private javax.swing.JButton jBtPesquisarLivro;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSair1;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvar1;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JTextField jCnc;
    private javax.swing.JComboBox<String> jComboBoxResenha;
    private javax.swing.JFormattedTextField jCompatibilidade;
    private javax.swing.JFormattedTextField jCompreensao;
    private com.toedter.calendar.JDateChooser jDataEntregaResenha;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    private com.toedter.calendar.JDateChooser jDataRealizacao;
    public static javax.swing.JTextField jEnderecoCela;
    private javax.swing.JTextArea jFidedignidade;
    private javax.swing.JTextField jIDPesqLanc;
    public static javax.swing.JTextField jIdInternoCrcPEDA;
    public static javax.swing.JTextField jIdLivro;
    public static javax.swing.JTextField jIdRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JFormattedTextField jLegivel;
    private javax.swing.JFormattedTextField jMargens;
    public static javax.swing.JTextField jNomeInternoPEDA;
    public static javax.swing.JTextField jNomeLivroRevista;
    private javax.swing.JTextField jNrResenha;
    private javax.swing.JTextArea jObservacaoPEDA;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JFormattedTextField jParagrafo;
    private javax.swing.JTextField jPesqNomeInternoVisitado;
    private javax.swing.JFormattedTextField jRasuras;
    public static javax.swing.JTextField jResponsavelAplicacaoResenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jStatusRegistro;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaDiasRemissao;
    private javax.swing.JTable jTabelaEntradaSaidaVisitasInternos;
    private javax.swing.JFormattedTextField jTema;
    private javax.swing.JFormattedTextField jTotalDiasAcumulado;
    private javax.swing.JFormattedTextField jValidacaoResenha;
    private javax.swing.JLabel jtotalRegistros;
    private javax.swing.JLabel jtotalRegistrosDias;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdRegistro.setBackground(Color.white);
        jStatusRegistro.setBackground(Color.white);
        jDataRealizacao.setBackground(Color.white);
        jIdLivro.setBackground(Color.white);
        jNomeLivroRevista.setBackground(Color.white);
        jAutor.setBackground(Color.white);
        jResponsavelAplicacaoResenha.setBackground(Color.white);
        jIdInternoCrcPEDA.setBackground(Color.white);
        jCnc.setBackground(Color.white);
        jEnderecoCela.setBackground(Color.white);
        jNomeInternoPEDA.setBackground(Color.white);
        jComboBoxResenha.setBackground(Color.white);
        jDataEntregaResenha.setBackground(Color.white);
        jObservacaoPEDA.setBackground(Color.white);
        jNrResenha.setBackground(Color.white);
        jValidacaoResenha.setBackground(Color.white);
        //
        jParagrafo.setBackground(Color.white);
        jMargens.setBackground(Color.white);
        jLegivel.setBackground(Color.white);
        jRasuras.setBackground(Color.white);
        jCompreensao.setBackground(Color.white);
        jCompatibilidade.setBackground(Color.white);
        jTema.setBackground(Color.white);
        jFidedignidade.setBackground(Color.white);
        jObservacaoPEDA.setBackground(Color.white);
        jObservacaoPEDA.setBackground(Color.white);
    }

    public void formatarCampos() {
        jFidedignidade.setLineWrap(true);
        jFidedignidade.setWrapStyleWord(true);
        //
        jObservacaoPEDA.setLineWrap(true);
        jObservacaoPEDA.setWrapStyleWord(true);
        //
        jValidacaoResenha.setText("0,0");
        jParagrafo.setText("0,0");
        jMargens.setText("0,0");
        jLegivel.setText("0,0");
        jRasuras.setText("0,0");
        jCompreensao.setText("0,0");
        jCompatibilidade.setText("0,0");
        jTema.setText("0,0");
    }

    public void bloquearCampos() {
        jIdRegistro.setEnabled(!true);
        jStatusRegistro.setEnabled(!true);
        jDataRealizacao.setEnabled(!true);
        jAutor.setEnabled(!true);
        jIdLivro.setEnabled(!true);
        jNomeLivroRevista.setEnabled(!true);
        jResponsavelAplicacaoResenha.setEnabled(!true);
        jIdInternoCrcPEDA.setEnabled(!true);
        jCnc.setEnabled(!true);
        jEnderecoCela.setEnabled(!true);
        jNomeInternoPEDA.setEnabled(!true);
        jComboBoxResenha.setEnabled(!true);
        jDataEntregaResenha.setEnabled(!true);
        jNrResenha.setEnabled(!true);
        jValidacaoResenha.setEnabled(!true);
        //
        jParagrafo.setEnabled(!true);
        jMargens.setEnabled(!true);
        jLegivel.setEnabled(!true);
        jRasuras.setEnabled(!true);
        jCompreensao.setEnabled(!true);
        jCompatibilidade.setEnabled(!true);
        jTema.setEnabled(!true);
        jFidedignidade.setEnabled(!true);
        jObservacaoPEDA.setEnabled(!true);
    }

    public void bloquearBotoes() {
        jBtPesquisarLivro.setEnabled(!true);
        jBtPesquisarInterno.setEnabled(!true);
        jBtColaborador.setEnabled(!true);
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtNovo1.setEnabled(!true);
        jBtAlterar1.setEnabled(!true);
        jBtExcluir1.setEnabled(!true);
        jBtSalvar1.setEnabled(!true);
        jBtCancelar1.setEnabled(!true);
        jBtAuditoria1.setEnabled(!true);
    }

    public void limparCampos() {
        jIdRegistro.setText("");
        jStatusRegistro.setText("");
        jDataRealizacao.setDate(null);
        jAutor.setText("");
        jIdLivro.setText("");
        jNomeLivroRevista.setText("");
        jAutor.setText("");
        jResponsavelAplicacaoResenha.setText("");
        jIdInternoCrcPEDA.setText("");
        jCnc.setText("");
        jEnderecoCela.setText("");
        jNomeInternoPEDA.setText("");
        jComboBoxResenha.setSelectedItem(null);
        jDataEntregaResenha.setDate(null);
        jNrResenha.setText("");
        jValidacaoResenha.setText("0,0");
        jTotalDiasAcumulado.setText("0");
        //
        jParagrafo.setText("0,0");
        jMargens.setText("0,0");
        jLegivel.setText("0,0");
        jRasuras.setText("0,0");
        jCompreensao.setText("0,0");
        jCompatibilidade.setText("0,0");
        jTema.setText("0,0");
        jFidedignidade.setText("");
        jObservacaoPEDA.setText("");
    }

    public void Novo() {
        jStatusRegistro.setText("ABERTO");
        jDataRealizacao.setCalendar(Calendar.getInstance());
        jComboBoxResenha.setSelectedItem("Selecione...");
        jValidacaoResenha.setText("0,0");
        jParagrafo.setText("0,0");
        jMargens.setText("0,0");
        jLegivel.setText("0,0");
        jRasuras.setText("0,0");
        jCompreensao.setText("0,0");
        jCompatibilidade.setText("0,0");
        jTema.setText("0,0");
        //
        jBtPesquisarLivro.setEnabled(true);
        jBtColaborador.setEnabled(true);
        jBtPesquisarInterno.setEnabled(true);
        //
        jDataRealizacao.setEnabled(true);
        jComboBoxResenha.setEnabled(true);
        jDataEntregaResenha.setEnabled(true);
        jNrResenha.setEnabled(true);
        jValidacaoResenha.setEnabled(true);
        //
        jParagrafo.setEnabled(true);
        jMargens.setEnabled(true);
        jLegivel.setEnabled(true);
        jRasuras.setEnabled(true);
        jCompreensao.setEnabled(true);
        jCompatibilidade.setEnabled(true);
        jTema.setEnabled(true);
        jFidedignidade.setEnabled(true);
        jObservacaoPEDA.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jBtSalvar1.setEnabled(true);
        jBtCancelar1.setEnabled(true);
    }

    public void Alterar() {
        jDataRealizacao.setEnabled(true);
        jComboBoxResenha.setEnabled(true);
        jDataEntregaResenha.setEnabled(true);
        jNrResenha.setEnabled(true);
        jValidacaoResenha.setEnabled(true);
        //
        jBtPesquisarLivro.setEnabled(true);
        jBtColaborador.setEnabled(true);
        jBtPesquisarInterno.setEnabled(true);
        //
        jParagrafo.setEnabled(true);
        jMargens.setEnabled(true);
        jLegivel.setEnabled(true);
        jRasuras.setEnabled(true);
        jCompreensao.setEnabled(true);
        jCompatibilidade.setEnabled(true);
        jTema.setEnabled(true);
        jFidedignidade.setEnabled(true);
        jObservacaoPEDA.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jBtSalvar1.setEnabled(true);
        jBtCancelar1.setEnabled(true);
    }

    public void Excluir() {
        jBtNovo.setEnabled(true);
        //
        jBtNovo1.setEnabled(true);
    }

    public void Salvar() {
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovo1.setEnabled(true);
        jBtAlterar1.setEnabled(true);
        jBtExcluir1.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria1.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdRegistro.getText().equals("")) {
            limparCampos();
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jBtNovo1.setEnabled(true);
            jBtAlterar1.setEnabled(!true);
            jBtExcluir1.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria1.setEnabled(!true);
        } else {
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovo1.setEnabled(true);
            jBtAlterar1.setEnabled(true);
            jBtExcluir1.setEnabled(true);
            jBtAuditoria1.setEnabled(true);
        }
    }

    public void BuscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM RESENHA_REMICAO_INTERNO");
            conecta.rs.last();
            jIdRegistro.setText(conecta.rs.getString("IdResenha"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTodasEntSai(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataResenha");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdResenha"), dataEntrada, conecta.rs.getString("StatusResenha"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaVisitasInternos.setModel(modelo);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaVisitasInternos.setAutoResizeMode(jTabelaEntradaSaidaVisitasInternos.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaVisitasInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaTodas();
        conecta.desconecta();
    }

    public void popularTabelaNomeInterno(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno Visitado"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataResenha");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdResenha"), dataEntrada, conecta.rs.getString("StatusResenha"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaVisitasInternos.setModel(modelo);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaVisitasInternos.setAutoResizeMode(jTabelaEntradaSaidaVisitasInternos.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaVisitasInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaTodas();
        conecta.desconecta();
    }

    public void popularTabelaDiasRemicaoInterno(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Registro", "Dias", "Validação Resenha", "Aprovado/Reprovado"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count1 = count1 + 1;
                pDiasTotal = pDiasTotal + 4;
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataRegistro");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                //
                pNotaAvaliacao = conecta.rs.getFloat("ValidacaoResenha");
//                DecimalFormat vr = new DecimalFormat("#,##0.00");
//                String vlCusto = vr.format(pValidacaoResenha);
                if (pNotaAvaliacao >= 6) {
                    pAvalicaoAprovado = "Aprovado";
                } else if (pNotaAvaliacao <= 5.9) {
                    pAvalicaoAprovado = "Reprovado";
                }
                jTotalDiasAcumulado.setText(Integer.toString(pDiasTotal));
                jtotalRegistrosDias.setText(Integer.toString(count1)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdAcum"), dataEntrada, conecta.rs.getString("DiaResenha"), conecta.rs.getFloat("ValidacaoResenha"), pAvalicaoAprovado});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDiasRemissao.setModel(modelo);
        jTabelaDiasRemissao.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaDiasRemissao.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaDiasRemissao.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaDiasRemissao.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaDiasRemissao.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaDiasRemissao.getColumnModel().getColumn(4).setResizable(false);
        jTabelaDiasRemissao.getTableHeader().setReorderingAllowed(false);
        jTabelaDiasRemissao.setAutoResizeMode(jTabelaDiasRemissao.AUTO_RESIZE_OFF);
        jTabelaDiasRemissao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharTabelaRemicao();
        conecta.desconecta();
    }

    public void limparTabelaRemicao() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data Registro", "Dias", "Validação Resenha", "Aprovado/Reprovado"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDiasRemissao.setModel(modelo);
        jTabelaDiasRemissao.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaDiasRemissao.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaDiasRemissao.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaDiasRemissao.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTabelaDiasRemissao.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDiasRemissao.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaDiasRemissao.getColumnModel().getColumn(4).setResizable(false);
        jTabelaDiasRemissao.getTableHeader().setReorderingAllowed(false);
        jTabelaDiasRemissao.setAutoResizeMode(jTabelaDiasRemissao.AUTO_RESIZE_OFF);
        jTabelaDiasRemissao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaRemicao() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaDiasRemissao.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaDiasRemissao.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaDiasRemissao.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaDiasRemissao.getColumnModel().getColumn(3).setCellRenderer(centralizado);
    }

    public void limparTabelaEntradaVisitas() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaSaidaVisitasInternos.setModel(modelo);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setPreferredWidth(470);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaSaidaVisitasInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaSaidaVisitasInternos.setAutoResizeMode(jTabelaEntradaSaidaVisitasInternos.AUTO_RESIZE_OFF);
        jTabelaEntradaSaidaVisitasInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharTabelaTodas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaSaidaVisitasInternos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdRegistro.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserPEDA = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserPEDA + "'");
            conecta.rs.first();
            codigoUserGroupPEDA = conecta.rs.getInt("IdUsuario");
            codigoGrupoPEDA = conecta.rs.getInt("IdGrupo");
            nomeGrupoPEDA = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserPEDA + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoPEDA = conecta.rs.getInt("IdUsuario");
            codAbrirPEDA = conecta.rs.getInt("Abrir");
            codIncluirPEDA = conecta.rs.getInt("Incluir");
            codAlterarPEDA = conecta.rs.getInt("Alterar");
            codExcluirPEDA = conecta.rs.getInt("Excluir");
            codGravarPEDA = conecta.rs.getInt("Gravar");
            codConsultarPEDA = conecta.rs.getInt("Consultar");
            nomeTelaPEDA = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
