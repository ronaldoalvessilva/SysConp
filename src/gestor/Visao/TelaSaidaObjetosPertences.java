/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleItensObjetosSaida;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleSaidaObjetos;
import gestor.Controle.ControleSaldoPertences;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensObjetosPertences;
import gestor.Modelo.LogSistema;
import gestor.Modelo.SaidaObjetosPertences;
import gestor.Modelo.SaldoPertences;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaSaidaObjetosPertences extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    SaidaObjetosPertences objSaidaObj = new SaidaObjetosPertences();
    ItensObjetosPertences objItensObj = new ItensObjetosPertences();
    ControleSaidaObjetos control = new ControleSaidaObjetos();
    ControleItensObjetosSaida controle = new ControleItensObjetosSaida();
    SaldoPertences objSaldoPertences = new SaldoPertences();
    ControleSaldoPertences controleSaldo = new ControleSaldoPertences();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Segurança:Saída de Objetos Internos:Manutenção";
    String nomeModuloTela2 = "Segurança:Saída de Objetos Internos:Objetos";
    String statusMov;
    String horaMov;
    String dataModFinal;
    // 
    int acao;
    int flag;
    String dataInicial;
    String dataFinal;
    String dataBrasil;
    public static String idItem;
    String codEntrada;
    String caminho;
    String dataEntrada, dataSaida;
    String tipoMovimento = "S";
    String tipoMovimentoSaida = "E";
    int idItemMov; // Código do item da tabela ITENSOBJETOSSAIDA
    String codInterno, codPertence;
    double quantidadeEstoque = 0;
    double saldoEstoquePertence = 0;
    String codSaida; // Verificar se o interno tem pertence.
    int count;

    /**
     * Creates new form TelaEntradaObjetosPertences
     */
    public TelaSaidaObjetosPertences() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaEntradaObjetos = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jIDPesqLan = new javax.swing.JTextField();
        jBtDataLanc = new javax.swing.JButton();
        jBtIdLanc = new javax.swing.JButton();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jLabel24 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtNomeInterno = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jIdLanc = new javax.swing.JTextField();
        jStatusLanc = new javax.swing.JTextField();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jPanel12 = new javax.swing.JPanel();
        jFotoInternosObjetos = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIdInternoCrcObjeto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jNomeInternoCrcObjeto = new javax.swing.JTextField();
        jBtPesquisarInternoCrc = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jBtFinalizar = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDescricaoPertenceObjeto = new javax.swing.JTextField();
        jIdPertence = new javax.swing.JTextField();
        jBtPesquisarObjetos = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jQuantidade = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jDataSaida = new com.toedter.calendar.JDateChooser();
        jComboBoxUnidade = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jDescricaoLocalPertences = new javax.swing.JTextField();
        jBtPesquisarLocal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaObjetosInternos = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jBtNovoObjeto = new javax.swing.JButton();
        jBtAlterarObjeto = new javax.swing.JButton();
        jBtExcluirObjeto = new javax.swing.JButton();
        jBtSalvarObjeto = new javax.swing.JButton();
        jBtCancelarObjeto = new javax.swing.JButton();
        jBtAuditoriaObjeto = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Saída de Pertences Triagem/Segurança :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTabelaEntradaObjetos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEntradaObjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Nome do Interno"
            }
        ));
        jTabelaEntradaObjetos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEntradaObjetosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaEntradaObjetos);
        if (jTabelaEntradaObjetos.getColumnModel().getColumnCount() > 0) {
            jTabelaEntradaObjetos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaEntradaObjetos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaEntradaObjetos.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaEntradaObjetos.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaEntradaObjetos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaEntradaObjetos.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaEntradaObjetos.getColumnModel().getColumn(3).setMinWidth(320);
            jTabelaEntradaObjetos.getColumnModel().getColumn(3).setMaxWidth(320);
        }

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Data Inicial:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jIDPesqLan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtDataLanc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtDataLanc.setContentAreaFilled(false);
        jBtDataLanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDataLancActionPerformed(evt);
            }
        });

        jBtIdLanc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtIdLanc.setContentAreaFilled(false);
        jBtIdLanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtIdLancActionPerformed(evt);
            }
        });

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Data Final:");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtNomeInterno.setContentAreaFilled(false);
        jBtNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNomeInternoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText(" Interno:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jIDPesqLan, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(jIDPesqLan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtIdLanc)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtDataLanc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtNomeInterno))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(204, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setEnabled(false);

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternosObjetos, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFotoInternosObjetos, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jIdInternoCrcObjeto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoCrcObjeto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoCrcObjeto.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nome Completo do Interno");

        jNomeInternoCrcObjeto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoCrcObjeto.setEnabled(false);

        jBtPesquisarInternoCrc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtPesquisarInternoCrc.setForeground(new java.awt.Color(0, 153, 0));
        jBtPesquisarInternoCrc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarInternoCrc.setText("Pesquisar");
        jBtPesquisarInternoCrc.setEnabled(false);
        jBtPesquisarInternoCrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarInternoCrcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNomeInternoCrcObjeto)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jIdInternoCrcObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtPesquisarInternoCrc)
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jIdInternoCrcObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesquisarInternoCrc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNomeInternoCrcObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtSair)
            .addComponent(jBtCancelar)
            .addComponent(jBtSalvar)
            .addComponent(jBtExcluir)
            .addComponent(jBtAlterar)
            .addComponent(jBtNovo, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setContentAreaFilled(false);
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoria.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtFinalizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtAuditoria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAuditoria, jBtFinalizar});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtFinalizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Código");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Descrição do Pertence");

        jDescricaoPertenceObjeto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoPertenceObjeto.setEnabled(false);

        jIdPertence.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPertence.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdPertence.setEnabled(false);

        jBtPesquisarObjetos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarObjetos.setToolTipText("Pesquisa Internos");
        jBtPesquisarObjetos.setContentAreaFilled(false);
        jBtPesquisarObjetos.setEnabled(false);
        jBtPesquisarObjetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarObjetosActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Quantidade");

        jQuantidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQuantidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQuantidade.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data Saída");

        jDataSaida.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataSaida.setEnabled(false);

        jComboBoxUnidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidade.setForeground(new java.awt.Color(102, 0, 102));
        jComboBoxUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UN", "PC", "PAR" }));
        jComboBoxUnidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidade.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Unidade");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Local Pertences");

        jDescricaoLocalPertences.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoLocalPertences.setEnabled(false);

        jBtPesquisarLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarLocal.setToolTipText("Pesquisa Internos");
        jBtPesquisarLocal.setContentAreaFilled(false);
        jBtPesquisarLocal.setEnabled(false);
        jBtPesquisarLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarLocalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jIdPertence, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesquisarObjetos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jComboBoxUnidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)))
                                .addComponent(jDescricaoPertenceObjeto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jDescricaoLocalPertences, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesquisarLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jIdPertence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisarObjetos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDescricaoPertenceObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDescricaoLocalPertences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisarLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jTabelaObjetosInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaObjetosInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Seq.", "Código", "Nome do Objeto", "Qtde.", "Data Saída"
            }
        ));
        jTabelaObjetosInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaObjetosInternosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaObjetosInternos);
        if (jTabelaObjetosInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaObjetosInternos.getColumnModel().getColumn(0).setMinWidth(40);
            jTabelaObjetosInternos.getColumnModel().getColumn(0).setMaxWidth(40);
            jTabelaObjetosInternos.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaObjetosInternos.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaObjetosInternos.getColumnModel().getColumn(2).setMinWidth(200);
            jTabelaObjetosInternos.getColumnModel().getColumn(2).setMaxWidth(200);
            jTabelaObjetosInternos.getColumnModel().getColumn(3).setMinWidth(50);
            jTabelaObjetosInternos.getColumnModel().getColumn(3).setMaxWidth(50);
            jTabelaObjetosInternos.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaObjetosInternos.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovoObjeto.setText("Novo");
        jBtNovoObjeto.setContentAreaFilled(false);
        jBtNovoObjeto.setEnabled(false);
        jBtNovoObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoObjetoActionPerformed(evt);
            }
        });

        jBtAlterarObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarObjeto.setText("Alterar");
        jBtAlterarObjeto.setContentAreaFilled(false);
        jBtAlterarObjeto.setEnabled(false);
        jBtAlterarObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarObjetoActionPerformed(evt);
            }
        });

        jBtExcluirObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirObjeto.setText("Excluir");
        jBtExcluirObjeto.setToolTipText("Excluir");
        jBtExcluirObjeto.setContentAreaFilled(false);
        jBtExcluirObjeto.setEnabled(false);
        jBtExcluirObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirObjetoActionPerformed(evt);
            }
        });

        jBtSalvarObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarObjeto.setText("Gravar");
        jBtSalvarObjeto.setToolTipText("Gravar");
        jBtSalvarObjeto.setContentAreaFilled(false);
        jBtSalvarObjeto.setEnabled(false);
        jBtSalvarObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarObjetoActionPerformed(evt);
            }
        });

        jBtCancelarObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarObjeto.setText("Cancelar");
        jBtCancelarObjeto.setToolTipText("Cancelar");
        jBtCancelarObjeto.setContentAreaFilled(false);
        jBtCancelarObjeto.setEnabled(false);
        jBtCancelarObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarObjetoActionPerformed(evt);
            }
        });

        jBtAuditoriaObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaObjeto.setToolTipText("Auditoria");
        jBtAuditoriaObjeto.setContentAreaFilled(false);
        jBtAuditoriaObjeto.setEnabled(false);
        jBtAuditoriaObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoriaObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoriaObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoriaObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaObjetoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovoObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtAuditoriaObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtNovoObjeto)
                .addComponent(jBtAlterarObjeto)
                .addComponent(jBtExcluirObjeto)
                .addComponent(jBtSalvarObjeto)
                .addComponent(jBtCancelarObjeto)
                .addComponent(jBtAuditoriaObjeto))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarObjeto, jBtCancelarObjeto, jBtExcluirObjeto, jBtNovoObjeto, jBtSalvarObjeto});

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pertences", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 20, 455, 462);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtDataLancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDataLancActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                    preencherTabelaEntradaObjetos("SELECT * FROM SAIDAOBJETOSPERTENCES WHERE DataLanc BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtDataLancActionPerformed

    private void jBtIdLancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtIdLancActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jIDPesqLan.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            jTabelaEntradaObjetos.setVisible(true);
            preencherTabelaEntradaObjetos("SELECT * FROM SAIDAOBJETOSPERTENCES "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON SAIDAOBJETOSPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdSaida='" + jIDPesqLan.getText() + "'");
        }
    }//GEN-LAST:event_jBtIdLancActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaEntradaObjetos.setVisible(true);
            this.preencherTabelaEntradaObjetos("SELECT * FROM SAIDAOBJETOSPERTENCES "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON SAIDAOBJETOSPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc ORDER BY NomeInternoCrc");
        } else {
            jtotalRegistros.setText("");
            jTabelaEntradaObjetos.setVisible(!true);
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNomeInternoActionPerformed
        // TODO add your handling code here:
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquuisa.");
        } else {
            jTabelaEntradaObjetos.setVisible(true);
            preencherTabelaObjetoInterno("SELECT * FROM SAIDAOBJETOSPERTENCES "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON SAIDAOBJETOSPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtNomeInternoActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        corCampos();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        verificarPertences(); // Verificar se existe pertences para o interno em questão.
        objSaidaObj.setStatusLanc(jStatusLanc.getText());
        if (jStatusLanc.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro de objetos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            acao = 2;
            Alterar();
            corCampos();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:        
        objSaidaObj.setStatusLanc(jStatusLanc.getText());
        if (jStatusLanc.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro de internos não poderá ser excluida, o mesmo encontra-se FINALIZADO");
        } else {
            verificarItens();
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:       
        if (jDataLanc.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data do registro.");
            jDataLanc.setBackground(Color.red);
            jDataLanc.requestFocus();
        } else {
            objSaidaObj.setStatusLanc(jStatusLanc.getText());
            objSaidaObj.setDataLanc(jDataLanc.getDate());
            objSaidaObj.setObservacao(jObservacao.getText());
            if (acao == 1) {
                objSaidaObj.setUsuarioInsert(nameUser);
                objSaidaObj.setDataInsert(dataModFinal);
                objSaidaObj.setHorarioInsert(horaMov);
                objSaidaObj.setNomeInternoCrc(jNomeInternoCrcObjeto.getText());
                control.incluirSaidaObjetos(objSaidaObj);
                buscarCodigo();
                //              
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
            if (acao == 2) {
                objSaidaObj.setUsuarioUp(nameUser);
                objSaidaObj.setDataUp(dataModFinal);
                objSaidaObj.setHorarioUp(horaMov);
                objSaidaObj.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                objSaidaObj.setNomeInternoCrc(jNomeInternoCrcObjeto.getText());
                control.alterarSaidaObjetos(objSaidaObj);
                //               
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                Salvar();
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SAIDAOBJETOSPERTENCES WHERE IdSaida='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Lançamento já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se lançamento foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaSaidasPertencesSeguranca objAudSaiPertSeg = new TelaAuditoriaSaidasPertencesSeguranca();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudSaiPertSeg);
        objAudSaiPertSeg.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtPesquisarObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarObjetosActionPerformed
        // TODO add your handling code here:
        TelaPesqItenPertenceSaida objPesqPertenceSaida = new TelaPesqItenPertenceSaida();
        if (TelaModuloSeguranca.jPainelSeguranca != null) {
            TelaModuloSeguranca.jPainelSeguranca.add(objPesqPertenceSaida);
            objPesqPertenceSaida.show();
        } else {
            TelaModuloTriagem.jPainelTriagem.add(objPesqPertenceSaida);
            objPesqPertenceSaida.show();
        }
    }//GEN-LAST:event_jBtPesquisarObjetosActionPerformed

    private void jBtNovoObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoObjetoActionPerformed
        // TODO add your handling code here:
        objSaidaObj.setStatusLanc(jStatusLanc.getText());
        if (jStatusLanc.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa entrada de objetos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            acao = 3;
            NovoObjeto();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtNovoObjetoActionPerformed

    private void jBtAlterarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarObjetoActionPerformed
        // TODO add your handling code here:
        objSaidaObj.setStatusLanc(jStatusLanc.getText());
        if (jStatusLanc.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Essa entrada de objetos não poderá ser alterado, o mesmo encontra-se FINALIZADO");
        } else {
            acao = 4;
            AlterarObjeto();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        }
    }//GEN-LAST:event_jBtAlterarObjetoActionPerformed

    private void jBtExcluirObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirObjetoActionPerformed
        // TODO add your handling code here:
        verificarSaldoPertences();
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        objSaidaObj.setStatusLanc(jStatusLanc.getText());
        if (jStatusLanc.getText().equals("FINALIZADO")) {
            JOptionPane.showMessageDialog(rootPane, "Esse  objeto não poderá ser excluído, o mesmo encontra-se FINALIZADO");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o objeto selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                // Atualizar o saldo com o novo valor
                saldoEstoquePertence = quantidadeEstoque + objItensObj.getQuant();
                objSaldoPertences.setIdInternoCrc(Integer.valueOf(jIdInternoCrcObjeto.getText()));
                objSaldoPertences.setIdObj(Integer.valueOf(jIdPertence.getText()));
                objSaldoPertences.setSaldoEstoque((float) saldoEstoquePertence);
                controleSaldo.alterarQuantidadeEntradaObjetos(objSaldoPertences);  // Alterar saldo na tabela ESTOQUEPERTENCES               
                // Excluir da tabela ITENSOBJETOSSAIDA
                objItensObj.setIdItem(Integer.valueOf(idItem));
                controle.excluirItensSaidaObjetos(objItensObj);
                //
                objLog2();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                ExcluirObjeto();
                preencherTabelaItens("SELECT * FROM ITENSOBJETOSSAIDA "
                        + "INNER JOIN PERTENCES "
                        + "ON ITENSOBJETOSSAIDA.IdPertence=PERTENCES.IdPertence "
                        + "INNER JOIN SAIDAOBJETOSPERTENCES "
                        + "ON ITENSOBJETOSSAIDA.IdSaida=SAIDAOBJETOSPERTENCES.IdSaida "
                        + "WHERE ITENSOBJETOSSAIDA.IdSaida='" + jIdLanc.getText() + "'");
            }
        }
    }//GEN-LAST:event_jBtExcluirObjetoActionPerformed

    private void jBtSalvarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarObjetoActionPerformed
        // TODO add your handling code here:
        verificarSaldoPertences(); // Verificar se a quantidade solicitada é compativel.
        if (jDescricaoPertenceObjeto.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe qual pertence para esse interno.");
        } else if (jDataSaida.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data do pertence para esse interno.");
            jDataSaida.requestFocus();
            jDataSaida.setBackground(Color.red);
        } else if (jQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe a quantidade de pertence para esse interno.");
            jQuantidade.requestFocus();
            jQuantidade.setBackground(Color.red);
        } else if (jQuantidade.getText().equals("0")) {
            JOptionPane.showMessageDialog(rootPane, "Informe uma quantidade maior que zero.");
        } else if (jDescricaoLocalPertences.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe o local para armazenar pertences.");
        } else {
            objItensObj.setDataSaida(jDataSaida.getDate());
            objItensObj.setQuant(Float.valueOf(jQuantidade.getText()));
            if (acao == 3) {
                // Verificar se a quantidade solicitada para sair é compativel para operação. Tabela ESTOQUEPERTENCES
                if (jIdInternoCrcObjeto.getText().equals(codInterno) && jIdPertence.getText().equals(codPertence) && quantidadeEstoque < objItensObj.getQuant()) {
                    JOptionPane.showMessageDialog(rootPane, "Saldo Insuficiente para retirada desse pertence!!!");
                } else {
                    saldoEstoquePertence = quantidadeEstoque - objItensObj.getQuant();
                    objItensObj.setUsuarioInsert(nameUser);
                    objItensObj.setDataInsert(dataModFinal);
                    objItensObj.setHorarioInsert(horaMov);
                    objItensObj.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                    objItensObj.setNomePertence(jDescricaoPertenceObjeto.getText());
                    objItensObj.setDescricaoLocal(jDescricaoLocalPertences.getText());
                    controle.incluirItensSaidaObjetos(objItensObj);
                    //
                    buscarCodigoItemObjeto(); // Buscar código do item na tabela ITENSOBJETOSSAIDA
                    objSaldoPertences.setIdInternoCrc(Integer.valueOf(jIdInternoCrcObjeto.getText()));
                    objSaldoPertences.setIdObj(Integer.valueOf(jIdPertence.getText()));
                    objSaldoPertences.setSaldoEstoque((float) saldoEstoquePertence);
                    controleSaldo.alterarQuantidadeEntradaObjetos(objSaldoPertences);  // Alterar saldo na tabela ESTOQUEPERTENCES               
                    //
                    preencherTabelaItens("SELECT * FROM ITENSOBJETOSSAIDA "
                            + "INNER JOIN PERTENCES "
                            + "ON ITENSOBJETOSSAIDA.IdPertence=PERTENCES.IdPertence "
                            + "INNER JOIN SAIDAOBJETOSPERTENCES "
                            + "ON ITENSOBJETOSSAIDA.IdSaida=SAIDAOBJETOSPERTENCES.IdSaida "
                            + "WHERE ITENSOBJETOSSAIDA.IdSaida='" + jIdLanc.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com successo.");
                    SalvarObjeto();
                }
            }
            if (acao == 4) {
                objItensObj.setUsuarioUp(nameUser);
                objItensObj.setDataUp(dataModFinal);
                objItensObj.setHorarioUp(horaMov);
                objItensObj.setNomePertence(jDescricaoPertenceObjeto.getText());
                objItensObj.setDescricaoLocal(jDescricaoLocalPertences.getText());
                objItensObj.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                objItensObj.setIdItem(Integer.valueOf(idItem));
                controle.alterarItensSaidaObjetos(objItensObj);
                //  Alterar itens da tabela ESTOQUEPERTENCES
                objSaldoPertences.setIdMov(Integer.valueOf(jIdLanc.getText()));
                objSaldoPertences.setIdItemMov(idItemMov);
                objSaldoPertences.setIdObj(Integer.valueOf(jIdPertence.getText()));
                objSaldoPertences.setStatusMov(tipoMovimento);
                objSaldoPertences.setDataLanc(jDataSaida.getDate());
                objSaldoPertences.setDescricaoObjeto(jDescricaoPertenceObjeto.getText());
                objSaldoPertences.setDescricaoLocal(jDescricaoLocalPertences.getText());
                objSaldoPertences.setNomeInternoCrc(jNomeInternoCrcObjeto.getText());
                objSaldoPertences.setQtdLanc(Float.valueOf(jQuantidade.getText()));
                controleSaldo.alterarQuantidadeEntradaObjetos(objSaldoPertences);  // Alterar saldo na tabela ESTOQUEPERTENCES               
                //
                preencherTabelaItens("SELECT * FROM ITENSOBJETOSSAIDA "
                        + "INNER JOIN PERTENCES "
                        + "ON ITENSOBJETOSSAIDA.IdPertence=PERTENCES.IdPertence "
                        + "INNER JOIN SAIDAOBJETOSPERTENCES "
                        + "ON ITENSOBJETOSSAIDA.IdSaida=SAIDAOBJETOSPERTENCES.IdSaida "
                        + "WHERE ITENSOBJETOSSAIDA.IdSaida='" + jIdLanc.getText() + "'");
                JOptionPane.showMessageDialog(rootPane, "Registro gravado com successo.");
                SalvarObjeto();
            }
        }
    }//GEN-LAST:event_jBtSalvarObjetoActionPerformed

    private void jBtCancelarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarObjetoActionPerformed
        // TODO add your handling code here:
        CancelarObjeto();
    }//GEN-LAST:event_jBtCancelarObjetoActionPerformed

    private void jTabelaObjetosInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaObjetosInternosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeObjeto = "" + jTabelaObjetosInternos.getValueAt(jTabelaObjetosInternos.getSelectedRow(), 2);
            jDescricaoPertenceObjeto.setText(nomeObjeto);
            String idLanc = "" + jTabelaObjetosInternos.getValueAt(jTabelaObjetosInternos.getSelectedRow(), 1);
            jIdPertence.setText(idLanc);
            idItem = "" + jTabelaObjetosInternos.getValueAt(jTabelaObjetosInternos.getSelectedRow(), 0);
            // Habilitar os botões
            jBtNovoObjeto.setEnabled(!true);
            jBtAlterarObjeto.setEnabled(true);
            jBtExcluirObjeto.setEnabled(true);
            jBtSalvarObjeto.setEnabled(!true);
            jBtCancelarObjeto.setEnabled(true);
            jBtAuditoriaObjeto.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSOBJETOSSAIDA "
                        + "INNER JOIN PERTENCES "
                        + "ON ITENSOBJETOSSAIDA.IdPertence=PERTENCES.IdPertence "
                        + "INNER JOIN LOCALPERTENCES "
                        + "ON ITENSOBJETOSSAIDA.IdLocal=LOCALPERTENCES.IdLocal "
                        + "WHERE DescricaoPertence='" + jDescricaoPertenceObjeto.getText() + "'AND IdItem='" + idItem + "'");
                conecta.rs.first();
                jIdPertence.setText(conecta.rs.getString("IdPertence")); //Coluna 1
                jDescricaoPertenceObjeto.setText(conecta.rs.getString("DescricaoPertence")); // Coluna 2
                jDescricaoLocalPertences.setText(conecta.rs.getString("DescricaoLocal"));
                jComboBoxUnidade.setSelectedItem(conecta.rs.getString("Unidade"));
                idItem = conecta.rs.getString("IdItem"); // Coluna 0  
                jDataSaida.setDate(conecta.rs.getDate("DataSaida"));
                jQuantidade.setText(conecta.rs.getString("Quant"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem alterado!!!" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaObjetosInternosMouseClicked

    private void jBtAuditoriaObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaObjetoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaItensPertencesSegSaida objAudItensPertSegSai = new TelaAuditoriaItensPertencesSegSaida();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudItensPertSegSai);
        objAudItensPertSegSai.show();
    }//GEN-LAST:event_jBtAuditoriaObjetoActionPerformed

    private void jTabelaEntradaObjetosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEntradaObjetosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaEntradaObjetos.getValueAt(jTabelaEntradaObjetos.getSelectedRow(), 0);
            jIDPesqLan.setText(IdLanc);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtNovoObjeto.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM SAIDAOBJETOSPERTENCES "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON SAIDAOBJETOSPERTENCES.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE IdSaida='" + IdLanc + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdSaida")));
                jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                jIdInternoCrcObjeto.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInternoCrcObjeto.setText(conecta.rs.getString("NomeInternoCrc"));
                // Capturando foto
                caminho = conecta.rs.getString("FotoInternoCrc");
                javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminho);
                jFotoInternosObjetos.setIcon(i);
                jFotoInternosObjetos.setIcon(new ImageIcon(i.getImage().getScaledInstance(jFotoInternosObjetos.getWidth(), jFotoInternosObjetos.getHeight(), Image.SCALE_DEFAULT)));
                //
                jObservacao.setText(conecta.rs.getString("Observacao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERRO: " + e);
            }
            preencherTabelaItens("SELECT * FROM ITENSOBJETOSSAIDA "
                    + "INNER JOIN PERTENCES "
                    + "ON ITENSOBJETOSSAIDA.IdPertence=PERTENCES.IdPertence "
                    + "INNER JOIN SAIDAOBJETOSPERTENCES "
                    + "ON ITENSOBJETOSSAIDA.IdSaida=SAIDAOBJETOSPERTENCES.IdSaida "
                    + "WHERE ITENSOBJETOSSAIDA.IdSaida='" + IdLanc + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaEntradaObjetosMouseClicked

    private void jBtPesquisarInternoCrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarInternoCrcActionPerformed
        // TODO add your handling code here:
        TelaPesqInternosObjetosPertencesSaida objPesqInernosObjSai = new TelaPesqInternosObjetosPertencesSaida();
        if (TelaModuloSeguranca.jPainelSeguranca != null) {
            TelaModuloSeguranca.jPainelSeguranca.add(objPesqInernosObjSai);
            objPesqInernosObjSai.show();
        } else {
            TelaModuloTriagem.jPainelTriagem.add(objPesqInernosObjSai);
            objPesqInernosObjSai.show();
        }
    }//GEN-LAST:event_jBtPesquisarInternoCrcActionPerformed

    private void jBtPesquisarLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarLocalActionPerformed
        // TODO add your handling code here:
        TelaPesquisarLocalPertenceSaida objLocalPertSaida = new TelaPesquisarLocalPertenceSaida();
        if (TelaModuloSeguranca.jPainelSeguranca != null) {
            TelaModuloSeguranca.jPainelSeguranca.add(objLocalPertSaida);
            objLocalPertSaida.show();
        } else {
            TelaModuloTriagem.jPainelTriagem.add(objLocalPertSaida);
            objLocalPertSaida.show();
        }
    }//GEN-LAST:event_jBtPesquisarLocalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarObjeto;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaObjeto;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarObjeto;
    private javax.swing.JButton jBtDataLanc;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirObjeto;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtIdLanc;
    private javax.swing.JButton jBtNomeInterno;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoObjeto;
    private javax.swing.JButton jBtPesquisarInternoCrc;
    private javax.swing.JButton jBtPesquisarLocal;
    private javax.swing.JButton jBtPesquisarObjetos;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarObjeto;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JComboBox jComboBoxUnidade;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    private com.toedter.calendar.JDateChooser jDataSaida;
    public static javax.swing.JTextField jDescricaoLocalPertences;
    public static javax.swing.JTextField jDescricaoPertenceObjeto;
    public static javax.swing.JLabel jFotoInternosObjetos;
    private javax.swing.JTextField jIDPesqLan;
    public static javax.swing.JTextField jIdInternoCrcObjeto;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdPertence;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInternoCrcObjeto;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JFormattedTextField jQuantidade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaEntradaObjetos;
    private javax.swing.JTable jTabelaObjetosInternos;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jIdInternoCrcObjeto.setBackground(Color.white);
        jNomeInternoCrcObjeto.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdPertence.setBackground(Color.white);
        jDescricaoPertenceObjeto.setBackground(Color.white);
        jDescricaoLocalPertences.setBackground(Color.white);
        jQuantidade.setBackground(Color.white);
    }

    public void Novo() {
        jIdLanc.setText("");
        jStatusLanc.setText("ABERTO");
        jIdInternoCrcObjeto.setText("");
        jFotoInternosObjetos.setIcon(null);
        jNomeInternoCrcObjeto.setText("");
        jDataLanc.setCalendar(Calendar.getInstance());
        jObservacao.setText("");
        //       
        jDataLanc.setEnabled(true);
        jBtPesquisarInternoCrc.setEnabled(true);
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdPertence.setText("");
        jDataSaida.setDate(null);
        jDescricaoPertenceObjeto.setText("");
        jDescricaoLocalPertences.setText("");
        jQuantidade.setText("");
        limparTabelaObjetoSaida();
    }

    public void Alterar() {
        jDataLanc.setEnabled(true);
        if (jIdLanc.getText().equals(codSaida)) {
            jBtPesquisarInternoCrc.setEnabled(!true);
        } else {
            jBtPesquisarInternoCrc.setEnabled(true);
        }
        jObservacao.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void Excluir() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jDataLanc.setDate(null);
        jIdInternoCrcObjeto.setText("");
        jFotoInternosObjetos.setIcon(null);
        jNomeInternoCrcObjeto.setText("");
        jObservacao.setText("");
        //       
        jDataLanc.setEnabled(!true);
        jBtPesquisarInternoCrc.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void Salvar() {
        //       
        jDataLanc.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        //
        jBtNovoObjeto.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            jIdLanc.setText("");
            jStatusLanc.setText("");
            jDataLanc.setDate(null);
            jIdInternoCrcObjeto.setText("");
            jNomeInternoCrcObjeto.setText("");
            jObservacao.setText("");
            //       
            jDataLanc.setEnabled(!true);
            jBtPesquisarInternoCrc.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            //
            jBtNovoObjeto.setEnabled(!true);
            jBtAlterarObjeto.setEnabled(!true);
            jBtExcluirObjeto.setEnabled(!true);
            jBtSalvarObjeto.setEnabled(!true);
            jBtCancelarObjeto.setEnabled(!true);
            jBtAuditoriaObjeto.setEnabled(!true);
        } else {
            jDataLanc.setEnabled(!true);
            jBtPesquisarInternoCrc.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            //
            jBtNovoObjeto.setEnabled(true);
            jBtAlterarObjeto.setEnabled(!true);
            jBtExcluirObjeto.setEnabled(!true);
            jBtSalvarObjeto.setEnabled(!true);
            jBtCancelarObjeto.setEnabled(!true);
            jBtAuditoriaObjeto.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SAIDAOBJETOSPERTENCES");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdSaida"));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
        conecta.desconecta();
    }

    public void buscarCodigoItemObjeto() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSOBJETOSSAIDA");
            conecta.rs.last();
            idItemMov = conecta.rs.getInt("IdItem");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
        conecta.desconecta();
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se essa entrada de objetos for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o lançamento selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objSaidaObj.setStatusLanc(statusEntrada);
            objSaidaObj.setIdLanc(Integer.parseInt(jIdLanc.getText()));
            control.finalizarSaidaObjetos(objSaidaObj);
            jStatusLanc.setText(statusEntrada);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtNovoObjeto.setEnabled(!true);
        }
    }

    // Verificar se existe pertence para poder alterar ou não o interno no documento.
    // Caso o interno já tenha pertence gravado, nãodeixar modifiar o código do interno.
    public void verificarPertences() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSOBJETOSSAIDA WHERE IdSaida='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codSaida = conecta.rs.getString("IdSaida");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovoObjeto() {
        jIdPertence.setText("");
        jDataSaida.setCalendar(Calendar.getInstance());
        jDescricaoPertenceObjeto.setText("");
        jDescricaoLocalPertences.setText("");
        jQuantidade.setText("");
        //
        jBtPesquisarObjetos.setEnabled(true);
        jBtPesquisarLocal.setEnabled(true);
        jDataSaida.setEnabled(true);
        jQuantidade.setEnabled(true);
        //
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(true);
        jBtCancelarObjeto.setEnabled(true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
    }

    public void AlterarObjeto() {
        //
        jBtPesquisarObjetos.setEnabled(!true);
        jBtPesquisarLocal.setEnabled(true);
        jDataSaida.setEnabled(true);
        jQuantidade.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(true);
        jBtCancelarObjeto.setEnabled(true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
    }

    public void ExcluirObjeto() {
        jIdPertence.setText("");
        jDescricaoPertenceObjeto.setText("");
        jDescricaoLocalPertences.setText("");
        jDataSaida.setDate(null);
        jQuantidade.setText("");
        //
        jBtPesquisarObjetos.setEnabled(!true);
        jBtPesquisarLocal.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        jBtFinalizar.setEnabled(true);
    }

    public void SalvarObjeto() {
        jIdPertence.setText("");
        jDescricaoPertenceObjeto.setText("");
        jDescricaoLocalPertences.setText("");
        jDataSaida.setDate(null);
        jQuantidade.setText("");
        //
        jBtPesquisarObjetos.setEnabled(!true);
        jBtPesquisarLocal.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        jBtFinalizar.setEnabled(true);
    }

    public void CancelarObjeto() {
        jIdPertence.setText("");
        jDescricaoPertenceObjeto.setText("");
        jDescricaoLocalPertences.setText("");
        jDataSaida.setDate(null);
        jQuantidade.setText("");
        //
        jBtPesquisarObjetos.setEnabled(!true);
        jBtPesquisarLocal.setEnabled(!true);
        jDataSaida.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        //
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        jBtFinalizar.setEnabled(true);
    }

    public void verificarSaldoPertences() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ESTOQUEPERTENCES WHERE IdInternoCrc='" + jIdInternoCrcObjeto.getText() + "'AND IdPertence='" + jIdPertence.getText() + "'AND StatusMov='" + tipoMovimentoSaida + "'");
            conecta.rs.first();
            codInterno = conecta.rs.getString("IdInternoCrc");
            codPertence = conecta.rs.getString("IdPertence");
            quantidadeEstoque = conecta.rs.getFloat("SaldoEstoque");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSOBJETOSSAIDA WHERE IdSaida='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codEntrada = conecta.rs.getString("IdSaida");
            if (jIdLanc.getText().equals(codEntrada)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os itens relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o LANÇAMENTO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objSaidaObj.setIdLanc(Integer.parseInt(jIdLanc.getText()));
                control.excluirSaidaObjetos(objSaidaObj);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void preencherTabelaEntradaObjetos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            count = 0;
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataLanc");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela 
                dados.add(new Object[]{conecta.rs.getInt("IdSaida"), dataBrasil, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaObjetos.setModel(modelo);
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(3).setPreferredWidth(320);
        jTabelaEntradaObjetos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaObjetos.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaObjetos.setAutoResizeMode(jTabelaEntradaObjetos.AUTO_RESIZE_OFF);
        jTabelaEntradaObjetos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaSaidaObj();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaObjetos.setModel(modelo);
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(3).setPreferredWidth(320);
        jTabelaEntradaObjetos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaObjetos.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaObjetos.setAutoResizeMode(jTabelaEntradaObjetos.AUTO_RESIZE_OFF);
        jTabelaEntradaObjetos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaSaidaObj() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaObjetoInterno(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Interno"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            count = 0;
            do {
                count = count + 1;
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataLanc");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela 
                dados.add(new Object[]{conecta.rs.getInt("IdSaida"), dataBrasil, conecta.rs.getString("StatusLanc"), conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEntradaObjetos.setModel(modelo);
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaEntradaObjetos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEntradaObjetos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaEntradaObjetos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEntradaObjetos.getColumnModel().getColumn(3).setPreferredWidth(320);
        jTabelaEntradaObjetos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEntradaObjetos.getTableHeader().setReorderingAllowed(false);
        jTabelaEntradaObjetos.setAutoResizeMode(jTabelaEntradaObjetos.AUTO_RESIZE_OFF);
        jTabelaEntradaObjetos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conecta.desconecta();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Seq.", "Código", "Nome do Objeto", "Qtde.", "Data Saída"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dataEntrada = conecta.rs.getString("DataSaida");
                String diae = dataEntrada.substring(8, 10);
                String mese = dataEntrada.substring(5, 7);
                String anoe = dataEntrada.substring(0, 4);
                dataEntrada = diae + "/" + mese + "/" + anoe;
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getString("IdPertence"), conecta.rs.getString("DescricaoPertence"), conecta.rs.getInt("Quant"), dataEntrada});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaObjetosInternos.setModel(modelo);
        jTabelaObjetosInternos.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaObjetosInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaObjetosInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabelaObjetosInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaObjetosInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaObjetosInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaObjetosInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaObjetosInternos.setAutoResizeMode(jTabelaObjetosInternos.AUTO_RESIZE_OFF);
        jTabelaObjetosInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaObjetos();
        conecta.desconecta();
    }

    public void limparTabelaObjetoSaida() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Seq.", "Código", "Nome do Objeto", "Qtde.", "Data Saída"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaObjetosInternos.setModel(modelo);
        jTabelaObjetosInternos.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaObjetosInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaObjetosInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabelaObjetosInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaObjetosInternos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaObjetosInternos.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaObjetosInternos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaObjetosInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaObjetosInternos.setAutoResizeMode(jTabelaObjetosInternos.AUTO_RESIZE_OFF);
        jTabelaObjetosInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaObjetos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaObjetosInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaObjetosInternos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaObjetosInternos.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaObjetosInternos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
