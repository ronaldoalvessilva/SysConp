/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleDepartamentos;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitos;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.Departamentos;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloAdmPessoal.codAbrirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codAlterarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codConsultarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codExcluirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codGravarADM;
import static gestor.Visao.TelaModuloAdmPessoal.codIncluirADM;
import static gestor.Visao.TelaModuloAdmPessoal.codUserAcessoADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoGrupoADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoUserADM;
import static gestor.Visao.TelaModuloAdmPessoal.codigoUserGroupADM;
import static gestor.Visao.TelaModuloAdmPessoal.nomeGrupoADM;
import static gestor.Visao.TelaModuloAdmPessoal.nomeTelaADM;
import static gestor.Visao.TelaModuloAdmPessoal.telaCadastroDepartamento_ADM;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Ronaldo
 */
public class TelaDepartamento extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados(); // Variavel global
    Departamentos objDepto = new Departamentos();
    ControleDepartamentos control = new ControleDepartamentos();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "AdmPessoal:Departamento:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int acao; // flag para inclusao e altertação
    int flag = 1; // flag para pesquisa de grupo
    String codDepto; // flag para pesquisar se o departamento tem relacionamento com tabela colaborador
    String nomeDepartamento;
    //
    int pSTATUS_SALA = 0;
    String STATUS_SALA = "";

    /**
     * Creates new form TelaDepartamento
     */
    public TelaDepartamento() {
        initComponents();
        jDescricao.setDocument(new LimiteDigitos(30));
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPescDepto = new javax.swing.JTextField();
        jBtPesquisa = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaDepartamento = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDescricao = new javax.swing.JTextField();
        jIdDepto = new javax.swing.JTextField();
        jComboBoxStatus = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jNumeroSala = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jBtPrimeiro = new javax.swing.JButton();
        jBtAnterior = new javax.swing.JButton();
        jBtUltimo = new javax.swing.JButton();
        jBtProximo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Departamento :::...");

        jTabbedPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.blue)); // NOI18N

        jPescDepto.setToolTipText("Informe Descrição");
        jPescDepto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisa.setContentAreaFilled(false);
        jBtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Descrição:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPescDepto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPescDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jBtPesquisa)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaDepartamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaDepartamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Status", "Descrição", "Nr. Sala"
            }
        ));
        jTabelaDepartamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaDepartamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaDepartamento);
        if (jTabelaDepartamento.getColumnModel().getColumnCount() > 0) {
            jTabelaDepartamento.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaDepartamento.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaDepartamento.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaDepartamento.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaDepartamento.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaDepartamento.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaDepartamento.getColumnModel().getColumn(3).setMinWidth(60);
            jTabelaDepartamento.getColumnModel().getColumn(3).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados para Cadastro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.blue)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Descrição:");

        jDescricao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricao.setEnabled(false);

        jIdDepto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdDepto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdDepto.setEnabled(false);

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jComboBoxStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatus.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Número da Sala:");

        jNumeroSala.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNumeroSala.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jNumeroSala.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jIdDepto, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNumeroSala, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jDescricao))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jIdDepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jNumeroSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.blue)); // NOI18N

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Editar Registro");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir Registro");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Salvar Registro");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair da Tela");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addGap(0, 0, 0)
                .addComponent(jBtAlterar)
                .addGap(0, 0, 0)
                .addComponent(jBtExcluir)
                .addGap(0, 0, 0)
                .addComponent(jBtSalvar)
                .addGap(0, 0, 0)
                .addComponent(jBtCancelar)
                .addGap(0, 0, 0)
                .addComponent(jBtSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovo)
            .addComponent(jBtAlterar)
            .addComponent(jBtExcluir)
            .addComponent(jBtSalvar)
            .addComponent(jBtCancelar)
            .addComponent(jBtSair)
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões de Navegação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.blue)); // NOI18N

        jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7856_16x16.png"))); // NOI18N
        jBtPrimeiro.setToolTipText("Primeiro Registro");
        jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPrimeiroActionPerformed(evt);
            }
        });

        jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7857_16x16.png"))); // NOI18N
        jBtAnterior.setToolTipText("Registro Anterior");
        jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAnteriorActionPerformed(evt);
            }
        });

        jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7854_16x16.png"))); // NOI18N
        jBtUltimo.setToolTipText("Ultimo Registro");
        jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtUltimoActionPerformed(evt);
            }
        });

        jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7855_16x16.png"))); // NOI18N
        jBtProximo.setToolTipText("Próximo Registro");
        jBtProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtProximoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jBtPrimeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAnterior, jBtPrimeiro, jBtProximo, jBtUltimo});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPrimeiro)
                    .addComponent(jBtUltimo)
                    .addComponent(jBtAnterior)
                    .addComponent(jBtProximo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAnterior, jBtPrimeiro, jBtProximo, jBtUltimo});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 150, 494, 278);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroDepartamento_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaCadastroDepartamento_ADM) && codIncluirADM == 1) {
            acao = 1;
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroDepartamento_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaCadastroDepartamento_ADM) && codAlterarADM == 1) {
            acao = 2;
            Alterar();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroDepartamento_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaCadastroDepartamento_ADM) && codExcluirADM == 1) {
            buscarDepartamentoColaborador();
            if (jIdDepto.getText().equals(codDepto)) {
                JOptionPane.showMessageDialog(rootPane, "DEPARTAMENTO não poderá ser DELETADO, existe registro relacionado");
                conecta.desconecta();
            } else {
                Excluir();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroDepartamento_ADM);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoADM.equals("ADMINISTRADORES") || codigoUserADM == codUserAcessoADM && nomeTelaADM.equals(telaCadastroDepartamento_ADM) && codGravarADM == 1) {
            objDepto.setNomeDepartamento(jDescricao.getText());
            objDepto.setNumeroSala(Integer.valueOf(jNumeroSala.getText()));
            objDepto.setStatusDepartamento(objDepto.isStatusDepartamento());
            if (jComboBoxStatus.getSelectedIndex() == 0) {
                objDepto.setStatusDepartamento(true);
            } else {
                objDepto.setStatusDepartamento(false);
            }
            // Verifica se o campo descrição está em branco
            if (jDescricao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Descrição não podem ser em branco");
                jDescricao.requestFocus();
            } else if (jNumeroSala.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o número da sala.");
                jNumeroSala.requestFocus();
            } else {
                try {
                    conecta.abrirConexao();
                    conecta.executaSQL("SELECT * FROM DEPARTAMENTOS "
                            + "WHERE NomeDepartamento='" + jDescricao.getText() + "'");
                    conecta.rs.first();
                    nomeDepartamento = conecta.rs.getString("NomeDepartamento");
                } catch (Exception ex) {
                }
                // Se a opção for 1, será incluido um registro
                if (acao == 1) {
                    if (jDescricao.getText().trim().equals(nomeDepartamento)) {
                        JOptionPane.showMessageDialog(rootPane, "Departamento já cadastrado.");
                    } else {
                        control.incluirDepartamento(objDepto);
                        buscarID();
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Cadastro Realizado com sucesso");
                        Salvar();
                    }
                }
            }
            // Se registro for 2 será alterado o registro
            if (acao == 2) {
                objDepto.setIdDepartamento(Integer.valueOf(jIdDepto.getText()));
                control.alterarDepartamento(objDepto);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro Atualizado com Sucesso !!!");
                SalvarAlterar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Acesso não autorizado, solicite liberação ao administrador.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jPescDepto.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe os dados para pesquisa");
            jPescDepto.requestFocus();
        } else {
            jTabelaDepartamento.setVisible(true);
            preencherTabelaNome("SELECT * FROM DEPARTAMENTOS "
                    + "WHERE NomeDepartamento LIKE'%" + jPescDepto.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesquisaActionPerformed

    private void jTabelaDepartamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaDepartamentoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String NrSala = "" + jTabelaDepartamento.getValueAt(jTabelaDepartamento.getSelectedRow(), 3);
            String NomeDepartamento = "" + jTabelaDepartamento.getValueAt(jTabelaDepartamento.getSelectedRow(), 2);
            jPescDepto.setText(NomeDepartamento);
            String IdDepartamento = "" + jTabelaDepartamento.getValueAt(jTabelaDepartamento.getSelectedRow(), 0);
            jIdDepto.setText(IdDepartamento);
            jDescricao.setText(NomeDepartamento);
            jNumeroSala.setText(NrSala);
            jComboBoxStatus.setEnabled(false);
            jNumeroSala.setEnabled(false);
            jDescricao.setEnabled(false);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(false);
            jBtCancelar.setEnabled(true);
            jBtPrimeiro.setEnabled(true);
            jBtProximo.setEnabled(true);
            jBtAnterior.setEnabled(true);
            jBtUltimo.setEnabled(true);
        }
    }//GEN-LAST:event_jTabelaDepartamentoMouseClicked

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed
        // TODO add your handling code here:
        Primeiro();
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        // TODO add your handling code here:
        Ultimo();
    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        // TODO add your handling code here:
        Anterior();
    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        // TODO add your handling code here:
        Proximo();
    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabela();
        } else {
            limparCampos();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAnterior;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesquisa;
    private javax.swing.JButton jBtPrimeiro;
    private javax.swing.JButton jBtProximo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtUltimo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxStatus;
    private javax.swing.JTextField jDescricao;
    private javax.swing.JTextField jIdDepto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JFormattedTextField jNumeroSala;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jPescDepto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaDepartamento;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdDepto.setBackground(Color.white);
        jComboBoxStatus.setBackground(Color.white);
        jNumeroSala.setBackground(Color.white);
        jDescricao.setBackground(Color.white);
    }

    // Botão novo registro
    public void Novo() {

        //  Incluir um registro
        jDescricao.setText("");
        jBtNovo.setEnabled(false);
        jBtAlterar.setEnabled(false);
        jBtExcluir.setEnabled(false);
        jBtPrimeiro.setEnabled(false);
        jBtUltimo.setEnabled(false);
        jBtProximo.setEnabled(false);
        jBtAnterior.setEnabled(false);
        jBtSalvar.setEnabled(true);
        jBtSair.setEnabled(true);
        jBtCancelar.setEnabled(true);
        // Habilitar os campos
        jComboBoxStatus.setEnabled(true);
        jNumeroSala.setEnabled(true);
        jDescricao.setEnabled(true);
    }

    public void Alterar() {
        jBtNovo.setEnabled(false);
        jBtAlterar.setEnabled(false);
        jBtExcluir.setEnabled(false);
        jBtSalvar.setEnabled(true);
        jBtPrimeiro.setEnabled(false);
        jBtUltimo.setEnabled(false);
        jBtProximo.setEnabled(false);
        jBtAnterior.setEnabled(false);
        jBtSair.setEnabled(true);
        jBtCancelar.setEnabled(true);
        //
        jComboBoxStatus.setEnabled(true);
        jNumeroSala.setEnabled(true);
        jDescricao.setEnabled(true);

    }

    public void Excluir() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir DEPARTAMENTO selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objDepto.setIdDepartamento(Integer.valueOf(jIdDepto.getText()));
            control.excluirDepartamento(objDepto);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(null, "Exclusão do DEPARTAMENTO com sucesso!!");
            conecta.desconecta();
            jDescricao.setText("");
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(false);
            jBtExcluir.setEnabled(false);
            jBtPrimeiro.setEnabled(false);
            jBtUltimo.setEnabled(false);
            jBtProximo.setEnabled(false);
            jBtAnterior.setEnabled(false);
            jBtSalvar.setEnabled(false);
            jBtSair.setEnabled(true);
            jBtCancelar.setEnabled(true);
            // Habilitar os campos
            jComboBoxStatus.setEnabled(false);
            jNumeroSala.setEnabled(false);
            jDescricao.setEnabled(false);
            conecta.desconecta();
        }
    }

    public void Salvar() {
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtPrimeiro.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtSalvar.setEnabled(false);
        jBtCancelar.setEnabled(false);
        //
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
    }

    // Método salvar alteração
    public void SalvarAlterar() {
        jBtNovo.setEnabled(true);
        jBtPrimeiro.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        //
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
    }

    public void Cancelar() {
        jIdDepto.setText("");
        jDescricao.setText("");
        jNumeroSala.setText("");
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(false);
        jBtExcluir.setEnabled(false);
        jBtPrimeiro.setEnabled(false);
        jBtUltimo.setEnabled(false);
        jBtProximo.setEnabled(false);
        jBtAnterior.setEnabled(false);
        jBtSalvar.setEnabled(false);
        jBtSair.setEnabled(true);
        jBtCancelar.setEnabled(false);
        // Habilitar os campos
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
    }

    public void Primeiro() {
        Departamentos objDepto = new Departamentos();
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
        //
        jBtNovo.setEnabled(false);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jComboBoxStatus.setSelectedIndex(0);
        try {
            conecta.abrirConexao();
            conecta.executaSQL("SELECT * FROM DEPARTAMENTOS");
            conecta.rs.first();
            jIdDepto.setText(String.valueOf(conecta.rs.getInt("IdDepartamento")));
            jDescricao.setText(conecta.rs.getString("NomeDepartamento"));
            objDepto.setStatusDepartamento(conecta.rs.getBoolean("StatusDepartamento"));
            if (objDepto.isStatusDepartamento() == false) {
                jComboBoxStatus.setSelectedIndex(1);//1 verdadeiro e 0 falso
            } else {
                jComboBoxStatus.setSelectedIndex(0);
            }
            jNumeroSala.setText(conecta.rs.getString("SalaNr"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Inicio de arquivo!!\n\n ATENÇÃO" + ex);
        }
    }

    public void Ultimo() {
        Departamentos objDepto = new Departamentos();
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
        //
        jBtNovo.setEnabled(false);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jComboBoxStatus.setSelectedIndex(0);
        try {
            conecta.abrirConexao();
            conecta.executaSQL("SELECT * FROM DEPARTAMENTOS");
            conecta.rs.last();
            jIdDepto.setText(String.valueOf(conecta.rs.getInt("IdDepartamento")));
            jDescricao.setText(conecta.rs.getString("NomeDepartamento"));
            objDepto.setStatusDepartamento(conecta.rs.getBoolean("StatusDepartamento"));
            if (objDepto.isStatusDepartamento() == false) {
                jComboBoxStatus.setSelectedIndex(1);//1 verdadeiro e 0 falso
            } else {
                jComboBoxStatus.setSelectedIndex(0);
            }
            jNumeroSala.setText(conecta.rs.getString("SalaNr"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Inicio de arquivo!!\n\n ATENÇÃO" + ex);
        }
    }

    public void Proximo() {
        Departamentos objDepto = new Departamentos();
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
        //
        jBtNovo.setEnabled(false);
        jBtSalvar.setEnabled(false);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtPrimeiro.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jComboBoxStatus.setSelectedIndex(0);
        try {
            conecta.rs.next();
            jIdDepto.setText(String.valueOf(conecta.rs.getInt("IdDepartamento")));
            jDescricao.setText(conecta.rs.getString("NomeDepartamento"));
            objDepto.setStatusDepartamento(conecta.rs.getBoolean("StatusDepartamento"));
            if (objDepto.isStatusDepartamento() == false) {
                jComboBoxStatus.setSelectedIndex(1);//1 verdadeiro e 0 falso
            } else {
                jComboBoxStatus.setSelectedIndex(0);
            }
            jNumeroSala.setText(conecta.rs.getString("SalaNr"));
        } catch (Exception ex) {
        }
    }

    public void Anterior() {
        Departamentos objDepto = new Departamentos();
        jComboBoxStatus.setEnabled(false);
        jNumeroSala.setEnabled(false);
        jDescricao.setEnabled(false);
        //
        jBtNovo.setEnabled(false);
        jBtSalvar.setEnabled(false);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtPrimeiro.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jComboBoxStatus.setSelectedIndex(0);
        try {
            conecta.rs.previous();
            jIdDepto.setText(String.valueOf(conecta.rs.getInt("IdDepartamento")));
            jDescricao.setText(conecta.rs.getString("NomeDepartamento"));
            objDepto.setStatusDepartamento(conecta.rs.getBoolean("StatusDepartamento"));
            if (objDepto.isStatusDepartamento() == false) {
                jComboBoxStatus.setSelectedIndex(1);//1 verdadeiro e 0 falso
            } else {
                jComboBoxStatus.setSelectedIndex(0);
            }
            jNumeroSala.setText(conecta.rs.getString("SalaNr"));
        } catch (Exception ex) {
        }
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DEPARTAMENTOS");
            conecta.rs.last();
            jIdDepto.setText(conecta.rs.getString("IdDepartamento"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do departamento.\nERRO: " + ex);
        }
    }

    // Método de pesquisa pela Descrição
    public void preencherTabelaNome(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Descrição", "Nr.Sala"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                pSTATUS_SALA = conecta.rs.getInt("StatusDepartamento");
                if (pSTATUS_SALA == 0) {
                    STATUS_SALA = "Inativo";
                } else if (pSTATUS_SALA == 1) {
                    STATUS_SALA = "Ativo";
                }
                dados.add(new Object[]{conecta.rs.getInt("IdDepartamento"), STATUS_SALA, conecta.rs.getString("NomeDepartamento"), conecta.rs.getInt("SalaNr")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDepartamento.setModel(modelo);
        jTabelaDepartamento.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaDepartamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaDepartamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaDepartamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(3).setPreferredWidth(60);
        jTabelaDepartamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDepartamento.getTableHeader().setReorderingAllowed(false);
        jTabelaDepartamento.setAutoResizeMode(jTabelaDepartamento.AUTO_RESIZE_OFF);
        jTabelaDepartamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }
// Classe que monta a Tabela e popula a tela

    public void preencherTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Descrição", "Nr.Sala"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM DEPARTAMENTOS");
            conecta.rs.first();
            do {
                pSTATUS_SALA = conecta.rs.getInt("StatusDepartamento");
                if (pSTATUS_SALA == 0) {
                    STATUS_SALA = "Inativo";
                } else if (pSTATUS_SALA == 1) {
                    STATUS_SALA = "Ativo";
                }
                dados.add(new Object[]{conecta.rs.getInt("IdDepartamento"), STATUS_SALA, conecta.rs.getString("NomeDepartamento"), conecta.rs.getInt("SalaNr")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existem dados a serem exibidos.");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDepartamento.setModel(modelo);
        jTabelaDepartamento.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaDepartamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaDepartamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaDepartamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(3).setPreferredWidth(60);
        jTabelaDepartamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDepartamento.getTableHeader().setReorderingAllowed(false);
        jTabelaDepartamento.setAutoResizeMode(jTabelaDepartamento.AUTO_RESIZE_OFF);
        jTabelaDepartamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    // Verifica se o DEPARTAMENTO/RELAÇÃO com a tabela de ususarios
    public void buscarDepartamentoColaborador() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM COLABORADOR "
                    + "WHERE IdDepartamento='" + jIdDepto.getText() + "'");
            conecta.rs.first();
            codDepto = conecta.rs.getString("IdDepartamento");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o ID do Departamento\nERRO: " + ex);
            conecta.desconecta();
        }
    }

    public void limparCampos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", "Descrição", "Nr.Sala"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaDepartamento.setModel(modelo);
        jTabelaDepartamento.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaDepartamento.getColumnModel().getColumn(0).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaDepartamento.getColumnModel().getColumn(1).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaDepartamento.getColumnModel().getColumn(2).setResizable(false);
        jTabelaDepartamento.getColumnModel().getColumn(3).setPreferredWidth(60);
        jTabelaDepartamento.getColumnModel().getColumn(3).setResizable(false);
        jTabelaDepartamento.getTableHeader().setReorderingAllowed(false);
        jTabelaDepartamento.setAutoResizeMode(jTabelaDepartamento.AUTO_RESIZE_OFF);
        jTabelaDepartamento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaDepartamento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaDepartamento.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaDepartamento.getColumnModel().getColumn(3).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdDepto.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserADM = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserADM + "'");
            conecta.rs.first();
            codigoUserGroupADM = conecta.rs.getInt("IdUsuario");
            codigoGrupoADM = conecta.rs.getInt("IdGrupo");
            nomeGrupoADM = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserADM + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoADM = conecta.rs.getInt("IdUsuario");
            codAbrirADM = conecta.rs.getInt("Abrir");
            codIncluirADM = conecta.rs.getInt("Incluir");
            codAlterarADM = conecta.rs.getInt("Alterar");
            codExcluirADM = conecta.rs.getInt("Excluir");
            codGravarADM = conecta.rs.getInt("Gravar");
            codConsultarADM = conecta.rs.getInt("Consultar");
            nomeTelaADM = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
