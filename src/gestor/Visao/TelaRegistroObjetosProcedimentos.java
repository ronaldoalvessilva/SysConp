/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleApoioProcedimento;
import gestor.Controle.ControleCelasInternosProcedimento;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleObjetosCelasProcedimento;
import gestor.Controle.ControleRegProgedimento;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ApoioProcedimento;
import gestor.Modelo.ItensPavilhaoCelaInternosProcedimento;
import gestor.Modelo.LogSistema;
import gestor.Modelo.ObjetosProcedimento;
import gestor.Modelo.RegistroProcedimentos;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloSeguranca.codAbrir;
import static gestor.Visao.TelaModuloSeguranca.codAlterar;
import static gestor.Visao.TelaModuloSeguranca.codConsultar;
import static gestor.Visao.TelaModuloSeguranca.codExcluir;
import static gestor.Visao.TelaModuloSeguranca.codGravar;
import static gestor.Visao.TelaModuloSeguranca.codIncluir;
import static gestor.Visao.TelaModuloSeguranca.codUserAcesso;
import static gestor.Visao.TelaModuloSeguranca.codigoGrupo;
import static gestor.Visao.TelaModuloSeguranca.codigoUser;
import static gestor.Visao.TelaModuloSeguranca.codigoUserGroup;
import static gestor.Visao.TelaModuloSeguranca.nomeGrupo;
import static gestor.Visao.TelaModuloSeguranca.nomeTela;
import static gestor.Visao.TelaModuloSeguranca.telaControleValores;
import static gestor.Visao.TelaModuloSeguranca.telaControleValoresInterno;
import static gestor.Visao.TelaModuloSeguranca.telaRegistroObjetoAgentes;
import static gestor.Visao.TelaModuloSeguranca.telaRegistroObjetoObjetos;
import static gestor.Visao.TelaModuloSeguranca.telaRegistroObjetoProcedimento;
import static gestor.Visao.TelaModuloSeguranca.telaRegistroObjetoProcedimentoPavilhao;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo
 */
public class TelaRegistroObjetosProcedimentos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    RegistroProcedimentos objRegProc = new RegistroProcedimentos();
    ControleRegProgedimento control = new ControleRegProgedimento();
    //
    ItensPavilhaoCelaInternosProcedimento objItensProced = new ItensPavilhaoCelaInternosProcedimento();
    ControleCelasInternosProcedimento controle = new ControleCelasInternosProcedimento();
    //
    ObjetosProcedimento objObjetos = new ObjetosProcedimento();
    ControleObjetosCelasProcedimento controleObj = new ControleObjetosCelasProcedimento();
    //
    ApoioProcedimento objApoio = new ApoioProcedimento();
    ControleApoioProcedimento controleApoioAgentes = new ControleApoioProcedimento();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Segurança:Registro de Procedimento Internos:Manutenção";
    String nomeModuloTela2 = "Segurança:Registro de Procedimento Internos:Pavilhão/Cela";
    String nomeModuloTela3 = "Segurança:Registro de Procedimento Internos:Objetos";
    String nomeModuloTela4 = "Segurança:Registro de Procedimento Internos:Agentes";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    String dataInicial;
    String dataFinal;
    String dataBrasil;
    String codEntrada; // Código que faz a compraração para excluir ou não o registro principal
    int codCela; //Código do registro da tabela ITENSPCIP
    public static int idItem;
    double qtdItem = 0;
    String qtdItemTab;
    public static String IdObjPro, IdApoio;
    String codCelaObjeto; // Código do objeto para verificar se existe, para poder excluir
    String codProcApoio;
    int codInterno, codItensPcicp;
    int count = 0;

    /**
     * Creates new form TelaRegistroObjetosProcedimentos
     */
    public TelaRegistroObjetosProcedimentos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jIdPesqCodigo = new javax.swing.JTextField();
        jDescricaoPavilhao = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqDatas = new javax.swing.JButton();
        jBtPesqDescricaoPavilha = new javax.swing.JButton();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTabelaRegistroProcedimentos = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jIdLanc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jStatusLanc = new javax.swing.JTextField();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jHorarioInicial = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jHorarioTermino = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jResponsavelRegistro = new javax.swing.JTextField();
        jBtPesqUsuarioResponsavel = new javax.swing.JButton();
        jBtFinalizar = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();
        jPanel17 = new javax.swing.JPanel();
        jBtAjuda = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jDescricaoRaio = new javax.swing.JTextField();
        jBtPesqPavilhao = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jDescricaoCela = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jIdPav = new javax.swing.JTextField();
        jIdCela = new javax.swing.JTextField();
        jBtPesqCela = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaInternos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaPavilhaoCelasInternos = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jBtNovaCela = new javax.swing.JButton();
        jBtAlterarCela = new javax.swing.JButton();
        jBtExcluirCela = new javax.swing.JButton();
        jBtSalvarCela = new javax.swing.JButton();
        jBtCancelarCela = new javax.swing.JButton();
        jBtAuditoriaCela = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jDescricaoObjeto = new javax.swing.JTextField();
        jBtPesObjeto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jIdObjeto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jQuantidade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jDescricaoCelaObjeto = new javax.swing.JTextField();
        jBtPesqCelaInterno = new javax.swing.JButton();
        jComboBoxUnidade = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaObjetos = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jBtNovoObjeto = new javax.swing.JButton();
        jBtAlterarObjeto = new javax.swing.JButton();
        jBtExcluirObjeto = new javax.swing.JButton();
        jBtSalvarObjeto = new javax.swing.JButton();
        jBtCancelarObjeto = new javax.swing.JButton();
        jBtAuditoriaObjeto = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jIdFunc = new javax.swing.JTextField();
        jNomeColaboradorProcedimento = new javax.swing.JTextField();
        jBtPesqFunc = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jComboBoxTipoAuxilio = new javax.swing.JComboBox();
        jCargoFunc = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jBtImpressao = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTabelaAgentes = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jBtNovoAgente = new javax.swing.JButton();
        jBtAlterarAgente = new javax.swing.JButton();
        jBtExcluirAgente = new javax.swing.JButton();
        jBtSalvarAgente = new javax.swing.JButton();
        jBtCancelarAgente = new javax.swing.JButton();
        jBtAuditoriaAgente = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Registro de Procedimento de Revista de Pavilhão/Celas :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Data Inicial:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Data Final:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Pavilhão:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jIdPesqCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPesqCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDescricaoPavilhao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqDatas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDatas.setContentAreaFilled(false);
        jBtPesqDatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDatasActionPerformed(evt);
            }
        });

        jBtPesqDescricaoPavilha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDescricaoPavilha.setContentAreaFilled(false);
        jBtPesqDescricaoPavilha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDescricaoPavilhaActionPerformed(evt);
            }
        });

        jCheckBoxTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jDescricaoPavilhao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtPesqDescricaoPavilha, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqDatas, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jIdPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodos)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17)
                    .addComponent(jIdPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jCheckBoxTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDatas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel20)
                    .addComponent(jDescricaoPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDescricaoPavilha))
                .addContainerGap())
        );

        jTabelaRegistroProcedimentos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaRegistroProcedimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Status", "Observação"
            }
        ));
        jTabelaRegistroProcedimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaRegistroProcedimentosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTabelaRegistroProcedimentos);
        if (jTabelaRegistroProcedimentos.getColumnModel().getColumnCount() > 0) {
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(3).setMinWidth(320);
            jTabelaRegistroProcedimentos.getColumnModel().getColumn(3).setMaxWidth(320);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAlterar)
                    .addComponent(jBtExcluir)
                    .addComponent(jBtSalvar)
                    .addComponent(jBtCancelar)
                    .addComponent(jBtSair))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(255, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setEnabled(false);

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Registro");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Horário Inicial");

        jHorarioInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioInicial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioInicial.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Horário Término");

        jHorarioTermino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioTermino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioTermino.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Responsável");

        jResponsavelRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jResponsavelRegistro.setEnabled(false);

        jBtPesqUsuarioResponsavel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqUsuarioResponsavel.setContentAreaFilled(false);
        jBtPesqUsuarioResponsavel.setEnabled(false);
        jBtPesqUsuarioResponsavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqUsuarioResponsavelActionPerformed(evt);
            }
        });

        jBtFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtFinalizar.setForeground(new java.awt.Color(0, 153, 0));
        jBtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/accept.png"))); // NOI18N
        jBtFinalizar.setText("Finalizar");
        jBtFinalizar.setToolTipText("Finalizar");
        jBtFinalizar.setEnabled(false);
        jBtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jResponsavelRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqUsuarioResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jStatusLanc))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jHorarioInicial, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jHorarioTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(79, 79, 79)
                                .addComponent(jBtFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtFinalizar)
                    .addComponent(jHorarioTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHorarioInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqUsuarioResponsavel)
                    .addComponent(jResponsavelRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane1.setViewportView(jObservacao);

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Ajuda_8446_16x16.png"))); // NOI18N
        jBtAjuda.setToolTipText("Ajuda");
        jBtAjuda.setContentAreaFilled(false);
        jBtAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAjudaActionPerformed(evt);
            }
        });

        jBtAuditoria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoria.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAjuda, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAjuda, jBtAuditoria});

        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtAjuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jBtAuditoria, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAjuda, jBtAuditoria});

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Pavilhão");

        jDescricaoRaio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoRaio.setEnabled(false);

        jBtPesqPavilhao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqPavilhao.setContentAreaFilled(false);
        jBtPesqPavilhao.setEnabled(false);
        jBtPesqPavilhao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqPavilhaoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Cela");

        jDescricaoCela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoCela.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Código");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Código");

        jIdPav.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPav.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdPav.setEnabled(false);

        jIdCela.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdCela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdCela.setEnabled(false);

        jBtPesqCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCela.setContentAreaFilled(false);
        jBtPesqCela.setEnabled(false);
        jBtPesqCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jIdCela, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                .addComponent(jIdPav, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtPesqPavilhao, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqCela, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDescricaoRaio)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel5))
                            .addComponent(jLabel4))
                        .addGap(0, 233, Short.MAX_VALUE))
                    .addComponent(jDescricaoCela))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqPavilhao)
                    .addComponent(jDescricaoRaio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdPav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDescricaoCela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdCela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jBtPesqCela))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDescricaoCela, jDescricaoRaio});

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Pavilhão/Celas", jPanel11);

        jTabelaInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Código", "Nome Completo do Interno", "Matricula"
            }
        ));
        jScrollPane2.setViewportView(jTabelaInternos);
        if (jTabelaInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaInternos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaInternos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaInternos.getColumnModel().getColumn(1).setMinWidth(300);
            jTabelaInternos.getColumnModel().getColumn(1).setMaxWidth(300);
            jTabelaInternos.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaInternos.getColumnModel().getColumn(2).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Internos", jPanel12);

        jTabelaPavilhaoCelasInternos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPavilhaoCelasInternos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Código", "Pavilhão", "Cela"
            }
        ));
        jTabelaPavilhaoCelasInternos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaPavilhaoCelasInternosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabelaPavilhaoCelasInternos);
        if (jTabelaPavilhaoCelasInternos.getColumnModel().getColumnCount() > 0) {
            jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(1).setMinWidth(180);
            jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(1).setMaxWidth(180);
            jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(2).setMinWidth(290);
            jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(2).setMaxWidth(290);
        }

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovaCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovaCela.setText("Novo");
        jBtNovaCela.setContentAreaFilled(false);
        jBtNovaCela.setEnabled(false);
        jBtNovaCela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovaCela.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovaCela.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovaCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaCelaActionPerformed(evt);
            }
        });

        jBtAlterarCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarCela.setText("Alterar");
        jBtAlterarCela.setContentAreaFilled(false);
        jBtAlterarCela.setEnabled(false);
        jBtAlterarCela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarCela.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarCela.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarCelaActionPerformed(evt);
            }
        });

        jBtExcluirCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirCela.setText("Excluir");
        jBtExcluirCela.setContentAreaFilled(false);
        jBtExcluirCela.setEnabled(false);
        jBtExcluirCela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirCela.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirCela.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirCelaActionPerformed(evt);
            }
        });

        jBtSalvarCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarCela.setText("Gravar");
        jBtSalvarCela.setContentAreaFilled(false);
        jBtSalvarCela.setEnabled(false);
        jBtSalvarCela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarCela.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarCela.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarCelaActionPerformed(evt);
            }
        });

        jBtCancelarCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarCela.setText("Cancelar");
        jBtCancelarCela.setContentAreaFilled(false);
        jBtCancelarCela.setEnabled(false);
        jBtCancelarCela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarCela.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarCela.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarCelaActionPerformed(evt);
            }
        });

        jBtAuditoriaCela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaCela.setContentAreaFilled(false);
        jBtAuditoriaCela.setEnabled(false);
        jBtAuditoriaCela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaCelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jBtNovaCela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarCela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirCela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarCela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarCela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtAuditoriaCela, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovaCela)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtAlterarCela, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtExcluirCela, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtSalvarCela, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtCancelarCela, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoriaCela)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Pavilhão/Celas", jPanel7);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Descrição do Objeto");

        jDescricaoObjeto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoObjeto.setEnabled(false);

        jBtPesObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesObjeto.setContentAreaFilled(false);
        jBtPesObjeto.setEnabled(false);
        jBtPesObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesObjetoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Código");

        jIdObjeto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdObjeto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdObjeto.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Unidade");

        jQuantidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQuantidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQuantidade.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Qtde.");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Cela");

        jDescricaoCelaObjeto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoCelaObjeto.setEnabled(false);

        jBtPesqCelaInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCelaInterno.setContentAreaFilled(false);
        jBtPesqCelaInterno.setEnabled(false);
        jBtPesqCelaInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCelaInternoActionPerformed(evt);
            }
        });

        jComboBoxUnidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "UN", "KIT", "PC", "PCT", "KG" }));
        jComboBoxUnidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidade.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jDescricaoObjeto)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jIdObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel16)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDescricaoCelaObjeto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqCelaInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(21, 21, 21))))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdObjeto, jQuantidade});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDescricaoCelaObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesObjeto)
                    .addComponent(jIdObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCelaInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDescricaoObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jIdObjeto, jQuantidade});

        jTabelaObjetos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaObjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Descrição do Objeto", "Qtde.", "Cela"
            }
        ));
        jTabelaObjetos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaObjetosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaObjetos);
        if (jTabelaObjetos.getColumnModel().getColumnCount() > 0) {
            jTabelaObjetos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaObjetos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaObjetos.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaObjetos.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaObjetos.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaObjetos.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaObjetos.getColumnModel().getColumn(3).setMinWidth(70);
            jTabelaObjetos.getColumnModel().getColumn(3).setMaxWidth(70);
            jTabelaObjetos.getColumnModel().getColumn(4).setMinWidth(120);
            jTabelaObjetos.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoObjeto.setText("Novo");
        jBtNovoObjeto.setContentAreaFilled(false);
        jBtNovoObjeto.setEnabled(false);
        jBtNovoObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoObjetoActionPerformed(evt);
            }
        });

        jBtAlterarObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarObjeto.setText("Alterar");
        jBtAlterarObjeto.setContentAreaFilled(false);
        jBtAlterarObjeto.setEnabled(false);
        jBtAlterarObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarObjetoActionPerformed(evt);
            }
        });

        jBtExcluirObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirObjeto.setText("Excluir");
        jBtExcluirObjeto.setContentAreaFilled(false);
        jBtExcluirObjeto.setEnabled(false);
        jBtExcluirObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirObjetoActionPerformed(evt);
            }
        });

        jBtSalvarObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarObjeto.setText("Gravar");
        jBtSalvarObjeto.setContentAreaFilled(false);
        jBtSalvarObjeto.setEnabled(false);
        jBtSalvarObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarObjetoActionPerformed(evt);
            }
        });

        jBtCancelarObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarObjeto.setText("Cancelar");
        jBtCancelarObjeto.setContentAreaFilled(false);
        jBtCancelarObjeto.setEnabled(false);
        jBtCancelarObjeto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarObjeto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarObjeto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarObjetoActionPerformed(evt);
            }
        });

        jBtAuditoriaObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaObjeto.setContentAreaFilled(false);
        jBtAuditoriaObjeto.setEnabled(false);
        jBtAuditoriaObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaObjetoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jBtNovoObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarObjeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtAuditoriaObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovoObjeto)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtAlterarObjeto, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtExcluirObjeto, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtSalvarObjeto, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtCancelarObjeto, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoriaObjeto)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Objetos Encontrados", jPanel4);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Código");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Nome Completo do Colaborador");

        jIdFunc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdFunc.setEnabled(false);

        jNomeColaboradorProcedimento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeColaboradorProcedimento.setEnabled(false);

        jBtPesqFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqFunc.setContentAreaFilled(false);
        jBtPesqFunc.setEnabled(false);
        jBtPesqFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqFuncActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Tipo de Auxilio");

        jComboBoxTipoAuxilio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxTipoAuxilio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plantão", "Apoio" }));
        jComboBoxTipoAuxilio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTipoAuxilio.setEnabled(false);

        jCargoFunc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCargoFunc.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Cargo");

        jBtImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImpressao.setText("Impressão");
        jBtImpressao.setToolTipText("Impressão");
        jBtImpressao.setEnabled(false);
        jBtImpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImpressaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jIdFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(0, 172, Short.MAX_VALUE))
                            .addComponent(jCargoFunc)))
                    .addComponent(jNomeColaboradorProcedimento)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23)
                    .addComponent(jComboBoxTipoAuxilio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtImpressao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCargoFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtImpressao))
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jNomeColaboradorProcedimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTipoAuxilio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabelaAgentes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAgentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Nome do Colaborador", "Cargo", "Tipo Auxilio"
            }
        ));
        jTabelaAgentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAgentesMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTabelaAgentes);
        if (jTabelaAgentes.getColumnModel().getColumnCount() > 0) {
            jTabelaAgentes.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAgentes.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAgentes.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaAgentes.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaAgentes.getColumnModel().getColumn(2).setMinWidth(250);
            jTabelaAgentes.getColumnModel().getColumn(2).setMaxWidth(250);
            jTabelaAgentes.getColumnModel().getColumn(3).setMinWidth(170);
            jTabelaAgentes.getColumnModel().getColumn(3).setMaxWidth(170);
            jTabelaAgentes.getColumnModel().getColumn(4).setMinWidth(120);
            jTabelaAgentes.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBtNovoAgente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoAgente.setText("Novo");
        jBtNovoAgente.setContentAreaFilled(false);
        jBtNovoAgente.setEnabled(false);
        jBtNovoAgente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoAgente.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoAgente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoAgenteActionPerformed(evt);
            }
        });

        jBtAlterarAgente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarAgente.setText("Alterar");
        jBtAlterarAgente.setContentAreaFilled(false);
        jBtAlterarAgente.setEnabled(false);
        jBtAlterarAgente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarAgente.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarAgente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarAgenteActionPerformed(evt);
            }
        });

        jBtExcluirAgente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirAgente.setText("Excluir");
        jBtExcluirAgente.setContentAreaFilled(false);
        jBtExcluirAgente.setEnabled(false);
        jBtExcluirAgente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirAgente.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirAgente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirAgenteActionPerformed(evt);
            }
        });

        jBtSalvarAgente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarAgente.setText("Gravar");
        jBtSalvarAgente.setContentAreaFilled(false);
        jBtSalvarAgente.setEnabled(false);
        jBtSalvarAgente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarAgente.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarAgente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarAgenteActionPerformed(evt);
            }
        });

        jBtCancelarAgente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarAgente.setText("Cancelar");
        jBtCancelarAgente.setContentAreaFilled(false);
        jBtCancelarAgente.setEnabled(false);
        jBtCancelarAgente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarAgente.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarAgente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarAgenteActionPerformed(evt);
            }
        });

        jBtAuditoriaAgente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaAgente.setContentAreaFilled(false);
        jBtAuditoriaAgente.setEnabled(false);
        jBtAuditoriaAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaAgenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jBtNovoAgente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarAgente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirAgente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarAgente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarAgente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtAuditoriaAgente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtNovoAgente)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtAlterarAgente, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtExcluirAgente, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtSalvarAgente, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtCancelarAgente, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtAuditoriaAgente)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Agentes", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setBounds(300, 20, 463, 449);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        if (jIdPesqCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            preencherTabelaEntradaObjetos("SELECT * FROM PROCEDIMENTOS WHERE IdProc='" + jIdPesqCodigo.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaEntradaObjetos("SELECT * FROM PROCEDIMENTOS");
        } else {
            jtotalRegistros.setText("");
            limparTabelaRegistroProcedimentos();
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void jBtPesqDatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDatasActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesqFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesqFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                    preencherTabelaEntradaObjetos("SELECT * FROM PROCEDIMENTOS WHERE DataLanc BETWEEN'" + dataInicial + "'AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDatasActionPerformed

    private void jBtPesqDescricaoPavilhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDescricaoPavilhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtPesqDescricaoPavilhaActionPerformed

    private void jTabelaRegistroProcedimentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaRegistroProcedimentosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1 && evt.getClickCount() == 1) {
            String IdLanc = "" + jTabelaRegistroProcedimentos.getValueAt(jTabelaRegistroProcedimentos.getSelectedRow(), 0);
            jIdPesqCodigo.setText(IdLanc);
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtNovoObjeto.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovaCela.setEnabled(true);
            jBtNovoObjeto.setEnabled(true);
            jBtNovoAgente.setEnabled(true);
            //
            jBtImpressao.setEnabled(true);
            //
            jIdPav.setText("");
            jDescricaoRaio.setText("");
            jIdCela.setText("");
            jDescricaoCela.setText("");
            // Limpa a tabela   
            preencherTabelaInternos("SELECT ITENSLOCACAOINTERNO.IdInternoCrc,PRONTUARIOSCRC.NomeInternoCrc,PRONTUARIOSCRC.MatriculaCrc "
                    + "FROM ITENSLOCACAOINTERNO "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ITENSLOCACAOINTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdCela='" + jIdCela.getText() + "'");
            //
            jIdObjeto.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jQuantidade.setText("");
            jDescricaoCelaObjeto.setText("");
            jDescricaoObjeto.setText("");
            //
            jIdFunc.setText("");
            jCargoFunc.setText("");
            jNomeColaboradorProcedimento.setText("");
            jComboBoxTipoAuxilio.setSelectedItem(null);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM PROCEDIMENTOS WHERE IdProc='" + IdLanc + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdProc")));
                jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                jHorarioInicial.setText(conecta.rs.getString("HorarioInicial"));
                jHorarioTermino.setText(conecta.rs.getString("HorarioTermino"));
                jResponsavelRegistro.setText(conecta.rs.getString("Responsavel"));
                jObservacao.setText(conecta.rs.getString("Observacao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERRO: " + e);
            }
            preencherTabelaPavilhaoCelasInternos("SELECT * FROM ITENSPCIP "
                    + "INNER JOIN PROCEDIMENTOS "
                    + "ON ITENSPCIP.IdProc=PROCEDIMENTOS.IdProc "
                    + "INNER JOIN PAVILHAO "
                    + "ON ITENSPCIP.IdPav=PAVILHAO.IdPav "
                    + "INNER JOIN CELAS "
                    + "ON ITENSPCIP.IdCela=CELAS.IdCela "
                    + "WHERE ITENSPCIP.IdProc='" + IdLanc + "'");
            preencherTabelaObjetosProcedimentos("SELECT * FROM ITENSOBJETOSPROCEDIMENTO "
                    + "INNER JOIN OBJETOSPROCEDIMENTOS "
                    + "ON ITENSOBJETOSPROCEDIMENTO.IdObjeto=OBJETOSPROCEDIMENTOS.IdObjeto "
                    + "INNER JOIN CELAS "
                    + "ON ITENSOBJETOSPROCEDIMENTO.IdCela=CELAS.IdCela "
                    + "INNER JOIN PROCEDIMENTOS "
                    + "ON ITENSOBJETOSPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                    + "WHERE ITENSOBJETOSPROCEDIMENTO.IdProc='" + IdLanc + "'");
            preencherTabelaAgentesApoioProcedimentos("SELECT * FROM APOIOPROCEDIMENTO "
                    + "INNER JOIN PROCEDIMENTOS "
                    + "ON APOIOPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                    + "INNER JOIN COLABORADOR "
                    + "ON APOIOPROCEDIMENTO.IdFunc=COLABORADOR.IdFunc "
                    + "INNER JOIN CARGOS "
                    + "ON COLABORADOR.IdCargo=CARGOS.IdCargo "
                    + "WHERE APOIOPROCEDIMENTO.IdProc='" + IdLanc + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaRegistroProcedimentosMouseClicked

    private void jBtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFinalizarActionPerformed
        // TODO add your handling code here:
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PROCEDIMENTOS WHERE IdProc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            jStatusLanc.setText(conecta.rs.getString("StatusLanc"));
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Registro já foi finalizado");
            } else {
                Finalizar();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar se registro foi finalizado\nERRO: " + ex);
        }
        conecta.desconecta();
    }//GEN-LAST:event_jBtFinalizarActionPerformed

    private void jBtPesqUsuarioResponsavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqUsuarioResponsavelActionPerformed
        // TODO add your handling code here:       
        TelaPesqColaboradorProcedimento objColabora = new TelaPesqColaboradorProcedimento();
        TelaModuloSeguranca.jPainelSeguranca.add(objColabora);
        objColabora.show();
    }//GEN-LAST:event_jBtPesqUsuarioResponsavelActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaProcedimento objAudiProc = new TelaAuditoriaProcedimento();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudiProc);
        objAudiProc.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimento);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimento) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            acao = 1;
            Novo();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            limparTabelaPavilhaoCelasInternos();
            limparTabelaInternos();
            limparTabelaObjetosProcedimentos();
            limparTabelaAgentes();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimento);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimento) && codAlterar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 2;
                Alterar();
                corCampos();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a alterar registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimento);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimento) && codExcluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            verificarRegistros(); // Verificar se existe registro de celas
            verificarAgente(); // Verificar se existe registro na aba Apoio.
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Essa entrada de internos não poderá ser excluida, o mesmo encontra-se FINALIZADO");
            } else {
                if (jIdLanc.getText().equals(codEntrada)) {
                    JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse registro, será necessário\nexcluir primeiro os itens relacionados a esse registro.");
                } else if (jIdLanc.getText().equals(codProcApoio)) {
                    JOptionPane.showMessageDialog(rootPane, "Não é possível excluir esse registro,\no mesmo está sendo utilizando na aba agentes.");
                } else {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o REGISTRO selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objRegProc.setIdProc(Integer.parseInt(jIdLanc.getText()));
                        control.excluirRegProcedimento(objRegProc);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                        Excluir();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a excluir registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimento);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimento) && codGravar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do registro.");
                jDataLanc.requestFocus();
                jDataLanc.setBackground(Color.red);
            } else if (jResponsavelRegistro.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o responsavel pelo Procedimento.");
                jResponsavelRegistro.requestFocus();
                jResponsavelRegistro.setBackground(Color.red);
            } else if (jHorarioInicial.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o horário de Inicio do Procedimento.");
                jHorarioInicial.requestFocus();
                jHorarioInicial.setBackground(Color.red);
            } else {
                objRegProc.setStatusLanc(jStatusLanc.getText());
                objRegProc.setDataLanc(jDataLanc.getDate());
                objRegProc.setHorarioInicial(jHorarioInicial.getText());
                objRegProc.setHorarioTermino(jHorarioTermino.getText());
                objRegProc.setResponsavel(jResponsavelRegistro.getText());
                objRegProc.setObservacao(jObservacao.getText());
                if (acao == 1) {
                    objRegProc.setUsuarioInsert(nameUser);
                    objRegProc.setDataInsert(dataModFinal);
                    objRegProc.setHorarioInsert(horaMov);
                    control.incluirRegProcedimento(objRegProc);
                    buscarCodigo();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 2) {
                    objRegProc.setUsuarioUp(nameUser);
                    objRegProc.setDataUp(dataModFinal);
                    objRegProc.setHorarioUp(horaMov);
                    objRegProc.setIdProc(Integer.valueOf(jIdLanc.getText()));
                    control.alterarRegProcedimento(objRegProc);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAjudaActionPerformed
        // TODO add your handling code here:
        pdf();
    }//GEN-LAST:event_jBtAjudaActionPerformed

    private void jBtNovaCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaCelaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimentoPavilhao);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimentoPavilhao) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 3;
                NovaCela();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtNovaCelaActionPerformed

    private void jBtAlterarCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarCelaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimentoPavilhao);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimentoPavilhao) && codAlterar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 4;
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                AlterarCela();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a alterar registro.");
        }
    }//GEN-LAST:event_jBtAlterarCelaActionPerformed

    private void jBtExcluirCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirCelaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimentoPavilhao);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimentoPavilhao) && codExcluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            verificarObjetos(); // Ainda não foi feito
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else if (jIdCela.getText().equals(codCelaObjeto)) {
                JOptionPane.showMessageDialog(rootPane, "Existe objetos sendo utilizado nesta Cela, não é permitido excluir.");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objItensProced.setIdItensPcip(idItem);
                    controle.excluirInternosCela(objItensProced); // Excluir os Internos referente a cela na tabela INTERNOSPROCEDIMENTOS
                    //
                    objItensProced.setIdItensIntProc(idItem);
                    controle.excluirPavilhaoCela(objItensProced); // Excluir as celas na tabela ITENSPCIP
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaPavilhaoCelasInternos("SELECT * FROM ITENSPCIP "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON ITENSPCIP.IdProc=PROCEDIMENTOS.IdProc "
                            + "INNER JOIN PAVILHAO "
                            + "ON ITENSPCIP.IdPav=PAVILHAO.IdPav "
                            + "INNER JOIN CELAS "
                            + "ON ITENSPCIP.IdCela=CELAS.IdCela "
                            + "WHERE ITENSPCIP.IdProc='" + jIdLanc.getText() + "'");
                    ExcluirCela();
                    JOptionPane.showMessageDialog(rootPane, "Registro excluído com successo.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a excluir registro.");
        }
    }//GEN-LAST:event_jBtExcluirCelaActionPerformed

    private void jBtSalvarCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarCelaActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoProcedimentoPavilhao);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoProcedimentoPavilhao) && codGravar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            if (jIdPav.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual é o pavilhão do procedimento.");
            } else if (jDescricaoRaio.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual é o pavilhão do procedimento.");
            } else if (jIdCela.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual é a cela para procedimento.");
            } else if (jDescricaoCela.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual é a cela para procedimento.");
            } else {
                objItensProced.setDataProc(jDataLanc.getDate());
                objItensProced.setIdProc(Integer.valueOf(jIdLanc.getText()));
                objItensProced.setDescricaoPavilhao(jDescricaoRaio.getText());
                objItensProced.setDescricaoCela(jDescricaoCela.getText());
                if (acao == 3) {
                    objItensProced.setUsuarioInsert(nameUser);
                    objItensProced.setDataInsert(dataModFinal);
                    objItensProced.setHorarioInsert(horaMov);
                    controle.incluirPavilhaoCela(objItensProced);
                    buscarCodigoCela();
                    //                
                    incluirInternosCelas(); // INCLUIR OS INTERNOS DA TABELA DO BANCO (INTERNOSPROCEDIMENTOS)
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaPavilhaoCelasInternos("SELECT * FROM ITENSPCIP "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON ITENSPCIP.IdProc=PROCEDIMENTOS.IdProc "
                            + "INNER JOIN PAVILHAO "
                            + "ON ITENSPCIP.IdPav=PAVILHAO.IdPav "
                            + "INNER JOIN CELAS "
                            + "ON ITENSPCIP.IdCela=CELAS.IdCela "
                            + "WHERE ITENSPCIP.IdProc='" + jIdLanc.getText() + "'");
                    SalvarCela();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objItensProced.setUsuarioUp(nameUser);
                    objItensProced.setDataUp(dataModFinal);
                    objItensProced.setHorarioUp(horaMov);
                    //
                    objItensProced.setIdProc(Integer.valueOf(jIdLanc.getText()));
                    objItensProced.setDescricaoPavilhao(jDescricaoPavilhao.getText());
                    objItensProced.setDescricaoCela(jDescricaoCela.getText());
                    objItensProced.setIdItensPcip(idItem);
                    controle.alterarPavilhaoCela(objItensProced); // Modifica a Tabela ITENSPCIP
                    //       
                    // Ainda não está funcionando
                    alterarInternosCelas(); // Alterar os internos das celas na tabela INTERNOSPROCEDIMENTOS               
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaPavilhaoCelasInternos("SELECT * FROM ITENSPCIP "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON ITENSPCIP.IdProc=PROCEDIMENTOS.IdProc "
                            + "INNER JOIN PAVILHAO "
                            + "ON ITENSPCIP.IdPav=PAVILHAO.IdPav "
                            + "INNER JOIN CELAS "
                            + "ON ITENSPCIP.IdCela=CELAS.IdCela "
                            + "WHERE ITENSPCIP.IdProc='" + jIdLanc.getText() + "'");
                    SalvarCela();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar registro.");
        }
    }//GEN-LAST:event_jBtSalvarCelaActionPerformed

    private void jBtCancelarCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarCelaActionPerformed
        // TODO add your handling code here:
        CancelarCela();
    }//GEN-LAST:event_jBtCancelarCelaActionPerformed

    private void jBtAuditoriaCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaCelaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaProcedimentoCelas objAudiProcCela = new TelaAuditoriaProcedimentoCelas();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudiProcCela);
        objAudiProcCela.show();
    }//GEN-LAST:event_jBtAuditoriaCelaActionPerformed

    private void jBtPesqPavilhaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqPavilhaoActionPerformed
        // TODO add your handling code here:
        TelaPesqPavilhaoProcedimento objPaviProc = new TelaPesqPavilhaoProcedimento();
        TelaModuloSeguranca.jPainelSeguranca.add(objPaviProc);
        objPaviProc.show();
    }//GEN-LAST:event_jBtPesqPavilhaoActionPerformed

    private void jBtPesqCelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCelaActionPerformed
        // TODO add your handling code here:         
        TelaPesqCelasProcedimento objCelasProc = new TelaPesqCelasProcedimento();
        TelaModuloSeguranca.jPainelSeguranca.add(objCelasProc);
        objCelasProc.show();
    }//GEN-LAST:event_jBtPesqCelaActionPerformed

    private void jTabelaPavilhaoCelasInternosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaPavilhaoCelasInternosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomePavilhao = "" + jTabelaPavilhaoCelasInternos.getValueAt(jTabelaPavilhaoCelasInternos.getSelectedRow(), 1);
            jDescricaoPavilhao.setText(nomePavilhao);
            String nomeCela = "" + jTabelaPavilhaoCelasInternos.getValueAt(jTabelaPavilhaoCelasInternos.getSelectedRow(), 2);
            jDescricaoCela.setText(nomeCela);
            // Habilitar os botões
            jBtNovaCela.setEnabled(!true);
            //  jBtAlterarCela.setEnabled(true); // Desabilitado por não está funcionando corretamente.
            jBtExcluirCela.setEnabled(true);
            jBtSalvarCela.setEnabled(!true);
            jBtCancelarCela.setEnabled(true);
            jBtAuditoriaCela.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSPCIP "
                        + "INNER JOIN PROCEDIMENTOS "
                        + "ON ITENSPCIP.IdProc=PROCEDIMENTOS.IdProc "
                        + "INNER JOIN PAVILHAO "
                        + "ON ITENSPCIP.IdPav=PAVILHAO.IdPav "
                        + "INNER JOIN CELAS "
                        + "ON ITENSPCIP.IdCela=CELAS.IdCela "
                        + "WHERE CELAS.EndCelaPav='" + jDescricaoCela.getText() + "'AND ITENSPCIP.IdProc='" + jIdLanc.getText() + "'");
                conecta.rs.first();
                jIdPav.setText(conecta.rs.getString("IdPav"));
                jDescricaoRaio.setText(conecta.rs.getString("DescricaoPav"));
                idItem = conecta.rs.getInt("IdItensPcip");
                jIdCela.setText(conecta.rs.getString("IdCela"));
                jDescricaoCela.setText(conecta.rs.getString("EndCelaPav"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem exibidos!!!" + ex);
            }
            preencherTabelaInternos("SELECT INTERNOSPROCEDIMENTOS.IdInternoCrc, "
                    + "PRONTUARIOSCRC.NomeInternoCrc,PRONTUARIOSCRC.MatriculaCrc "
                    + "FROM INTERNOSPROCEDIMENTOS "
                    + "INNER JOIN ITENSPCIP "
                    + "ON INTERNOSPROCEDIMENTOS.IdItensPcip=ITENSPCIP.IdItensPcip "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON INTERNOSPROCEDIMENTOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE INTERNOSPROCEDIMENTOS.IdProc='" + jIdLanc.getText() + "' "
                    + "AND ITENSPCIP.IdItensPcip='" + idItem + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaPavilhaoCelasInternosMouseClicked

    private void jBtNovoObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoObjetoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoObjetos);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoObjetos) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 5;
                NovoObjeto();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtNovoObjetoActionPerformed

    private void jBtAlterarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarObjetoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoObjetos);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoObjetos) && codAlterar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 6;
                AlterarObjeto();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a alterar registro.");
        }
    }//GEN-LAST:event_jBtAlterarObjetoActionPerformed

    private void jBtExcluirObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirObjetoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoObjetos);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoObjetos) && codExcluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser excluído, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objObjetos.setIdObjPro(Integer.valueOf(IdObjPro));
                    controleObj.excluirObjetoProcedimento(objObjetos);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaObjetosProcedimentos("SELECT * FROM ITENSOBJETOSPROCEDIMENTO "
                            + "INNER JOIN OBJETOSPROCEDIMENTOS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdObjeto=OBJETOSPROCEDIMENTOS.IdObjeto "
                            + "INNER JOIN CELAS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdCela=CELAS.IdCela "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                            + "WHERE ITENSOBJETOSPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'");
                    ExcluirObjeto();
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a excluir registro.");
        }
    }//GEN-LAST:event_jBtExcluirObjetoActionPerformed

    private void jBtSalvarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarObjetoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoObjetos);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoObjetos) && codGravar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            DecimalFormat valorReal = new DecimalFormat("###,##00.0");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jIdObjeto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o objeto encontrado.");
            } else if (jDescricaoObjeto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o objeto encontrado.");
            } else if (jQuantidade.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a quantidade de objetos encontrado.");
            } else if (jDescricaoCelaObjeto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe qual foi a cela encontrada o objeto.");
            } else {
                objObjetos.setIdProc(Integer.valueOf(jIdLanc.getText()));
                objObjetos.setDescricaoCela(jDescricaoCelaObjeto.getText());
                objObjetos.setDescricaoObjeto(jDescricaoObjeto.getText());
                objObjetos.setUnidadeObjeto((String) jComboBoxUnidade.getSelectedItem());
                try {
                    objObjetos.setQtde(valorReal.parse(jQuantidade.getText()).floatValue());
                } catch (ParseException ex) {
                }
                if (acao == 5) {
                    objObjetos.setUsuarioInsert(nameUser);
                    objObjetos.setDataInsert(dataModFinal);
                    objObjetos.setHorarioInsert(horaMov);
                    controleObj.incluirObjetoProcedimento(objObjetos);
                    objLog3();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaObjetosProcedimentos("SELECT * FROM ITENSOBJETOSPROCEDIMENTO "
                            + "INNER JOIN OBJETOSPROCEDIMENTOS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdObjeto=OBJETOSPROCEDIMENTOS.IdObjeto "
                            + "INNER JOIN CELAS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdCela=CELAS.IdCela "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                            + "WHERE ITENSOBJETOSPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    SalvarObjeto();
                }
                if (acao == 6) {
                    objObjetos.setUsuarioUp(nameUser);
                    objObjetos.setDataUp(dataModFinal);
                    objObjetos.setHorarioUp(horaMov);
                    //        
                    objObjetos.setIdObjPro(Integer.valueOf(IdObjPro));
                    controleObj.alterarObjetoProcedimento(objObjetos);
                    objLog3();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaObjetosProcedimentos("SELECT * FROM ITENSOBJETOSPROCEDIMENTO "
                            + "INNER JOIN OBJETOSPROCEDIMENTOS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdObjeto=OBJETOSPROCEDIMENTOS.IdObjeto "
                            + "INNER JOIN CELAS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdCela=CELAS.IdCela "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON ITENSOBJETOSPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                            + "WHERE ITENSOBJETOSPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    SalvarObjeto();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar registro.");
        }
    }//GEN-LAST:event_jBtSalvarObjetoActionPerformed

    private void jBtCancelarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarObjetoActionPerformed
        // TODO add your handling code here:
        CancelarObjeto();
    }//GEN-LAST:event_jBtCancelarObjetoActionPerformed

    private void jBtAuditoriaObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaObjetoActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaProcedimentoObjetos objAudiObjPro = new TelaAuditoriaProcedimentoObjetos();
        TelaModuloSeguranca.jPainelSeguranca.add(objAudiObjPro);
        objAudiObjPro.show();
    }//GEN-LAST:event_jBtAuditoriaObjetoActionPerformed

    private void jTabelaObjetosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaObjetosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeObjeto = "" + jTabelaObjetos.getValueAt(jTabelaObjetos.getSelectedRow(), 2);
            jDescricaoObjeto.setText(nomeObjeto);
            String idObjeto = "" + jTabelaObjetos.getValueAt(jTabelaObjetos.getSelectedRow(), 1);
            jIdObjeto.setText(idObjeto);
            String idObjetoPro = "" + jTabelaObjetos.getValueAt(jTabelaObjetos.getSelectedRow(), 0);
            IdObjPro = idObjetoPro;
            // Habilitar os botões
            jBtNovoObjeto.setEnabled(!true);
            jBtAlterarObjeto.setEnabled(true);
            jBtExcluirObjeto.setEnabled(true);
            jBtSalvarObjeto.setEnabled(!true);
            jBtCancelarObjeto.setEnabled(true);
            jBtAuditoriaObjeto.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSOBJETOSPROCEDIMENTO "
                        + "INNER JOIN OBJETOSPROCEDIMENTOS "
                        + "ON ITENSOBJETOSPROCEDIMENTO.IdObjeto=OBJETOSPROCEDIMENTOS.IdObjeto "
                        + "INNER JOIN CELAS "
                        + "ON ITENSOBJETOSPROCEDIMENTO.IdCela=CELAS.IdCela "
                        + "WHERE ITENSOBJETOSPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'AND ITENSOBJETOSPROCEDIMENTO.IdObjeto='" + jIdObjeto.getText() + "'");
                conecta.rs.first();
                IdObjPro = conecta.rs.getString("IdObjPro");
                jIdObjeto.setText(conecta.rs.getString("IdObjeto"));
                jComboBoxUnidade.setSelectedItem(conecta.rs.getString("Unid"));
                // Formata o valor para ser exibido na tela no formato BR                                                   
                qtdItem = conecta.rs.getFloat("Qtde");
                DecimalFormat vd = new DecimalFormat(",###0.00");
                String vlDeposito = vd.format(qtdItem);
                jQuantidade.setText(vlDeposito);
                jDescricaoObjeto.setText(conecta.rs.getString("DescricaoObjeto"));
                jDescricaoCelaObjeto.setText(conecta.rs.getString("EndCelaPav"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem exibidos!!!\nERRO: " + ex);
            }
        }
    }//GEN-LAST:event_jTabelaObjetosMouseClicked

    private void jBtPesObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesObjetoActionPerformed
        // TODO add your handling code here:
        TelaPesqObjetosProcedimento objObjetosProc = new TelaPesqObjetosProcedimento();
        TelaModuloSeguranca.jPainelSeguranca.add(objObjetosProc);
        objObjetosProc.show();
    }//GEN-LAST:event_jBtPesObjetoActionPerformed

    private void jBtPesqCelaInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCelaInternoActionPerformed
        // TODO add your handling code here:
        TelaPesqCelasObjetoProcedimento objCelaProc = new TelaPesqCelasObjetoProcedimento();
        TelaModuloSeguranca.jPainelSeguranca.add(objCelaProc);
        objCelaProc.show();
    }//GEN-LAST:event_jBtPesqCelaInternoActionPerformed

    private void jBtPesqFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqFuncActionPerformed
        // TODO add your handling code here:
        TelaPesqColaboradorProcedimentoAgentes objColaboraAgente = new TelaPesqColaboradorProcedimentoAgentes();
        TelaModuloSeguranca.jPainelSeguranca.add(objColaboraAgente);
        objColaboraAgente.show();
    }//GEN-LAST:event_jBtPesqFuncActionPerformed

    private void jTabelaAgentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAgentesMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeCargo = "" + jTabelaAgentes.getValueAt(jTabelaAgentes.getSelectedRow(), 3);
            jCargoFunc.setText(nomeCargo);
            String nomeColaborador = "" + jTabelaAgentes.getValueAt(jTabelaAgentes.getSelectedRow(), 2);
            jNomeColaboradorProcedimento.setText(nomeColaborador);
            String idFunc = "" + jTabelaAgentes.getValueAt(jTabelaAgentes.getSelectedRow(), 1);
            jIdFunc.setText(idFunc);
            String idApoio = "" + jTabelaAgentes.getValueAt(jTabelaAgentes.getSelectedRow(), 0);
            IdApoio = idApoio;
            // Habilitar os botões
            jBtNovoAgente.setEnabled(!true);
            jBtAlterarAgente.setEnabled(true);
            jBtExcluirAgente.setEnabled(true);
            jBtSalvarAgente.setEnabled(!true);
            jBtCancelarAgente.setEnabled(true);
            jBtAuditoriaAgente.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM APOIOPROCEDIMENTO "
                        + "INNER JOIN PROCEDIMENTOS "
                        + "ON APOIOPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                        + "INNER JOIN COLABORADOR "
                        + "ON APOIOPROCEDIMENTO.IdFunc=COLABORADOR.IdFunc "
                        + "INNER JOIN CARGOS "
                        + "ON COLABORADOR.IdCargo=CARGOS.IdCargo "
                        + "WHERE APOIOPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "' "
                        + "AND APOIOPROCEDIMENTO.IdFunc='" + jIdFunc.getText() + "'");
                conecta.rs.first();
                IdApoio = conecta.rs.getString("IdApoio");
                jIdFunc.setText(conecta.rs.getString("IdFunc"));
                jComboBoxTipoAuxilio.setSelectedItem(conecta.rs.getString("TipoAuxilio"));
                jCargoFunc.setText(conecta.rs.getString("NomeCargo"));
                jNomeColaboradorProcedimento.setText(conecta.rs.getString("NomeFunc"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não existe dados a serem exibidos!!!\nERRO: " + ex);
            }
        }
    }//GEN-LAST:event_jTabelaAgentesMouseClicked

    private void jBtNovoAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoAgenteActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoAgentes);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoAgentes) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 7;
                NovoAgente();
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtNovoAgenteActionPerformed

    private void jBtAlterarAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarAgenteActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoAgentes);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoAgentes) && codAlterar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                acao = 8;
                AlterarAgente();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a alterar registro.");
        }
    }//GEN-LAST:event_jBtAlterarAgenteActionPerformed

    private void jBtExcluirAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirAgenteActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoAgentes);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoAgentes) && codExcluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            objRegProc.setStatusLanc(jStatusLanc.getText());
            if (jStatusLanc.getText().equals("FINALIZADO")) {
                JOptionPane.showMessageDialog(rootPane, "Esse Registro não poderá ser alterado, o mesmo encontra-se FINALIZADO");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objApoio.setIdApoio(Integer.valueOf(IdApoio));
                    controleApoioAgentes.excluirAgentesApoio(objApoio);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaAgentesApoioProcedimentos("SELECT * FROM APOIOPROCEDIMENTO "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON APOIOPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                            + "INNER JOIN COLABORADOR "
                            + "ON APOIOPROCEDIMENTO.IdFunc=COLABORADOR.IdFunc "
                            + "INNER JOIN CARGOS "
                            + "ON COLABORADOR.IdCargo=CARGOS.IdCargo "
                            + "WHERE APOIOPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    ExcluirAgente();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a excluir registro.");
        }
    }//GEN-LAST:event_jBtExcluirAgenteActionPerformed

    private void jBtSalvarAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarAgenteActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaRegistroObjetoAgentes);
        if (codigoUser == codUserAcesso && nomeTela.equals(telaRegistroObjetoAgentes) && codGravar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            if (jIdFunc.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o agente do procedimento.");
            } else if (jNomeColaboradorProcedimento.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o agente do procedimento.");
            } else if (jComboBoxTipoAuxilio.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe o tipo de auxilio do procedimento.");
            } else {
                objApoio.setIdProc(Integer.valueOf(jIdLanc.getText()));
                objApoio.setNomeColaborador(jNomeColaboradorProcedimento.getText());
                objApoio.setTipoAuxilio((String) jComboBoxTipoAuxilio.getSelectedItem());
                if (acao == 7) {
                    objApoio.setUsuarioInsert(nameUser);
                    objApoio.setDataInsert(dataModFinal);
                    objApoio.setHorarioInsert(horaMov);
                    //
                    controleApoioAgentes.incluirAgentesApoio(objApoio);
                    objLog4();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaAgentesApoioProcedimentos("SELECT * FROM APOIOPROCEDIMENTO "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON APOIOPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                            + "INNER JOIN COLABORADOR "
                            + "ON APOIOPROCEDIMENTO.IdFunc=COLABORADOR.IdFunc "
                            + "INNER JOIN CARGOS "
                            + "ON COLABORADOR.IdCargo=CARGOS.IdCargo "
                            + "WHERE APOIOPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'");
                    SalvarAgente();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 8) {
                    objApoio.setUsuarioUp(nameUser);
                    objApoio.setDataUp(dataModFinal);
                    objApoio.setHorarioUp(horaMov);
                    //
                    objApoio.setIdApoio(Integer.valueOf(IdApoio));
                    controleApoioAgentes.alterarAgentesApoio(objApoio);
                    objLog4();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaAgentesApoioProcedimentos("SELECT * FROM APOIOPROCEDIMENTO "
                            + "INNER JOIN PROCEDIMENTOS "
                            + "ON APOIOPROCEDIMENTO.IdProc=PROCEDIMENTOS.IdProc "
                            + "INNER JOIN COLABORADOR "
                            + "ON APOIOPROCEDIMENTO.IdFunc=COLABORADOR.IdFunc "
                            + "INNER JOIN CARGOS "
                            + "ON COLABORADOR.IdCargo=CARGOS.IdCargo "
                            + "WHERE APOIOPROCEDIMENTO.IdProc='" + jIdLanc.getText() + "'");
                    SalvarAgente();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a gravar registro.");
        }
    }//GEN-LAST:event_jBtSalvarAgenteActionPerformed

    private void jBtCancelarAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarAgenteActionPerformed
        // TODO add your handling code here:
        CancelarAgente();
    }//GEN-LAST:event_jBtCancelarAgenteActionPerformed

    private void jBtAuditoriaAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaAgenteActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaProcedimentoApoio objApoio = new TelaAuditoriaProcedimentoApoio();
        TelaModuloSeguranca.jPainelSeguranca.add(objApoio);
        objApoio.show();
    }//GEN-LAST:event_jBtAuditoriaAgenteActionPerformed

    private void jBtImpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImpressaoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jBtImpressaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAjuda;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarAgente;
    private javax.swing.JButton jBtAlterarCela;
    private javax.swing.JButton jBtAlterarObjeto;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaAgente;
    private javax.swing.JButton jBtAuditoriaCela;
    private javax.swing.JButton jBtAuditoriaObjeto;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarAgente;
    private javax.swing.JButton jBtCancelarCela;
    private javax.swing.JButton jBtCancelarObjeto;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirAgente;
    private javax.swing.JButton jBtExcluirCela;
    private javax.swing.JButton jBtExcluirObjeto;
    private javax.swing.JButton jBtFinalizar;
    private javax.swing.JButton jBtImpressao;
    private javax.swing.JButton jBtNovaCela;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoAgente;
    private javax.swing.JButton jBtNovoObjeto;
    private javax.swing.JButton jBtPesObjeto;
    private javax.swing.JButton jBtPesqCela;
    private javax.swing.JButton jBtPesqCelaInterno;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqDatas;
    private javax.swing.JButton jBtPesqDescricaoPavilha;
    private javax.swing.JButton jBtPesqFunc;
    private javax.swing.JButton jBtPesqPavilhao;
    private javax.swing.JButton jBtPesqUsuarioResponsavel;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarAgente;
    private javax.swing.JButton jBtSalvarCela;
    private javax.swing.JButton jBtSalvarObjeto;
    public static javax.swing.JTextField jCargoFunc;
    private javax.swing.JCheckBox jCheckBoxTodos;
    private javax.swing.JComboBox jComboBoxTipoAuxilio;
    private javax.swing.JComboBox jComboBoxUnidade;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jDescricaoCela;
    public static javax.swing.JTextField jDescricaoCelaObjeto;
    public static javax.swing.JTextField jDescricaoObjeto;
    private javax.swing.JTextField jDescricaoPavilhao;
    public static javax.swing.JTextField jDescricaoRaio;
    private javax.swing.JFormattedTextField jHorarioInicial;
    private javax.swing.JFormattedTextField jHorarioTermino;
    public static javax.swing.JTextField jIdCela;
    public static javax.swing.JTextField jIdFunc;
    public static javax.swing.JTextField jIdLanc;
    public static javax.swing.JTextField jIdObjeto;
    public static javax.swing.JTextField jIdPav;
    private javax.swing.JTextField jIdPesqCodigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeColaboradorProcedimento;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jQuantidade;
    public static javax.swing.JTextField jResponsavelRegistro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaAgentes;
    public static javax.swing.JTable jTabelaInternos;
    private javax.swing.JTable jTabelaObjetos;
    private javax.swing.JTable jTabelaPavilhaoCelasInternos;
    private javax.swing.JTable jTabelaRegistroProcedimentos;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    //SELECT CELAS.IdCela,CELAS.EndCelaPav,PAVILHAO.DescricaoPav,PRONTUARIOSCRC.MatriculaCrc,PRONTUARIOSCRC.IdInternoCrc,PRONTUARIOSCRC.NomeInternoCrc FROM CELAS INNER JOIN PAVILHAO ON CELAS.IdPav=PAVILHAO.IdPav INNER JOIN ITENSLOCACAOINTERNO ON CELAS.IdCela=ITENSLOCACAOINTERNO.IdCela INNER JOIN PRONTUARIOSCRC ON ITENSLOCACAOINTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc
    public void formatarCampos() {
        jResponsavelRegistro.setDocument(new LimiteDigitosAlfa(63));
    }

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jHorarioInicial.setBackground(Color.white);
        jHorarioTermino.setBackground(Color.white);
        jResponsavelRegistro.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
        //
        jIdPav.setBackground(Color.white);
        jDescricaoRaio.setBackground(Color.white);
        jIdCela.setBackground(Color.white);
        jDescricaoCela.setBackground(Color.white);
        //
        jIdObjeto.setBackground(Color.white);
        jComboBoxUnidade.setBackground(Color.white);
        jQuantidade.setBackground(Color.white);
        jDescricaoCelaObjeto.setBackground(Color.white);
        jDescricaoObjeto.setBackground(Color.white);
        //
        jIdFunc.setBackground(Color.white);
        jCargoFunc.setBackground(Color.white);
        jNomeColaboradorProcedimento.setBackground(Color.white);
        jComboBoxTipoAuxilio.setBackground(Color.white);
    }

    public void Novo() {
        jIdLanc.setText("");
        jStatusLanc.setText("ABERTO");
        jDataLanc.setCalendar(Calendar.getInstance());
        jHorarioInicial.setText(jHoraSistema.getText());
        jHorarioTermino.setText("00:00");
        jResponsavelRegistro.setText("");
        jObservacao.setText("");
        //              
        jDataLanc.setEnabled(true);
        jHorarioInicial.setEnabled(true);
        jHorarioTermino.setEnabled(true);
        jBtPesqUsuarioResponsavel.setEnabled(true);
        jObservacao.setEnabled(true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jCargoFunc.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
    }

    public void Alterar() {
        //              
        jDataLanc.setEnabled(true);
        jHorarioInicial.setEnabled(true);
        jHorarioTermino.setEnabled(true);
        jBtPesqUsuarioResponsavel.setEnabled(true);
        jObservacao.setEnabled(true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jCargoFunc.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void Excluir() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jDataLanc.setDate(null);
        jHorarioInicial.setText("");
        jHorarioTermino.setText("");
        jResponsavelRegistro.setText("");
        jObservacao.setText("");
        //              
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void Salvar() {
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            jIdLanc.setText("");
            jStatusLanc.setText("");
            jDataLanc.setDate(null);
            jHorarioInicial.setText("");
            jHorarioTermino.setText("");
            jResponsavelRegistro.setText("");
            jObservacao.setText("");
            //              
            jDataLanc.setEnabled(!true);
            jHorarioInicial.setEnabled(!true);
            jHorarioTermino.setEnabled(!true);
            jBtPesqUsuarioResponsavel.setEnabled(!true);
            jObservacao.setEnabled(!true);
            // Botões da Aba Principal
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jIdPav.setText("");
            jDescricaoRaio.setText("");
            jIdCela.setText("");
            jDescricaoCela.setText("");
            // limpar a tabela de internos como comando sql
            jIdPav.setEnabled(!true);
            jDescricaoRaio.setEnabled(!true);
            jIdCela.setEnabled(!true);
            jDescricaoCela.setEnabled(!true);
            jBtPesqPavilhao.setEnabled(!true);
            jBtPesqCela.setEnabled(!true);
            // Limpar tabela de celas
            // Botões da Aba Pavilhoa/Cela/Internos
            jBtNovaCela.setEnabled(!true);
            jBtAlterarCela.setEnabled(!true);
            jBtExcluirCela.setEnabled(!true);
            jBtSalvarCela.setEnabled(!true);
            jBtCancelarCela.setEnabled(!true);
            jBtAuditoriaCela.setEnabled(!true);
            // Limpar campos da Aba Objetos
            jIdObjeto.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jQuantidade.setText("");
            jDescricaoCelaObjeto.setText("");
            jDescricaoObjeto.setText("");
            //
            jIdObjeto.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jQuantidade.setEnabled(!true);
            jDescricaoCelaObjeto.setEnabled(!true);
            jDescricaoObjeto.setEnabled(!true);
            jBtPesObjeto.setEnabled(!true);
            jBtPesqCelaInterno.setEnabled(!true);
            // botões da Aba Objetos
            jBtNovoObjeto.setEnabled(!true);
            jBtAlterarObjeto.setEnabled(!true);
            jBtExcluirObjeto.setEnabled(!true);
            jBtSalvarObjeto.setEnabled(!true);
            jBtCancelarObjeto.setEnabled(!true);
            jBtAuditoriaObjeto.setEnabled(!true);
            //
            jIdFunc.setText("");
            jNomeColaboradorProcedimento.setText("");
            jComboBoxTipoAuxilio.setSelectedItem(null);
            //
            jIdFunc.setEnabled(!true);
            jNomeColaboradorProcedimento.setEnabled(!true);
            jComboBoxTipoAuxilio.setEnabled(!true);
            jBtPesqFunc.setEnabled(!true);
            // Botões da Aba Agentes
            jBtNovoAgente.setEnabled(!true);
            jBtAlterarAgente.setEnabled(!true);
            jBtExcluirAgente.setEnabled(!true);
            jBtSalvarAgente.setEnabled(!true);
            jBtCancelarAgente.setEnabled(!true);
            jBtAuditoriaAgente.setEnabled(!true);
            // limpar a tabela Agentes
        } else {
            //              
            jDataLanc.setEnabled(!true);
            jHorarioInicial.setEnabled(!true);
            jHorarioTermino.setEnabled(!true);
            jBtPesqUsuarioResponsavel.setEnabled(!true);
            jObservacao.setEnabled(!true);
            // Botões da Aba Principal
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtFinalizar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jIdPav.setText("");
            jDescricaoRaio.setText("");
            jIdCela.setText("");
            jDescricaoCela.setText("");
            // limpar a tabela de internos como comando sql
            jIdPav.setEnabled(!true);
            jDescricaoRaio.setEnabled(!true);
            jIdCela.setEnabled(!true);
            jDescricaoCela.setEnabled(!true);
            jBtPesqPavilhao.setEnabled(!true);
            jBtPesqCela.setEnabled(!true);
            // Limpar tabela de celas
            // Botões da Aba Pavilhoa/Cela/Internos
            jBtNovaCela.setEnabled(!true);
            jBtAlterarCela.setEnabled(!true);
            jBtExcluirCela.setEnabled(!true);
            jBtSalvarCela.setEnabled(!true);
            jBtCancelarCela.setEnabled(!true);
            jBtAuditoriaCela.setEnabled(!true);
            // Limpar campos da Aba Objetos
            jIdObjeto.setText("");
            jComboBoxUnidade.setSelectedItem(null);
            jQuantidade.setText("");
            jDescricaoCelaObjeto.setText("");
            jDescricaoObjeto.setText("");
            //
            jIdObjeto.setEnabled(!true);
            jComboBoxUnidade.setEnabled(!true);
            jQuantidade.setEnabled(!true);
            jDescricaoCelaObjeto.setEnabled(!true);
            jDescricaoObjeto.setEnabled(!true);
            jBtPesObjeto.setEnabled(!true);
            jBtPesqCelaInterno.setEnabled(!true);
            // botões da Aba Objetos
            jBtNovoObjeto.setEnabled(!true);
            jBtAlterarObjeto.setEnabled(!true);
            jBtExcluirObjeto.setEnabled(!true);
            jBtSalvarObjeto.setEnabled(!true);
            jBtCancelarObjeto.setEnabled(!true);
            jBtAuditoriaObjeto.setEnabled(!true);
            //
            jIdFunc.setText("");
            jNomeColaboradorProcedimento.setText("");
            jComboBoxTipoAuxilio.setSelectedItem(null);
            //
            jIdFunc.setEnabled(!true);
            jNomeColaboradorProcedimento.setEnabled(!true);
            jComboBoxTipoAuxilio.setEnabled(!true);
            jBtPesqFunc.setEnabled(!true);
            // Botões da Aba Agentes
            jBtNovoAgente.setEnabled(!true);
            jBtAlterarAgente.setEnabled(!true);
            jBtExcluirAgente.setEnabled(!true);
            jBtSalvarAgente.setEnabled(!true);
            jBtCancelarAgente.setEnabled(!true);
            jBtAuditoriaAgente.setEnabled(!true);
            // limpar a tabela Agentes
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PROCEDIMENTOS");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdProc"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void Finalizar() {
        statusMov = "Finalizou";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        String statusEntrada = "FINALIZADO";
        JOptionPane.showMessageDialog(rootPane, "Se esse registro for finalizado, você não poderá\nmais excluir ou alterar.");
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente FINALIZAR o registro selecionado?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            objRegProc.setStatusLanc(statusEntrada);
            objRegProc.setIdProc(Integer.parseInt(jIdLanc.getText()));
            control.finalizarRegProcedimento(objRegProc);
            jStatusLanc.setText(statusEntrada);
            objLog();
            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            JOptionPane.showMessageDialog(rootPane, "Registro FINALIZADO com sucesso !!!");
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtFinalizar.setEnabled(!true);
        }
    }

    public void verificarRegistros() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSPCIP WHERE IdProc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codEntrada = conecta.rs.getString("IdProc");
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void verificarAgente() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM APOIOPROCEDIMENTO WHERE IdProc='" + jIdLanc.getText() + "'");
            conecta.rs.first();
            codProcApoio = conecta.rs.getString("IdProc");
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void NovaCela() {
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // Limpa a tabela   
        preencherTabelaInternos("SELECT ITENSLOCACAOINTERNO.IdInternoCrc,PRONTUARIOSCRC.NomeInternoCrc,PRONTUARIOSCRC.MatriculaCrc "
                + "FROM ITENSLOCACAOINTERNO "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ITENSLOCACAOINTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE IdCela='" + jIdCela.getText() + "'");
        //
        jBtPesqPavilhao.setEnabled(true);
        jBtPesqCela.setEnabled(true);
        //
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(true);
        jBtCancelarCela.setEnabled(true);
        jBtAuditoriaCela.setEnabled(!true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //      
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void AlterarCela() {
        //
        jBtPesqPavilhao.setEnabled(true);
        jBtPesqCela.setEnabled(true);
        //
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(true);
        jBtCancelarCela.setEnabled(true);
        jBtAuditoriaCela.setEnabled(!true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //      
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void ExcluirCela() {
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        //  Limpa a tabela
        preencherTabelaInternos("SELECT ITENSLOCACAOINTERNO.IdInternoCrc,PRONTUARIOSCRC.NomeInternoCrc,PRONTUARIOSCRC.MatriculaCrc "
                + "FROM ITENSLOCACAOINTERNO "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ITENSLOCACAOINTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE IdCela='" + jIdCela.getText() + "'");
        //
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        //
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //      
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void SalvarCela() {
        //
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        //
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void CancelarCela() {
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        //  // Limpa a tabela
        preencherTabelaInternos("SELECT ITENSLOCACAOINTERNO.IdInternoCrc,PRONTUARIOSCRC.NomeInternoCrc,PRONTUARIOSCRC.MatriculaCrc "
                + "FROM ITENSLOCACAOINTERNO "
                + "INNER JOIN PRONTUARIOSCRC "
                + "ON ITENSLOCACAOINTERNO.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                + "WHERE IdCela='" + jIdCela.getText() + "'");
        //
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        //
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //      
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        // limpar a tabela Agentes
    }

    public void buscarCodigoCela() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSPCIP");
            conecta.rs.last();
            codCela = conecta.rs.getInt("IdItensPcip");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel obter o código do registro.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void incluirInternosCelas() {

        for (int i = 0; i < jTabelaInternos.getRowCount(); i++) {
            objItensProced.setIdProc(Integer.valueOf(jIdLanc.getText()));
            objItensProced.setIdItensIntProc(objItensProced.getIdItensPcip());
            objItensProced.setIdCela(Integer.valueOf(jIdCela.getText()));
            objItensProced.setIdItensPcip(codCela);
            objItensProced.setIdInternoCrc((int) jTabelaInternos.getValueAt(i, 0));
            objItensProced.setNomeInternoCrc((String) jTabelaInternos.getValueAt(i, 1));
            //
            controle.incluirInternosCela(objItensProced); // Tabela de INTERNOSPROCEDIMENTOS
        }
    }

    public void alterarInternosCelas() {

        for (int i = 0; i < jTabelaInternos.getRowCount(); i++) {
            objItensProced.setIdProc(Integer.valueOf(jIdLanc.getText()));
            objItensProced.setIdItensPcip(idItem);
            objItensProced.setIdInternoCrc((int) jTabelaInternos.getValueAt(i, 0));
            objItensProced.setNomeInternoCrc((String) jTabelaInternos.getValueAt(i, 1));
            controle.alterarInternosCela(objItensProced); // Tabela de INTERNOSPROCEDIMENTOS
        }
    }

    public void NovoObjeto() {
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jBtPesObjeto.setEnabled(true);
        jBtPesqCelaInterno.setEnabled(true);
        jComboBoxUnidade.setEnabled(true);
        jQuantidade.setEnabled(true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(true);
        jBtCancelarObjeto.setEnabled(true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        //
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        //
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // Aba Agentes
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
    }

    public void AlterarObjeto() {
        //
        jBtPesObjeto.setEnabled(true);
        jBtPesqCelaInterno.setEnabled(true);
        jComboBoxUnidade.setEnabled(true);
        jQuantidade.setEnabled(true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(true);
        jBtCancelarObjeto.setEnabled(true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        //
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        //
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // Aba Agentes
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
    }

    public void ExcluirObjeto() {
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        //
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        //
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        // Aba Agentes
        jIdFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
    }

    public void SalvarObjeto() {
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        // Botões da Cela/Pavilhão
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
    }

    public void CancelarObjeto() {
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
        // Botões da Cela/Pavilhão
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
    }

    // Verificar se existe objetos associados as celas.
    public void verificarObjetos() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSOBJETOSPROCEDIMENTO WHERE IdCela='" + jIdCela.getText() + "'");
            conecta.rs.first();
            codCelaObjeto = conecta.rs.getString("IdCela");
        } catch (Exception e) {
            // JOptionPane.showMessageDialog(rootPane, "Não foi possível verificar o objeto.\nERRO: " + e);
        }
        conecta.desconecta();
    }

    public void NovoAgente() {
        jIdFunc.setText("");
        jCargoFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem("Plantão");
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(true);
        jBtPesqFunc.setEnabled(true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(true);
        jBtCancelarAgente.setEnabled(true);
        jBtAuditoriaAgente.setEnabled(!true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void AlterarAgente() {
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(true);
        jBtPesqFunc.setEnabled(true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(!true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(true);
        jBtCancelarAgente.setEnabled(true);
        jBtAuditoriaAgente.setEnabled(!true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(!true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(!true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void ExcluirAgente() {
        jIdFunc.setText("");
        jCargoFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(true);
        jBtPesqFunc.setEnabled(true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(!true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void SalvarAgente() {
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void CancelarAgente() {
        jIdFunc.setText("");
        jCargoFunc.setText("");
        jNomeColaboradorProcedimento.setText("");
        jComboBoxTipoAuxilio.setSelectedItem(null);
        //
        jIdFunc.setEnabled(!true);
        jNomeColaboradorProcedimento.setEnabled(!true);
        jComboBoxTipoAuxilio.setEnabled(!true);
        jBtPesqFunc.setEnabled(!true);
        // Botões da Aba Agentes
        jBtNovoAgente.setEnabled(true);
        jBtAlterarAgente.setEnabled(!true);
        jBtExcluirAgente.setEnabled(!true);
        jBtSalvarAgente.setEnabled(!true);
        jBtCancelarAgente.setEnabled(!true);
        jBtAuditoriaAgente.setEnabled(true);
        //
        jDataLanc.setEnabled(!true);
        jHorarioInicial.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jBtPesqUsuarioResponsavel.setEnabled(!true);
        jObservacao.setEnabled(!true);
        // Botões da Aba Principal
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtFinalizar.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jIdPav.setText("");
        jDescricaoRaio.setText("");
        jIdCela.setText("");
        jDescricaoCela.setText("");
        // limpar a tabela de internos como comando sql
        jIdPav.setEnabled(!true);
        jDescricaoRaio.setEnabled(!true);
        jIdCela.setEnabled(!true);
        jDescricaoCela.setEnabled(!true);
        jBtPesqPavilhao.setEnabled(!true);
        jBtPesqCela.setEnabled(!true);
        // Limpar tabela de celas
        // Botões da Aba Pavilhoa/Cela/Internos
        jBtNovaCela.setEnabled(true);
        jBtAlterarCela.setEnabled(!true);
        jBtExcluirCela.setEnabled(!true);
        jBtSalvarCela.setEnabled(!true);
        jBtCancelarCela.setEnabled(!true);
        jBtAuditoriaCela.setEnabled(!true);
        // Limpar campos da Aba Objetos
        jIdObjeto.setText("");
        jComboBoxUnidade.setSelectedItem(null);
        jQuantidade.setText("");
        jDescricaoCelaObjeto.setText("");
        jDescricaoObjeto.setText("");
        //
        jIdObjeto.setEnabled(!true);
        jComboBoxUnidade.setEnabled(!true);
        jQuantidade.setEnabled(!true);
        jDescricaoCelaObjeto.setEnabled(!true);
        jDescricaoObjeto.setEnabled(!true);
        jBtPesObjeto.setEnabled(!true);
        jBtPesqCelaInterno.setEnabled(!true);
        // botões da Aba Objetos
        jBtNovoObjeto.setEnabled(true);
        jBtAlterarObjeto.setEnabled(!true);
        jBtExcluirObjeto.setEnabled(!true);
        jBtSalvarObjeto.setEnabled(!true);
        jBtCancelarObjeto.setEnabled(!true);
        jBtAuditoriaObjeto.setEnabled(!true);
    }

    public void preencherTabelaEntradaObjetos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data ", "Status", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                dataBrasil = conecta.rs.getString("DataLanc");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela 
                dados.add(new Object[]{conecta.rs.getInt("IdProc"), dataBrasil, conecta.rs.getString("StatusLanc"), conecta.rs.getString("Observacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaRegistroProcedimentos.setModel(modelo);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(3).setPreferredWidth(320);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaRegistroProcedimentos.getTableHeader().setReorderingAllowed(false);
        jTabelaRegistroProcedimentos.setAutoResizeMode(jTabelaRegistroProcedimentos.AUTO_RESIZE_OFF);
        jTabelaRegistroProcedimentos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaProcedimentos();
        conecta.desconecta();
    }

    public void limparTabelaRegistroProcedimentos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data ", "Status", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaRegistroProcedimentos.setModel(modelo);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(3).setPreferredWidth(320);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaRegistroProcedimentos.getTableHeader().setReorderingAllowed(false);
        jTabelaRegistroProcedimentos.setAutoResizeMode(jTabelaRegistroProcedimentos.AUTO_RESIZE_OFF);
        jTabelaRegistroProcedimentos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaProcedimentos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaRegistroProcedimentos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaPavilhaoCelasInternos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Pavilhão ", "Celas"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdItensPcip"), conecta.rs.getString("DescricaoPav"), conecta.rs.getString("EndCelaPav")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPavilhaoCelasInternos.setModel(modelo);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(2).setPreferredWidth(290);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPavilhaoCelasInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPavilhaoCelasInternos.setAutoResizeMode(jTabelaPavilhaoCelasInternos.AUTO_RESIZE_OFF);
        jTabelaPavilhaoCelasInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaPavilhaoCelas();
        conecta.desconecta();
    }

    public void limparTabelaPavilhaoCelasInternos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Pavilhão ", "Celas"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPavilhaoCelasInternos.setModel(modelo);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(2).setPreferredWidth(290);
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPavilhaoCelasInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaPavilhaoCelasInternos.setAutoResizeMode(jTabelaPavilhaoCelasInternos.AUTO_RESIZE_OFF);
        jTabelaPavilhaoCelasInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaPavilhaoCelas() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPavilhaoCelasInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void preencherTabelaInternos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome Completo do Interno", "Matricula"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), conecta.rs.getString("MatriculaCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternos.setModel(modelo);
        jTabelaInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTabelaInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaInternos.setAutoResizeMode(jTabelaInternos.AUTO_RESIZE_OFF);
        jTabelaInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaInternos();
        conecta.desconecta();
    }

    public void limparTabelaInternos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome Completo do Interno", "Matricula"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaInternos.setModel(modelo);
        jTabelaInternos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaInternos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTabelaInternos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaInternos.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaInternos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaInternos.getTableHeader().setReorderingAllowed(false);
        jTabelaInternos.setAutoResizeMode(jTabelaInternos.AUTO_RESIZE_OFF);
        jTabelaInternos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaInternos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaInternos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaInternos.getColumnModel().getColumn(2).setCellRenderer(direita);
    }

    public void preencherTabelaObjetosProcedimentos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Descrição do Objeto", "Qtde.", "Cela"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                qtdItem = conecta.rs.getFloat("Qtde");
                DecimalFormat vi = new DecimalFormat(",###0.00");
                String vqtdItem = vi.format(qtdItem);
                qtdItemTab = vqtdItem;
                dados.add(new Object[]{conecta.rs.getString("IdObjPro"), conecta.rs.getString("IdObjeto"), conecta.rs.getString("DescricaoObjeto"), qtdItemTab, conecta.rs.getString("EndCelaPav")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaObjetos.setModel(modelo);
        jTabelaObjetos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaObjetos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaObjetos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaObjetos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaObjetos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaObjetos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaObjetos.getTableHeader().setReorderingAllowed(false);
        jTabelaObjetos.setAutoResizeMode(jTabelaObjetos.AUTO_RESIZE_OFF);
        jTabelaObjetos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaObjetos();
        conecta.desconecta();
    }

    public void limparTabelaObjetosProcedimentos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Descrição do Objeto", "Qtde.", "Cela"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaObjetos.setModel(modelo);
        jTabelaObjetos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaObjetos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaObjetos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaObjetos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaObjetos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaObjetos.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaObjetos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaObjetos.getTableHeader().setReorderingAllowed(false);
        jTabelaObjetos.setAutoResizeMode(jTabelaObjetos.AUTO_RESIZE_OFF);
        jTabelaObjetos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaObjetos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaObjetos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaObjetos.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaObjetos.getColumnModel().getColumn(3).setCellRenderer(direita);
    }

    public void preencherTabelaAgentesApoioProcedimentos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código ", "Nome do Colaborador", "Cargo", "Tipo Auxilio"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getString("IdApoio"), conecta.rs.getString("IdFunc"), conecta.rs.getString("NomeFunc"), conecta.rs.getString("NomeCargo"), conecta.rs.getString("TipoAuxilio")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgentes.setModel(modelo);
        jTabelaAgentes.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgentes.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaAgentes.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaAgentes.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(3).setPreferredWidth(170);
        jTabelaAgentes.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaAgentes.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgentes.getTableHeader().setReorderingAllowed(false);
        jTabelaAgentes.setAutoResizeMode(jTabelaAgentes.AUTO_RESIZE_OFF);
        jTabelaAgentes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAgentes();
        conecta.desconecta();
    }

    public void limparTabelaAgentes() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código ", "Nome do Colaborador", "Cargo", "Tipo Auxilio"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAgentes.setModel(modelo);
        jTabelaAgentes.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAgentes.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaAgentes.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTabelaAgentes.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(3).setPreferredWidth(170);
        jTabelaAgentes.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAgentes.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTabelaAgentes.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAgentes.getTableHeader().setReorderingAllowed(false);
        jTabelaAgentes.setAutoResizeMode(jTabelaAgentes.AUTO_RESIZE_OFF);
        jTabelaAgentes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaAgentes() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAgentes.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAgentes.getColumnModel().getColumn(1).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog3() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela3);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog4() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela4);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    // Abrir arquivo de ajuda no formato PDF
    public void pdf() {
        File AjudaPDF = new File("C://SysConp//Manuais//ApoioProcedimento.pdf");
        try {
            //import java.awt.Desktop;
            if (AjudaPDF.exists()) {
                Desktop.getDesktop().open(AjudaPDF);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Arquivo ou Diretorio não existe.");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void buscarAcessoUsuario(String nomeTelaSeguranca) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUser = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUser + "'");
            conecta.rs.first();
            codigoUserGroup = conecta.rs.getInt("IdUsuario");
            codigoGrupo = conecta.rs.getInt("IdGrupo");
            nomeGrupo = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUser + "' "
                    + "AND NomeTela='" + nomeTelaSeguranca + "'");
            conecta.rs.first();
            codUserAcesso = conecta.rs.getInt("IdUsuario");
            codAbrir = conecta.rs.getInt("Abrir");
            codIncluir = conecta.rs.getInt("Incluir");
            codAlterar = conecta.rs.getInt("Alterar");
            codExcluir = conecta.rs.getInt("Excluir");
            codGravar = conecta.rs.getInt("Gravar");
            codConsultar = conecta.rs.getInt("Consultar");
            nomeTela = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
