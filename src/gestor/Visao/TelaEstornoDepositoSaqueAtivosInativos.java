/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleEstornoDepositoSaque;
import gestor.Controle.ControleLogSistema;
import gestor.Controle.ControleSaldoDeposito;
import gestor.Controle.ControleSaldoDepositoInativos;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ConsultaSaldoInternos;
import gestor.Modelo.DepositoInterno;
import gestor.Modelo.EstornoDepositoSaque;
import gestor.Modelo.LogSistema;
import gestor.Modelo.SaqueValores;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloFinanceiro.codGravar;
import static gestor.Visao.TelaModuloFinanceiro.codIncluir;
import static gestor.Visao.TelaModuloFinanceiro.codUserAcesso;
import static gestor.Visao.TelaModuloFinanceiro.codigoUser;
import static gestor.Visao.TelaModuloFinanceiro.nomeGrupo;
import static gestor.Visao.TelaModuloFinanceiro.nomeTela;
import static gestor.Visao.TelaModuloFinanceiro.telaEstornoValores;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import static gestor.Visao.TelaModuloPrincipal.tipoServidor;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronaldo.silva7
 */
public class TelaEstornoDepositoSaqueAtivosInativos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    DepositoInterno objDeposito = new DepositoInterno();
    EstornoDepositoSaque objEstorno = new EstornoDepositoSaque();
    //
    ControleEstornoDepositoSaque control = new ControleEstornoDepositoSaque();
    SaqueValores objSaque = new SaqueValores();
    // DEPOSITOS SALDO ATIVOS
    ConsultaSaldoInternos objSaldo = new ConsultaSaldoInternos();
    ControleSaldoDeposito controle = new ControleSaldoDeposito();
    // DEPOSITOS SALDO INATIVOS
    ControleSaldoDepositoInativos controle1 = new ControleSaldoDepositoInativos();
    //

    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Controle Valores:Estorno:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;

    int flag;
    int acao;
    String dataInicial, dataFinal, dataLanc;
    String statusLanc = "ABERTO";
    String caminho;
    String moedaReal;
    String movStatus = "";
    String depositoEfetuado = "Sim";
    public static String origemDeposito = "Não";
    int count = 0;
    int tipoEstorno = 0;
    float valorEstorno = 0;
    float valorDepositoSaque = 0;
    //
    String depositanteAtivo = "ESTORNO DEPÓSITO - ATIVO";
    String depositanteInativo = "ESTORNO DEPÓSITO - INATIVO";
    String saqueAtivo = "ESTORNO E SAQUE - ATIVO";
    String saqueInativo = "ESTORNO DE SAQUE - INATIVO";
    //
    // VALORES ATUAIS
    double saldoAtual = 0;
    double totalGeral = 0;
    // VALORES ANTERIORES
    double saldoAnterior = 0;
    double valorAnterior = 0;
    double totalGeralAnterior = 0;
    double saldoLiquido = 0;

    /**
     * Creates new form TelaEstornoDepositoSaqueAtivosInativos
     */
    public TelaEstornoDepositoSaqueAtivosInativos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotoes = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jIdPesqDep = new javax.swing.JTextField();
        jPesqNomeInterno = new javax.swing.JTextField();
        jBtPesqCodigo = new javax.swing.JButton();
        jBtPesqNomeInterno = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesqFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDataDep = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaEstorno = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jDataLanc = new com.toedter.calendar.JDateChooser();
        jStatusLanc = new javax.swing.JTextField();
        jIdLanc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jRDBtDepositoInativos = new javax.swing.JRadioButton();
        jRDBtSaqueAtivos = new javax.swing.JRadioButton();
        jRDBtDepositoAtivos = new javax.swing.JRadioButton();
        jRDBtSaqueInativos = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jValorEstorno = new javax.swing.JFormattedTextField();
        jPanel8 = new javax.swing.JPanel();
        jIdInternoEstorno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jNomeInternoEstorno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jBtPesqInterno = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jSituacao = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jValorDepositoSaque = new javax.swing.JFormattedTextField();
        jIdRegistro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jDataDeposito = new com.toedter.calendar.JDateChooser();
        jBtNovo = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacao = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Estorno de Depósito/Saque - Ativos e Inativos :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Código:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nome Interno:");

        jIdPesqDep.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdPesqDep.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPesqNomeInterno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigo.setContentAreaFilled(false);
        jBtPesqCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoActionPerformed(evt);
            }
        });

        jBtPesqNomeInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInterno.setContentAreaFilled(false);
        jBtPesqNomeInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Data Inicial:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Data Final:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesqFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDataDep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDataDep.setContentAreaFilled(false);
        jBtPesqDataDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDataDepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jIdPesqDep, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPesqNomeInterno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesqDataDep, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(jIdPesqDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigo)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqNomeInterno)
                    .addComponent(jPesqNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtPesqDataDep)
                    .addComponent(jDataPesqFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap())
        );

        jTabelaEstorno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaEstorno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Status", "Data", "Nome do Interno"
            }
        ));
        jTabelaEstorno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaEstornoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaEstorno);
        if (jTabelaEstorno.getColumnModel().getColumnCount() > 0) {
            jTabelaEstorno.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaEstorno.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaEstorno.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaEstorno.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaEstorno.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaEstorno.getColumnModel().getColumn(2).setMaxWidth(70);
            jTabelaEstorno.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaEstorno.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jDataLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataLanc.setEnabled(false);

        jStatusLanc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusLanc.setForeground(new java.awt.Color(204, 0, 0));
        jStatusLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusLanc.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jStatusLanc.setEnabled(false);

        jIdLanc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdLanc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdLanc.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jStatusLanc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataLanc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Tipo de Estorno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        grupoBotoes.add(jRDBtDepositoInativos);
        jRDBtDepositoInativos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRDBtDepositoInativos.setText("Depósito Inativos");
        jRDBtDepositoInativos.setEnabled(false);

        grupoBotoes.add(jRDBtSaqueAtivos);
        jRDBtSaqueAtivos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRDBtSaqueAtivos.setText("Saque Ativos");
        jRDBtSaqueAtivos.setEnabled(false);

        grupoBotoes.add(jRDBtDepositoAtivos);
        jRDBtDepositoAtivos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRDBtDepositoAtivos.setSelected(true);
        jRDBtDepositoAtivos.setText("Depósito Ativos");
        jRDBtDepositoAtivos.setEnabled(false);

        grupoBotoes.add(jRDBtSaqueInativos);
        jRDBtSaqueInativos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRDBtSaqueInativos.setText("Saque Inativos");
        jRDBtSaqueInativos.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRDBtDepositoAtivos)
                    .addComponent(jRDBtSaqueAtivos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRDBtDepositoInativos)
                    .addComponent(jRDBtSaqueInativos))
                .addGap(216, 216, 216))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jRDBtDepositoAtivos)
                    .addComponent(jRDBtDepositoInativos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRDBtSaqueAtivos)
                    .addComponent(jRDBtSaqueInativos)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Valor R$", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jValorEstorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorEstorno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorEstorno.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jValorEstorno.setEnabled(false);
        jValorEstorno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jValorEstorno)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jValorEstorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel4, jPanel5});

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Dados para Estorno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(153, 0, 0))); // NOI18N

        jIdInternoEstorno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdInternoEstorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdInternoEstorno.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Código");

        jNomeInternoEstorno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeInternoEstorno.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome Completo do Interno");

        jBtPesqInterno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqInterno.setContentAreaFilled(false);
        jBtPesqInterno.setEnabled(false);
        jBtPesqInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqInternoActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Situação na Unidade");

        jSituacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jSituacao.setText(" ");
        jSituacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSituacao.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jSituacao.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Valor Registro");

        jValorDepositoSaque.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jValorDepositoSaque.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValorDepositoSaque.setEnabled(false);

        jIdRegistro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdRegistro.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Registro");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Data Registro");

        jDataDeposito.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataDeposito.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jIdInternoEstorno, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBtPesqInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jDataDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jValorDepositoSaque, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addComponent(jSituacao)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel5))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jNomeInternoEstorno, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jIdRegistro, jValorDepositoSaque});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jIdInternoEstorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqInterno)
                    .addComponent(jSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeInternoEstorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDataDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jValorDepositoSaque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jIdRegistro, jValorDepositoSaque});

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setToolTipText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setToolTipText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setToolTipText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Observação:");

        jObservacao.setColumns(20);
        jObservacao.setRows(5);
        jObservacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObservacao.setEnabled(false);
        jScrollPane2.setViewportView(jObservacao);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jBtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAuditoria, jBtCancelar, jBtNovo, jBtSair, jBtSalvar});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtNovo)
                    .addComponent(jBtAuditoria, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBtSalvar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBtCancelar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBtSair, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAuditoria, jBtCancelar, jBtNovo, jBtSair, jBtSalvar});

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 30, 433, 460);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jIdPesqDep.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para ser pesquisado.");
        } else {
            preencherTabelaDeposito("SELECT * FROM ESTORNO_DEPOSITO_SAQUE "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ESTORNO_DEPOSITO_SAQUE.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdLanc='" + jIdPesqDep.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoActionPerformed

    private void jBtPesqNomeInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeInterno.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome para pesquisa.");
        } else {
            preencherTabelaDeposito("SELECT * FROM ESTORNO_DEPOSITO_SAQUE "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ESTORNO_DEPOSITO_SAQUE.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'%" + jPesqNomeInterno.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.preencherTabelaDeposito("SELECT * FROM ESTORNO_DEPOSITO_SAQUE "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON ESTORNO_DEPOSITO_SAQUE.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesqDataDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDataDepActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data incial.");
                jDataPesqInicial.requestFocus();
                jDataPesqInicial.setBackground(Color.red);
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final.");
                    jDataPesqFinal.requestFocus();
                    jDataPesqFinal.setBackground(Color.red);
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Final não pode ser menor que a data inicial.");
                        jDataPesqFinal.requestFocus();
                        jDataPesqFinal.setBackground(Color.red);
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        jTabelaEstorno.setVisible(true);
                        preencherTabelaDeposito("SELECT * FROM ESTORNO_DEPOSITO_SAQUE "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ESTORNO_DEPOSITO_SAQUE.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataLanc BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (jDataPesqInicial.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data incial.");
                jDataPesqInicial.requestFocus();
                jDataPesqInicial.setBackground(Color.red);
            } else {
                if (jDataPesqFinal.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data final.");
                    jDataPesqFinal.requestFocus();
                    jDataPesqFinal.setBackground(Color.red);
                } else {
                    if (jDataPesqInicial.getDate().after(jDataPesqFinal.getDate())) {
                        JOptionPane.showMessageDialog(rootPane, "Data Final não pode ser menor que a data inicial.");
                        jDataPesqFinal.requestFocus();
                        jDataPesqFinal.setBackground(Color.red);
                    } else {
                        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                        dataFinal = formatoAmerica.format(jDataPesqFinal.getDate().getTime());
                        jTabelaEstorno.setVisible(true);
                        preencherTabelaDeposito("SELECT * FROM ESTORNO_DEPOSITO_SAQUE "
                                + "INNER JOIN PRONTUARIOSCRC "
                                + "ON ESTORNO_DEPOSITO_SAQUE.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                                + "WHERE DataLanc BETWEEN'" + dataInicial + "' "
                                + "AND '" + dataFinal + "'");
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDataDepActionPerformed

    private void jTabelaEstornoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaEstornoMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String codigoDep = "" + jTabelaEstorno.getValueAt(jTabelaEstorno.getSelectedRow(), 0);
            jIdPesqDep.setText(codigoDep);

            limparCampos();
            bloquearCampos();
            //
            jBtNovo.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);

            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ESTORNO_DEPOSITO_SAQUE "
                        + "INNER JOIN PRONTUARIOSCRC "
                        + "ON ESTORNO_DEPOSITO_SAQUE.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                        + "WHERE IdEstorno='" + jIdPesqDep.getText() + "'");
                conecta.rs.first();
                jIdLanc.setText(String.valueOf(conecta.rs.getInt("IdEstorno")));
                jStatusLanc.setText(conecta.rs.getString("StatusEstorno"));
                jDataLanc.setDate(conecta.rs.getDate("DataLanc"));
                tipoEstorno = conecta.rs.getInt("Tipo");
                if (tipoEstorno == 0) {
                    jRDBtDepositoAtivos.setSelected(true);
                } else if (tipoEstorno == 1) {
                    jRDBtDepositoInativos.setSelected(true);
                } else if (tipoEstorno == 2) {
                    jRDBtSaqueAtivos.setSelected(true);
                } else if (tipoEstorno == 3) {
                    jRDBtSaqueInativos.setSelected(true);
                }
                jIdInternoEstorno.setText(conecta.rs.getString("IdInternoCrc"));
                jNomeInternoEstorno.setText(conecta.rs.getString("NomeInternoCrc"));
                jSituacao.setText(conecta.rs.getString("SituacaoCrc"));
                jDataDeposito.setDate(conecta.rs.getDate("DataRegistro"));
                jIdRegistro.setText(conecta.rs.getString("IdRegistro"));
                // Formata o valor para ser exibido na tela no formato BR
                valorEstorno = conecta.rs.getFloat("ValorEstorno");
                DecimalFormat vd = new DecimalFormat("#,###0.00");
                String vlDeposito = vd.format(valorEstorno);
                jValorEstorno.setText(vlDeposito);
                //
                valorDepositoSaque = conecta.rs.getFloat("ValorDepositoSaque");
                DecimalFormat vds = new DecimalFormat("#,###0.00");
                String vlDepositoSaque = vds.format(valorDepositoSaque);
                jValorDepositoSaque.setText(vlDepositoSaque);
                jObservacao.setText(conecta.rs.getString("Observacao"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERROR: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaEstornoMouseClicked

    private void jBtPesqInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqInternoActionPerformed
        // TODO add your handling code here:
        if (jRDBtDepositoAtivos.isSelected()) {
            TelaPesqInternoEstorno objPesqEstornoDA = new TelaPesqInternoEstorno();
            TelaModuloFinanceiro.jPainelFinanceiro.add(objPesqEstornoDA);
            objPesqEstornoDA.show();
        } else if (jRDBtDepositoInativos.isSelected()) {
            TelaPesqInternoEstornoDepositoInativo objEstornoDI = new TelaPesqInternoEstornoDepositoInativo();
            TelaModuloFinanceiro.jPainelFinanceiro.add(objEstornoDI);
            objEstornoDI.show();
        } else if (jRDBtSaqueAtivos.isSelected()) {
            TelaPesqInternoEstornosSaque objEstornoSaque = new TelaPesqInternoEstornosSaque();
            TelaModuloFinanceiro.jPainelFinanceiro.add(objEstornoSaque);
            objEstornoSaque.show();
        } else if (jRDBtSaqueInativos.isSelected()) {
            TelaPesqInternoEstornoSaqueInativo objEstornoSaqueIN = new TelaPesqInternoEstornoSaqueInativo();
            TelaModuloFinanceiro.jPainelFinanceiro.add(objEstornoSaqueIN);
            objEstornoSaqueIN.show();
        }
    }//GEN-LAST:event_jBtPesqInternoActionPerformed

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        if (codigoUser == codUserAcesso && nomeTela.equals(telaEstornoValores) && codIncluir == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            acao = 1;
            Novo();
            corCampos();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (codigoUser == codUserAcesso && nomeTela.equals(telaEstornoValores) && codGravar == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupo.equals("ADMINISTRADORES")) {
            statusLanc = "FINALIZADO";
            DecimalFormat valorReal = new DecimalFormat("#,###0.00");
            valorReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jDataLanc.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de lançamento do estorno.");
            } else if (jIdInternoEstorno.getText().equals("") || jNomeInternoEstorno.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do interno para realizar o estorno.");
            } else if (jValorEstorno.getText().equals("") || jValorEstorno.getText().equals("0,00")) {
                JOptionPane.showMessageDialog(rootPane, "Informe um valor correto para realizar o estorno.");
            } else if (!jValorEstorno.getText().equals(jValorDepositoSaque.getText())) {
                JOptionPane.showMessageDialog(rootPane, "O valor do estorno é diferente do valor do registro.");
            } else {
                objEstorno.setStatusEstorno(statusLanc);
                objEstorno.setDataLanc(jDataLanc.getDate());
                if (jRDBtDepositoAtivos.isSelected()) {
                    tipoEstorno = 0;
                    objSaldo.setFavorecidoDepositante(depositanteAtivo);
                } else if (jRDBtDepositoInativos.isSelected()) {
                    tipoEstorno = 1;
                    objSaldo.setFavorecidoDepositante(depositanteInativo);
                } else if (jRDBtSaqueAtivos.isSelected()) {
                    tipoEstorno = 2;
                    objSaldo.setFavorecidoDepositante(saqueAtivo);
                } else if (jRDBtSaqueInativos.isSelected()) {
                    tipoEstorno = 3;
                    objSaldo.setFavorecidoDepositante(saqueInativo);
                }
                objEstorno.setTipo(tipoEstorno);
                try {
                    objEstorno.setValorDepositoSaque(valorReal.parse(jValorDepositoSaque.getText()).floatValue());
                    objEstorno.setValorEstorno(valorReal.parse(jValorEstorno.getText()).floatValue());
                } catch (ParseException ex) {
                }
                objEstorno.setIdInternoCrc(Integer.valueOf(jIdInternoEstorno.getText()));
                objEstorno.setNomeInternoCrc(jNomeInternoEstorno.getText());
                objEstorno.setIdRegistro(Integer.valueOf(jIdRegistro.getText()));
                objEstorno.setDataRegistro(jDataDeposito.getDate());
                objEstorno.setObservacao(jObservacao.getText());
                if (acao == 1) {
                    // log de usuario
                    objEstorno.setUsuarioInsert(nameUser);
                    objEstorno.setDataInsert(dataModFinal);
                    objEstorno.setHorarioInsert(horaMov);
                    //
                    control.incluirEstornoDepositos(objEstorno);
                    buscarCodigo();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    //
                    if (tipoEstorno == 0) { // ESTORNO DEPÓSITO - ATIVO
                        movStatus = "D";
                        objSaldo.setHistorico(jObservacao.getText());
                        objSaldo.setDataMov(jDataLanc.getDate());
                        objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoEstorno.getText()));
                        objSaldo.setStatusMov(movStatus);
                        try {
                            objSaldo.setSaldo(valorReal.parse(jValorEstorno.getText()).floatValue());
                        } catch (ParseException ex) {
                        }
                        objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        controle.incluirSaldo(objSaldo); // Incluir deposito na tabela SALDOVALORES

                    } else if (tipoEstorno == 1) { // ESTORNO DEPÓSITO - INATIVO
                        CalcularSaldo();
                        movStatus = "D";
                        objSaldo.setHistorico(jObservacao.getText());
                        objSaldo.setDataMov(jDataLanc.getDate());
                        objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoEstorno.getText()));
                        objSaldo.setStatusMov(movStatus);
                        try {
                            objSaldo.setSaldo(valorReal.parse(jValorEstorno.getText()).floatValue());
                        } catch (ParseException ex) {
                        }
                        objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        // CALCULAR SALDO DO INTERNO
                        totalGeral = saldoAtual + objSaldo.getSaldo();
                        objSaldo.setSaldoAtual(totalGeral);
                        controle1.incluirSaldo(objSaldo); // Incluir deposito na tabela SALDO_VALORES_INATIVOS

                    } else if (tipoEstorno == 2) { // ESTORNO DE SAQUE - ATIVOS
                        movStatus = "C";
                        objSaldo.setHistorico(jObservacao.getText());
                        objSaldo.setDataMov(jDataLanc.getDate());
                        objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoEstorno.getText()));
                        objSaldo.setStatusMov(movStatus);
                        try {
                            objSaldo.setSaldo(valorReal.parse(jValorEstorno.getText()).floatValue());
                        } catch (ParseException ex) {
                        }
                        objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        controle.incluirSaldo(objSaldo); // Incluir deposito na tabela SALDOVALORES
                    } else if (tipoEstorno == 3) { // ESTORNO DE SAQUE - INATIVOS
                        buscarSaldoAnterior();
                        movStatus = "C";
                        objSaldo.setHistorico(jObservacao.getText());
                        objSaldo.setDataMov(jDataLanc.getDate());
                        objSaldo.setIdInternoCrc(Integer.valueOf(jIdInternoEstorno.getText()));
                        objSaldo.setStatusMov(movStatus);
                        try {
                            objSaldo.setSaldo(valorReal.parse(jValorEstorno.getText()).floatValue());
                        } catch (ParseException ex) {
                        }
                        saldoLiquido = (float) (saldoAtual - objSaque.getValorSaque());
                        objSaldo.setSaldoAtual(saldoLiquido);
                        objSaldo.setIdLanc(Integer.valueOf(jIdLanc.getText()));
                        controle1.incluirSaldo(objSaldo); // Incluir deposito na tabela SALDO_VALORES_INATIVOS
                    }
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso a incluir registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtAuditoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoes;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqCodigo;
    private javax.swing.JButton jBtPesqDataDep;
    private javax.swing.JButton jBtPesqInterno;
    private javax.swing.JButton jBtPesqNomeInterno;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    public static com.toedter.calendar.JDateChooser jDataDeposito;
    private com.toedter.calendar.JDateChooser jDataLanc;
    private com.toedter.calendar.JDateChooser jDataPesqFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jIdInternoEstorno;
    public static javax.swing.JTextField jIdLanc;
    private javax.swing.JTextField jIdPesqDep;
    public static javax.swing.JTextField jIdRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jNomeInternoEstorno;
    private javax.swing.JTextArea jObservacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesqNomeInterno;
    private javax.swing.JRadioButton jRDBtDepositoAtivos;
    private javax.swing.JRadioButton jRDBtDepositoInativos;
    private javax.swing.JRadioButton jRDBtSaqueAtivos;
    private javax.swing.JRadioButton jRDBtSaqueInativos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTextField jSituacao;
    private javax.swing.JTextField jStatusLanc;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaEstorno;
    public static javax.swing.JFormattedTextField jValorDepositoSaque;
    public static javax.swing.JFormattedTextField jValorEstorno;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdLanc.setBackground(Color.white);
        jStatusLanc.setBackground(Color.white);
        jDataLanc.setBackground(Color.white);
        jValorEstorno.setBackground(Color.white);
        jIdRegistro.setBackground(Color.white);
        jValorDepositoSaque.setBackground(Color.white);
        jIdInternoEstorno.setBackground(Color.white);
        jSituacao.setBackground(Color.white);
        jNomeInternoEstorno.setBackground(Color.white);
        jDataDeposito.setBackground(Color.white);
        jIdRegistro.setBackground(Color.white);
        jValorDepositoSaque.setBackground(Color.white);
        jObservacao.setBackground(Color.white);
    }

    public void formatarCampos() {
        jObservacao.setLineWrap(true);
        jObservacao.setWrapStyleWord(true);
    }

    public void Novo() {
        jIdLanc.setText("");
        jStatusLanc.setText("ABERTO");
        jDataLanc.setCalendar(Calendar.getInstance());
        jValorEstorno.setText("0,00");
        jIdInternoEstorno.setText("");
        jSituacao.setText("");
        jNomeInternoEstorno.setText("");
        jDataDeposito.setDate(null);
        jIdRegistro.setText("");
        jValorDepositoSaque.setText("");
        jObservacao.setText("");
        //
        jDataLanc.setEnabled(true);
        jValorEstorno.setEnabled(!true);
        jObservacao.setEnabled(true);
        //
        jRDBtDepositoAtivos.setEnabled(true);
        jRDBtDepositoInativos.setEnabled(true);
        jRDBtSaqueAtivos.setEnabled(true);
        jRDBtSaqueInativos.setEnabled(true);
        //
        jBtPesqInterno.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
    }

    public void Salvar() {
        jStatusLanc.setText("FINALIZADO");
        //
        jDataLanc.setEnabled(!true);
        jValorEstorno.setEnabled(!true);
        jObservacao.setEnabled(!true);
        //
        jRDBtDepositoAtivos.setEnabled(!true);
        jRDBtDepositoInativos.setEnabled(!true);
        jRDBtSaqueAtivos.setEnabled(!true);
        jRDBtSaqueInativos.setEnabled(!true);
        //
        jBtPesqInterno.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdLanc.getText().equals("")) {
            jIdLanc.setText("");
            jStatusLanc.setText("");
            jDataLanc.setDate(null);
            jValorEstorno.setText("0,00");
            jIdInternoEstorno.setText("");
            jSituacao.setText("");
            jNomeInternoEstorno.setText("");
            jDataDeposito.setDate(null);
            jIdRegistro.setText("");
            jValorDepositoSaque.setText("");
            jObservacao.setText("");
            //
            jDataLanc.setEnabled(!true);
            jValorEstorno.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtPesqInterno.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
        } else {
            jDataLanc.setEnabled(!true);
            jValorEstorno.setEnabled(!true);
            jObservacao.setEnabled(!true);
            //
            jBtPesqInterno.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ESTORNO_DEPOSITO_SAQUE");
            conecta.rs.last();
            jIdLanc.setText(conecta.rs.getString("IdEstorno"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void preencherTabelaDeposito(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", " Data", "Nome do Interno"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data Deposito
                dataLanc = conecta.rs.getString("DataLanc");
                String dia = dataLanc.substring(8, 10);
                String mes = dataLanc.substring(5, 7);
                String ano = dataLanc.substring(0, 4);
                dataLanc = dia + "/" + mes + "/" + ano;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdEstorno"), conecta.rs.getString("StatusEstorno"), dataLanc, conecta.rs.getString("NomeInternoCrc")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEstorno.setModel(modelo);
        jTabelaEstorno.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaEstorno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEstorno.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEstorno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEstorno.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaEstorno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEstorno.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaEstorno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEstorno.getTableHeader().setReorderingAllowed(false);
        jTabelaEstorno.setAutoResizeMode(jTabelaEstorno.AUTO_RESIZE_OFF);
        jTabelaEstorno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Status", " Data", "Nome do Interno"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEstorno.setModel(modelo);
        jTabelaEstorno.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaEstorno.getColumnModel().getColumn(0).setResizable(false);
        jTabelaEstorno.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaEstorno.getColumnModel().getColumn(1).setResizable(false);
        jTabelaEstorno.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaEstorno.getColumnModel().getColumn(2).setResizable(false);
        jTabelaEstorno.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaEstorno.getColumnModel().getColumn(3).setResizable(false);
        jTabelaEstorno.getTableHeader().setReorderingAllowed(false);
        jTabelaEstorno.setAutoResizeMode(jTabelaEstorno.AUTO_RESIZE_OFF);
        jTabelaEstorno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaEstorno.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaEstorno.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaEstorno.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparCampos() {
        jIdLanc.setText("");
        jStatusLanc.setText("");
        jDataLanc.setDate(null);
        jValorEstorno.setText("");
        jIdInternoEstorno.setText("");
        jSituacao.setText("");
        jNomeInternoEstorno.setText("");
        jObservacao.setText("");
        grupoBotoes.clearSelection();
    }

    public void bloquearCampos() {
        jIdLanc.setEnabled(!true);
        jStatusLanc.setEnabled(!true);
        jDataLanc.setEnabled(!true);
        jValorEstorno.setEnabled(!true);
        jIdRegistro.setEnabled(!true);
        jValorDepositoSaque.setEnabled(!true);
        jIdInternoEstorno.setEnabled(!true);
        jSituacao.setEnabled(!true);
        jNomeInternoEstorno.setEnabled(!true);
        jDataDeposito.setEnabled(!true);
        jIdRegistro.setEnabled(!true);
        jValorDepositoSaque.setEnabled(!true);
        jObservacao.setEnabled(!true);
    }

    public void CalcularSaldo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SALDO_VALORES_INATIVOS "
                    + "WHERE IdInternoCrc='" + jIdInternoEstorno.getText() + "'");
            conecta.rs.last();
            saldoAtual = conecta.rs.getDouble("SaldoAtual");
            valorAnterior = conecta.rs.getDouble("ValorMov");
            saldoAnterior = conecta.rs.getDouble("SaldoAtual");
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void buscarSaldoAnterior() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM SALDO_VALORES_INATIVOS "
                    + "WHERE IdInternoCrc='" + jIdInternoEstorno.getText() + "'");
            conecta.rs.last();
            valorAnterior = conecta.rs.getDouble("ValorMov");
            saldoAnterior = conecta.rs.getDouble("SaldoAtual");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdLanc.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
