/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleAdvogados;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitos;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.Advogados;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPortarias.codAbrirP1;
import static gestor.Visao.TelaModuloPortarias.codAlterarP1;
import static gestor.Visao.TelaModuloPortarias.codConsultarP1;
import static gestor.Visao.TelaModuloPortarias.codExcluirP1;
import static gestor.Visao.TelaModuloPortarias.codGravarP1;
import static gestor.Visao.TelaModuloPortarias.codIncluirP1;
import static gestor.Visao.TelaModuloPortarias.codUserAcessoP1;
import static gestor.Visao.TelaModuloPortarias.codigoGrupoP1;
import static gestor.Visao.TelaModuloPortarias.codigoUserGroupP1;
import static gestor.Visao.TelaModuloPortarias.codigoUserP1;
import static gestor.Visao.TelaModuloPortarias.nomeGrupoP1;
import static gestor.Visao.TelaModuloPortarias.nomeTelaP1;
import static gestor.Visao.TelaModuloPortarias.telaCadastroAdvogadosManuP1;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import org.opencv.core.Core;

/**
 *
 * @author Ronaldo
 */
public class TelaAdvogados extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    Advogados objAdv = new Advogados();
    ControleAdvogados control = new ControleAdvogados();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Portaria:Cadastro de Advogados:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int acao;
    int flag;
    public static String caminhoAdvogados = null;
    String dataEntrada;
    String dataSaida;
    String codAdvogado;
    String idAdvogado;
    String nomeAdvogado;
    int count = 0;
    //PESQUISA GLOBAL
    //PRONTUARIOS INTERNOS
    int id_PESQUISA = 0;
    String nome_PESQUISA = "";
    String nomeMae_PESQUISA = "";
    String rg_PESQUISA = "";
    String cpf_PESQUISA = "";
    //
    int id_PESQUISA_AD = 0;
    String nome_PESQUISA_AD = "";
    String nomeMae_PESQUISA_AD = "";
    String rg_PESQUISA_AD = "";
    String cpf_PESQUISA_AD = "";
    //VISITAS DIVERSAS
    int id_PESQUISA_VD = 0;
    String nome_PESQUISA_VD = "";
    String nomeMae_PESQUISA_VD = "";
    String rg_PESQUISA_VD = "";
    String cpf_PESQUISA_VD = "";
    // VISITAS INTERNOS
    int id_PESQUISA_VI = 0;
    String nome_PESQUISA_VI = "";
    String nomeMae_PESQUISA_VI = "";
    String rg_PESQUISA_VI = "";
    String cpf_PESQUISA_VI = "";
    // COLABORADORES
    int id_PESQUISA_CO = 0;
    String nome_PESQUISA_CO = "";
    String nomeMae_PESQUISA_CO = "";
    String rg_PESQUISA_CO = "";
    String cpf_PESQUISA_CO = "";
    //OFICIAL DE JUSTIÇA
    int id_PESQUISA_OF = 0;
    String nome_PESQUISA_OF = "";
    String nomeMae_PESQUISA_OF = "";
    String rg_PESQUISA_OF = "";
    String cpf_PESQUISA_OF = "";

    /**
     * Creates new form TelaAdvogados
     */
    public static TelaWebCamPortaAdvogados telaWebcamAdv;

    public TelaAdvogados() {
        initComponents();
        corCampo();
        formatarCampo();
    }

    public void mostrarWebCam() {
        telaWebcamAdv = new TelaWebCamPortaAdvogados(this, true);
        telaWebcamAdv.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPesqNome = new javax.swing.JTextField();
        jBtPesqNome = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaAdvogados = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIDAd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDataCadastro = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jNomeAdvogado = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jRG = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jCPF = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jOAB = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox();
        jNomeMae = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jNomePai = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jObsAdvogado = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jSituacaoCadastral = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPesqNomeInternoAdv = new javax.swing.JTextField();
        jBtPesqNomeInternoAdv = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaPesqInternosAdv = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        FotoAdvogado = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jBtPesquisaAdvogadoOAB = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jBtNovaFoto = new javax.swing.JButton();
        jBtExcluirFoto = new javax.swing.JButton();
        jBtWebCam = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel13.setText("jLabel13");

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Advogados :::...");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Nome:");

        jPesqNome.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNome.setContentAreaFilled(false);
        jBtPesqNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesqNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(jBtPesqNome)
                    .addComponent(jPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jTabelaAdvogados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAdvogados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Advogado", "OAB"
            }
        ));
        jTabelaAdvogados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAdvogadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaAdvogados);
        if (jTabelaAdvogados.getColumnModel().getColumnCount() > 0) {
            jTabelaAdvogados.getColumnModel().getColumn(0).setMinWidth(60);
            jTabelaAdvogados.getColumnModel().getColumn(0).setMaxWidth(60);
            jTabelaAdvogados.getColumnModel().getColumn(1).setMinWidth(350);
            jTabelaAdvogados.getColumnModel().getColumn(1).setMaxWidth(350);
            jTabelaAdvogados.getColumnModel().getColumn(2).setMinWidth(100);
            jTabelaAdvogados.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        jIDAd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIDAd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIDAd.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Cadastro");

        jDataCadastro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataCadastro.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nome do Advogado");

        jNomeAdvogado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeAdvogado.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("R.G.");

        jRG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jRG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jRG.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("C.P.F.");

        jCPF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCPF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCPF.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("OAB");

        jOAB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jOAB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jOAB.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Observação");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Status:");

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Ativo", "Inativo" }));
        jComboBoxStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatus.setEnabled(false);

        jNomeMae.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeMae.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Nome Mãe");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Nome Pai");

        jNomePai.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomePai.setEnabled(false);

        jObsAdvogado.setColumns(20);
        jObsAdvogado.setRows(5);
        jObsAdvogado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jObsAdvogado.setEnabled(false);
        jScrollPane3.setViewportView(jObsAdvogado);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Situação Cadastral");

        jSituacaoCadastral.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSituacaoCadastral.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel8))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jIDAd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jNomeMae, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jNomePai, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jOAB, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSituacaoCadastral))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jRG, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(197, 197, 197)))
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel5)
                                            .addComponent(jCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jNomeAdvogado, javax.swing.GroupLayout.Alignment.LEADING))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIDAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomePai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOAB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSituacaoCadastral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtAuditoria.setForeground(new java.awt.Color(255, 0, 0));
        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAuditoria.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addGap(0, 0, 0)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtAuditoria)
                .addComponent(jBtSair)
                .addComponent(jBtCancelar)
                .addComponent(jBtSalvar)
                .addComponent(jBtExcluir)
                .addComponent(jBtAlterar)
                .addComponent(jBtNovo))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nome do  Interno:");

        jPesqNomeInternoAdv.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPesqNomeInternoAdv.setEnabled(false);

        jBtPesqNomeInternoAdv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqNomeInternoAdv.setContentAreaFilled(false);
        jBtPesqNomeInternoAdv.setEnabled(false);
        jBtPesqNomeInternoAdv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeInternoAdvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesqNomeInternoAdv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqNomeInternoAdv, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesqNomeInternoAdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNomeInternoAdv)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaPesqInternosAdv.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaPesqInternosAdv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Interno", "Data Entrada", "H. Entrada", "Data Saída", "H. Saída"
            }
        ));
        jScrollPane2.setViewportView(jTabelaPesqInternosAdv);
        if (jTabelaPesqInternosAdv.getColumnModel().getColumnCount() > 0) {
            jTabelaPesqInternosAdv.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(1).setMinWidth(200);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(1).setMaxWidth(200);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(3).setMinWidth(70);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(3).setMaxWidth(70);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(4).setMinWidth(80);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(4).setMaxWidth(80);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(5).setMinWidth(70);
            jTabelaPesqInternosAdv.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Histórico", jPanel7);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoAdvogado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FotoAdvogado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtPesquisaAdvogadoOAB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/microsoft-internet-explorer-icone-4679-16.png"))); // NOI18N
        jBtPesquisaAdvogadoOAB.setText("Pesquisar");
        jBtPesquisaAdvogadoOAB.setToolTipText("Pesquisar Advogado na OAB");
        jBtPesquisaAdvogadoOAB.setEnabled(false);
        jBtPesquisaAdvogadoOAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaAdvogadoOABActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jBtPesquisaAdvogadoOAB)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtPesquisaAdvogadoOAB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 144, Short.MAX_VALUE)
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovaFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7183_16x16.png"))); // NOI18N
        jBtNovaFoto.setEnabled(false);
        jBtNovaFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovaFotoActionPerformed(evt);
            }
        });

        jBtExcluirFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirFoto.setEnabled(false);
        jBtExcluirFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirFotoActionPerformed(evt);
            }
        });

        jBtWebCam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/webcam_start.png"))); // NOI18N
        jBtWebCam.setEnabled(false);
        jBtWebCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtWebCamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jBtNovaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtWebCam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtExcluirFoto, jBtNovaFoto, jBtWebCam});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtExcluirFoto)
                    .addComponent(jBtNovaFoto)
                    .addComponent(jBtWebCam))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtExcluirFoto, jBtNovaFoto, jBtWebCam});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
        );

        setBounds(250, 30, 677, 507);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAdvogadosManuP1);
        if (codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaCadastroAdvogadosManuP1) && codIncluirP1 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES")) {
            acao = 1;
            Novo();
            corCampo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAdvogadosManuP1);
        if (codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaCadastroAdvogadosManuP1) && codAlterarP1 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES")) {
            acao = 2;
            Alterar();
            corCampo();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAdvogadosManuP1);
        if (codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaCadastroAdvogadosManuP1) && codExcluirP1 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES")) {
            verificarEntAdvogados();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAdvogadosManuP1);
        if (codigoUserP1 == codUserAcessoP1 && nomeTelaP1.equals(telaCadastroAdvogadosManuP1) && codGravarP1 == 1 || nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoP1.equals("ADMINISTRADORES")) {
            if (jDataCadastro.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data de cadastro.");
                jDataCadastro.requestFocus();
                jDataCadastro.setBackground(Color.red);
            } else if (jNomeAdvogado.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do advogado.");
                jNomeAdvogado.requestFocus();
                jNomeAdvogado.setBackground(Color.red);
            } else if (jOAB.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o número da OAB do advogado.");
                jOAB.requestFocus();
                jOAB.setBackground(Color.red);
            } else if (caminhoAdvogados == null) {
                JOptionPane.showMessageDialog(rootPane, "Coloque a foto do Advogado");
            } else if (jComboBoxStatus.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o status do advogado.");
            } else if (jComboBoxStatus.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe o status do advogado.");
            } else if (jComboBoxStatus.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o status do advogado.");
            } else if (jNomeMae.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar o nome da mãe do advogado.");
            } else {
                pesquisaGlobalInterno();
                if (jNomeAdvogado.getText().trim().equals(nome_PESQUISA) && jNomeMae.getText().trim().equals(nomeMae_PESQUISA)) {
                    JOptionPane.showMessageDialog(rootPane, "Essa visita que está sendo cadastrado, já existe como INTERNO da unidade.");
                }
                pesquisaGlobalColaborador();
                if (jNomeAdvogado.getText().trim().equals(nome_PESQUISA_CO) && jNomeMae.getText().trim().equals(nomeMae_PESQUISA_CO)) {
                    JOptionPane.showMessageDialog(rootPane, "Essa visita que está sendo cadastrado, já existe como COLABORADOR da unidade.");
                }
                pesquisaGlobalOficialJustica();
                if (jNomeAdvogado.getText().trim().equals(nome_PESQUISA_OF) && jNomeMae.getText().trim().equals(nomeMae_PESQUISA_OF)) {
                    JOptionPane.showMessageDialog(rootPane, "Essa visita que está sendo cadastrado, já existe como OFICIAL DE JUSTIÇA.");
                }
                pesquisaGlobalVisitasDiversas();
                if (jNomeAdvogado.getText().trim().equals(nome_PESQUISA_VD) && jNomeMae.getText().trim().equals(nomeMae_PESQUISA_VD)) {
                    JOptionPane.showMessageDialog(rootPane, "Essa visita que está sendo cadastrado, já existe como VISITAS DIVERSAS.");
                }
                pesquisaGlobalVisitasInterno();
                if (jNomeAdvogado.getText().trim().equals(nome_PESQUISA_VI)) {
                    JOptionPane.showMessageDialog(rootPane, "Esse advogado que está sendo cadastrado, já existe como VISITA DE INTERNO da unidade.\nGrau de Parentesco: " + nomeMae_PESQUISA_VI + ".");
                }
                objAdv.setDataCadastro(jDataCadastro.getDate());
                objAdv.setStatusAdv((String) jComboBoxStatus.getSelectedItem());
                objAdv.setFotoAdvogado(caminhoAdvogados);
                objAdv.setNomeAdvogado(jNomeAdvogado.getText().trim());
                objAdv.setNomeMae(jNomeMae.getText());
                objAdv.setNomePai(jNomePai.getText());
                objAdv.setSituacaoCadastral(jSituacaoCadastral.getText());
                objAdv.setRgAdvogado(jRG.getText());
                objAdv.setCpfAdvogado(jCPF.getText());
                objAdv.setOabAdvogado(jOAB.getText());
                objAdv.setObsAdvogado(jObsAdvogado.getText());
                // PREPARAR FOTO PARA GRAVAR NO BANCO DE DADOS - FOTO DE FRENTE   
                if (FotoAdvogado.getIcon() != null) {
                    Image img = ((ImageIcon) FotoAdvogado.getIcon()).getImage();
                    BufferedImage bi = new BufferedImage(//é a imagem na memória e que pode ser alterada
                            img.getWidth(null),
                            img.getHeight(null),
                            BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2 = bi.createGraphics();
                    g2.drawImage(img, 0, 0, null);
                    ByteArrayOutputStream buffer = new ByteArrayOutputStream();
                    try {
                        ImageIO.write(bi, "jpg", buffer);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(TelaAdvogados.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(TelaAdvogados.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    objAdv.setImagemFrenteAD(buffer.toByteArray());
                }
                // log de usuario
                objAdv.setUsuarioInsert(nameUser);
                objAdv.setDataInsert(dataModFinal);
                objAdv.setHoraInsert(horaMov);
                try {
                    conecta.abrirConexao();
                    conecta.executaSQL("SELECT * FROM ADVOGADOS "
                            + "WHERE NomeAdvogado='" + jNomeAdvogado.getText() + "'");
                    conecta.rs.first();
                    nomeAdvogado = conecta.rs.getString("NomeAdvogado");
                } catch (Exception e) {
                }
                if (acao == 1) {
                    if (jNomeAdvogado.getText().trim().equals(nomeAdvogado)) {
                        JOptionPane.showMessageDialog(rootPane, "Advogado já cadastrado.");
                    } else {

                        control.incluirAdvogados(objAdv);
                        buscarID();
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Salvar();
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    }
                }
                if (acao == 2) {
                    // log de usuario
                    objAdv.setUsuarioUp(nameUser);
                    objAdv.setDataUp(dataModFinal);
                    objAdv.setHoraUp(horaMov);
                    objAdv.setIdAdvogado(Integer.valueOf(jIDAd.getText()));
                    control.alterarAdvogados(objAdv);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jPesqNome.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome ou parte dele para pesquisa.");
            jPesqNome.requestFocus();
        } else {
            jTabelaAdvogados.setVisible(true);
            pesquisarNomesAdvogados("SELECT * FROM ADVOGADOS "
                    + "WHERE NomeAdvogado LIKE'%" + jPesqNome.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeActionPerformed

    private void jTabelaAdvogadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAdvogadosMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String nomeAdvogado = "" + jTabelaAdvogados.getValueAt(jTabelaAdvogados.getSelectedRow(), 1);
            jPesqNome.setText(nomeAdvogado);
            String idAdv = "" + jTabelaAdvogados.getValueAt(jTabelaAdvogados.getSelectedRow(), 0);
            jIDAd.setText(idAdv);
            //
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jPesqNomeInternoAdv.setEnabled(true);
            jBtPesqNomeInternoAdv.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            jBtPesquisaAdvogadoOAB.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ADVOGADOS "
                        + "WHERE NomeAdvogado='" + nomeAdvogado + "' "
                        + "AND IdAdvogado='" + idAdv + "'");
                conecta.rs.first();
                jIDAd.setText(String.valueOf(conecta.rs.getInt("IdAdvogado")));
                jComboBoxStatus.setSelectedItem(conecta.rs.getString("StatusAdv"));
                jDataCadastro.setDate(conecta.rs.getDate("DataCadastro"));
                jNomeAdvogado.setText(conecta.rs.getString("NomeAdvogado"));
                jNomeMae.setText(conecta.rs.getString("NomeMae"));
                jNomePai.setText(conecta.rs.getString("NomePai"));
                jSituacaoCadastral.setText(conecta.rs.getString("SituacaoCadastral"));
                caminhoAdvogados = conecta.rs.getString("FotoAdvogado");
                if (caminhoAdvogados != null) {
                    javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoAdvogados);
                    FotoAdvogado.setIcon(i);
                    FotoAdvogado.setIcon(new ImageIcon(i.getImage().getScaledInstance(FotoAdvogado.getWidth(), FotoAdvogado.getHeight(), Image.SCALE_DEFAULT)));
                }
                // BUSCAR A FOTO DO ADVOGADO NO BANCO DE DADOS
                byte[] imgBytes = ((byte[]) conecta.rs.getBytes("ImagemFrenteAD"));
                if (imgBytes != null) {
                    ImageIcon pic = null;
                    pic = new ImageIcon(imgBytes);
                    Image scaled = pic.getImage().getScaledInstance(FotoAdvogado.getWidth(), FotoAdvogado.getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icon = new ImageIcon(scaled);
                    FotoAdvogado.setIcon(icon);
                }
                //
                jRG.setText(conecta.rs.getString("RgAdvogado"));
                jCPF.setText(conecta.rs.getString("CpfAdvogado"));
                jOAB.setText(conecta.rs.getString("OabAdvogado"));
                jObsAdvogado.setText(conecta.rs.getString("ObsAdvogado"));
                conecta.desconecta();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa por nome" + e);
            }
            preencherTabelaItens("SELECT * FROM VISITASADVOGADOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON VISITASADVOGADOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE IdAdvogado='" + jIDAd.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaAdvogadosMouseClicked

    private void jBtNovaFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovaFotoActionPerformed
        // TODO add your handling code here:       
        javax.swing.JFileChooser seletor = new javax.swing.JFileChooser();
        int acao = seletor.showOpenDialog(this);
        if (acao == JFileChooser.APPROVE_OPTION) {
            java.io.File f = seletor.getSelectedFile();
            caminhoAdvogados = f.getPath();
            javax.swing.ImageIcon i = new javax.swing.ImageIcon(caminhoAdvogados);
            FotoAdvogado.setIcon(i);
            ImageIcon image = new ImageIcon(seletor.getSelectedFile().getPath());
            FotoAdvogado.setIcon(new ImageIcon(image.getImage().getScaledInstance(FotoAdvogado.getWidth(), FotoAdvogado.getHeight(), Image.SCALE_DEFAULT)));
            caminhoAdvogados = f.getPath();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleção da foto foi cancelada.");
        }

    }//GEN-LAST:event_jBtNovaFotoActionPerformed

    private void jBtExcluirFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirFotoActionPerformed
        // TODO add your handling code here:
        FotoAdvogado.setIcon(null);
    }//GEN-LAST:event_jBtExcluirFotoActionPerformed

    private void jBtPesqNomeInternoAdvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeInternoAdvActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (jPesqNomeInternoAdv.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um nome de interno para pesquisa");
        } else {
            preencherTabelaItens("SELECT * FROM VISITASADVOGADOS "
                    + "INNER JOIN PRONTUARIOSCRC "
                    + "ON VISITASADVOGADOS.IdInternoCrc=PRONTUARIOSCRC.IdInternoCrc "
                    + "WHERE NomeInternoCrc LIKE'" + jPesqNomeInternoAdv.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeInternoAdvActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaAdvogados.setVisible(true);
            this.pesquisarTodosAdvogados();
        } else {
            jtotalRegistros.setText("");
            limparTabelaAdvogados();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtWebCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtWebCamActionPerformed
        // TODO add your handling code here:
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        mostrarWebCam();
    }//GEN-LAST:event_jBtWebCamActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaAdvogados objAudAdv = new TelaAuditoriaAdvogados();
        TelaModuloPortarias.jPainelPortarias.add(objAudAdv);
        objAudAdv.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jBtPesquisaAdvogadoOABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaAdvogadoOABActionPerformed
        // TODO add your handling code here:
        try {
            Runtime.getRuntime().exec("cmd.exe /C start "
                    + "http://cna.oab.org.br//");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "" + ex.getMessage());
//           System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jBtPesquisaAdvogadoOABActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel FotoAdvogado;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirFoto;
    private javax.swing.JButton jBtNovaFoto;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqNome;
    private javax.swing.JButton jBtPesqNomeInternoAdv;
    private javax.swing.JButton jBtPesquisaAdvogadoOAB;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtWebCam;
    private javax.swing.JFormattedTextField jCPF;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxStatus;
    private com.toedter.calendar.JDateChooser jDataCadastro;
    public static javax.swing.JTextField jIDAd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNomeAdvogado;
    private javax.swing.JTextField jNomeMae;
    private javax.swing.JTextField jNomePai;
    private javax.swing.JFormattedTextField jOAB;
    private javax.swing.JTextArea jObsAdvogado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqNome;
    private javax.swing.JTextField jPesqNomeInternoAdv;
    private javax.swing.JFormattedTextField jRG;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jSituacaoCadastral;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaAdvogados;
    private javax.swing.JTable jTabelaPesqInternosAdv;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampo() {
        jNomeAdvogado.setDocument(new LimiteDigitos(200));
        jNomeMae.setDocument(new LimiteDigitos(200));
        jNomePai.setDocument(new LimiteDigitos(200));
        jOAB.setDocument(new LimiteDigitosAlfa(20));
        //
        jObsAdvogado.setLineWrap(true);
        jObsAdvogado.setWrapStyleWord(true);
//        try {
//            // Formatação para CPF
//            MaskFormatter cpf = new MaskFormatter("###.###.###-##");
//            jCPF.setFormatterFactory(new DefaultFormatterFactory(cpf));
//            //Formatação para RG
//            MaskFormatter rg = new MaskFormatter("##.###.###-##");
//            jRG.setFormatterFactory(new DefaultFormatterFactory(rg));
//        } catch (Exception e) {
//        }
    }

    public void corCampo() {

        jIDAd.setBackground(Color.white);
        jDataCadastro.setBackground(Color.white);
        jNomeAdvogado.setBackground(Color.white);
        jNomeMae.setBackground(Color.white);
        jNomePai.setBackground(Color.white);
        jSituacaoCadastral.setBackground(Color.white);
        jRG.setBackground(Color.white);
        jCPF.setBackground(Color.white);
        jOAB.setBackground(Color.white);
        jObsAdvogado.setBackground(Color.white);
    }

    public void Novo() {
        // Limpar campos
        jIDAd.setText("");
        jDataCadastro.setCalendar(Calendar.getInstance());
        jComboBoxStatus.setSelectedItem("Selecione...");
        caminhoAdvogados = null;
        FotoAdvogado.setIcon(null);
        jNomeAdvogado.setText("");
        jNomeMae.setText("");
        jNomePai.setText("");
        jSituacaoCadastral.setText("");
        jRG.setText("");
        jCPF.setText("");
        jOAB.setText("");
        jObsAdvogado.setText("");
        //Habilitar/Desabilitar campos
        jDataCadastro.setEnabled(true);
        jComboBoxStatus.setEnabled(true);
        jNomeAdvogado.setEnabled(true);
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        jNomeAdvogado.setEnabled(true);
        jNomeMae.setEnabled(true);
        jNomePai.setEnabled(true);
        jSituacaoCadastral.setEnabled(true);
        jRG.setEnabled(true);
        jCPF.setEnabled(true);
        jOAB.setEnabled(true);
        jObsAdvogado.setEnabled(true);
        //
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtWebCam.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        jBtPesquisaAdvogadoOAB.setEnabled(true);
    }

    public void Alterar() {

        //Habilitar/Desabilitar campos
        jDataCadastro.setEnabled(true);
        jComboBoxStatus.setEnabled(true);
        jNomeAdvogado.setEnabled(true);
        jNomeAdvogado.setEnabled(true);
        jNomeMae.setEnabled(true);
        jNomePai.setEnabled(true);
        jSituacaoCadastral.setEnabled(true);
        jRG.setEnabled(true);
        jCPF.setEnabled(true);
        jOAB.setEnabled(true);
        jObsAdvogado.setEnabled(true);
        //
        jBtNovaFoto.setEnabled(true);
        jBtExcluirFoto.setEnabled(true);
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
        jBtWebCam.setEnabled(true);
        jBtAuditoria.setEnabled(!true);
        jBtPesquisaAdvogadoOAB.setEnabled(true);
    }

    public void Excluir() {

        // Limpar campos
        jIDAd.setText("");
        jDataCadastro.setDate(null);
        jComboBoxStatus.setSelectedItem("Selecione...");
        caminhoAdvogados = null;
        FotoAdvogado.setIcon(null);
        jNomeAdvogado.setText("");
        jNomeMae.setText("");
        jNomePai.setText("");
        jSituacaoCadastral.setText("");
        jObsAdvogado.setText("");
        jRG.setText("");
        jCPF.setText("");
        jOAB.setText("");
        //Habilitar/Desabilitar campos
        jDataCadastro.setEnabled(!true);
        jComboBoxStatus.setEnabled(!true);
        jNomeAdvogado.setEnabled(!true);
        jNomeMae.setEnabled(!true);
        jNomePai.setEnabled(!true);
        jSituacaoCadastral.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jOAB.setEnabled(!true);
        jObsAdvogado.setEnabled(!true);
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtWebCam.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        jBtPesquisaAdvogadoOAB.setEnabled(!true);
    }

    public void Salvar() {
        //Habilitar/Desabilitar campos
        caminhoAdvogados = null;
        jDataCadastro.setEnabled(!true);
        jComboBoxStatus.setEnabled(!true);
        jNomeAdvogado.setEnabled(!true);
        jNomeMae.setEnabled(!true);
        jNomePai.setEnabled(!true);
        jSituacaoCadastral.setEnabled(!true);
        jRG.setEnabled(!true);
        jCPF.setEnabled(!true);
        jOAB.setEnabled(!true);
        jObsAdvogado.setEnabled(!true);
        //
        jBtNovaFoto.setEnabled(!true);
        jBtExcluirFoto.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtWebCam.setEnabled(!true);
        jBtAuditoria.setEnabled(true);
        jBtPesquisaAdvogadoOAB.setEnabled(!true);
    }

    public void Cancelar() {
        if (jIDAd.getText().equals("")) {
            jDataCadastro.setDate(null);
            jComboBoxStatus.setSelectedItem("Selecione...");
            caminhoAdvogados = null;
            FotoAdvogado.setIcon(null);
            jNomeAdvogado.setText("");
            jNomeMae.setText("");
            jNomePai.setText("");
            jSituacaoCadastral.setText("");
            jObsAdvogado.setText("");
            jRG.setText("");
            jCPF.setText("");
            jOAB.setText("");
            //
            jDataCadastro.setEnabled(!true);
            jComboBoxStatus.setEnabled(!true);
            jNomeAdvogado.setEnabled(!true);
            jNomeMae.setEnabled(!true);
            jNomePai.setEnabled(!true);
            jSituacaoCadastral.setEnabled(!true);
            jRG.setEnabled(!true);
            jCPF.setEnabled(!true);
            jOAB.setEnabled(!true);
            jObsAdvogado.setEnabled(!true);
            jBtNovaFoto.setEnabled(!true);
            jBtExcluirFoto.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtWebCam.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            jBtPesquisaAdvogadoOAB.setEnabled(!true);
        } else {
            caminhoAdvogados = null;
            jDataCadastro.setEnabled(!true);
            jComboBoxStatus.setEnabled(!true);
            jNomeAdvogado.setEnabled(!true);
            jNomeMae.setEnabled(!true);
            jNomePai.setEnabled(!true);
            jSituacaoCadastral.setEnabled(!true);
            jRG.setEnabled(!true);
            jCPF.setEnabled(!true);
            jOAB.setEnabled(!true);
            jObsAdvogado.setEnabled(!true);
            jBtNovaFoto.setEnabled(!true);
            jBtExcluirFoto.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtWebCam.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            jBtPesquisaAdvogadoOAB.setEnabled(true);
        }
    }

    public void pesquisaGlobalInterno() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PRONTUARIOSCRC "
                    + "WHERE NomeInternoCrc='" + jNomeAdvogado.getText() + "' "
                    + "AND MaeInternoCrc='" + jNomeMae.getText() + "'");
            conecta.rs.first();
            nome_PESQUISA = conecta.rs.getString("NomeInternoCrc");
            nomeMae_PESQUISA = conecta.rs.getString("MaeInternoCrc");
        } catch (Exception ex) {
        }
        conecta.desconecta();
    }

    public void pesquisaGlobalAdvogados() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ADVOGADOS "
                    + "WHERE NomeAdvogado='" + jNomeAdvogado.getText() + "' "
                    + "AND NomeMae='" + jNomeMae.getText() + "'");
            conecta.rs.first();
            nome_PESQUISA_AD = conecta.rs.getString("NomeAdvogado");
            nomeMae_PESQUISA_AD = conecta.rs.getString("NomeMae");
        } catch (Exception ex) {
        }
        conecta.desconecta();
    }

    public void pesquisaGlobalVisitasDiversas() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM VISITASDIVERSAS "
                    + "WHERE NomeVisita='" + jNomeAdvogado.getText() + "' "
                    + "AND NomeMae='" + jNomeMae.getText() + "'");
            conecta.rs.first();
            nome_PESQUISA_VD = conecta.rs.getString("NomeVisita");
            nomeMae_PESQUISA_VD = conecta.rs.getString("NomeMae");
        } catch (Exception ex) {
        }
        conecta.desconecta();
    }

    public void pesquisaGlobalVisitasInterno() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM VISITASINTERNO "
                    + "WHERE NomeVisita='" + jNomeAdvogado.getText() + "'");
            conecta.rs.first();
            nome_PESQUISA_VI = conecta.rs.getString("NomeVisita");
            nomeMae_PESQUISA_VI = conecta.rs.getString("ParentescoVisita");
        } catch (Exception ex) {
        }
        conecta.desconecta();
    }

    public void pesquisaGlobalColaborador() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM COLABORADOR "
                    + "INNER JOIN DOCUMENTOS "
                    + "ON COLABORADOR.IdFunc=DOCUMENTOS.IdFunc "
                    + "WHERE NomeFunc='" + jNomeAdvogado.getText() + "' "
                    + "AND NomeMae='" + jNomeMae.getText() + "'");
            conecta.rs.first();
            nome_PESQUISA_CO = conecta.rs.getString("NomeFunc");
            nomeMae_PESQUISA_CO = conecta.rs.getString("NomeMae");
        } catch (Exception ex) {
        }
        conecta.desconecta();
    }

    public void pesquisaGlobalOficialJustica() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM OFICIAL_JUSTICA "
                    + "WHERE NomeOficial='" + jNomeAdvogado.getText() + "' "
                    + "AND NomeMae='" + jNomeMae.getText() + "'");
            conecta.rs.first();
            nome_PESQUISA_OF = conecta.rs.getString("NomeOficial");
            nomeMae_PESQUISA_OF = conecta.rs.getString("NomeMae");
        } catch (Exception ex) {
        }
        conecta.desconecta();
    }

    public void pesquisarTodosAdvogados() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Advogado", "OAB"};
        conecta.abrirConexao();
        conecta.executaSQL("SELECT * FROM ADVOGADOS ORDER BY NomeAdvogado");;
        try {
            conecta.rs.first();
            do {
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdAdvogado"), conecta.rs.getString("NomeAdvogado"), conecta.rs.getString("OabAdvogado")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe dados a ser exibido!!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAdvogados.setModel(modelo);
        jTabelaAdvogados.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaAdvogados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaAdvogados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaAdvogados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAdvogados.getTableHeader().setReorderingAllowed(false);
        jTabelaAdvogados.setAutoResizeMode(jTabelaAdvogados.AUTO_RESIZE_OFF);
        jTabelaAdvogados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAdvogados();
        conecta.desconecta();
    }

    public void pesquisarNomesAdvogados(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Advogado", "OAB"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);;
        try {
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdAdvogado"), conecta.rs.getString("NomeAdvogado"), conecta.rs.getString("OabAdvogado")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não existe dados a ser exibido!!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAdvogados.setModel(modelo);
        jTabelaAdvogados.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaAdvogados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaAdvogados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaAdvogados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAdvogados.getTableHeader().setReorderingAllowed(false);
        jTabelaAdvogados.setAutoResizeMode(jTabelaAdvogados.AUTO_RESIZE_OFF);
        jTabelaAdvogados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAdvogados();
        conecta.desconecta();
    }

    public void limparTabelaAdvogados() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Advogado", "OAB"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAdvogados.setModel(modelo);
        jTabelaAdvogados.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTabelaAdvogados.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(1).setPreferredWidth(350);
        jTabelaAdvogados.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAdvogados.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTabelaAdvogados.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAdvogados.getTableHeader().setReorderingAllowed(false);
        jTabelaAdvogados.setAutoResizeMode(jTabelaAdvogados.AUTO_RESIZE_OFF);
        jTabelaAdvogados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaAdvogados() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaAdvogados.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAdvogados.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ADVOGADOS");
            conecta.rs.last();
            jIDAd.setText(conecta.rs.getString("IdAdvogado"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Nao foi possível pegar código do advogado.\nERRO: " + ex);
        }
        conecta.desconecta();
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome do Interno", "Data Entrada", "H.Entrada", "Data Saida", "H.Saida"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                // Formatar a data Entrada
                dataEntrada = conecta.rs.getString("DataEntrada");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                // Formatar a data Entrada
                dataSaida = conecta.rs.getString("DataSaida");
                String dias = dataSaida.substring(8, 10);
                String mess = dataSaida.substring(5, 7);
                String anos = dataSaida.substring(0, 4);
                dataSaida = dia + "/" + mes + "/" + ano;
                dados.add(new Object[]{conecta.rs.getInt("IdInternoCrc"), conecta.rs.getString("NomeInternoCrc"), dataEntrada, conecta.rs.getString("HorarioEntrada"), dataSaida, conecta.rs.getString("HorarioSaida")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaPesqInternosAdv.setModel(modelo);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(0).setResizable(false);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(1).setResizable(false);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(2).setResizable(false);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(3).setResizable(false);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(4).setResizable(false);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(5).setResizable(false);
        jTabelaPesqInternosAdv.getTableHeader().setReorderingAllowed(false);
        jTabelaPesqInternosAdv.setAutoResizeMode(jTabelaPesqInternosAdv.AUTO_RESIZE_OFF);
        jTabelaPesqInternosAdv.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaHistorico();
        conecta.desconecta();
    }

    public void alinharCamposTabelaHistorico() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaPesqInternosAdv.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaPesqInternosAdv.getColumnModel().getColumn(5).setCellRenderer(centralizado);
    }

    public void verificarEntAdvogados() {
        // Pesquisa na tabela ITENSADVOGADO se existe o registro
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENSADVOGADO WHERE IdAdvogado='" + jIDAd.getText() + "'");
            conecta.rs.first();
            codAdvogado = conecta.rs.getString("IdAdvogado");
            conecta.desconecta();
        } catch (SQLException ex) {
        }
        if (jIDAd.getText().equals(codAdvogado) || jIDAd.getText().equals(idAdvogado)) {
            JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo está relacionado a ITENS DE ENTRADA DE ADVOGADOS!!!");
        } else {
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENSADVOGADOINTERNOS WHERE IdAdvogado='" + jIDAd.getText() + "'");
                conecta.rs.first();
                idAdvogado = conecta.rs.getString("IdAdvogado");
                conecta.desconecta();
            } catch (SQLException e) {
            }
            if (jIDAd.getText().equals(codAdvogado) || jIDAd.getText().equals(idAdvogado)) {
                JOptionPane.showMessageDialog(rootPane, "Esse registro não poderá ser excluido, o mesmo está relacionado ao documento de ITENS ADVOGADO INTERNOS!!!");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objAdv.setIdAdvogado(Integer.valueOf(jIDAd.getText()));
                    control.excluirAdvogados(objAdv);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                    Excluir();
                    conecta.desconecta();
                }
            }
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIDAd.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserP1 = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserP1 + "'");
            conecta.rs.first();
            codigoUserGroupP1 = conecta.rs.getInt("IdUsuario");
            codigoGrupoP1 = conecta.rs.getInt("IdGrupo");
            nomeGrupoP1 = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserP1 + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoP1 = conecta.rs.getInt("IdUsuario");
            codAbrirP1 = conecta.rs.getInt("Abrir");
            codIncluirP1 = conecta.rs.getInt("Incluir");
            codAlterarP1 = conecta.rs.getInt("Alterar");
            codExcluirP1 = conecta.rs.getInt("Excluir");
            codGravarP1 = conecta.rs.getInt("Gravar");
            codConsultarP1 = conecta.rs.getInt("Consultar");
            nomeTelaP1 = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    // Executar programa externo da webcam
//    public void webCam() {
//        try {
//            Process p = Runtime.getRuntime().exec("C:\\SysConp\\MyCam/MyCam.exe");
//            if (p.exitValue() == 0) {
//                System.out.println("Programa terminou normalmente");
//            }
//        } catch (Exception e) {
//        }
//    }
}
