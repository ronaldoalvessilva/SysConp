/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleItensTipoKit;
import gestor.Controle.ControleKitHigiene;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.ItensKitHigiene;
import gestor.Modelo.LogSistema;
import gestor.Modelo.TiposKit;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloAlmoxarifado.codAlterarAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codExcluirAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codGravarAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codIncluirAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codUserAcessoAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codigoUserAL;
import static gestor.Visao.TelaModuloAlmoxarifado.nomeGrupoAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codigoUserGroupAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codigoGrupoAL;
import static gestor.Visao.TelaModuloAlmoxarifado.nomeTelaAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codAbrirAL;
import static gestor.Visao.TelaModuloAlmoxarifado.codConsultarAL;
import static gestor.Visao.TelaModuloAlmoxarifado.telaCadastroTipoKitPagamentoKitAL;
import static gestor.Visao.TelaModuloAlmoxarifado.telaCadastroTipoKitPagamentoManuAL;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ronal
 */
public class TelaTiposKitsHigieneInternos extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    TiposKit objKit = new TiposKit();
    ItensKitHigiene objItensKit = new ItensKitHigiene();
    ControleKitHigiene control = new ControleKitHigiene();
    ControleItensTipoKit controle = new ControleItensTipoKit();
    //
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Almoxarifado:Tipos de Kits de Internos:Tipos Kits";
    String nomeModuloTela2 = "Almoxarifado:Tipos de Kits de Internos:Produtos do Kit";
    // VARIÁVEIS PARA OS KITS INICIAL E 15 DIAS    
    int kitInicial = 0;
    int kitAnual = 0;
    int kitDecendial = 0;
    int kitQuinzenal = 0;
    int kitMensal = 0;
    int kitSemestral = 0;
    int kitPersonalizado = 0;
    String modulo = "A";
    float pQuantidade = 0;
    int flag;
    int acao;
    int count;
    int count1 = 0;
    String dataInicial, dataFinal, dataEmissao, dataValidade;
    String dataEntrada;
    String statusMov;
    String horaMov;
    String dataModFinal;
    String statusProd = "Ativo";
    public static double qtdItem = 0;
    public static String qtdItemTab;
    public static double qtdItemAnterior = 0; // SALDO ANTERIOR A SER CALCULADO SE FOR ALTERADO PELO USUARIO
    public static double novoSaldoAtual = 0; //SALDO CALCULADO APOS ALTERAR A QUANTIDADE DO ITEM
    //
    String nomeKit = "";
    String codLanc = "";
    int tipoKit = 0;
    String idItem = "";

    /**
     * Creates new form TelaTiposKitsHigieneInternos
     */
    public TelaTiposKitsHigieneInternos() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotoes = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jCodigoReq = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jBtPesqCodigoReq = new javax.swing.JButton();
        jLabel72 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jLabel73 = new javax.swing.JLabel();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqDatas = new javax.swing.JButton();
        jCheckBoxTodosReq = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabelaKits = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDataKit = new com.toedter.calendar.JDateChooser();
        jIdKit = new javax.swing.JTextField();
        jComboBoxStatusKit = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jCheckBoxSemestral = new javax.swing.JCheckBox();
        jCheckBoxKitInicial = new javax.swing.JCheckBox();
        jCheckBoxMensal = new javax.swing.JCheckBox();
        jCheckBoxKitQuinzenal = new javax.swing.JCheckBox();
        jCheckBoxDecendial = new javax.swing.JCheckBox();
        jCheckBoxKitAnual = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jObservacaoKit = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jFotoKit = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jCodProduto = new javax.swing.JTextField();
        jBtPesqProduto = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jCodigoBarras = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jDescricaoProduto = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxUnidade = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jQtdItem = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaProdutosKit = new javax.swing.JTable();
        jBtNovoProduto = new javax.swing.JButton();
        jBtAlterarProduto = new javax.swing.JButton();
        jBtExcluirProduto = new javax.swing.JButton();
        jBtSalvarProduto = new javax.swing.JButton();
        jBtCancelarProduto = new javax.swing.JButton();
        jBtAuditoriaProduto = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jtotalItens = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jCheckBoxKitIniciaProd = new javax.swing.JCheckBox();
        jCheckBoxKitQuinzenalProd = new javax.swing.JCheckBox();
        jCheckBoxMensalProd = new javax.swing.JCheckBox();
        jCheckBoxDecendialProd = new javax.swing.JCheckBox();
        jCheckBoxSemestralProd = new javax.swing.JCheckBox();
        jCheckBoxKitAnualProd = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Tipos de Kits de Internos :::...");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_16.png"))); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jCodigoReq.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoReq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel70.setText("Código:");

        jBtPesqCodigoReq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCodigoReq.setContentAreaFilled(false);
        jBtPesqCodigoReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCodigoReqActionPerformed(evt);
            }
        });

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel72.setText("Data Inicial:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel73.setText("Data Final:");

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqDatas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqDatas.setContentAreaFilled(false);
        jBtPesqDatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqDatasActionPerformed(evt);
            }
        });

        jCheckBoxTodosReq.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodosReq.setText("Todos");
        jCheckBoxTodosReq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosReqItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel72)
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqDatas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jCodigoReq, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCodigoReq, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxTodosReq)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel70)
                    .addComponent(jCodigoReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCodigoReq)
                    .addComponent(jCheckBoxTodosReq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel72)
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73)
                    .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqDatas))
                .addGap(42, 42, 42))
        );

        jTabelaKits.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaKits.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Tipo de Kit", "Observação"
            }
        ));
        jTabelaKits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaKitsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabelaKits);
        if (jTabelaKits.getColumnModel().getColumnCount() > 0) {
            jTabelaKits.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaKits.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaKits.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaKits.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaKits.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaKits.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaKits.getColumnModel().getColumn(3).setMinWidth(250);
            jTabelaKits.getColumnModel().getColumn(3).setMaxWidth(250);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data");

        jDataKit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataKit.setEnabled(false);

        jIdKit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdKit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdKit.setEnabled(false);

        jComboBoxStatusKit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatusKit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Inativo" }));
        jComboBoxStatusKit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatusKit.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jIdKit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBoxStatusKit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataKit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxStatusKit, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataKit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdKit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Tipos de Kits", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        grupoBotoes.add(jCheckBoxSemestral);
        jCheckBoxSemestral.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSemestral.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBoxSemestral.setText("Semestral");
        jCheckBoxSemestral.setEnabled(false);
        jCheckBoxSemestral.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxSemestralItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitInicial);
        jCheckBoxKitInicial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitInicial.setText("Inicial");
        jCheckBoxKitInicial.setEnabled(false);
        jCheckBoxKitInicial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitInicialItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxMensal);
        jCheckBoxMensal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxMensal.setForeground(new java.awt.Color(153, 0, 102));
        jCheckBoxMensal.setText("Mensal");
        jCheckBoxMensal.setEnabled(false);
        jCheckBoxMensal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMensalItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitQuinzenal);
        jCheckBoxKitQuinzenal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitQuinzenal.setForeground(new java.awt.Color(204, 0, 0));
        jCheckBoxKitQuinzenal.setText("Quinzenal");
        jCheckBoxKitQuinzenal.setEnabled(false);
        jCheckBoxKitQuinzenal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitQuinzenalItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxDecendial);
        jCheckBoxDecendial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDecendial.setForeground(new java.awt.Color(0, 153, 51));
        jCheckBoxDecendial.setText("Decendial");
        jCheckBoxDecendial.setEnabled(false);
        jCheckBoxDecendial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxDecendialItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitAnual);
        jCheckBoxKitAnual.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitAnual.setText("Anual");
        jCheckBoxKitAnual.setEnabled(false);
        jCheckBoxKitAnual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitAnualItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxKitAnual)
                    .addComponent(jCheckBoxSemestral)
                    .addComponent(jCheckBoxDecendial)
                    .addComponent(jCheckBoxMensal)
                    .addComponent(jCheckBoxKitQuinzenal)
                    .addComponent(jCheckBoxKitInicial))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxKitInicial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxKitQuinzenal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxMensal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDecendial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSemestral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxKitAnual)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jObservacaoKit.setColumns(20);
        jObservacaoKit.setRows(5);
        jScrollPane1.setViewportView(jObservacaoKit);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jBtAuditoria)
                .addComponent(jBtSair)
                .addComponent(jBtCancelar)
                .addComponent(jBtSalvar)
                .addComponent(jBtExcluir)
                .addComponent(jBtAlterar)
                .addComponent(jBtNovo))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jFotoKit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFotoKit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFotoKit, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel5, jPanel8});

        jTabbedPane1.addTab("Tipos de Kits", jPanel2);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Produtos do Kit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Código");

        jCodProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodProduto.setEnabled(false);

        jBtPesqProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqProduto.setContentAreaFilled(false);
        jBtPesqProduto.setEnabled(false);
        jBtPesqProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqProdutoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Código Barras");

        jCodigoBarras.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jCodigoBarras.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCodigoBarras.setEnabled(false);
        jCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCodigoBarrasActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Descrição do Produto");

        jDescricaoProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDescricaoProduto.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("UN");

        jComboBoxUnidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "UN", "Caixa", "Pacote", "Ml", "Kg", "Litro", "Peça", "Amp", "Kit", "PR", "Un" }));
        jComboBoxUnidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUnidade.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Qtde.");

        jQtdItem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jQtdItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jQtdItem.setEnabled(false);
        jQtdItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jQtdItemFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDescricaoProduto)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesqProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxUnidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jQtdItem, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10))
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jQtdItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqProduto)
                    .addComponent(jCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabelaProdutosKit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaProdutosKit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Descrição do Produto", "Un.", "Quant."
            }
        ));
        jTabelaProdutosKit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaProdutosKitMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabelaProdutosKit);
        if (jTabelaProdutosKit.getColumnModel().getColumnCount() > 0) {
            jTabelaProdutosKit.getColumnModel().getColumn(0).setMinWidth(40);
            jTabelaProdutosKit.getColumnModel().getColumn(0).setMaxWidth(40);
            jTabelaProdutosKit.getColumnModel().getColumn(1).setMinWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(1).setMaxWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(2).setMinWidth(300);
            jTabelaProdutosKit.getColumnModel().getColumn(2).setMaxWidth(300);
            jTabelaProdutosKit.getColumnModel().getColumn(3).setMinWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(3).setMaxWidth(50);
            jTabelaProdutosKit.getColumnModel().getColumn(4).setMinWidth(70);
            jTabelaProdutosKit.getColumnModel().getColumn(4).setMaxWidth(70);
        }

        jBtNovoProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovoProduto.setToolTipText("Novo Registro");
        jBtNovoProduto.setEnabled(false);
        jBtNovoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoProdutoActionPerformed(evt);
            }
        });

        jBtAlterarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarProduto.setToolTipText("Alterar Registro");
        jBtAlterarProduto.setEnabled(false);
        jBtAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarProdutoActionPerformed(evt);
            }
        });

        jBtExcluirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirProduto.setToolTipText("Excluir Registro");
        jBtExcluirProduto.setEnabled(false);
        jBtExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirProdutoActionPerformed(evt);
            }
        });

        jBtSalvarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarProduto.setToolTipText("Gravar Registro");
        jBtSalvarProduto.setEnabled(false);
        jBtSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarProdutoActionPerformed(evt);
            }
        });

        jBtCancelarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarProduto.setToolTipText("Cancelar Operação");
        jBtCancelarProduto.setEnabled(false);
        jBtCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarProdutoActionPerformed(evt);
            }
        });

        jBtAuditoriaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaProduto.setToolTipText("Auditoria");
        jBtAuditoriaProduto.setContentAreaFilled(false);
        jBtAuditoriaProduto.setEnabled(false);

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel68.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel68))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel68)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalItens.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalItens, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalItens, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Tipo de Kit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        grupoBotoes.add(jCheckBoxKitIniciaProd);
        jCheckBoxKitIniciaProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitIniciaProd.setText("Inicial");
        jCheckBoxKitIniciaProd.setEnabled(false);
        jCheckBoxKitIniciaProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitIniciaProdItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitQuinzenalProd);
        jCheckBoxKitQuinzenalProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitQuinzenalProd.setForeground(new java.awt.Color(204, 0, 0));
        jCheckBoxKitQuinzenalProd.setText("Quinzenal");
        jCheckBoxKitQuinzenalProd.setEnabled(false);
        jCheckBoxKitQuinzenalProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitQuinzenalProdItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxMensalProd);
        jCheckBoxMensalProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxMensalProd.setForeground(new java.awt.Color(153, 0, 102));
        jCheckBoxMensalProd.setText("Mensal");
        jCheckBoxMensalProd.setEnabled(false);
        jCheckBoxMensalProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMensalProdItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxDecendialProd);
        jCheckBoxDecendialProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDecendialProd.setForeground(new java.awt.Color(0, 153, 51));
        jCheckBoxDecendialProd.setText("Decendial");
        jCheckBoxDecendialProd.setEnabled(false);
        jCheckBoxDecendialProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxDecendialProdItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxSemestralProd);
        jCheckBoxSemestralProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxSemestralProd.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBoxSemestralProd.setText("Semestral");
        jCheckBoxSemestralProd.setEnabled(false);
        jCheckBoxSemestralProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxSemestralProdItemStateChanged(evt);
            }
        });

        grupoBotoes.add(jCheckBoxKitAnualProd);
        jCheckBoxKitAnualProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxKitAnualProd.setText("Anual");
        jCheckBoxKitAnualProd.setEnabled(false);
        jCheckBoxKitAnualProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKitAnualProdItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxKitIniciaProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxKitQuinzenalProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxMensalProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxDecendialProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSemestralProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxKitAnualProd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxKitIniciaProd)
                    .addComponent(jCheckBoxKitQuinzenalProd)
                    .addComponent(jCheckBoxMensalProd)
                    .addComponent(jCheckBoxDecendialProd)
                    .addComponent(jCheckBoxSemestralProd)
                    .addComponent(jCheckBoxKitAnualProd))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jBtNovoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtAlterarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtExcluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSalvarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtCancelarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAuditoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterarProduto, jBtCancelarProduto, jBtExcluirProduto, jBtNovoProduto, jBtSalvarProduto});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovoProduto)
                    .addComponent(jBtAlterarProduto)
                    .addComponent(jBtExcluirProduto)
                    .addComponent(jBtSalvarProduto)
                    .addComponent(jBtCancelarProduto)
                    .addComponent(jBtAuditoriaProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterarProduto, jBtAuditoriaProduto, jBtCancelarProduto, jBtExcluirProduto, jBtNovoProduto, jBtSalvarProduto});

        jTabbedPane1.addTab("Compor Kit", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(300, 30, 489, 484);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxKitAnualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitAnualItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED) {
            kitAnual = 1;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
        } else {
            kitAnual = 0;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        }
    }//GEN-LAST:event_jCheckBoxKitAnualItemStateChanged

    private void jCheckBoxDecendialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxDecendialItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED) {
            kitDecendial = 1;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
        } else {
            kitDecendial = 0;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        }
    }//GEN-LAST:event_jCheckBoxDecendialItemStateChanged

    private void jCheckBoxSemestralItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxSemestralItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED) {
            kitSemestral = 1;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
        } else {
            kitSemestral = 0;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        }
    }//GEN-LAST:event_jCheckBoxSemestralItemStateChanged

    private void jCheckBoxKitInicialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitInicialItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED) {
            kitInicial = 1;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
        } else {
            kitInicial = 0;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        }
    }//GEN-LAST:event_jCheckBoxKitInicialItemStateChanged

    private void jCheckBoxMensalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMensalItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED) {
            kitMensal = 1;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
        } else {
            kitMensal = 0;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        }
    }//GEN-LAST:event_jCheckBoxMensalItemStateChanged

    private void jCheckBoxKitQuinzenalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitQuinzenalItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED) {
            kitQuinzenal = 1;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
        } else {
            kitQuinzenal = 0;
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        }
    }//GEN-LAST:event_jCheckBoxKitQuinzenalItemStateChanged

    private void jBtPesqProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqProdutoActionPerformed
        // TODO add your handling code here:  
        TelaPesqProdutoComporKitHigiene objPesqProdKit = new TelaPesqProdutoComporKitHigiene();
        TelaModuloAlmoxarifado.jPainelAlmoxarifado.add(objPesqProdKit);
        objPesqProdKit.show();
    }//GEN-LAST:event_jBtPesqProdutoActionPerformed

    private void jCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCodigoBarrasActionPerformed
        // TODO add your handling code here:
        pQuantidade = 1;
        conecta.abrirConexao();
        conecta.executaSQL("SELECT * FROM PRODUTOS_AC "
                + "INNER JOIN LOCAL_ARMAZENAMENTO_AC "
                + "ON PRODUTOS_AC.IdLocal=LOCAL_ARMAZENAMENTO_AC.IdLocal "
                + "INNER JOIN LOTE_PRODUTOS_AC "
                + "ON PRODUTOS_AC.IdProd=LOTE_PRODUTOS_AC.IdProd "
                + "WHERE PRODUTOS_AC.CodigoBarra='" + jCodigoBarras.getText() + "' "
                + "AND PRODUTOS_AC.StatusProd='" + statusProd + "' "
                + "AND Modulo='" + modulo + "'");
        try {
            if (conecta.rs.first()) {
                jCodProduto.setText(String.valueOf(conecta.rs.getInt("IdProd")));
                jDescricaoProduto.setText(conecta.rs.getString("DescricaoProd"));
                jCodigoBarras.setText(conecta.rs.getString("CodigoBarra"));
                jComboBoxUnidade.setSelectedItem(conecta.rs.getString("UnidadeProd"));
                jQtdItem.setText(String.valueOf(pQuantidade));
            } else {
                JOptionPane.showMessageDialog(rootPane, "Produto não cadastro.");
            }
        } catch (SQLException ex) {
        }
        conecta.desconecta();

    }//GEN-LAST:event_jCodigoBarrasActionPerformed

    private void jQtdItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jQtdItemFocusLost
        // TODO add your handling code here:
//        DecimalFormat qtdReal = new DecimalFormat("###,##00.0");
//        qtdReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
//        try {
//            objItensReqMatInter.setQtdItem(qtdReal.parse(jQtdItem.getText()).floatValue());
//            objItensReqMatInter.setValorUnitarioItem(qtdReal.parse(jValorUnitarioItem.getText()).floatValue());
//            objItensReqMatInter.setValorTotalItem(qtdReal.parse(jValorTotalItem.getText()).floatValue());
//        } catch (ParseException ex) {
//        }
//        valorTotalItem = objItensReqMatInter.getQtdItem() * objItensReqMatInter.getValorUnitarioItem();
//        objItensReqMatInter.setValorTotalItem(valorTotalItem);
//        jValorTotalItem.setText(String.valueOf(Float.valueOf(valorTotalItem)));
        // jValorTotal.setText((String.valueOf(Double.parseDouble(jQtdItem.getText())* Double.parseDouble(jValorUN.getText()))));
    }//GEN-LAST:event_jQtdItemFocusLost

    private void jBtPesqCodigoReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCodigoReqActionPerformed
        // TODO add your handling code here:
        if (jIdKit.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe um código para pesquisa.");
        } else {
            pesquisarRequisicaoMateriais("SELECT * FROM KITS_HIGIENE_INTERNO "
                    + "WHERE IdKit='" + jCodigoReq.getText() + "'");
        }
    }//GEN-LAST:event_jBtPesqCodigoReqActionPerformed

    private void jBtPesqDatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqDatasActionPerformed
        // TODO add your handling code here:
        flag = 1;
        if (jDataPesqInicial.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
            jDataPesqInicial.requestFocus();
        } else {
            if (jDataPesFinal.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                jDataPesFinal.requestFocus();
            } else {
                if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                } else {
                    SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                    dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                    dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                    jTabelaKits.setVisible(true);
                    pesquisarRequisicaoMateriais("SELECT * FROM KITS_HIGIENE_INTERNO "
                            + "WHERE DataKit BETWEEN'" + dataInicial + "' "
                            + "AND '" + dataFinal + "'");
                }
            }
        }
    }//GEN-LAST:event_jBtPesqDatasActionPerformed

    private void jCheckBoxTodosReqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosReqItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.pesquisarRequisicaoMateriais("SELECT * FROM KITS_HIGIENE_INTERNO");
        } else {
            jtotalRegistros.setText("");
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBoxTodosReqItemStateChanged

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoManuAL) && codIncluirAL == 1) {
            acao = 1;
            bloquearCampos();
            bloquearBotoes();
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoManuAL) && codAlterarAL == 1) {
            acao = 2;
            bloquearCampos();
            bloquearBotoes();
            Alterar();
            statusMov = "Alterar";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here: 
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoManuAL) && codExcluirAL == 1) {
            bloquearCampos();
            bloquearBotoes();
            Excluir();
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            verificarItens();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoManuAL) && codGravarAL == 1) {
            if (jDataKit.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "É necessario informar a data do kit.");
            } else if (kitInicial == 0 && kitAnual == 0 && kitQuinzenal == 0 && kitDecendial == 0 && kitSemestral == 0 && kitMensal == 0) {
                JOptionPane.showMessageDialog(rootPane, "Informe um tipo de kit para ser entregue ao interno.");
            } else {
                objKit.setStatusKit((String) jComboBoxStatusKit.getSelectedItem());
                objKit.setDataKit(jDataKit.getDate());
                objKit.setObservacaoKit(jObservacaoKit.getText());
                // TIPOS DE PAGAMENTO KIT
                if (jCheckBoxKitInicial.isSelected()) {
                    kitInicial = 1;
                } else if (!jCheckBoxKitInicial.isSelected()) {
                    kitInicial = 0;
                }
                if (jCheckBoxKitAnual.isSelected()) {
                    kitAnual = 1;
                } else if (!jCheckBoxKitAnual.isSelected()) {
                    kitAnual = 0;
                }
                if (jCheckBoxKitQuinzenal.isSelected()) {
                    kitQuinzenal = 1;
                } else if (!jCheckBoxKitQuinzenal.isSelected()) {
                    kitQuinzenal = 0;
                }
                if (jCheckBoxDecendial.isSelected()) {
                    kitDecendial = 1;
                } else if (!jCheckBoxDecendial.isSelected()) {
                    kitDecendial = 0;
                }
                if (jCheckBoxSemestral.isSelected()) {
                    kitSemestral = 1;
                } else if (!jCheckBoxSemestral.isSelected()) {
                    kitSemestral = 0;
                }
                if (jCheckBoxMensal.isSelected()) {
                    kitMensal = 1;
                } else if (!jCheckBoxMensal.isSelected()) {
                    kitMensal = 0;
                }
                // TIPOS DE KITS
                objKit.setKitSemestral(kitSemestral);
                objKit.setKitInicial(kitInicial);
                objKit.setKitDecendial(kitDecendial);
                objKit.setKitQuinzenal(kitQuinzenal);
                objKit.setKitMensal(kitMensal);
                objKit.setKitAnual(kitAnual);
                if (acao == 1) {
                    objKit.setUsuarioInsert(nameUser);
                    objKit.setDataInsert(dataModFinal);
                    objKit.setHorarioInsert(horaMov);
                    //
                    control.incluirKitHigiene(objKit);
                    buscarCodigo();
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos();
                    bloquearBotoes();
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 2) {
                    objKit.setUsuarioUp(nameUser);
                    objKit.setDataUp(dataModFinal);
                    objKit.setHorarioUp(horaMov);
                    objKit.setIdKit(Integer.valueOf(jIdKit.getText()));
                    control.alterarKitHigiene(objKit);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    bloquearCampos();
                    bloquearBotoes();
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        bloquearCampos();
        bloquearBotoes();
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jTabelaKitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaKitsMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String IdLanc = "" + jTabelaKits.getValueAt(jTabelaKits.getSelectedRow(), 0);
            jCodigoReq.setText(IdLanc);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //                        
            bloquearCampos();
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                        + "WHERE IdKit='" + IdLanc + "'");
                conecta.rs.first();
                jIdKit.setText(String.valueOf(conecta.rs.getInt("IdKit")));
                jComboBoxStatusKit.setSelectedItem(conecta.rs.getString("StatusKit"));
                jDataKit.setDate(conecta.rs.getDate("DataKit"));
                kitInicial = conecta.rs.getInt("KitInicial");
                kitAnual = conecta.rs.getInt("KitAnual");
                kitDecendial = conecta.rs.getInt("KitDecendial");
                kitQuinzenal = conecta.rs.getInt("KitQuinzenal");
                kitMensal = conecta.rs.getInt("KitMensal");
                kitSemestral = conecta.rs.getInt("KitSemestral");
                if (kitInicial == 1) {
                    jCheckBoxKitInicial.setSelected(true);
                    jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
                } else if (kitInicial == 0) {
                    jCheckBoxKitInicial.setSelected(!true);
                }
                if (kitAnual == 1) {
                    jCheckBoxKitAnual.setSelected(true);
                    jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
                } else if (kitAnual == 0) {
                    jCheckBoxKitAnual.setSelected(!true);
                }
                if (kitDecendial == 1) {
                    jCheckBoxDecendial.setSelected(true);
                    jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
                } else if (kitDecendial == 0) {
                    jCheckBoxDecendial.setSelected(!true);
                }
                if (kitQuinzenal == 1) {
                    jCheckBoxKitQuinzenal.setSelected(true);
                    jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
                } else if (kitQuinzenal == 0) {
                    jCheckBoxKitQuinzenal.setSelected(!true);
                }
                if (kitMensal == 1) {
                    jCheckBoxMensal.setSelected(true);
                    jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
                } else if (kitMensal == 0) {
                    jCheckBoxMensal.setSelected(!true);
                }
                if (kitSemestral == 1) {
                    jCheckBoxSemestral.setSelected(true);
                    jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Full_Shopping_cart_Icon_128.png")));
                } else if (kitSemestral == 0) {
                    jCheckBoxSemestral.setSelected(!true);
                }
                jObservacaoKit.setText(conecta.rs.getString("ObservacaoKit"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa..." + e);
            }
            if (!jIdKit.getText().equals("")) {
                jBtNovoProduto.setEnabled(true);
            }
            preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "INNER JOIN KITS_HIGIENE_INTERNO "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdKit=KITS_HIGIENE_INTERNO.IdKit "
                    + "INNER JOIN PRODUTOS_AC "
                    + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                    + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + jIdKit.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaKitsMouseClicked

    private void jBtNovoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoProdutoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroTipoKitPagamentoKitAL);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoKitAL) && codIncluirAL == 1) {
            acao = 3;
            bloquearCampos();
            bloquearBotoes();
            NovoProduto();
            buscarTipoKit();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtNovoProdutoActionPerformed

    private void jBtAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarProdutoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroTipoKitPagamentoKitAL);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoKitAL) && codAlterarAL == 1) {
            acao = 4;
            bloquearCampos();
            bloquearBotoes();
            AlterarProduto();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtAlterarProdutoActionPerformed

    private void jBtExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirProdutoActionPerformed
        // TODO add your handling code here: 
        buscarAcessoUsuario(telaCadastroTipoKitPagamentoKitAL);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoKitAL) && codExcluirAL == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objItensKit.setIdItem(Integer.valueOf(idItem));
                controle.excluirItensKitHigiene(objItensKit);
                objLog2();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                        + "INNER JOIN KITS_HIGIENE_INTERNO "
                        + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdKit=KITS_HIGIENE_INTERNO.IdKit "
                        + "INNER JOIN PRODUTOS_AC "
                        + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                        + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + jIdKit.getText() + "'");
                bloquearCampos();
                bloquearBotoes();
                ExcluirProduto();
                JOptionPane.showMessageDialog(rootPane, "Registro excluído com sucesso.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtExcluirProdutoActionPerformed

    private void jBtSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarProdutoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroTipoKitPagamentoKitAL);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nomeGrupoAL.equals("ADMINISTRADORES") || codigoUserAL == codUserAcessoAL && nomeTelaAL.equals(telaCadastroTipoKitPagamentoKitAL) && codGravarAL == 1) {
            DecimalFormat qtdReal = new DecimalFormat("###,##00.0");
            qtdReal.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
            if (jCodProduto.getText().equals("") && jDescricaoProduto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o produto para o kit.");
            } else if (jComboBoxUnidade.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a unidade de armazenamento do produto.");
            } else if (jQtdItem.getText().equals("") && !jCodigoBarras.getText().equals("")) {
                pQuantidade = 1;
                objItensKit.setQuantItem(pQuantidade);
            } else if (jQtdItem.getText().equals("") && jCodigoBarras.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a quantidade");
            } else {
                try {
                    objItensKit.setQuantItem(qtdReal.parse(jQtdItem.getText()).floatValue());
                } catch (ParseException ex) {
                }
                if (kitInicial == 1) {
                    objItensKit.setKitInicial(kitInicial);
                } else if (kitQuinzenal == 1) {
                    objItensKit.setKitQuinzenal(kitQuinzenal);
                } else if (kitMensal == 1) {
                    objItensKit.setKitMensal(kitMensal);
                } else if (kitDecendial == 1) {
                    objItensKit.setKitDecendial(kitDecendial);
                } else if (kitSemestral == 1) {
                    objItensKit.setKitSemestral(kitSemestral);
                } else if (kitAnual == 1) {
                    objItensKit.setKitAnual(kitAnual);
                }
                if (acao == 3) {
                    objItensKit.setUsuarioInsert(nameUser);
                    objItensKit.setDataInsert(dataModFinal);
                    objItensKit.setHorarioInsert(horaMov);
                    objItensKit.setIdKit(Integer.valueOf(jIdKit.getText()));
                    objItensKit.setIdProd(Integer.valueOf(jCodProduto.getText()));
                    objItensKit.setNomeProduto(jDescricaoProduto.getText());
                    controle.incluirItensKitHigiene(objItensKit);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN KITS_HIGIENE_INTERNO "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdKit=KITS_HIGIENE_INTERNO.IdKit "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + jIdKit.getText() + "'");
                    bloquearCampos();
                    bloquearBotoes();
                    SalvarProduto();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 4) {
                    objItensKit.setUsuarioUp(nameUser);
                    objItensKit.setDataUp(dataModFinal);
                    objItensKit.setHorarioUp(horaMov);
                    objItensKit.setIdItem(Integer.valueOf(idItem));
                    objItensKit.setIdKit(Integer.valueOf(jIdKit.getText()));
                    objItensKit.setIdProd(Integer.valueOf(jCodProduto.getText()));
                    objItensKit.setNomeProduto(jDescricaoProduto.getText());
                    controle.alterarItensKitHigiene(objItensKit);
                    objLog2();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    preencherTabelaItens("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                            + "INNER JOIN KITS_HIGIENE_INTERNO "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdKit=KITS_HIGIENE_INTERNO.IdKit "
                            + "INNER JOIN PRODUTOS_AC "
                            + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                            + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + jIdKit.getText() + "'");
                    bloquearCampos();
                    bloquearBotoes();
                    SalvarProduto();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso não autorizado, solicite liberação ao administrador do sistema.");
        }
    }//GEN-LAST:event_jBtSalvarProdutoActionPerformed

    private void jBtCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarProdutoActionPerformed
        // TODO add your handling code here:
        bloquearCampos();
        bloquearBotoes();
        CancelarProduto();
    }//GEN-LAST:event_jBtCancelarProdutoActionPerformed

    private void jTabelaProdutosKitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaProdutosKitMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String idProduto = "" + jTabelaProdutosKit.getValueAt(jTabelaProdutosKit.getSelectedRow(), 1);
            jCodProduto.setText(idProduto);
            String nomeProduto = "" + jTabelaProdutosKit.getValueAt(jTabelaProdutosKit.getSelectedRow(), 2);
            jDescricaoProduto.setText(nomeProduto);
            idItem = "" + jTabelaProdutosKit.getValueAt(jTabelaProdutosKit.getSelectedRow(), 0);
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
            jBtAuditoria.setEnabled(!true);
            //
            jBtNovoProduto.setEnabled(true);
            jBtAlterarProduto.setEnabled(true);
            jBtExcluirProduto.setEnabled(true);
            jBtSalvarProduto.setEnabled(!true);
            jBtCancelarProduto.setEnabled(!true);
            jBtAuditoriaProduto.setEnabled(true);
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                        + "INNER JOIN PRODUTOS_AC "
                        + "ON PRODUTOS_KITS_HIGIENE_INTERNO.IdProd=PRODUTOS_AC.IdProd "
                        + "WHERE PRODUTOS_KITS_HIGIENE_INTERNO.IdKit='" + jIdKit.getText() + "' "
                        + "AND PRODUTOS_AC.DescricaoProd='" + jDescricaoProduto.getText() + "' "
                        + "AND PRODUTOS_KITS_HIGIENE_INTERNO.IdItem='" + idItem + "'");
                conecta.rs.first();
                idItem = conecta.rs.getString("IdItem");
                jCodProduto.setText(conecta.rs.getString("IdProd"));
                jDescricaoProduto.setText(conecta.rs.getString("DescricaoProd"));
                jCodigoBarras.setText(conecta.rs.getString("CodigoBarra"));
                jComboBoxUnidade.setSelectedItem(conecta.rs.getString("UnidadeProd"));
                qtdItem = conecta.rs.getFloat("QuantItem");
                DecimalFormat vi = new DecimalFormat(",###0.00");
                String vqtdItem = vi.format(qtdItem);
                jQtdItem.setText(vqtdItem);
                kitInicial = conecta.rs.getInt("KitInicial");
                kitAnual = conecta.rs.getInt("KitAnual");
                kitDecendial = conecta.rs.getInt("KitDecendial");
                kitQuinzenal = conecta.rs.getInt("KitQuinzenal");
                kitMensal = conecta.rs.getInt("KitMensal");
                kitSemestral = conecta.rs.getInt("KitSemestral");
                if (kitInicial == 1) {
                    jCheckBoxKitInicial.setSelected(true);
                } else if (kitInicial == 0) {
                    jCheckBoxKitInicial.setSelected(!true);
                }
                if (kitAnual == 1) {
                    jCheckBoxKitAnual.setSelected(true);
                } else if (kitAnual == 0) {
                    jCheckBoxKitAnual.setSelected(!true);
                }
                if (kitDecendial == 1) {
                    jCheckBoxDecendial.setSelected(true);
                } else if (kitDecendial == 0) {
                    jCheckBoxDecendial.setSelected(!true);
                }
                if (kitQuinzenal == 1) {
                    jCheckBoxKitQuinzenal.setSelected(true);
                } else if (kitQuinzenal == 0) {
                    jCheckBoxKitQuinzenal.setSelected(!true);
                }
                if (kitMensal == 1) {
                    jCheckBoxMensal.setSelected(true);
                } else if (kitMensal == 0) {
                    jCheckBoxMensal.setSelected(!true);
                }
                if (kitSemestral == 1) {
                    jCheckBoxSemestral.setSelected(true);
                } else if (kitSemestral == 0) {
                    jCheckBoxSemestral.setSelected(!true);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível selecionar o registro.\nERRO: " + e);
            }
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaProdutosKitMouseClicked

    private void jCheckBoxKitIniciaProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitIniciaProdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxKitIniciaProdItemStateChanged

    private void jCheckBoxKitQuinzenalProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitQuinzenalProdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxKitQuinzenalProdItemStateChanged

    private void jCheckBoxMensalProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMensalProdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMensalProdItemStateChanged

    private void jCheckBoxDecendialProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxDecendialProdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxDecendialProdItemStateChanged

    private void jCheckBoxSemestralProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxSemestralProdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSemestralProdItemStateChanged

    private void jCheckBoxKitAnualProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKitAnualProdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxKitAnualProdItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotoes;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarProduto;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaProduto;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarProduto;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirProduto;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoProduto;
    private javax.swing.JButton jBtPesqCodigoReq;
    private javax.swing.JButton jBtPesqDatas;
    private javax.swing.JButton jBtPesqProduto;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarProduto;
    public static javax.swing.JCheckBox jCheckBoxDecendial;
    public static javax.swing.JCheckBox jCheckBoxDecendialProd;
    private javax.swing.JCheckBox jCheckBoxKitAnual;
    private javax.swing.JCheckBox jCheckBoxKitAnualProd;
    private javax.swing.JCheckBox jCheckBoxKitIniciaProd;
    private javax.swing.JCheckBox jCheckBoxKitInicial;
    private javax.swing.JCheckBox jCheckBoxKitQuinzenal;
    private javax.swing.JCheckBox jCheckBoxKitQuinzenalProd;
    private javax.swing.JCheckBox jCheckBoxMensal;
    private javax.swing.JCheckBox jCheckBoxMensalProd;
    private javax.swing.JCheckBox jCheckBoxSemestral;
    private javax.swing.JCheckBox jCheckBoxSemestralProd;
    private javax.swing.JCheckBox jCheckBoxTodosReq;
    public static javax.swing.JTextField jCodProduto;
    public static javax.swing.JTextField jCodigoBarras;
    private javax.swing.JTextField jCodigoReq;
    private javax.swing.JComboBox<String> jComboBoxStatusKit;
    public static javax.swing.JComboBox jComboBoxUnidade;
    private com.toedter.calendar.JDateChooser jDataKit;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    public static javax.swing.JTextField jDescricaoProduto;
    private javax.swing.JLabel jFotoKit;
    public static javax.swing.JTextField jIdKit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextArea jObservacaoKit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jQtdItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaKits;
    private javax.swing.JTable jTabelaProdutosKit;
    private javax.swing.JLabel jtotalItens;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {

    }

    public void corCampos() {
        jIdKit.setBackground(Color.white);
        jComboBoxStatusKit.setBackground(Color.white);
        jDataKit.setBackground(Color.white);
        jObservacaoKit.setBackground(Color.white);
        //
        jCodProduto.setBackground(Color.white);
        jCodigoBarras.setBackground(Color.white);
        jDescricaoProduto.setBackground(Color.white);
        jComboBoxUnidade.setBackground(Color.white);
        jQtdItem.setBackground(Color.white);
    }

    public void bloquearCampos() {
        jComboBoxStatusKit.setEnabled(!true);
        jDataKit.setEnabled(!true);
        jObservacaoKit.setEnabled(!true);
        //
        jQtdItem.setEnabled(!true);
    }

    public void bloquearBotoes() {
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtNovoProduto.setEnabled(!true);
        jBtAlterarProduto.setEnabled(!true);
        jBtExcluirProduto.setEnabled(!true);
        jBtSalvarProduto.setEnabled(!true);
        jBtCancelarProduto.setEnabled(!true);
        jBtAuditoriaProduto.setEnabled(!true);
        jBtPesqProduto.setEnabled(!true);
    }

    public void Novo() {
        jIdKit.setText("");
        jComboBoxStatusKit.setSelectedItem("Ativo");
        jDataKit.setCalendar(Calendar.getInstance());
        jObservacaoKit.setText("");
        grupoBotoes.clearSelection();
        jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        //
        jCodProduto.setText("");
        jCodigoBarras.setText("");
        jDescricaoProduto.setText("");
        jComboBoxUnidade.setSelectedItem("Selecione...");
        jQtdItem.setText("");
        //
        jComboBoxStatusKit.setEnabled(true);
        jDataKit.setEnabled(true);
        jObservacaoKit.setEnabled(true);
        //        
        jCheckBoxKitInicial.setEnabled(true);
        jCheckBoxKitAnual.setEnabled(true);
        jCheckBoxDecendial.setEnabled(true);
        jCheckBoxKitQuinzenal.setEnabled(true);
        jCheckBoxSemestral.setEnabled(true);
        jCheckBoxMensal.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        jComboBoxStatusKit.setEnabled(true);
        jDataKit.setEnabled(true);
        jObservacaoKit.setEnabled(true);
        //        
        jCheckBoxKitInicial.setEnabled(true);
        jCheckBoxKitAnual.setEnabled(true);
        jCheckBoxDecendial.setEnabled(true);
        jCheckBoxKitQuinzenal.setEnabled(true);
        jCheckBoxSemestral.setEnabled(true);
        jCheckBoxMensal.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        jIdKit.setText("");
        jComboBoxStatusKit.setSelectedItem("Ativo");
        jDataKit.setDate(null);
        jObservacaoKit.setText("");
        grupoBotoes.clearSelection();
        jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
        //
        jCodProduto.setText("");
        jCodigoBarras.setText("");
        jDescricaoProduto.setText("");
        jComboBoxUnidade.setSelectedItem("Selecione...");
        jQtdItem.setText("");
        //
        jComboBoxStatusKit.setEnabled(!true);
        jDataKit.setEnabled(!true);
        jObservacaoKit.setEnabled(!true);
        //        
        jCheckBoxKitInicial.setEnabled(!true);
        jCheckBoxKitAnual.setEnabled(!true);
        jCheckBoxDecendial.setEnabled(!true);
        jCheckBoxKitQuinzenal.setEnabled(!true);
        jCheckBoxSemestral.setEnabled(!true);
        jCheckBoxMensal.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
    }

    public void Salvar() {
        jComboBoxStatusKit.setEnabled(!true);
        jDataKit.setEnabled(!true);
        jObservacaoKit.setEnabled(!true);
        //        
        jCheckBoxKitInicial.setEnabled(!true);
        jCheckBoxKitAnual.setEnabled(!true);
        jCheckBoxDecendial.setEnabled(!true);
        jCheckBoxKitQuinzenal.setEnabled(!true);
        jCheckBoxSemestral.setEnabled(!true);
        jCheckBoxMensal.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtNovoProduto.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdKit.getText().equals("")) {
            jComboBoxStatusKit.setSelectedItem("Ativo");
            jDataKit.setDate(null);
            jObservacaoKit.setText("");
            grupoBotoes.clearSelection();
            jFotoKit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Shopping_cart_Icon_96.png")));
            //
            jCodProduto.setText("");
            jCodigoBarras.setText("");
            jDescricaoProduto.setText("");
            jComboBoxUnidade.setSelectedItem("Selecione...");
            jQtdItem.setText("");
            //
            jComboBoxStatusKit.setEnabled(!true);
            jDataKit.setEnabled(!true);
            jObservacaoKit.setEnabled(!true);
            //        
            jCheckBoxKitInicial.setEnabled(!true);
            jCheckBoxKitAnual.setEnabled(!true);
            jCheckBoxDecendial.setEnabled(!true);
            jCheckBoxKitQuinzenal.setEnabled(!true);
            jCheckBoxSemestral.setEnabled(!true);
            jCheckBoxMensal.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
        } else {
            jComboBoxStatusKit.setEnabled(!true);
            jDataKit.setEnabled(!true);
            jObservacaoKit.setEnabled(!true);
            //        
            jCheckBoxKitInicial.setEnabled(!true);
            jCheckBoxKitAnual.setEnabled(!true);
            jCheckBoxDecendial.setEnabled(!true);
            jCheckBoxKitQuinzenal.setEnabled(!true);
            jCheckBoxSemestral.setEnabled(!true);
            jCheckBoxMensal.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtNovoProduto.setEnabled(true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO");
            conecta.rs.last();
            jIdKit.setText(conecta.rs.getString("IdKit"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do registro.");
        }
        conecta.desconecta();
    }

    public void verificarItens() {
        statusMov = "Excluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PRODUTOS_KITS_HIGIENE_INTERNO "
                    + "WHERE IdKit='" + jIdKit.getText() + "'");
            conecta.rs.first();
            codLanc = conecta.rs.getString("IdKit");
            if (jIdKit.getText().equals(codLanc)) {
                JOptionPane.showMessageDialog(rootPane, "Antes de excluir esse Lançamento, será necessário\nexcluir primeiro os internos relacionados a esse registro.");
            }
            conecta.desconecta();
        } catch (SQLException ex) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o interno selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objKit.setIdKit(Integer.valueOf(jIdKit.getText()));
                control.excluirKitHigiene(objKit);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(rootPane, "Registro EXCLUIDO com sucesso !!!");
                Excluir();
            }
        }
    }

    public void buscarTipoKit() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM KITS_HIGIENE_INTERNO "
                    + "WHERE IdKit='" + jIdKit.getText() + "'");
            conecta.rs.first();
            kitInicial = conecta.rs.getInt("KitInicial");
            kitAnual = conecta.rs.getInt("KitAnual");
            kitDecendial = conecta.rs.getInt("KitDecendial");
            kitQuinzenal = conecta.rs.getInt("KitQuinzenal");
            kitMensal = conecta.rs.getInt("KitMensal");
            kitSemestral = conecta.rs.getInt("KitSemestral");
            if (kitInicial == 1) {
                jCheckBoxKitIniciaProd.setSelected(true);
            } else if (kitInicial == 0) {
                jCheckBoxKitIniciaProd.setSelected(!true);
            }
            if (kitAnual == 1) {
                jCheckBoxKitAnualProd.setSelected(true);
            } else if (kitAnual == 0) {
                jCheckBoxKitAnualProd.setSelected(!true);
            }
            if (kitDecendial == 1) {
                jCheckBoxDecendialProd.setSelected(true);
            } else if (kitDecendial == 0) {
                jCheckBoxDecendialProd.setSelected(!true);
            }
            if (kitQuinzenal == 1) {
                jCheckBoxKitQuinzenalProd.setSelected(true);
            } else if (kitQuinzenal == 0) {
                jCheckBoxKitQuinzenalProd.setSelected(!true);
            }
            if (kitMensal == 1) {
                jCheckBoxMensalProd.setSelected(true);
            } else if (kitMensal == 0) {
                jCheckBoxMensalProd.setSelected(!true);
            }
            if (kitSemestral == 1) {
                jCheckBoxSemestralProd.setSelected(true);
            } else if (kitSemestral == 0) {
                jCheckBoxSemestralProd.setSelected(!true);
            }
        } catch (SQLException e) {
        }
        conecta.desconecta();
    }

    public void NovoProduto() {
        jCodProduto.setText("");
        jCodigoBarras.setText("");
        jDescricaoProduto.setText("");
        jComboBoxUnidade.setSelectedItem("Selecione...");
        jQtdItem.setText("");
        //
        jQtdItem.setEnabled(true);
        //
        jBtPesqProduto.setEnabled(true);
        jBtSalvarProduto.setEnabled(true);
        jBtAlterarProduto.setEnabled(true);
    }

    public void AlterarProduto() {
        jQtdItem.setEnabled(true);
        //
        jBtPesqProduto.setEnabled(true);
        jBtSalvarProduto.setEnabled(true);
        jBtCancelarProduto.setEnabled(true);
    }

    public void ExcluirProduto() {
        jCodProduto.setText("");
        jCodigoBarras.setText("");
        jDescricaoProduto.setText("");
        jComboBoxUnidade.setSelectedItem("Selecione...");
        jQtdItem.setText("");
        //
        jQtdItem.setEnabled(!true);
        //        
        jBtNovoProduto.setEnabled(true);
    }

    public void SalvarProduto() {
        jCodProduto.setText("");
        jCodigoBarras.setText("");
        jDescricaoProduto.setText("");
        jComboBoxUnidade.setSelectedItem("Selecione...");
        jQtdItem.setText("");
        //
        jQtdItem.setEnabled(!true);
        //
        jBtNovoProduto.setEnabled(true);
    }

    public void CancelarProduto() {
        jCodProduto.setText("");
        jCodigoBarras.setText("");
        jDescricaoProduto.setText("");
        jComboBoxUnidade.setSelectedItem("Selecione...");
        jQtdItem.setText("");
        //
        jQtdItem.setEnabled(!true);
        //
        jBtNovoProduto.setEnabled(true);
    }

    public void pesquisarRequisicaoMateriais(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Tipo Kit", "Observação"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                // Formatar a data de emissão
                dataEmissao = conecta.rs.getString("DataKit");
                String dia = dataEmissao.substring(8, 10);
                String mes = dataEmissao.substring(5, 7);
                String ano = dataEmissao.substring(0, 4);
                dataEmissao = dia + "/" + mes + "/" + ano;
                //
                kitInicial = conecta.rs.getInt("KitInicial");
                kitAnual = conecta.rs.getInt("KitAnual");
                kitDecendial = conecta.rs.getInt("KitDecendial");
                kitQuinzenal = conecta.rs.getInt("KitQuinzenal");
                kitMensal = conecta.rs.getInt("KitMensal");
                kitSemestral = conecta.rs.getInt("KitSemestral");
                if (kitInicial == 1) {
                    nomeKit = "Kit Inicial";
                } else if (kitAnual == 1) {
                    nomeKit = "Kit Anual";
                } else if (kitDecendial == 1) {
                    nomeKit = "Kit Decendial";
                } else if (kitQuinzenal == 1) {
                    nomeKit = "Kit Quinzenal";
                } else if (kitMensal == 1) {
                    nomeKit = "Kit Mensal";
                } else if (kitSemestral == 1) {
                    nomeKit = "Kit Semestral";
                }
                //
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdKit"), dataEmissao, nomeKit, conecta.rs.getString("ObservacaoKit")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem EXIBIDOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaKits.setModel(modelo);
        jTabelaKits.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaKits.getColumnModel().getColumn(0).setResizable(false);
        jTabelaKits.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaKits.getColumnModel().getColumn(1).setResizable(false);
        jTabelaKits.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaKits.getColumnModel().getColumn(2).setResizable(false);
        jTabelaKits.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaKits.getColumnModel().getColumn(3).setResizable(false);
        jTabelaKits.getTableHeader().setReorderingAllowed(false);
        jTabelaKits.setAutoResizeMode(jTabelaKits.AUTO_RESIZE_OFF);
        jTabelaKits.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabela();
        conecta.desconecta();
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Tipo Kit", "Observação"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaKits.setModel(modelo);
        jTabelaKits.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaKits.getColumnModel().getColumn(0).setResizable(false);
        jTabelaKits.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaKits.getColumnModel().getColumn(1).setResizable(false);
        jTabelaKits.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaKits.getColumnModel().getColumn(2).setResizable(false);
        jTabelaKits.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaKits.getColumnModel().getColumn(3).setResizable(false);
        jTabelaKits.getTableHeader().setReorderingAllowed(false);
        jTabelaKits.setAutoResizeMode(jTabelaKits.AUTO_RESIZE_OFF);
        jTabelaKits.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabela() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaKits.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaKits.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaKits.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void preencherTabelaItens(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Descrição Produto", "Un.", "Qtd."};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            count1 = 0;
            do {
                count1 = count1 + 1;
                qtdItem = conecta.rs.getFloat("QuantItem");
                DecimalFormat vi = new DecimalFormat(",###0.00");
                String vqtdItem = vi.format(qtdItem);
                qtdItemTab = vqtdItem;
                //
                jtotalItens.setText(Integer.toString(count1)); // Converter inteiro em string para exibir na tela 
                dados.add(new Object[]{conecta.rs.getInt("IdItem"), conecta.rs.getInt("IdProd"), conecta.rs.getString("DescricaoProd"), conecta.rs.getString("UnidadeProd"), qtdItemTab});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaProdutosKit.setModel(modelo);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setResizable(false);
        jTabelaProdutosKit.getTableHeader().setReorderingAllowed(false);
        jTabelaProdutosKit.setAutoResizeMode(jTabelaProdutosKit.AUTO_RESIZE_OFF);
        jTabelaProdutosKit.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaItens();
        conecta.desconecta();
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Item", "Código", "Descrição Produto", "Un.", "Qtd."};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaProdutosKit.setModel(modelo);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTabelaProdutosKit.getColumnModel().getColumn(0).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTabelaProdutosKit.getColumnModel().getColumn(2).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setResizable(false);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setPreferredWidth(50);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setResizable(false);
        jTabelaProdutosKit.getTableHeader().setReorderingAllowed(false);
        jTabelaProdutosKit.setAutoResizeMode(jTabelaProdutosKit.AUTO_RESIZE_OFF);
        jTabelaProdutosKit.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void alinharCamposTabelaItens() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaProdutosKit.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaProdutosKit.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaProdutosKit.getColumnModel().getColumn(3).setCellRenderer(direita);
        jTabelaProdutosKit.getColumnModel().getColumn(4).setCellRenderer(direita);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdKit.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog2() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela2);
        objLogSys.setIdLancMov(Integer.valueOf(jIdKit.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUserAL = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS_GRUPOS "
                    + "INNER JOIN GRUPOUSUARIOS "
                    + "ON USUARIOS_GRUPOS.IdGrupo=GRUPOUSUARIOS.IdGrupo "
                    + "WHERE IdUsuario='" + codigoUserAL + "'");
            conecta.rs.first();
            codigoUserGroupAL = conecta.rs.getInt("IdUsuario");
            codigoGrupoAL = conecta.rs.getInt("IdGrupo");
            nomeGrupoAL = conecta.rs.getString("NomeGrupo");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUserAL + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcessoAL = conecta.rs.getInt("IdUsuario");
            codAbrirAL = conecta.rs.getInt("Abrir");
            codIncluirAL = conecta.rs.getInt("Incluir");
            codAlterarAL = conecta.rs.getInt("Alterar");
            codExcluirAL = conecta.rs.getInt("Excluir");
            codGravarAL = conecta.rs.getInt("Gravar");
            codConsultarAL = conecta.rs.getInt("Consultar");
            nomeTelaAL = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

}
