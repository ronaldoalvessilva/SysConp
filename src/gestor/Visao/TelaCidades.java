/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.Visao;

import gestor.Controle.ControleCidades;
import gestor.Controle.ControleLogSistema;
import gestor.Dao.ConexaoBancoDados;
import gestor.Dao.LimiteDigitosAlfa;
import gestor.Dao.LimiteDigitosNum;
import gestor.Dao.ModeloTabela;
import gestor.Modelo.Cidades;
import gestor.Modelo.LogSistema;
import static gestor.Visao.TelaLoginSenha.nameUser;
import static gestor.Visao.TelaModuloPrincipal.jDataSistema;
import static gestor.Visao.TelaModuloPrincipal.jHoraSistema;
import java.awt.Color;
import java.sql.*;
import javax.swing.text.MaskFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Ronaldo
 */
public class TelaCidades extends javax.swing.JInternalFrame {

    MaskFormatter mcodDDD = new MaskFormatter();
    ConexaoBancoDados conecta = new ConexaoBancoDados();
    Cidades objCidades = new Cidades();
    ControleCidades control = new ControleCidades();
    ControleLogSistema controlLog = new ControleLogSistema();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "CRC:Localidades:Cidades:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String nomeUserCidade;
    //
    int acao;
    int flag;
    int codPaises;
    int codCidade;
    String nomeCidade;

    /**
     * Creates new form TelaCidades
     */
    public TelaCidades() {
        initComponents();
        formatarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jBtPesqNome = new javax.swing.JButton();
        jPesCidade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaCidade = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jDdd = new javax.swing.JTextField();
        jComboBoxPais = new javax.swing.JComboBox();
        jComboBoxUf = new javax.swing.JComboBox();
        jIdCidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jNomeCidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jBtPrimeiro = new javax.swing.JButton();
        jBtAnterior = new javax.swing.JButton();
        jBtProximo = new javax.swing.JButton();
        jBtUltimo = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Cidades :::...");
        setToolTipText("");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jBtPesqNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/pesq.png"))); // NOI18N
        jBtPesqNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqNomeActionPerformed(evt);
            }
        });

        jPesCidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Descrição:");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPesCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqNome)
                    .addComponent(jCheckBox1))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabelaCidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaCidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome Cidade", "DDD", "UF", "Pais"
            }
        ));
        jTabelaCidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaCidadeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaCidade);
        if (jTabelaCidade.getColumnModel().getColumnCount() > 0) {
            jTabelaCidade.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaCidade.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaCidade.getColumnModel().getColumn(1).setMinWidth(200);
            jTabelaCidade.getColumnModel().getColumn(1).setMaxWidth(200);
            jTabelaCidade.getColumnModel().getColumn(2).setMinWidth(50);
            jTabelaCidade.getColumnModel().getColumn(2).setMaxWidth(50);
            jTabelaCidade.getColumnModel().getColumn(3).setMinWidth(30);
            jTabelaCidade.getColumnModel().getColumn(3).setMaxWidth(30);
            jTabelaCidade.getColumnModel().getColumn(4).setMinWidth(200);
            jTabelaCidade.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jDdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jDdd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDdd.setEnabled(false);

        jComboBoxPais.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxPais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxPais.setEnabled(false);

        jComboBoxUf.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxUf.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        jComboBoxUf.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUf.setEnabled(false);

        jIdCidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jIdCidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdCidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdCidade.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("DDD:");

        jNomeCidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jNomeCidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeCidade.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Pais:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("UF:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nome:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBoxUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxPais, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jIdCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jNomeCidade))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboBoxUf, jIdCidade});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jIdCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jDdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxUf, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPais, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Notões Navegação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7856_16x16.png"))); // NOI18N
        jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPrimeiroActionPerformed(evt);
            }
        });

        jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7857_16x16.png"))); // NOI18N
        jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAnteriorActionPerformed(evt);
            }
        });

        jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7855_16x16.png"))); // NOI18N
        jBtProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtProximoActionPerformed(evt);
            }
        });

        jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/7854_16x16.png"))); // NOI18N
        jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtUltimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jBtPrimeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAnterior, jBtPrimeiro, jBtProximo, jBtUltimo});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtUltimo)
                    .addComponent(jBtProximo)
                    .addComponent(jBtAnterior)
                    .addComponent(jBtPrimeiro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAnterior, jBtPrimeiro, jBtProximo, jBtUltimo});

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões de Manutenção", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.blue));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setToolTipText("Novo Registro");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setToolTipText("Alterar Registro");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setToolTipText("Excluir Registro");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setToolTipText("Salvar Registro");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setToolTipText("Cancelar Operação");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestor/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair da Tela");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtSair, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtCancelar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtSalvar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtExcluir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtNovo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSair, jBtSalvar});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(300, 150, 484, 306);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        acao = 1;
        Novo();
        statusMov = "Incluiu";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        preencherComboNovo();
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here: 
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES WHERE IdCidade='" + jIdCidade.getText() + "'");
            conecta.rs.first();
            nomeUserCidade = conecta.rs.getString("UsuarioInsert");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
        }
        if (nomeUserCidade == null ? nameUser == null : nomeUserCidade.equals(nameUser)) {
            acao = 2;
            Alterar();
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            preencherComboNovo();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserCidade + " só esse usuário poderá modificar.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here   
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES WHERE IdCidade='" + jIdCidade.getText() + "'");
            conecta.rs.first();
            nomeUserCidade = conecta.rs.getString("UsuarioInsert");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel encontrar o usuário.");
        }
        if (nomeUserCidade == null ? nameUser == null : nomeUserCidade.equals(nameUser)) {
            buscarCidade();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Esse registro foi inserido pelo " + nomeUserCidade + " só esse usuário poderá excluir.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        if (jNomeCidade.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Nome da Cidade não podem ser em branco");
        } else {
            if (jDdd.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o DDD da cidade");
            } else {
                if (jComboBoxUf.getSelectedItem().equals("") && jComboBoxPais.getSelectedItem().equals("BRASIL")) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a UF da cidade.");
                } else {
                    objCidades.setDddCidade(Integer.valueOf(jDdd.getText()));
                    objCidades.setNomeCidade(jNomeCidade.getText());
                    objCidades.setUfCidade((String) jComboBoxUf.getSelectedItem());
                    objCidades.setNomeusuario(nameUser);
                    try {
                        conecta.abrirConexao();
                        conecta.executaSQL("SELECT * FROM CIDADES WHERE NomeCidade='" + jNomeCidade.getText() + "'");
                        conecta.rs.first();
                        nomeCidade = conecta.rs.getString("NomeCidade");
                    } catch (Exception e) {
                    }
                    if (!jComboBoxPais.getSelectedItem().equals("BRASIL")) {
                        if (acao == 1) {
                            if (jNomeCidade.getText().trim().equals(nomeCidade)) {
                                JOptionPane.showMessageDialog(rootPane, "Cidade já cadastrada.");
                            } else {
                                objCidades.setNomePais((String) jComboBoxPais.getSelectedItem());
                                control.incluirCidades(objCidades);
                                buscarID();
                                objLog();
                                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                JOptionPane.showMessageDialog(rootPane, "Cadastro Realizado com sucesso");
                                Salvar();
                            }
                        }
                        if (acao == 2) {
                            objCidades.setNomePais((String) jComboBoxPais.getSelectedItem());
                            objCidades.setIdCidade(Integer.valueOf(jIdCidade.getText()));
                            control.alterarCidades(objCidades);
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(null, "Cidade Alterado com sucesso !!!");
                            Salvar();
                        }
                    } else if (jComboBoxPais.getSelectedItem().equals("BRASIL") && !jComboBoxUf.getSelectedItem().equals("")) {
                        if (acao == 1) {
                            if (jNomeCidade.getText().trim().equals(nomeCidade)) {
                                JOptionPane.showMessageDialog(rootPane, "Cidade já cadastrada.");
                            } else {
                                objCidades.setNomePais((String) jComboBoxPais.getSelectedItem());
                                control.incluirCidades(objCidades);
                                buscarID();
                                objLog();
                                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                                JOptionPane.showMessageDialog(rootPane, "Cadastro Realizado com sucesso");
                                Salvar();
                            }
                        }
                        if (acao == 2) {
                            objCidades.setNomePais((String) jComboBoxPais.getSelectedItem());
                            objCidades.setIdCidade(Integer.valueOf(jIdCidade.getText()));
                            control.alterarCidades(objCidades);
                            objLog();
                            controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                            JOptionPane.showMessageDialog(null, "Cidade Alterado com sucesso !!!");
                            Salvar();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtPesqNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqNomeActionPerformed
        // TODO add your handling code here:
//        jIdCidade.setText(String.valueOf(objCidades.getIdCidade()));
        jDdd.setText(String.valueOf(objCidades.getDddCidade()));
        jNomeCidade.setText(objCidades.getNomeCidade());
        jComboBoxUf.setSelectedItem(objCidades.getUfCidade());
        jComboBoxPais.setSelectedItem(objCidades.getIdPais());
        flag = 1;
        if (jPesCidade.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe dados para pesquisa");
            jPesCidade.requestFocus();
        } else {
            jTabelaCidade.setVisible(true);
            preencherTabelaNome("SELECT * FROM CIDADES WHERE NomeCidade LIKE  '" + jPesCidade.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesqNomeActionPerformed

    private void jTabelaCidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaCidadeMouseClicked
        // TODO add your handling code here:
        if (flag == 1) {
            String NomeCidade = "" + jTabelaCidade.getValueAt(jTabelaCidade.getSelectedRow(), 1);
            jPesCidade.setText(NomeCidade);
            conecta.abrirConexao();
            jComboBoxPais.removeAllItems();
            jBtNovo.setEnabled(!true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtCancelar.setEnabled(true);

            try {
                conecta.executaSQL("SELECT * FROM CIDADES JOIN PAISES ON CIDADES.IdPais = PAISES.IdPais WHERE NomeCidade='" + NomeCidade + "'");
                conecta.rs.first();
                jIdCidade.setText(String.valueOf(conecta.rs.getInt("IdCidade")));
                jDdd.setText(String.valueOf(conecta.rs.getInt("DddCidade")));
                jNomeCidade.setText(conecta.rs.getString("NomeCidade"));
                jComboBoxUf.setSelectedItem(conecta.rs.getString("UfCidade"));
                jComboBoxPais.addItem(conecta.rs.getString("NomePais"));
                conecta.desconecta();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados\nERRO\n" + ex);
            }
        }
    }//GEN-LAST:event_jTabelaCidadeMouseClicked

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed
        // TODO add your handling code here:
        Primeiro();
        jIdCidade.setText(String.valueOf(objCidades.getIdCidade()));
        jDdd.setText(String.valueOf(objCidades.getDddCidade()));
        jNomeCidade.setText(objCidades.getNomeCidade());
        jComboBoxUf.setSelectedItem(objCidades.getUfCidade());
        jComboBoxPais.setSelectedItem(objCidades.getIdPais());
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        // TODO add your handling code here:
        Anterior();
        jIdCidade.setText(String.valueOf(objCidades.getIdCidade()));
        jDdd.setText(String.valueOf(objCidades.getDddCidade()));
        jNomeCidade.setText(objCidades.getNomeCidade());
        jComboBoxUf.setSelectedItem(objCidades.getUfCidade());
        jComboBoxPais.setSelectedItem(objCidades.getIdPais());
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        // TODO add your handling code here:
        jIdCidade.setText(String.valueOf(objCidades.getIdCidade()));
        jDdd.setText(String.valueOf(objCidades.getDddCidade()));
        jNomeCidade.setText(objCidades.getNomeCidade());
        jComboBoxUf.setSelectedItem(objCidades.getUfCidade());
        jComboBoxPais.setSelectedItem(objCidades.getIdPais());
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
        Proximo();
    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        // TODO add your handling code here:
        Ultimo();
        jIdCidade.setText(String.valueOf(objCidades.getIdCidade()));
        jDdd.setText(String.valueOf(objCidades.getDddCidade()));
        jNomeCidade.setText(objCidades.getNomeCidade());
        jComboBoxUf.setSelectedItem(objCidades.getUfCidade());
        jComboBoxPais.setSelectedItem(objCidades.getIdPais());
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(true);
    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            jTabelaCidade.setVisible(true);
            this.preencherTabela();
        } else {
            jTabelaCidade.setVisible(!true);
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAnterior;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtPesqNome;
    private javax.swing.JButton jBtPrimeiro;
    private javax.swing.JButton jBtProximo;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtUltimo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxPais;
    private javax.swing.JComboBox jComboBoxUf;
    private javax.swing.JTextField jDdd;
    private javax.swing.JTextField jIdCidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JTextField jNomeCidade;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    public static javax.swing.JTextField jPesCidade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaCidade;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        // Formatação do campo para aceitar apenas números e Letras
        jDdd.setDocument(new LimiteDigitosNum(3));
        jNomeCidade.setDocument(new LimiteDigitosAlfa(33));
        jPesCidade.setDocument(new LimiteDigitosAlfa(33));
        jIdCidade.setBackground(Color.white);
        jDdd.setBackground(Color.white);
        jNomeCidade.setBackground(Color.white);
    }

    public void Novo() {
        // Limpar os campos
        jIdCidade.setText("");
        jDdd.setText("");
        jNomeCidade.setText("");
        // Habilitar Campos
        jDdd.setEnabled(true);
        jNomeCidade.setEnabled(true);
        jComboBoxUf.setEnabled(true);
        jComboBoxPais.setEnabled(true);
        // Desabilitar Botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtPrimeiro.setEnabled(!true);
        jBtAnterior.setEnabled(!true);
        jBtProximo.setEnabled(!true);
        jBtUltimo.setEnabled(!true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        // Habilitar Campos
        jDdd.setEnabled(true);
        jNomeCidade.setEnabled(true);
        jComboBoxUf.setEnabled(true);
        jComboBoxPais.setEnabled(true);
        // Desabilitar Botões
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(true);
        jBtPrimeiro.setEnabled(!true);
        jBtAnterior.setEnabled(!true);
        jBtProximo.setEnabled(!true);
        jBtUltimo.setEnabled(!true);
        jBtCancelar.setEnabled(true);

    }

    public void Excluir() {
        statusMov = "Excluir";
        horaMov = jHoraSistema.getText();
        dataModFinal = jDataSistema.getText();
        try {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir CIDADE selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objCidades.setIdCidade(Integer.valueOf(jIdCidade.getText()));
                control.excluirCidades(objCidades);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                JOptionPane.showMessageDialog(null, "Exclusão da CIDADE com sucesso!!");
                conecta.desconecta();
            }
        } catch (Exception e) {
            conecta.desconecta();
        }

        // Habilitar Campos
        jDdd.setEnabled(!true);
        jNomeCidade.setEnabled(!true);
        jComboBoxUf.setEnabled(!true);
        jComboBoxPais.setEnabled(!true);
        // Desabilitar Botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(true);
        jBtSalvar.setEnabled(!true);
        jBtPrimeiro.setEnabled(!true);
        jBtAnterior.setEnabled(!true);
        jBtProximo.setEnabled(!true);
        jBtUltimo.setEnabled(!true);
        jBtCancelar.setEnabled(true);
    }

    public void Salvar() {
        // Habilitar Campos
        jDdd.setEnabled(!true);
        jNomeCidade.setEnabled(!true);
        jComboBoxUf.setEnabled(!true);
        jComboBoxPais.setEnabled(!true);
        // Desabilitar Botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtPrimeiro.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Cancelar() {
        // Limpar os campos
        jIdCidade.setText("");
        jDdd.setText("");
        jNomeCidade.setText("");
        jComboBoxPais.removeAllItems();
        // Habilitar Campos
        jDdd.setEnabled(!true);
        jNomeCidade.setEnabled(!true);
        jComboBoxUf.setEnabled(!true);
        jComboBoxPais.setEnabled(!true);
        // Desabilitar Botões
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtPrimeiro.setEnabled(true);
        jBtAnterior.setEnabled(true);
        jBtProximo.setEnabled(true);
        jBtUltimo.setEnabled(true);
        jBtCancelar.setEnabled(!true);
    }

    public void Primeiro() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES JOIN PAISES ON CIDADES.IdPais = PAISES.IdPais");
            conecta.rs.first();
            objCidades.setIdCidade(conecta.rs.getInt("IdCidade"));
            objCidades.setDddCidade(conecta.rs.getInt("DddCidade"));
            objCidades.setNomeCidade(conecta.rs.getString("NomeCidade"));
            objCidades.setUfCidade(conecta.rs.getString("UfCidade"));
            jComboBoxPais.addItem(conecta.rs.getString("NomePais"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Inicio de arquivo!!!");
        }
    }

    public void Anterior() {
        try {
            conecta.rs.previous();
            objCidades.setIdCidade(conecta.rs.getInt("IdCidade"));
            objCidades.setDddCidade(conecta.rs.getInt("DddCidade"));
            objCidades.setNomeCidade(conecta.rs.getString("NomeCidade"));
            objCidades.setUfCidade(conecta.rs.getString("UfCidade"));
            jComboBoxPais.addItem(conecta.rs.getString("NomePais"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existe mais registro a ser exibido");
        }
    }

    public void Proximo() {
        try {
            conecta.rs.next();
            objCidades.setIdCidade(conecta.rs.getInt("IdCidade"));
            objCidades.setDddCidade(conecta.rs.getInt("DddCidade"));
            objCidades.setNomeCidade(conecta.rs.getString("NomeCidade"));
            objCidades.setUfCidade(conecta.rs.getString("UfCidade"));
            jComboBoxPais.addItem(conecta.rs.getString("NomePais"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existe mais registro a ser exibido !!!");
        }
    }

    public void Ultimo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES JOIN PAISES ON CIDADES.IdPais = PAISES.IdPais");
            conecta.rs.last();
            objCidades.setIdCidade(conecta.rs.getInt("IdCidade"));
            objCidades.setDddCidade(conecta.rs.getInt("DddCidade"));
            objCidades.setNomeCidade(conecta.rs.getString("NomeCidade"));
            objCidades.setUfCidade(conecta.rs.getString("UfCidade"));
            jComboBoxPais.addItem(conecta.rs.getString("NomePais"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Final de arquivo!!\n\n ATENÇÃO");
        }
    }

    public void preencherTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome Cidade", "DDD", "UF", "País"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES JOIN PAISES ON CIDADES.IdPais=PAISES.IdPais");
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdCidade"), conecta.rs.getString("NomeCidade"), conecta.rs.getInt("DddCidade"), conecta.rs.getString("UfCidade"), conecta.rs.getString("NomePais")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaCidade.setModel(modelo);
        jTabelaCidade.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaCidade.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCidade.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabelaCidade.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCidade.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTabelaCidade.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCidade.getColumnModel().getColumn(3).setPreferredWidth(30);
        jTabelaCidade.getColumnModel().getColumn(3).setResizable(false);
        jTabelaCidade.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTabelaCidade.getColumnModel().getColumn(4).setResizable(false);
        jTabelaCidade.getTableHeader().setReorderingAllowed(false);
        jTabelaCidade.setAutoResizeMode(jTabelaCidade.AUTO_RESIZE_OFF);
        jTabelaCidade.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        //   conecta.desconecta();

    }
// Pesquisar Grupo de usuario para gravar na tabela de usuarios (INSERT)

    public void buscarPais(String nome) {
        //     jComboBoxGrupo.removeAllItems();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PAISES WHERE NomePais='" + nome + "'");
            conecta.rs.first();
            codPaises = conecta.rs.getInt("IdPais");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!" + ex);
        }
        conecta.desconecta();
    }

    // MetódO para listar todos os paises
    public void preencherComboNovo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM PAISES ORDER BY NomePais");
            conecta.rs.first();
            do {
                jComboBoxPais.addItem(conecta.rs.getString("NomePais"));
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Existe dados a serem exibidos !!!");
        }
        conecta.desconecta();
    }

    public void preencherTabelaNome(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Nome Cidade", "DDD"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("IdCidade"), conecta.rs.getString("NomeCidade"), conecta.rs.getInt("DddCidade")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS \nPara pesquisar TODOS OS REGISTROS");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaCidade.setModel(modelo);
        jTabelaCidade.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaCidade.getColumnModel().getColumn(0).setResizable(false);
        jTabelaCidade.getColumnModel().getColumn(1).setPreferredWidth(240);
        jTabelaCidade.getColumnModel().getColumn(1).setResizable(false);
        jTabelaCidade.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTabelaCidade.getColumnModel().getColumn(2).setResizable(false);
        jTabelaCidade.getTableHeader().setReorderingAllowed(false);
        jTabelaCidade.setAutoResizeMode(jTabelaCidade.AUTO_RESIZE_OFF);
        jTabelaCidade.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conecta.desconecta();
    }

    public void buscarCidade() {
        // Pesquisa na tabela FUNCIONÁRIOS se a cidade existe. Caso exista não apagar.
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM FUNCIONARIOS WHERE IdCidade='" + jIdCidade.getText() + "'");
            conecta.rs.first();
            codCidade = conecta.rs.getInt("IdCidade");
            if (codCidade != 0) {
                JOptionPane.showMessageDialog(rootPane, "Cidade não poderá ser excluída, existe registro relacionado");
                conecta.desconecta();
            } else {
                conecta.abrirConexao();
                conecta.executaSQL("SELECT * FROM PRONTUARIOSCRC WHERE IdCidade='" + jIdCidade.getText() + "'");
                conecta.rs.first();
                codCidade = conecta.rs.getInt("IdCidade");
                if (codCidade != 0) {
                    JOptionPane.showMessageDialog(rootPane, "Cidade não poderá ser excluída, existe registro relacionado");
                    conecta.desconecta();
                }
            }
        } catch (SQLException ex) {
            Excluir();
        }
    }

    public void buscarID() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CIDADES");
            conecta.rs.last();
            jIdCidade.setText(conecta.rs.getString("IdCidade"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possivel obter o código da cidade.\nERRO:" + ex);
        }
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdCidade.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
