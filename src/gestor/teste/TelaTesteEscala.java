/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestor.teste;

import gestor.Visao.TelaCronogramaEscala;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ronal
 */
public class TelaTesteEscala extends javax.swing.JDialog {

    String dataInicial;
    String dataFinal;
    //
    int totalDias = 0;
    Date dataBase = null;
    Date vencimento = null;
    String dataI;
    String dataF;
    //
    long diferencaMS;
    long diferencaSegundos;
    long diferencaMinutos;
    long diferencaHoras;
    long diferencaDias;
    //
    DateUtils dateUtils = new DateUtils();
    int inteiro = 0;
    Date d1;
    Date d3;
    Date d4;
    int pDIAS_FOLGA = 0;
    String dataPrimeiraFolga;
    String pSITUACAO_TRABALHO_folga = "";
    //
    String data1 = null;
    String data2 = null;
    int opcao = 0;

    /**
     * Creates new form TelaTesteEscala
     */
    public TelaTesteEscala(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDataInicial = new com.toedter.calendar.JDateChooser();
        jDataFinal = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jDataPrimeiraFoga = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Data Inicial");

        jLabel2.setText("Data Final");

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDataInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setText("Primeira Folga");

        jDataPrimeiraFoga.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDataInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jDataPrimeiraFoga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jButton1)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDataPrimeiraFoga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(65, 65, 65))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
        dataPrimeiraFolga = formatoAmerica.format(jDataPrimeiraFoga.getDate().getTime());
        if (jDataInicial.getDate().after(jDataFinal.getDate())) {
            JOptionPane.showMessageDialog(rootPane, "Data Inicial n√£o pode ser maior que data final");
        } else {
            calculoDias();
            CALCULAR_trabalho();
            CALCULAR_DIAS_folgas_1X1();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTesteEscala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTesteEscala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTesteEscala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTesteEscala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaTesteEscala dialog = new TelaTesteEscala(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDataFinal;
    private com.toedter.calendar.JDateChooser jDataInicial;
    private com.toedter.calendar.JDateChooser jDataPrimeiraFoga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    public void calculoDias() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
        dataInicial = formatoAmerica.format(jDataInicial.getDate().getTime());
        dataFinal = formatoAmerica.format(jDataFinal.getDate().getTime());
        try {
            dataBase = sdf.parse(dataInicial);
            vencimento = sdf.parse(dataFinal);
            long diferencaMS = vencimento.getTime() - dataBase.getTime();
            long diferencaSegundos = diferencaMS / 1000;
            long diferencaMinutos = diferencaSegundos / 60;
            long diferencaHoras = diferencaMinutos / 60;
            long diferencaDias = diferencaHoras / 24;
            totalDias = (int) (long) diferencaDias;
            System.out.println(diferencaMS);
            System.out.println(diferencaSegundos);
            System.out.println(diferencaMinutos);
            System.out.println(diferencaHoras);
            System.out.println(diferencaDias);
        } catch (ParseException ex) {
            Logger.getLogger(TelaTesteEscala.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void CALCULAR_trabalho() {
        pSITUACAO_TRABALHO_folga = "TRABALHANDO";
        for (int i = 0; i < totalDias; i++) {
            try {
                d1 = new SimpleDateFormat("dd/MM/yyyy").parse(dataInicial);
                Date d2 = dateUtils.addDate(Calendar.DAY_OF_MONTH, inteiro, d1);
                System.out.print("Data da Escala: " + d2 + " STATUS: " + pSITUACAO_TRABALHO_folga + "\n");
                ++inteiro;
            } catch (ParseException ex) {
                Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void CALCULAR_DIAS_folgas_1X1() {

        pDIAS_FOLGA = 0;
        pSITUACAO_TRABALHO_folga = "FOLGA";
        for (int i = 0; i < totalDias; i++) {
            try {
                d3 = new SimpleDateFormat("dd/MM/yyyy").parse(dataPrimeiraFolga);
                d4 = dateUtils.addDate(Calendar.DAY_OF_MONTH, pDIAS_FOLGA, d3);
                System.out.print("Data da Escala: " + d4 + " STATUS: " + pSITUACAO_TRABALHO_folga + "\n");
            } catch (ParseException ex) {
                Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
            }
            ++pDIAS_FOLGA;
            COMPRARA_datas(d3, d4);
            if (opcao == 0) {
                --pDIAS_FOLGA;
            } else if (opcao == 1) {
                ++pDIAS_FOLGA;
            } else if (opcao == 2) {
                ++pDIAS_FOLGA;
            }
        }

    }

    public void COMPRARA_datas(Date a, Date b) {
        SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
        data1 = formatoAmerica.format(jDataInicial.getDate().getTime());
        data2 = formatoAmerica.format(jDataPrimeiraFoga.getDate().getTime());
        try {
            a = new SimpleDateFormat("dd/MM/yyyy").parse(data1);
            b = new SimpleDateFormat("dd/MM/yyyy").parse(data2);
            a.compareTo(b);
            if (a.after(b)) {
                opcao = 0;
                // DATA a MAIOR QUE b
            } else if (a.before(b)) {
                opcao = 1;
                //DATA a MENOR b
            } else if (a.equals(b)) {
                opcao = 2;
                //DATAS IGUAIS
            }
        } catch (ParseException ex) {
            Logger.getLogger(TelaTesteEscala.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
