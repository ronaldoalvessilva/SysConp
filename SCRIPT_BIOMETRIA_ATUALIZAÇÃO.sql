-- ADICIONAR CAMPOS NA TABELA VISITAS DE INTERNOS PARA CADASTRO DE BIOMETRIA - 04/03/2017
-- BANCOS DE DADOS: ITABUNA, LAURO DE FREITAS E VITORIA DA CONQUISTA

USE DB_SOCIALIZA_CPMS
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASINTERNO') AND NAME = 'BiometriaDedo1')
   ALTER TABLE VISITASINTERNO ADD BiometriaDedo1 VARBINARY(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASINTERNO') AND NAME = 'BiometriaDedo2')
   ALTER TABLE VISITASINTERNO ADD BiometriaDedo2 VARBINARY(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASINTERNO') AND NAME = 'BiometriaDedo3')
   ALTER TABLE VISITASINTERNO ADD BiometriaDedo3 VARBINARY(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASINTERNO') AND NAME = 'BiometriaDedo4')
   ALTER TABLE VISITASINTERNO ADD BiometriaDedo4 VARBINARY(MAX) NULL

-- ADICIONAR CAMPO NA TABELA ITENSFAMILIAR
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSFAMILIAR') AND NAME = 'TipoOperacao')
   ALTER TABLE ITENSFAMILIAR ADD TipoOperacao VARCHAR(13) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSFAMILIAR') AND NAME = 'AssinaturaEntrada')
   ALTER TABLE ITENSFAMILIAR ADD AssinaturaEntrada VARBINARY(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSFAMILIAR') AND NAME = 'AssinaturaSaida')
   ALTER TABLE ITENSFAMILIAR ADD AssinaturaSaida VARBINARY(MAX) NULL


-- ADICIONAR CAMPOS NA TABELA PARAMETROS PARA CAMINHO DE GRAVAÇÃO DOS TEMPLATES E IMAGENS DA BIOMETRIA
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'CaminhoImagemServicoSocial')
   ALTER TABLE PARAMETROSCRC ADD CaminhoImagemServicoSocial VARCHAR(300) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'CaminhoImagemCRCInterno')
   ALTER TABLE PARAMETROSCRC ADD CaminhoImagemCRCInterno VARCHAR(300) NULL

-- TABELA DE BIOMETRIA DE INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('BIOMETRIA_INTERNOS'))
	CREATE TABLE BIOMETRIA_INTERNOS
	(
	IdBioInter INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	DataCadastro DATETIME NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	BiometriaDedo1 VARBINARY(MAX) NULL,
	BiometriaDedo2 VARBINARY(MAX) NULL,
	BiometriaDedo3 VARBINARY(MAX) NULL,
	BiometriaDedo4 VARBINARY(MAX) NULL,
	CaminhoImagemDedo1 VARCHAR(200) NULL,
	CaminhoImagemDedo2 VARCHAR(200) NULL,
	CaminhoImagemDedo3 VARCHAR(200) NULL,
	CaminhoImagemDedo4 VARCHAR(200) NULL,
	CaminhoImagemDedo5 VARCHAR(200) NULL,
	CaminhoImagemDedo6 VARCHAR(200) NULL,
	CaminhoImagemDedo7 VARCHAR(200) NULL,
	CaminhoImagemDedo8 VARCHAR(200) NULL,
	CaminhoImagemDedo9 VARCHAR(200) NULL,
	CaminhoImagemDedo10 VARCHAR(200) NULL,
	UsuarioInsert VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,		
	HorarioInsert VARCHAR(10) NULL,	
	UsuarioUp VARCHAR(50) NULL,	
	DataUp VARCHAR(20) NULL,		
	HorarioUp VARCHAR(10) NULL,	
	)

-- TABELA DE PAGAMENTO DO KIT DO INTERNO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PAGAMENTO_KIT_INTERNOS'))
	CREATE TABLE PAGAMENTO_KIT_INTERNOS
	(
	IdPagto INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusLanc VARCHAR(20) NULL,
	DataLanc DATETIME NULL,
	Responsavel VARCHAR(200) NULL,
	HoraInicio VARCHAR(30) NULL,
	HoraTermino VARCHAR(30) NULL,
	IdRegistro INT NULL,
	TipoKit VARCHAR(100) NULL,
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,		
	HorarioInsert VARCHAR(10) NULL,	
	UsuarioUp VARCHAR(50) NULL,	
	DataUp VARCHAR(20) NULL,		
	HorarioUp VARCHAR(10) NULL,	
	)

-- ITENS PAGAMENTO DO KIT DO INTERNO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS'))
	CREATE TABLE ITENS_PAGAMENTO_KIT_INTERNOS
	(
	IdItem INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdPagto INT FOREIGN KEY REFERENCES PAGAMENTO_KIT_INTERNOS(IdPagto) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
--	Copo INT NULL,
--	Prato INT NULL,
--	Colher INT NULL,
--	Vasilha INT NULL,
--	Garfo INT NULL,
--	Absorvente INT NULL,
--	Bermuda INT NULL,
--	Colchas INT NULL,
--	Colchao INT NULL,
--	Toalha INT NULL,
--	Camisa INT NULL,
--	Cueca INT NULL,
--	Sandalia INT NULL,
--	CremeDental INT NULL,
--	Sabonete INT NULL,
--	PapelHigienico INT NULL,
--	Barbeador INT NULL,
--	EscovaDente INT NULL,
--	MostraTodos INT NULL,
--	KitInicial INT NULL,
--	KitQuinzenal INT NULL,
--	TipoEntrada INT NULL,
	DataEntrega DATETIME NULL,
	Horario VARCHAR(20) NULL,
	AssinaturaDigital VARBINARY(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,		
	HorarioInsert VARCHAR(10) NULL,	
	UsuarioUp VARCHAR(50) NULL,	
	DataUp VARCHAR(20) NULL,		
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS_PRODUTOS'))
	CREATE TABLE ITENS_PAGAMENTO_KIT_INTERNOS_PRODUTOS
	(
	IdItemProd INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdPagto INT FOREIGN KEY REFERENCES PAGAMENTO_KIT_INTERNOS(IdPagto) NOT NULL,
	IdItem INT FOREIGN KEY REFERENCES ITENS_PAGAMENTO_KIT_INTERNOS(IdItem) NOT NULL,
	IdProd INT FOREIGN KEY REFERENCES PRODUTOS_AC(IdProd) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	QuantProd FLOAT NULL,
	DataEntrega DATETIME NULL,
	Horario VARCHAR(20) NULL,
	AssinaturaDigitalInterno VARBINARY(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,		
	HorarioInsert VARCHAR(10) NULL,	
	UsuarioUp VARCHAR(50) NULL,	
	DataUp VARCHAR(20) NULL,		
	HorarioUp VARCHAR(10) NULL,	
	)
--- COMPLEMENTO PARA TABELA DE ITENS_PAGAMENTO_KIT_INTERNO
	
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'AssinaturaDigital')
  -- ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD AssinaturaDigital VARBINARY(MAX) NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'Cobertor')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD Cobertor INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'BolaFutSal')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD BolaFutSal INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'CalcaoJg')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD CalcaoJg INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'CamisaJg')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD CamisaJg INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'ParMeiao')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD ParMeiao INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'SabaoPo')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD SabaoPo INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'Desodorante')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD Desodorante INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'KitDecimal')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD KitDecimal INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'KitSemestral')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD KitSemestral INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'KitMensal')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD KitMensal INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'KitAnual')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD KitAnual INT NULL
--IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS') AND NAME = 'KitPersonalizado')
   --ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS  ADD KitPersonalizado INT NULL


--- CAMPO PARA TABELA VERIFICA DOCUMENTOS VISITA (ADICIONADO CAMPO DO INTERNO)
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VERIFICA_DOCUMENTOS_VISITA') AND NAME = 'IdInternoCrc')
	ALTER TABLE VERIFICA_DOCUMENTOS_VISITA ADD IdInternoCrc INT NOT NULL

-- TABELA DE DEVOLUÇÃO DE DOCUMENTOS DE VISITA

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL'))
	CREATE TABLE DEVOLUCAO_DOCUMENTOS_SERVICO_SOCIAL
	(
	IdRegistro INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdDoc INT FOREIGN KEY REFERENCES DOCINTERNOS(IdDoc) NOT NULL,	
	DataDevolucao DATETIME NULL,	
	Horario VARCHAR(20) NULL,
	Documento VARCHAR(100) NULL,
	MotivoDevolucao	VARCHAR(200) NULL,	
	UsuarioInsert VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,		
	HorarioInsert VARCHAR(10) NULL,	
	UsuarioUp VARCHAR(50) NULL,	
	DataUp VARCHAR(20) NULL,		
	HorarioUp VARCHAR(10) NULL,	
	)

-- ADICIONAR NA TABELA  DOCINTERNOS DAS 3 BASES DE DADOS (25/04/2017)
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'RgVia')
   ALTER TABLE DOCINTERNOS ADD RgVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'CpfVia')
   ALTER TABLE DOCINTERNOS ADD CpfVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'CnhVia')
   ALTER TABLE DOCINTERNOS ADD CnhVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'ReservistaVia')
   ALTER TABLE DOCINTERNOS ADD ReservistaVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'CtpsVia')
   ALTER TABLE DOCINTERNOS ADD CtpsVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'CertidaoNascVia')
   ALTER TABLE DOCINTERNOS ADD CertidaoNascVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'TituloVia')
   ALTER TABLE DOCINTERNOS ADD TituloVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'CertidaoCasaVia')
   ALTER TABLE DOCINTERNOS ADD CertidaoCasaVia VARCHAR(8) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DOCINTERNOS') AND NAME = 'PassaporteVia')
   ALTER TABLE DOCINTERNOS ADD PassaporteVia VARCHAR(8) NULL

-- CAMPO DAS TABELAS COM HORÁRIO DE RETORNO
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSRETORNOMEDICO') AND NAME = 'HoraRetorno')
   ALTER TABLE ITENSRETORNOMEDICO ADD HoraRetorno VARCHAR(10) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSRETORNOAUDIENCIA') AND NAME = 'HoraRetorno')
   ALTER TABLE ITENSRETORNOAUDIENCIA ADD HoraRetorno VARCHAR(10) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSSAIDA') AND NAME = 'HoraSaida')
   ALTER TABLE ITENSSAIDA ADD HoraSaida VARCHAR(10) NULL


-- TABELA DE CONTAS INATIVOS DO FINANCEIRO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('DEPOSITO_INATIVOS'))
	CREATE TABLE DEPOSITO_INATIVOS
	(
	IdDepIna INT IDENTITY (1,1) PRIMARY KEY NOT NULL,	
	StatusLanc VARCHAR(20) NULL,
	DataLanc DATETIME NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	ValorDeposito REAL NULL,
	Depositante VARCHAR(200) NULL,
	Observacao VARCHAR(300) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	UsuarioDelete VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	DataDelete VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- TABELA DE SAQUE DOS INATIVOS 

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('SAQUE_INATIVOS'))
	CREATE TABLE SAQUE_INATIVOS
	(
	IdSaqIna INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusLanc VARCHAR(20) NULL,
	DataLanc DATETIME NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	ValorSaque REAL NULL,
	Favorecido VARCHAR(200) NULL,
	ReciboSaque VARCHAR(MAX) NULL,
	Observacao VARCHAR(300) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- TABELA DE SALDO DE INATIVOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('SALDO_VALORES_INATIVOS'))
	CREATE TABLE SALDO_VALORES_INATIVOS
	(
	IdSaldoAtual INT IDENTITY (1,1) PRIMARY KEY NOT NULL,		
	DataMov DATETIME NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	IdDoc INT NULL,
	Historico VARCHAR(250) NULL,
	FavorecidoDepositante VARCHAR(300) NULL,	
	TipoMov VARCHAR(1) NULL,
	ValorMov REAL NULL,
	SaldoAtual REAL NULL,			
	)

-- TABELA DE TRANSFERÊNCIA DE VALORES DE INTERNOS ATIVOS PARA INATIVOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('TRANSFERENCIA_VALORES_INATIVOS'))
	CREATE TABLE TRANSFERENCIA_VALORES_INATIVOS
	(
	IdLanc INT IDENTITY (1,1) PRIMARY KEY NOT NULL,		
	StatusLanc VARCHAR(20) NULL,
	DataLanc DATETIME NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	TipoTransferencia VARCHAR(20) NULL,
	SaldoContaAtiva REAL NULL,	
	ValorTransferido REAL NULL,			
	Motivo VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- TABLEA DE EVADIDOS ESTAVA FALTANDO ESSES CAMPOS
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EVADIDOSIND') AND NAME = 'IdSaida')
   ALTER TABLE EVADIDOSIND ADD IdSaida INT NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EVADIDOSIND') AND NAME = 'DataSaida')
   ALTER TABLE EVADIDOSIND ADD DataSaida DATETIME NULL

--TABELA DE SAIDA DE INTERNOS DA UNIDADE

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSREGSAIDA') AND NAME = 'AssinaturaSaida')
   ALTER TABLE ITENSREGSAIDA ADD AssinaturaSaida VARBINARY(MAX) NULL

-- TABELA DE RETORNO DE INTERNO NA UNIDADE

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSREGISTRO') AND NAME = 'AssinaturaEntrada')
   ALTER TABLE ITENSREGISTRO ADD AssinaturaEntrada VARBINARY(MAX) NULL

-- TABELA DE PRONTUARIOS - INSERÇÃO DO CAMPO CNC - EM 25/07/2017

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PRONTUARIOSCRC') AND NAME = 'Cnc')
   ALTER TABLE PRONTUARIOSCRC ADD Cnc VARCHAR(20) NULL

-- TABELA DE BIOMETRIA DE COLABORADORES


IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('BIOMETRIA_COLABORADORES'))
	CREATE TABLE BIOMETRIA_COLABORADORES
	(
	IdBioFunc INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	DataCadastro DATETIME NULL,
	IdFunc INT FOREIGN KEY REFERENCES COLABORADOR(IdFunc) NOT NULL,	
	CaminhoImagemDedo1 VARCHAR(200) NULL,
	CaminhoImagemDedo2 VARCHAR(200) NULL,
	CaminhoImagemDedo3 VARCHAR(200) NULL,
	CaminhoImagemDedo4 VARCHAR(200) NULL,
	BiometriaDedo1 VARBINARY(MAX) NULL,
	BiometriaDedo2 VARBINARY(MAX) NULL,
	BiometriaDedo3 VARBINARY(MAX) NULL,
	BiometriaDedo4 VARBINARY(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- TABELA DE ITENS COLABORADOR

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSENTRADASFUNC') AND NAME = 'AssinaturaEntrada')
   ALTER TABLE ITENSENTRADASFUNC ADD AssinaturaEntrada VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSENTRADASFUNC') AND NAME = 'AssinaturaSaida')
   ALTER TABLE ITENSENTRADASFUNC ADD AssinaturaSaida VARBINARY(MAX) NULL

--  CAMINHO DAS DIGITAIS DOS COLABORADORES

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'CaminhoImagemColaboradores')
   ALTER TABLE PARAMETROSCRC ADD CaminhoImagemColaboradores VARCHAR(200) NULL

-- TABELA DE CONFERE DE INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('CONFERE_INTERNOS'))
	CREATE TABLE CONFERE_INTERNOS
	(
	IdConfere INT IDENTITY(1,1) PRIMARY KEY NOT NULL,	
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataConfere DATETIME NULL,
	DataRealizacao VARCHAR(20) NULL,
	HorarioConfere VARCHAR(20) NULL,
	AssinaturaBiometricaInterno VARBINARY(MAX) NULL,	
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,
	IdCela INT FOREIGN KEY REFERENCES CELAS(IdCela) NOT NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- NUMERO DE CELA E QUANTIDADE DE INTERNOS POR CELAS

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('CELAS') AND NAME = 'Capacidade')
   ALTER TABLE CELAS ADD Capacidade INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('CELAS') AND NAME = 'NrCela')
   ALTER TABLE CELAS ADD NrCela INT NULL

-- CAMPO DA TABELA DE REQUISIÇÃO AVULSA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REQUISICAO_AVULSA_PRODUTOS_FAR') AND NAME = 'ProdutosAV')
   ALTER TABLE REQUISICAO_AVULSA_PRODUTOS_FAR ADD ProdutosAV VARCHAR(3) NULL

-- CAMPO DO ODONTOGRAMA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ODONTOGRAMA') AND NAME = 'ParcialTotal')
   ALTER TABLE ODONTOGRAMA ADD ParcialTotal VARCHAR(60) NULL


IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'PavilhaoCelaBpa')
   ALTER TABLE PARAMETROSCRC ADD PavilhaoCelaBpa VARCHAR(15) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotosAdvogados')
   ALTER TABLE PARAMETROSCRC ADD LocalFotosAdvogados VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotosDiversos')
   ALTER TABLE PARAMETROSCRC ADD LocalFotosDiversos VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotoVisitasDiversas')
   ALTER TABLE PARAMETROSCRC ADD LocalFotoVisitasDiversas VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotosOficialJustica')
   ALTER TABLE PARAMETROSCRC ADD LocalFotosOficialJustica VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotosVisitasInternos')
   ALTER TABLE PARAMETROSCRC ADD LocalFotosVisitasInternos VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotosInternos')
   ALTER TABLE PARAMETROSCRC ADD LocalFotosInternos VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalFotosColaboradores')
   ALTER TABLE PARAMETROSCRC ADD LocalFotosColaboradores VARCHAR(200) NULL


-- REGISTRO DE ACESSO NAS DEPENDENCIAS INTERNA DA UNIDADE - R.A.D.I.U 

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_TRANSIENTES_VISITAS_DIVERSAS') AND NAME = 'AssinaturaEntrada')
   ALTER TABLE ITENS_TRANSIENTES_VISITAS_DIVERSAS ADD AssinaturaEntrada VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_TRANSIENTES_VISITAS_DIVERSAS') AND NAME = 'AssinaturaSaida')
   ALTER TABLE ITENS_TRANSIENTES_VISITAS_DIVERSAS ADD AssinaturaSaida VARBINARY(MAX) NULL


--- TIPOS DE OPERAÇÃO (CRC)
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Entradas','ENTRADA NA UNIDADE')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Retornos','RETORNO A UNIDADE')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','SAIDA TEMPORARIA')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','SAIDA ALVARA')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','SAIDA LIVRAMENTO CONDICIONAL')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','SAIDA PROGRESSAO DE REGIME')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Transferências','TRANSFERENCIA')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','SAIDA PARA AUDIENCIA')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','FUGA DA UNIDADE')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Retornos','RECAPTURA')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','OBITO')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Evasões','EVASAO')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Retornos','APRESENTACAO ESPONTANEA')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','SAIDA PARA MEDICO')
--INSERT INTO OPERACAO(TipoOp,DescricaoOp) VALUES('Saídas','OUTRAS SAIDA')

-- TABLEA DE ÓBITO DE INTERNOS FORA DA UNIDADE


IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('OBITOS_INTERNOS_EXTERNO'))
	CREATE TABLE OBITOS_INTERNOS_EXTERNO
	(
	IdLanc INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusLanc VARCHAR(20) NULL,
	TipoOp VARCHAR(100) NULL,
	NrDocSaida INT NULL,
	TipoObito INT NULL,
	DataLanc DATETIME,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	IdSaida INT NULL,
	DataSaida DATETIME NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- CAMPOS PARA TABELA DE SAIDA QUANDO AUDIENCIA, E ÓBITO DO INTERNO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSSAIDA') AND NAME = 'Obito')
   ALTER TABLE ITENSSAIDA ADD Obito VARCHAR(60) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSSAIDA') AND NAME = 'ConfirmaObito')
   ALTER TABLE ITENSSAIDA ADD ConfirmaObito VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSLABORINTERNO') AND NAME = 'Obito')
   ALTER TABLE ITENSLABORINTERNO ADD Obito VARCHAR(60) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('INTERNOS_ENTRADA_SAIDA_EDUCACAO') AND NAME = 'Obito')
   ALTER TABLE INTERNOS_ENTRADA_SAIDA_EDUCACAO ADD Obito VARCHAR(60) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('INTERNOS_SAIDA_EDUCACIONAL') AND NAME = 'Obito')
   ALTER TABLE INTERNOS_SAIDA_EDUCACIONAL ADD Obito VARCHAR(60) NULL


-- LIBERADORES DE VALORES DO INTERNO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('LIBERADORES_BANCO_VIRTUAL'))
	CREATE TABLE LIBERADORES_BANCO_VIRTUAL
	(
	IdLanc INT IDENTITY (1,1) PRIMARY KEY NOT NULL,	
	StatusLanc VARCHAR(20) NULL,		
	DataLanc DATETIME NULL,
	IdUsuario INT FOREIGN KEY REFERENCES USUARIOS(IdUsuario) NOT NULL,
	Tipo INT NULL,
	DataValidade DATETIME NULL,
	ValorLiberado REAL NULL,			
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- HISTORICO LIBERAÇÃO DE VALORES

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('HISTORICO_LIBERADORES_BANCO_VIRTUAL'))
	CREATE TABLE HISTORICO_LIBERADORES_BANCO_VIRTUAL
	(
	IdHist INT IDENTITY (1,1) PRIMARY KEY NOT NULL,		
	DataLanc DATETIME NULL,	
	IdLanc INT FOREIGN KEY REFERENCES DEPOSITO (IdLanc) NOT NULL,
	IdUsuario INT FOREIGN KEY REFERENCES USUARIOS(IdUsuario) NOT NULL,
	Tipo INT NULL,	
	ValorLiberado REAL NULL,	
	SaldoAtual REAL NULL,			
	)

-- HISTORICO DE LIBERAÇÃO DE VALORES INATIVOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('HISTORICO_LIBERADORES_BANCO_VIRTUAL_INATIVOS'))
	CREATE TABLE HISTORICO_LIBERADORES_BANCO_VIRTUAL_INATIVOS
	(
	IdHist INT IDENTITY (1,1) PRIMARY KEY NOT NULL,		
	DataLanc DATETIME NULL,	
	IdDepIna INT FOREIGN KEY REFERENCES DEPOSITO_INATIVOS (IdDepIna) NOT NULL,
	IdUsuario INT FOREIGN KEY REFERENCES USUARIOS(IdUsuario) NOT NULL,
	Tipo INT NULL,	
	ValorLiberado REAL NULL,	
	SaldoAtual REAL NULL,			
	)

-- ESTORNO DE DEPOSITO/SAQUE DE  ATIVOS E NATIVOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ESTORNO_DEPOSITO_SAQUE'))
	CREATE TABLE ESTORNO_DEPOSITO_SAQUE
	(
	IdEstorno INT IDENTITY (1,1) PRIMARY KEY NOT NULL,		
	StatusEstorno VARCHAR(20) NULL,
	DataLanc DATETIME NULL,			
	Tipo INT NULL,	
	ValorEstorno REAL NULL,	
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataRegistro DATETIME NULL,
	IdRegistro INT NULL,
	ValorDepositoSaque REAL NULL,			
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)



-- MODIFICAR O CAMPO DA TABELA ITENSVEICULOSUNIDADE (05/12/2017) MODIFICADO OS CAMPOS POR CAUSA DO CALCULO DO RELATÓRIO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSVEICULOSUNIDADE ') AND NAME = 'KmInicial')
   ALTER TABLE ITENSVEICULOSUNIDADE ADD KmInicial REAL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSVEICULOSUNIDADE ') AND NAME = 'KmFinal')
   ALTER TABLE ITENSVEICULOSUNIDADE ADD KmFinal REAL

-- CAMPO DE STATUS DE ADVOGADOS E OFICIAL DE JUSTIÇA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADVOGADOS ') AND NAME = 'StatusAdv')
   ALTER TABLE ADVOGADOS  ADD StatusAdv VARCHAR(100) NULL
   --UPDATE ADVOGADOS SET StatusAdv='Ativo'

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OFICIAL_JUSTICA ') AND NAME = 'StatusOficial')
   ALTER TABLE OFICIAL_JUSTICA  ADD StatusOficial VARCHAR(100) NULL
  -- UPDATE OFICIAL_JUSTICA SET StatusOficial='Ativo'

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VEICULOS ') AND NAME = 'StatusVei')
   ALTER TABLE VEICULOS  ADD StatusVei VARCHAR(100) NULL
  -- UPDATE VEICULOS SET StatusVei='Ativo'

--- PAGAMENTO DE ALIMENTAÇÃO - TABLET

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PAGAMENTO_REFEICAO'))
	CREATE TABLE PAGAMENTO_REFEICAO
	(
	IdRef INT IDENTITY (1,1) PRIMARY KEY NOT NULL,		
	StatusRef VARCHAR(20) NULL,
	DataLanc DATETIME NULL,		
	Responsavel VARCHAR(100) NULL,
	HorarioInicial VARCHAR(20) NULL,
	HoraTermino VARCHAR(100) NULL,	
	TipoRefeicao VARCHAR(60) NULL,		
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,	
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_REFEICAO'))
	CREATE TABLE ITENS_PAGAMENTO_REFEICAO
	(
	IdItem INT IDENTITY (1,1) PRIMARY KEY NOT NULL,	
	IdRef INT FOREIGN KEY REFERENCES PAGAMENTO_REFEICAO(IdRef) NOT NULL,			
	TipoRefeicao VARCHAR(60) NULL,		
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	DiaSemana INT NULL,	
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- PAGAMENTO DE KIT



--- TABELA DE TRANSFERENCIA FARMACIA/ENFERMARIA
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_TRANSFERENCIA_PRODUTO_FAR') AND NAME = 'DataVencLote')
   ALTER TABLE ITENS_TRANSFERENCIA_PRODUTO_FAR  ADD DataVencLote DATETIME NULL

-- TABLEA DE OPERAÇÃO - CRC

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OPERACAO') AND NAME = 'StatusOp')
   ALTER TABLE OPERACAO ADD StatusOp VARCHAR(60) NULL

-- REGISTRO DE INTERNO COM BIOMETRIA - ADMISSÃO/EVOLUCÃO - PSP

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP'))
	CREATE TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP
	(
	IdRegistro INT IDENTITY (1,1) PRIMARY KEY NOT NULL,	
	DataReg DATETIME NULL,		
	Horario VARCHAR(30) NULL,		
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	TipoAtendimento VARCHAR(80) NULL,	
	IdDepartamento INT FOREIGN KEY REFERENCES DEPARTAMENTOS(IdDepartamento) NOT NULL,
	AssinaturaDigital VARBINARY(MAX) NULL,
	Atendido VARCHAR(3) NULL,
	Impresso VARCHAR(3) NULL,
	IdAtend INT NULL,
	IdEvol INT NULL,
	DataAtendimento DATETIME NULL,
	AtendeEvol VARCHAR(3) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'AtendeEvol')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD AtendeEvol VARCHAR(3) NULL

-- PARA REGISTRO DE ATENDIMENTO DO INTERNO NA ENFERMARIA QUANDO NÃO FOR POSSIVEL UTILIZAR A BIOMETRIA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'Impresso')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD Impresso VARCHAR(3) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'IdFunc')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD IdFunc INT NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'DataAssinatura')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD DataAssinatura VARCHAR(10) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'HoraAssinatura')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD HoraAssinatura VARCHAR(10) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'Motivo')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD Motivo VARCHAR(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'AssinaturaLiberador')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD AssinaturaLiberador VARBINARY(MAX) NULL




-- PARAMETRO PARA INFORMAR QUAL USUÁRIO NO PSP LIBERA ATENDIMENTO IMPRESSO, CASO A BIOMTRIA DO INTERNO NÃO FUNCIONE POR ALGUM MOTIVO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorPRI')
   ALTER TABLE PARAMETROSCRC  ADD NomeColaboradorPRI VARCHAR(300) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorSEG')
   ALTER TABLE PARAMETROSCRC  ADD NomeColaboradorSEG VARCHAR(300) NULL
   IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorTER')
   ALTER TABLE PARAMETROSCRC  ADD NomeColaboradorTER VARCHAR(300) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorQUA')
   ALTER TABLE PARAMETROSCRC  ADD NomeColaboradorQUA VARCHAR(300) NULL
   IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorQUI')
   ALTER TABLE PARAMETROSCRC  ADD NomeColaboradorQUI VARCHAR(300) NULL





-- CAMPO ADICIONADO PARA QUE OS MÉDICOS POSSOM DESCREVER POSSÍVEIS DIAGNOSTICOS INICIAIS.

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOMEDICA') AND NAME = 'DiagnosticoInicial')
   ALTER TABLE ADMISSAOMEDICA  ADD DiagnosticoInicial VARCHAR(MAX) NULL

-- PARAMETRIZAÇÃO PARA ATENDIMENTO COM BIOMETRIA NA ENFERMARIA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'BiometriaMedicos')
   ALTER TABLE PARAMETROSCRC  ADD BiometriaMedicos VARCHAR(3) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'BiometriaEnfermeiros')
   ALTER TABLE PARAMETROSCRC  ADD BiometriaEnfermeiros VARCHAR(3) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'BiometriaTecnicos')
   ALTER TABLE PARAMETROSCRC  ADD BiometriaTecnicos VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'CarcereFem')
   ALTER TABLE PARAMETROSCRC  ADD CarcereFem VARCHAR(3) NULL

--- TABELA OCORRÊNCIA P1

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1') AND NAME = 'Fonte')
   ALTER TABLE OCORRENCIAS_P1  ADD Fonte VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1') AND NAME = 'Tamanho')
   ALTER TABLE OCORRENCIAS_P1  ADD Tamanho VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1') AND NAME = 'BtEsq')
   ALTER TABLE OCORRENCIAS_P1  ADD BtEsq INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1') AND NAME = 'BtCen')
   ALTER TABLE OCORRENCIAS_P1  ADD BtCen INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1') AND NAME = 'BtDir')
   ALTER TABLE OCORRENCIAS_P1  ADD BtDir INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1') AND NAME = 'BtJus')
   ALTER TABLE OCORRENCIAS_P1  ADD BtJus INT NULL

--- TABELA OCORRÊNCIA P1 EXTERNA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1E') AND NAME = 'Fonte')
   ALTER TABLE OCORRENCIAS_P1E  ADD Fonte VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1E') AND NAME = 'Tamanho')
   ALTER TABLE OCORRENCIAS_P1E  ADD Tamanho VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1E') AND NAME = 'BtEsq')
   ALTER TABLE OCORRENCIAS_P1E  ADD BtEsq INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1E') AND NAME = 'BtCen')
   ALTER TABLE OCORRENCIAS_P1E  ADD BtCen INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1E') AND NAME = 'BtDir')
   ALTER TABLE OCORRENCIAS_P1E  ADD BtDir INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_P1E') AND NAME = 'BtJus')
   ALTER TABLE OCORRENCIAS_P1E  ADD BtJus INT NULL


-- TABELA DE OCORRÊNCIA DA BASE UM

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA_AUXILIAR') AND NAME = 'Fonte')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA_AUXILIAR  ADD Fonte VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA_AUXILIAR') AND NAME = 'Tamanho')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA_AUXILIAR  ADD Tamanho VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA_AUXILIAR') AND NAME = 'BtEsq')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA_AUXILIAR  ADD BtEsq INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA_AUXILIAR') AND NAME = 'BtCen')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA_AUXILIAR  ADD BtCen INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA_AUXILIAR') AND NAME = 'BtDir')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA_AUXILIAR  ADD BtDir INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA_AUXILIAR') AND NAME = 'BtJus')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA_AUXILIAR  ADD BtJus INT NULL

-- TABELA DE OCORRÊNCIA DA BASE DOIS

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA') AND NAME = 'Fonte')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA ADD Fonte VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA') AND NAME = 'Tamanho')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA ADD Tamanho VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA') AND NAME = 'BtEsq')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA  ADD BtEsq INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA') AND NAME = 'BtCen')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA  ADD BtCen INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA') AND NAME = 'BtDir')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA  ADD BtDir INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIAS_BASE_SEGURANCA') AND NAME = 'BtJus')
   ALTER TABLE OCORRENCIAS_BASE_SEGURANCA  ADD BtJus INT NULL

-- TABELA DE OCORRÊNCIA DA SEGURANÇA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIASEGURANCA') AND NAME = 'Fonte')
   ALTER TABLE OCORRENCIASEGURANCA  ADD Fonte VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIASEGURANCA') AND NAME = 'Tamanho')
   ALTER TABLE OCORRENCIASEGURANCA  ADD Tamanho VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIASEGURANCA') AND NAME = 'BtEsq')
   ALTER TABLE OCORRENCIASEGURANCA  ADD BtEsq INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIASEGURANCA') AND NAME = 'BtCen')
   ALTER TABLE OCORRENCIASEGURANCA  ADD BtCen INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIASEGURANCA') AND NAME = 'BtDir')
   ALTER TABLE OCORRENCIASEGURANCA  ADD BtDir INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OCORRENCIASEGURANCA') AND NAME = 'BtJus')
   ALTER TABLE OCORRENCIASEGURANCA  ADD BtJus INT NULL

-- PARAMETRO PARA PDF

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalPDF_PI')
   ALTER TABLE PARAMETROSCRC  ADD LocalPDF_PI VARCHAR(200) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalPDF_PE')
   ALTER TABLE PARAMETROSCRC  ADD LocalPDF_PE VARCHAR(200) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalPDF_B1')
   ALTER TABLE PARAMETROSCRC  ADD LocalPDF_B1 VARCHAR(200) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LocalPDF_B2')
   ALTER TABLE PARAMETROSCRC  ADD LocalPDF_B2 VARCHAR(200) NULL

-- MODIFICAR CAMPOS DAS TABELAS

ALTER TABLE SAQUE ALTER COLUMN ValorSaque MONEY
ALTER TABLE DEPOSITO ALTER COLUMN ValorDeposito MONEY

ALTER TABLE SAQUE_INATIVOS ALTER COLUMN ValorSaque MONEY
ALTER TABLE DEPOSITO_INATIVOS ALTER COLUMN ValorDeposito MONEY

ALTER TABLE SALDOVALORES ALTER COLUMN ValorMov MONEY
ALTER TABLE SALDO_VALORES_INATIVOS ALTER COLUMN ValorMov MONEY
ALTER TABLE SALDO_VALORES_INATIVOS ALTER COLUMN SaldoAtual MONEY

ALTER TABLE TRANSFERENCIA_VALORES_INATIVOS ALTER COLUMN SaldoContaAtiva MONEY
ALTER TABLE TRANSFERENCIA_VALORES_INATIVOS ALTER COLUMN ValorTransferido MONEY

-- TELAS DE ACESSO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TELAS_ACESSO') AND NAME = 'NomeModulo')
   ALTER TABLE TELAS_ACESSO ADD NomeModulo VARCHAR(100) NULL

-- TABELA EMPRESA - (CAMPOS PARA VERSÃO)

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EMPRESA') AND NAME = 'VersaoAtual')
   ALTER TABLE EMPRESA ADD VersaoAtual VARCHAR(5) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EMPRESA') AND NAME = 'DataVersao')
   ALTER TABLE EMPRESA ADD DataVersao DATE NULL

   --- TABELA PARAMETROSCRC

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'CaminhoExecutavel')
   ALTER TABLE PARAMETROSCRC ADD CaminhoExecutavel VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'DataVersao')
   ALTER TABLE PARAMETROSCRC ADD DataVersao VARCHAR(10) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NumeroVersao')
   ALTER TABLE PARAMETROSCRC ADD NumeroVersao Float NULL


-- TABELA DE TRANSFERENCIA DE DADOS ENTRE AS UNIDADES

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PRONTUARIOSCRC_TRANSFERENCIA_UNIDADES'))
	CREATE TABLE PRONTUARIOSCRC_TRANSFERENCIA_UNIDADES
	(
	IdInternoCrc INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	DataTrans  DATETIME NULL,
	TransConf VARCHAR(3) NULL,
	UnidadeOrigem VARCHAR(350) NULL,
	UnidadeDestino VARCHAR(350) NULL,
	MatriculaCrc VARCHAR(80) NULL,
	Cnc VARCHAR(20) NULL,
	DataCadastCrc DATETIME NULL,
	DataNasciCrc DATETIME NULL,
	FotoInternoCrc VARCHAR(300) NULL,
	NomeInternoCrc VARCHAR(150) NOT NULL,
	MaeInternoCrc VARCHAR(120) NULL,
	PaiInternoCrc VARCHAR(120) NULL,
	AlcunhaCrc VARCHAR(200) NULL,
	RgInternoCrc VARCHAR(20) NULL,
	CpfInternoCrc VARCHAR(20) NULL,
	EscolaridadeCrc VARCHAR(80) NULL,
	EstadoCivilCrc VARCHAR(80) NULL,
	CartaoSus VARCHAR(100) NULL,
	SexoCrc VARCHAR(80) NULL,
	SituacaoCrc VARCHAR(100) NULL,
	IdPais INT NULL,
	IdCidade INT NULL,
	ReligiaoCrc VARCHAR(120) NULL,
	ProfissaoCrc VARCHAR(120) NULL,
	EnderecoCrc VARCHAR(300) NULL,
	BairroCrc VARCHAR(200) NULL,
	CidadeCrc VARCHAR(250) NULL,
	EstadoCrc VARCHAR(200) NULL,
	TelefoneCrc VARCHAR(20) NULL,
	Telefone1Crc VARCHAR(20) NULL,
	CelularCrc VARCHAR(20) NULL,	
	Cutis VARCHAR(20) NULL,
	Olhos VARCHAR(20) NULL,
	Cabelos VARCHAR(20) NULL,
	Barba VARCHAR(20) NULL,
	Bigode VARCHAR(20) NULL,
	Nariz VARCHAR(20) NULL,
	Boca VARCHAR(20) NULL,
	Rosto VARCHAR(20) NULL,
	Labios VARCHAR(20) NULL,
	Camisa VARCHAR(20) NULL,
	Calca VARCHAR(20) NULL,
	Sapato VARCHAR(20) NULL,
	Peso VARCHAR(20) NULL,
	Altura VARCHAR(20) NULL,
	Sinais VARCHAR(20) NULL,
	Pescoco VARCHAR(100) NULL,
	Orelhas VARCHAR(100) NULL,
	Compleicao VARCHAR(100) NULL,
	IdUnid INT NULL,
	DataEntrada DATETIME NULL,
	DataCrime DATETIME NULL,
	DataPrisao DATETIME NULL,
	DataCondenacao DATETIME NULL,
	Participacao VARCHAR(20) NULL,
	Regime VARCHAR(20) NULL,
	Pena VARCHAR(20) NULL,
	VaraCondenatoria VARCHAR(100) NULL,
	Artigo1 VARCHAR(20) NULL,
	Artigo2 VARCHAR(20) NULL,
	Artigo3 VARCHAR(20) NULL,
	Paragrafo1 VARCHAR(20) NULL,
	Paragrafo2 VARCHAR(20) NULL,
	Paragrafo3 VARCHAR(20) NULL,
	CrimeEdiondo VARCHAR(20) NULL,
	TerminoPena DATETIME NULL,	
	Identificador VARCHAR(80) NULL,
	Identificador1 VARCHAR(80) NULL,
	Identificador2 VARCHAR(80) NULL,
	Identificador3 VARCHAR(80) NULL,
	Perfil VARCHAR(80) NULL,
	RegiaoCorpo VARCHAR(80) NULL,
	RegiaoCorpo1 VARCHAR(80) NULL,
	RegiaoCorpo2 VARCHAR(80) NULL,
	RegiaoCorpo3 VARCHAR(80) NULL,   
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,	
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,	
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	DataNovaEntrada DATETIME NULL,	
	ConfirmadoExp VARCHAR(3) NULL,
	)

-- TRANSFERENCIA DE DADOS DA PORTARIA SOBRE O INTERNO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('TRANSFERENCIA_INTERNOS_PORTARIAS_UNIDADES'))
	CREATE TABLE TRANSFERENCIA_INTERNOS_PORTARIAS_UNIDADES
	(
	IdTransPortUni INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	Cnc VARCHAR(100) NULL,
	Matricula VARCHAR(100) NULL,
	NomeInterno VARCHAR(250) NULL,
	DataExp DATETIME NULL,
	HoraSaida VARCHAR(20) NULL,
	Documento VARCHAR(100) NULL,
	UnidadeOrigem VARCHAR(300) NULL,
	UnidadeDestino VARCHAR(300) NULL,
	ConfirmadoExp VARCHAR(3) NULL,
	ConfirmadoImp VARCHAR(3) NULL,
	)

-- CAMPO DA TABELA ITENSREGSAIDA PARA O LOCAL DE TRANSFERENCIA DO(S) INTERNO (S)

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSREGSAIDA') AND NAME = 'LocalSaida')
   ALTER TABLE ITENSREGSAIDA ADD LocalSaida VARCHAR(300) NULL

-- PARAMETRO PARA LOCAL DO EXECUTAVEL ANTIGO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'CaminhoExecutavelAntigo')
   ALTER TABLE PARAMETROSCRC ADD CaminhoExecutavelAntigo VARCHAR(300) NULL

-- CAMPOS DAS FOTOS NO BANCO DE DADOS - PRONTUARIOS DOS INTERNOS

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PRONTUARIOSCRC') AND NAME = 'ImagemFrente')
   ALTER TABLE PRONTUARIOSCRC ADD ImagemFrente VARBINARY(MAX) NULL

--  DADOSPENAISINTERNOS
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DADOSPENAISINTERNOS') AND NAME = 'ImagemPerfil')
   ALTER TABLE DADOSPENAISINTERNOS ADD ImagemPerfil VARBINARY(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DADOSPENAISINTERNOS') AND NAME = 'ImagemCorpo')
   ALTER TABLE DADOSPENAISINTERNOS ADD ImagemCorpo VARBINARY(MAX) NULL
   IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DADOSPENAISINTERNOS') AND NAME = 'ImagemCorpo1')
   ALTER TABLE DADOSPENAISINTERNOS ADD ImagemCorpo1 VARBINARY(MAX) NULL
   IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('DADOSPENAISINTERNOS') AND NAME = 'ImagemCorpo2')
   ALTER TABLE DADOSPENAISINTERNOS ADD ImagemCorpo2 VARBINARY(MAX) NULL

-- TABELA DE TRATAMENTOS SOLICITADOS PELOS MÉDICOS

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'StatusTipo')
   ALTER TABLE TIPOS_TRATAMENTOS ADD StatusTipo VARCHAR(30) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'DataTipo')
   ALTER TABLE TIPOS_TRATAMENTOS ADD DataTipo DATETIME NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'DescricaoTipo')
   ALTER TABLE TIPOS_TRATAMENTOS ADD DescricaoTipo VARCHAR(150) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'ObservacaoTipo')
   ALTER TABLE TIPOS_TRATAMENTOS ADD ObservacaoTipo VARCHAR(MAX) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'UsuarioInsert')
   ALTER TABLE TIPOS_TRATAMENTOS ADD UsuarioInsert VARCHAR(50) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'UsuarioUp')
   ALTER TABLE TIPOS_TRATAMENTOS ADD UsuarioUp VARCHAR(50) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'DataInsert')
   ALTER TABLE TIPOS_TRATAMENTOS ADD DataInsert VARCHAR(20) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'DataUp')
   ALTER TABLE TIPOS_TRATAMENTOS ADD DataUp VARCHAR(20) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'HorarioInsert')
   ALTER TABLE TIPOS_TRATAMENTOS ADD HorarioInsert VARCHAR(10) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('TIPOS_TRATAMENTOS') AND NAME = 'HorarioUp')
   ALTER TABLE TIPOS_TRATAMENTOS ADD HorarioUp VARCHAR(10) NULL


-- TABELA AVALIAÇÃO MÉDICA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AVALIACAO_MEDICA_PSIQUIATRICA') AND NAME = 'Fonte')
   ALTER TABLE AVALIACAO_MEDICA_PSIQUIATRICA  ADD Fonte VARCHAR(200) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AVALIACAO_MEDICA_PSIQUIATRICA') AND NAME = 'Tamanho')
   ALTER TABLE AVALIACAO_MEDICA_PSIQUIATRICA  ADD Tamanho VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AVALIACAO_MEDICA_PSIQUIATRICA') AND NAME = 'BtEsq')
   ALTER TABLE AVALIACAO_MEDICA_PSIQUIATRICA  ADD BtEsq INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AVALIACAO_MEDICA_PSIQUIATRICA') AND NAME = 'BtCen')
   ALTER TABLE AVALIACAO_MEDICA_PSIQUIATRICA  ADD BtCen INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AVALIACAO_MEDICA_PSIQUIATRICA') AND NAME = 'BtDir')
   ALTER TABLE AVALIACAO_MEDICA_PSIQUIATRICA  ADD BtDir INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AVALIACAO_MEDICA_PSIQUIATRICA') AND NAME = 'BtJus')
   ALTER TABLE AVALIACAO_MEDICA_PSIQUIATRICA  ADD BtJus INT NULL


IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PRE_LOCACAO_INTERNOS'))
	CREATE TABLE PRE_LOCACAO_INTERNOS
	(
    CodigoReg INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
    StatusReg  VARCHAR(20) NULL,
    DataReg  DATETIME NULL, 
	ObservacaoReg VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- ITENS DA TABELA DE PRÉ-LOCAÇÃO 

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_PRE_LOCACAO_INTERNOS'))
	CREATE TABLE ITENS_PRE_LOCACAO_INTERNOS
	(
    IdItem  INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
    CodigoReg INT FOREIGN KEY REFERENCES PRE_LOCACAO_INTERNOS(CodigoReg) NOT NULL,
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	IdEntrada INT FOREIGN KEY REFERENCES ENTRADALOTE(IdEntrada) NOT NULL,
	TipoPesq INT NULL,
	Confirmacao VARCHAR(3) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- TABELA DE EXPORTAÇÃO DOS INTERNOS QUE CHEGARAM NA UNIDADE PELA TRIAGEM

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_EXPORTADO_LOCACAO_INTERNOS'))
	CREATE TABLE ITENS_EXPORTADO_LOCACAO_INTERNOS
	(
    IdItem  INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
    CodigoReg INT FOREIGN KEY REFERENCES PRE_LOCACAO_INTERNOS(CodigoReg) NOT NULL,
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	TipoPesq INT NULL,
	ConfirmaBase VARCHAR(3) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- PARAMETRO PARA HABILITAR/DESABILITAR EXPORTAÇÃO DOS INTERNOS PARA BASE

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'PreLocacaoB1')
   ALTER TABLE PARAMETROSCRC  ADD PreLocacaoB1 VARCHAR(20) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'PreLocacaoB2')
   ALTER TABLE PARAMETROSCRC  ADD PreLocacaoB2 VARCHAR(20) NULL

   
-- CAMPO DA TABELA ITENSENTRADA PARA ORIENTAR NA PESQUISA DA PRÉ-LOCAÇÃO NA TRIAGEM

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSENTRADA') AND NAME = 'ConfirmaUtil')
   ALTER TABLE ITENSENTRADA  ADD ConfirmaUtil VARCHAR(3) NULL


-- CAMPOS DAS FOTOS NO BANCO DE DADOS - ADVOGADOS, VISITAS DIVERSAS, COLABORADORES, OFICIAL DE JUSTIÇA, VISITAS INTERNOS E VISITAS RELIGIOSAS

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADVOGADOS') AND NAME = 'ImagemFrenteAD')
   ALTER TABLE ADVOGADOS ADD ImagemFrenteAD VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASDIVERSAS') AND NAME = 'ImagemFrenteVD')
   ALTER TABLE VISITASDIVERSAS ADD ImagemFrenteVD VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('OFICIAL_JUSTICA') AND NAME = 'ImagemFrenteOF')
   ALTER TABLE OFICIAL_JUSTICA ADD ImagemFrenteOF VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITAS_RELIGIOSA_INTERNOS') AND NAME = 'ImagemFrenteVR')
   ALTER TABLE VISITAS_RELIGIOSA_INTERNOS ADD ImagemFrenteVR VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASINTERNO') AND NAME = 'ImagemFrenteVI')
   ALTER TABLE VISITASINTERNO ADD ImagemFrenteVI VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('COLABORADOR') AND NAME = 'ImagemFrenteCO')
   ALTER TABLE COLABORADOR ADD ImagemFrenteCO VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PERTENCES') AND NAME = 'ImagemFrentePER')
   ALTER TABLE PERTENCES ADD ImagemFrentePER VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VEICULOS') AND NAME = 'ImagemFrenteVE')
   ALTER TABLE VEICULOS ADD ImagemFrenteVE VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITASINTERNO') AND NAME = 'ImagemFrenteVI')
   ALTER TABLE VISITASINTERNO ADD ImagemFrenteVI VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('VISITAS_RELIGIOSA_INTERNOS') AND NAME = 'ImagemFrenteVR')
   ALTER TABLE VISITAS_RELIGIOSA_INTERNOS ADD ImagemFrenteVR VARBINARY(MAX) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSVISITASDIVERSAS') AND NAME = 'ImagemFrenteVI')
   ALTER TABLE ITENSVISITASDIVERSAS ADD ImagemFrenteVI VARBINARY(MAX) NULL

-- TABELA PARA DOCUMENTOS PDF DO CRC (TESTE DE GEI)

--IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('pdf'))
---	CREATE TABLE pdf
--	(
 --   id  INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
--	descricao VARCHAR(200) NULL,
--    documento VARBINARY(MAX) NULL,
--	UsuarioInsert VARCHAR(50) NULL,
--	UsuarioUp VARCHAR(50) NULL,
--	DataInsert VARCHAR(20) NULL,
--	DataUp VARCHAR(20) NULL,
--	HorarioInsert VARCHAR(10) NULL,
--	HorarioUp VARCHAR(10) NULL,
--	)

-- TABELA QUE IRÃO CONTER OS DOCUMENTOS DIGITALIZADOR DA PASTA DOS INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PDF_INTERNOS'))
	CREATE TABLE PDF_INTERNOS
	(
    IdPdf  INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DescricaoPdf VARCHAR(200) NULL,
    DocumentoPdf VARBINARY(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)


-- TABELA DE REGISTRO DE CHEGADA DE VISITAS INTERNOS NA PORTARIA EXTERNA

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('REGISTRO_CHEGADA_VISITAS_INTERNOS_PORTARIA_EXTERNA'))
	CREATE TABLE REGISTRO_CHEGADA_VISITAS_INTERNOS_PORTARIA_EXTERNA
	(
    IdRegVisita INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusReg VARCHAR(20) NULL,
	DataReg DATETIME NULL,
	IdVisita INT FOREIGN KEY REFERENCES VISITASINTERNO(IdVisita) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	IdRol INT FOREIGN KEY REFERENCES ROLVISITAS(IdRol) NOT NULL,
	DataChegada DATETIME NULL,
	HoraChegada VARCHAR(20) NULL,
	OrdemChegada INT NULL,
	AssinaturaDigitalVisita VARBINARY(MAX) NULL,
	TipoOperacao INT NULL,
	MotivoNaoAssinarDigital VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)



-- TABELA DE ALERTA DE VISITAS INTERNOS, ADVOGADOS E OFICIAL DE JUSTIÇA AOS INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ALERTA_BASE_CHEGADA_VISITAS_ADVOGADOS_OFICIAL_INTERNOS_PORTARIA'))
	CREATE TABLE ALERTA_BASE_CHEGADA_VISITAS_ADVOGADOS_OFICIAL_INTERNOS_PORTARIA
	(
    IdRegAlerta INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdRegistroAD INT NULL,	
	IdRegistroVI INT NULL,
	IdRegistroOF INT NULL,
	DataChegada DATETIME NULL,
	HoraChegada VARCHAR(20) NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,
	IdVisita INT FOREIGN KEY REFERENCES VISITASINTERNO(IdVisita) NULL,
	IdAdvogado INT FOREIGN KEY REFERENCES ADVOGADOS(IdAdvogado) NULL,	
	IdOficial INT FOREIGN KEY REFERENCES OFICIAL_JUSTICA(IdOficial) NULL,		
	AssinaturaDigitalVisita VARBINARY(MAX) NULL,
	Confirmacao VARCHAR(3) NULL,		
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)


-- PARAMETRO PARA HABILIAR/DESABILITAR ATENDIMENTO POR BIOMETRIA NO SERVIÇO SOCIAL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'AtendInterSocial')
   ALTER TABLE PARAMETROSCRC ADD AtendInterSocial VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'LigacaoTelSocial')
   ALTER TABLE PARAMETROSCRC ADD LigacaoTelSocial VARCHAR(3) NULL

-- BIOMETRIA SERVIÇO PSICOLOGIA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'AtendimentoBioPSI')
   ALTER TABLE PARAMETROSCRC ADD AtendimentoBioPSI VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'AvaliacaoBioPSI')
   ALTER TABLE PARAMETROSCRC ADD AvaliacaoBioPSI VARCHAR(3) NULL

-- ADMISSÃO ENFERMAGEM

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOENFERMEIRA') AND NAME = 'Sifilis')
   ALTER TABLE ADMISSAOENFERMEIRA ADD Sifilis VARCHAR(20) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOENFERMEIRA') AND NAME = 'Hpv')
   ALTER TABLE ADMISSAOENFERMEIRA ADD Hpv VARCHAR(20) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOENFERMEIRA') AND NAME = 'Diabetes')
   ALTER TABLE ADMISSAOENFERMEIRA ADD Diabetes VARCHAR(20) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOENFERMEIRA') AND NAME = 'Hipertensao')
   ALTER TABLE ADMISSAOENFERMEIRA ADD Hipertensao VARCHAR(20) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOENFERMEIRA') AND NAME = 'Tuberculose')
   ALTER TABLE ADMISSAOENFERMEIRA ADD Tuberculose VARCHAR(20) NULL

-- ADMISSÃO JURIDICA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'AdmissaoJuridico')
   ALTER TABLE PARAMETROSCRC ADD AdmissaoJuridico VARCHAR(3) NULL

-- ADMISSÃO COM EVOLUÇÃO NO JURIDICO - PARA NÃO DEIXAR ALTERAR DIRETO NA EVOLUÇÃO.

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EVOLUCAOJURIDICO') AND NAME = 'AdmEvo')
   ALTER TABLE EVOLUCAOJURIDICO ADD AdmEvo VARCHAR(3) NULL


-- PARAMETROS DO SISTEMA - ADMISSÃO ODONTOLOGIA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'AdmissaoTO')
   ALTER TABLE PARAMETROSCRC ADD AdmissaoTO VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'AdmissaoOdonto')
   ALTER TABLE PARAMETROSCRC ADD AdmissaoOdonto VARCHAR(3) NULL

-- ADMISSÃO ENFERMAGEM - PARA NÃO DEIXAR ALTERAR DIRETO NA EVOLUÇÃO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EVOLUCAOENFERMAGEM') AND NAME = 'AdmEvo')
   ALTER TABLE EVOLUCAOENFERMAGEM ADD AdmEvo VARCHAR(3) NULL

-- ADMISSÃO MÉDICA E PSIQUIATRICA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ADMISSAOMEDICA') AND NAME = 'TipoDiag')
   ALTER TABLE ADMISSAOMEDICA ADD TipoDiag VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EVOLUCAOMEDICA') AND NAME = 'AdmEvo')
   ALTER TABLE EVOLUCAOMEDICA ADD AdmEvo VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EVOLUCAO_PSIQUIATRICA') AND NAME = 'AdmEvo')
   ALTER TABLE EVOLUCAO_PSIQUIATRICA ADD AdmEvo VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENSRETORNOTRANSFERENCIA') AND NAME = 'IdUnid')
   ALTER TABLE ITENSRETORNOTRANSFERENCIA ADD IdUnid INT NULL


-- TABELA DE ODONTOGRAMA PARA ADMISSÃO E EVOLUÇÃO

-- TABELA DE PROCEDIMENTOS ODONTOGRAMAS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ODONTOGRAMA_ADMISSAO'))
	CREATE TABLE ODONTOGRAMA_ADMISSAO
	(
	IdOdonto INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdLanc INT FOREIGN KEY REFERENCES ATENDIMENTODONTO(IdLanc) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	IdProcOdonto INT FOREIGN KEY REFERENCES PROCEDIMENTOS_ODONTOLOGICO(IdProcOdonto) NOT NULL,
	NumeroDente INT NULL,
	DataOdontograma DATETIME NULL,
	FacesDente VARCHAR(60) NULL,
	ParcialTotal VARCHAR(60) NULL,
	PlanoTratamento VARCHAR(200) NULL,
	NrFace INT NULL,
	TipoProc INT NULL,
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ODONTOGRAMA_EVOLUCAO'))
	CREATE TABLE ODONTOGRAMA_EVOLUCAO
	(
	IdODEvol INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdLanc INT FOREIGN KEY REFERENCES ATENDIMENTODONTO(IdLanc) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	IdProcOdonto INT FOREIGN KEY REFERENCES PROCEDIMENTOS_ODONTOLOGICO(IdProcOdonto) NOT NULL,
	NumeroDente INT NULL,
	DataOdontograma DATETIME NULL,
	FacesDente VARCHAR(60) NULL,
	ParcialTotal VARCHAR(60) NULL,
	PlanoTratamento VARCHAR(200) NULL,
	NrFace INT NULL,
	TipoProc INT NULL,
	)

--IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_ODONTOGRAMA_ADMISSAO'))
--	CREATE TABLE ITENS_ODONTOGRAMA_ADMISSAO
--	(
--	IdOdonto INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
--	IdLanc INT FOREIGN KEY REFERENCES ATENDIMENTODONTO(IdLanc) NOT NULL,
--	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
--	IdProcOdonto INT FOREIGN KEY REFERENCES PROCEDIMENTOS_ODONTOLOGICO(IdProcOdonto) NOT NULL,	
--	DataOdontograma DATETIME NULL,
--	NumeroDente INT NULL,
--	NrFace INT NULL,
---	FacesDente VARCHAR(60) NULL,
--	ParcialTotal VARCHAR(60) NULL,
--	PlanoTratamento VARCHAR(200) NULL,
--	)

--IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_ODONTOGRAMA_EVOLUCAO'))
--	CREATE TABLE ODONTOGRAMA_EVOLUCAO
--	(
--	IdRegProdutosKC INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
--	IdLanc INT FOREIGN KEY REFERENCES ATENDIMENTODONTO(IdLanc) NOT NULL,	
--	)	

-- TABELA DE MONTAGEM DE KITS DE INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_HIGIENE_INTERNO'))
	CREATE TABLE KITS_HIGIENE_INTERNO
	(
    IdKit INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusKit VARCHAR(20) NULL,
	DataKit DATETIME NULL,	
	KitInicial INT NULL,
	KitDecendial INT NULL,
	KitQuinzenal INT NULL,
	KitSemestral INT NULL,
	KitMensal INT NULL,
	KitAnual INT NULL,
	ObservacaoKit VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)


IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PRODUTOS_KITS_HIGIENE_INTERNO'))
	CREATE TABLE PRODUTOS_KITS_HIGIENE_INTERNO
	(
    IdItem INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdKit INT FOREIGN KEY REFERENCES KITS_HIGIENE_INTERNO(IdKit) NOT NULL,
	IdProd INT FOREIGN KEY REFERENCES PRODUTOS_AC(IdProd) NOT NULL,
	QuantItem FLOAT NULL,
	KitInicial INT NULL,
	KitDecendial INT NULL,
	KitQuinzenal INT NULL,
	KitSemestral INT NULL,
	KitMensal INT NULL,
	KitAnual INT NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)

-- ADICIONADO CAMPO COMPOEKIT PARA TABELA DE PRODUTOS DO ALMOXARIFADO CENTRAL Selecione...

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PRODUTOS_AC') AND NAME = 'CompoeKit')
   ALTER TABLE PRODUTOS_AC ADD CompoeKit VARCHAR(15) NULL

-- PARAMENTRO PARA HABILITAR/DESABILITAR ALERTA NOS PAVILHOES - HABILITADO MOSTRA A TELA, DESABILITADO NÃO MOSTRA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'HabilitarAlertaVisitasBaseI')
   ALTER TABLE PARAMETROSCRC ADD HabilitarAlertaVisitasBaseI VARCHAR(15) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'HabilitarAlertaVisitasBaseII')
   ALTER TABLE PARAMETROSCRC ADD HabilitarAlertaVisitasBaseII VARCHAR(15) NULL


-- EXPORTAR OS PRODUTOS PARA SEREM UTILIZADOS NA ENTREGA DO KIT NAS BASES (EM ANALISE)

--IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PRODUTOS_AC_KIT_BASES'))
--	CREATE TABLE PRODUTOS_AC_KIT_BASES
--	(
--	IdProdKit INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
--	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
--	DataReg DATETIME NULL,
--	IdProd INT FOREIGN KEY REFERENCES PRODUTOS_AC(IdProd) NOT NULL,
--	Quantidade FLOAT NULL,
--	TipoKit INT NULL,
--	)


-- CRIAR GRUPO DE USUARIOS PAGAMENTO KIT TABLET
-- CRIAR MODULO PAGAMENTO KIT TABLET
--INSERT INTO MODULOS(NomeModulo,UsuarioInsert) VALUES('PAGAMENTO KIT TABLET','ADMINISTRADOR DO SISTEMA')
--INSERT INTO MODULOS(NomeModulo,UsuarioInsert) VALUES('CONFERE','ADMINISTRADOR DO SISTEMA')

-- TABELA PARA COMPOR O PAGAMENTO DO KIT DE INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE'))
	CREATE TABLE COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE
	(
	IdRegistroComp INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusComp VARCHAR(20) NULL,
	DataComp DATETIME NULL,
	IdKit INT FOREIGN KEY REFERENCES KITS_HIGIENE_INTERNO(IdKit) NOT NULL,
	IdItem INT FOREIGN KEY REFERENCES PRODUTOS_KITS_HIGIENE_INTERNO(IdItem) NOT NULL,
	IdFunc INT FOREIGN KEY REFERENCES COLABORADOR(IdFunc) NOT NULL,
	Observacao VARCHAR(MAX) NULL,
	ProgGerada VARCHAR(3) NULL,
	DataProgramacao DATETIME NULL,
	KitPago VARCHAR(3) NULL,
	DataPagamento DATETIME NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,
	)


-- TABELA DE INTERNOS SELECIONADOS PARA PAGAMENTO DO KIT
IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INTERNOS_PAVILHAO_KIT_LOTE'))
	CREATE TABLE INTERNOS_PAVILHAO_KIT_LOTE
	(
	IdRegIntSel INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdRegistroComp INT FOREIGN KEY REFERENCES COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE(IdRegistroComp) NOT NULL,	
	IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,	
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	Utili VARCHAR(3) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,		
	)

-- TABELA DE PRODUTOS E INTERNOS QUE COMPOE O KIT DE HIGIÊNE

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_PRODUTOS_INTERNOS_PAVILHAO_KIT_LOTE'))
	CREATE TABLE ITENS_PRODUTOS_INTERNOS_PAVILHAO_KIT_LOTE
	(
	IdRegProdKit INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdRegistroComp INT FOREIGN KEY REFERENCES COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE(IdRegistroComp) NOT NULL,	
	IdKit INT FOREIGN KEY REFERENCES KITS_HIGIENE_INTERNO(IdKit) NOT NULL,		
	IdProd INT FOREIGN KEY REFERENCES PRODUTOS_AC(IdProd) NOT NULL,
	QuantProd INT NULL,
	Utili VARCHAR(3) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,		
	)

-- TABELA DE AGRUPAMENTO DE INTERNOS E PRODUTOS PARA O KIT COMPLETO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_INTERNOS_AGRUPADOS_KIT_COMPLETO_INCOMPLETO'))
	CREATE TABLE ITENS_INTERNOS_AGRUPADOS_KIT_COMPLETO_INCOMPLETO
	(
	IdRegInternosKC INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdRegistroComp INT FOREIGN KEY REFERENCES COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE(IdRegistroComp) NOT NULL,		
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	TipoKitCI INT NULL,
	Agrupado VARCHAR(3) NULL,
	Gravado INT NULL,		
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,		
	)

-- É BASEADO NESSA TABELA QUE SERÁ PAGO O KIT VIA TABLET.

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('ITENS_PRODUTOS_AGRUPADOS_KIT_COMPLETO_INCOMPLETO'))
	CREATE TABLE ITENS_PRODUTOS_AGRUPADOS_KIT_COMPLETO_INCOMPLETO
	(
	IdRegProdutosKC INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdRegistroComp INT FOREIGN KEY REFERENCES COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE(IdRegistroComp) NOT NULL,	
	IdKit INT FOREIGN KEY REFERENCES KITS_HIGIENE_INTERNO(IdKit) NOT NULL,	
	--IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	IdProd INT FOREIGN KEY REFERENCES PRODUTOS_AC(IdProd) NOT NULL,
	QuantProd FLOAT NOT NULL,			
	TipoKitCI INT NULL,
	Agrupado VARCHAR(3) NULL,
	Gravado INT NULL,
	Liberado VARCHAR(3) NULL,
	Pago VARCHAR(3) NULL,	
	DataPagto DATETIME NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,			
	)

   -- TABELA QUE ARMAZENA OS DADOS DA SOLICITAÇÃO DE ATESTADO DE RECLUSÃO QUE PODERÁ SER UTILIZADO NO BENEFICIO DO INSS

   IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('SOLICITACAO_ATESTADO_RECLUSAO'))
      CREATE TABLE SOLICITACAO_ATESTADO_RECLUSAO
      (
      CodRegAux INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
      StatusAux VARCHAR(20) NULL,
      DataRegAux DATETIME NULL,
	  Finalidade VARCHAR(30) NULL,
      DataPedAux DATETIME NULL,
      DataPrevAux DATETIME NULL,
      IdVisita INT FOREIGN KEY REFERENCES VISITASINTERNO(IdVisita) NOT NULL, 
      IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
      MotivoAux VARCHAR(MAX) NULL,
	  AssinaturaVisita VARBINARY(MAX) NULL,
	  DataAssinaturaVisita DATETIME NULL,
	  HoraAssinaturaVisita VARCHAR(30) NULL,
	  AssinaturaInterno VARBINARY(MAX) NULL,
	  DataAssinaturaInterno DATETIME NULL,
	  HoraAssinaturaInterno VARCHAR(30) NULL,
	  UtilizadoCrc VARCHAR(3) NULL,
	  UsuarioInsert VARCHAR(50) NULL,
	  UsuarioUp VARCHAR(50) NULL,
	  DataInsert VARCHAR(20) NULL,
	  DataUp VARCHAR(20) NULL,
	  HorarioInsert VARCHAR(10) NULL,
	  HorarioUp VARCHAR(10) NULL,			
	  )

-- TABELA DE EMISSÃO DE ATESTADO DE RECLUSÃO

   IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('EMISSAO_ATESTADO_RECLUSAO'))
      CREATE TABLE EMISSAO_ATESTADO_RECLUSAO
      (
       IdAtestado INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
       StatusAtestado VARCHAR(20) NULL,
       ClassAtestado VARCHAR(20) NULL,
       DataAtestado DATETIME NULL,
	   DataValidade DATETIME NULL,
       IdVisita INT FOREIGN KEY REFERENCES VISITASINTERNO(IdVisita) NOT NULL, 
       IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	   CodRegAux INT FOREIGN KEY REFERENCES SOLICITACAO_ATESTADO_RECLUSAO(CodRegAux) NOT NULL,   
	   TextoAtestado VARCHAR(MAX) NULL,
	   AssinaturaColaborador VARBINARY(MAX) NULL,
	   DataAssinatura VARCHAR(20) NULL,
	   HoraAssinatura VARCHAR(20) NULL,
	   CodigoValidador VARBINARY(MAX) NULL,
	   ChaveInterno VARBINARY(MAX) NULL,
	   UsuarioInsert VARCHAR(50) NULL,
	   UsuarioUp VARCHAR(50) NULL,
	   DataInsert VARCHAR(20) NULL,
	   DataUp VARCHAR(20) NULL,
	   HorarioInsert VARCHAR(10) NULL,
	   HorarioUp VARCHAR(10) NULL,	
	   )

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('EMISSAO_ATESTADO_RECLUSAO') AND NAME = 'DataValidade')
   ALTER TABLE EMISSAO_ATESTADO_RECLUSAO ADD DataValidade DATETIME NULL

-- PARAMETRO PARA INFORMAR QUAIS COLABORADORES PODEM LIBERAR O ATESTADO DE RECLUSÃO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorCRC')
   ALTER TABLE PARAMETROSCRC ADD NomeColaboradorCRC VARCHAR(300) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'NomeColaboradorCRCSEG')
   ALTER TABLE PARAMETROSCRC ADD NomeColaboradorCRCSEG VARCHAR(300) NULL

-- TABELA DE REVALIDAÇÃO DE ATESTADO DE RECLUSÃO

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('REVALIDAR_ATESTADO_RECLUSAO'))
      CREATE TABLE REVALIDAR_ATESTADO_RECLUSAO
      (
       IdRevAtestado INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
       StatusRevAtestado VARCHAR(20) NULL,
       ClassRevAtestado VARCHAR(20) NULL,
       DataRevAtestado DATETIME NULL,
	   DataValidade DATETIME NULL,
       IdVisita INT FOREIGN KEY REFERENCES VISITASINTERNO(IdVisita) NOT NULL, 
       IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	   IdAtestado INT FOREIGN KEY REFERENCES EMISSAO_ATESTADO_RECLUSAO(IdAtestado) NOT NULL,   
	   TextoRevAtestado VARCHAR(MAX) NULL,
	   AssinaturaColaborador VARBINARY(MAX) NULL,
	   DataAssinatura VARCHAR(20) NULL,
	   HoraAssinatura VARCHAR(20) NULL,
	   CodigoValidador VARBINARY(MAX) NULL,
	   ChaveInterno VARBINARY(MAX) NULL,
	   UsuarioInsert VARCHAR(50) NULL,
	   UsuarioUp VARCHAR(50) NULL,
	   DataInsert VARCHAR(20) NULL,
	   DataUp VARCHAR(20) NULL,
	   HorarioInsert VARCHAR(10) NULL,
	   HorarioUp VARCHAR(10) NULL,	
	   )


-- TABELA QUE ARMAZENA OS DADOS DA SOLICITAÇÃO DE ATESTADO DE RECLUSÃO QUE PODERÁ SER UTILIZADO NO CRC

   IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('SOLICITACAO_ATESTADO_RECLUSAO_CRC'))
      CREATE TABLE SOLICITACAO_ATESTADO_RECLUSAO_CRC
      (
      CodRegAux INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
      StatusAux VARCHAR(20) NULL,
      DataRegAux DATETIME NULL,
	  Finalidade VARCHAR(30) NULL,
      DataPedAux DATETIME NULL,
      DataPrevAux DATETIME NULL,
      IdVisita INT NOT NULL, 
      IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
      MotivoAux VARCHAR(MAX) NULL,	  
	  UtilizadoCrc VARCHAR(3) NULL,
	  UsuarioInsert VARCHAR(50) NULL,
	  UsuarioUp VARCHAR(50) NULL,
	  DataInsert VARCHAR(20) NULL,
	  DataUp VARCHAR(20) NULL,
	  HorarioInsert VARCHAR(10) NULL,
	  HorarioUp VARCHAR(10) NULL,			
	  )

-- TABELA DE EMISSÃO DE ATESTADO DE RECLUSÃO - CRC

   IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('EMISSAO_ATESTADO_RECLUSAO_CRC'))
      CREATE TABLE EMISSAO_ATESTADO_RECLUSAO_CRC
      (
       IdAtestado INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
       StatusAtestado VARCHAR(20) NULL,
       ClassAtestado VARCHAR(20) NULL,
       DataAtestado DATETIME NULL,
	   TipoSolicitante VARCHAR(30) NULL,
	   DataValidade DATETIME NULL,
       IdVisita INT NOT NULL, 
       IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,	
	   CodRegAux INT FOREIGN KEY REFERENCES SOLICITACAO_ATESTADO_RECLUSAO_CRC(CodRegAux) NOT NULL,   
	   TextoAtestado VARCHAR(MAX) NULL,
	   AssinaturaColaborador VARBINARY(MAX) NULL,
	   DataAssinatura VARCHAR(20) NULL,
	   HoraAssinatura VARCHAR(20) NULL,
	   CodigoValidador VARBINARY(MAX) NULL,
	   ChaveInterno VARBINARY(MAX) NULL,
	   UsuarioInsert VARCHAR(50) NULL,
	   UsuarioUp VARCHAR(50) NULL,
	   DataInsert VARCHAR(20) NULL,
	   DataUp VARCHAR(20) NULL,
	   HorarioInsert VARCHAR(10) NULL,
	   HorarioUp VARCHAR(10) NULL,	
	   )

-- ALTERAR O TIPO DO CAMPO DA TABELA, ESTAVA DANDO ERRO (17/12/2018)

ALTER TABLE  EVADIDOSIND ALTER COLUMN NrDocSaida VARCHAR(100)

-- ACRESCENTADO O PAVILHAO E A CELA NO MOMENTO DA APLICAÇÃO DO CASTIGO

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AUTORES_REGIMENTO_DISCIPLINAR') AND NAME = 'PavilhaoOrigem')
   ALTER TABLE AUTORES_REGIMENTO_DISCIPLINAR ADD PavilhaoOrigem VARCHAR(200) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('AUTORES_REGIMENTO_DISCIPLINAR') AND NAME = 'CelaOrigem')
   ALTER TABLE AUTORES_REGIMENTO_DISCIPLINAR ADD CelaOrigem VARCHAR(200) NULL

-- ACRESENTAR CAMPOS NA TABELA INTERNOSISOLAMENTO
-- DEPOIS DE EXECUTAR O COMANDO, PARA TORNAR A COLUNA NOT NULL, DEVERÁ POPULAR A COLUNA DO FOREIGN KEY DESEJADA COM O COMANDO ABAIXO

--ALTER TABLE INTERNOSISOLAMENTO ALTER COLUMN IdPav INT NOT NULL
--ALTER TABLE INTERNOSISOLAMENTO ALTER COLUMN IdCela INT NOT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('INTERNOSISOLAMENTO') AND NAME = 'IdPav')
   ALTER TABLE INTERNOSISOLAMENTO ADD IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav)  NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('INTERNOSISOLAMENTO') AND NAME = 'IdCela')
   ALTER TABLE INTERNOSISOLAMENTO ADD IdCela INT FOREIGN KEY REFERENCES CELAS(IdCela)  NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('INTERNOSISOLAMENTO') AND NAME = 'PavilhaoDestino')
   ALTER TABLE INTERNOSISOLAMENTO ADD PavilhaoDestino VARCHAR(200) NULL
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('INTERNOSISOLAMENTO') AND NAME = 'CelaDestino')
   ALTER TABLE INTERNOSISOLAMENTO ADD CelaDestino VARCHAR(200) NULL

-- TABELA QUE INFORMA OS PAGAMENTOS DOS KITS

--IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('MOVIMENTACAO_KITS_HIGIENE_INTERNOS'))
--   CREATE TABLE MOVIMENTACAO_KITS_HIGIENE_INTERNOS
--   (
--   IdConKit INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   --IdRegistroComp INT FOREIGN KEY REFERENCES COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE(IdRegistroComp) NOT NULL,
--   KitInicial VARCHAR(3) NULL,
--   KitIPago VARCHAR(3) NULL,
--   DataPagKitIn DATETIME NULL,
--   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
--   KitDecendial VARCHAR(3) NULL,
--   KitDPago VARCHAR(3) NULL,
--  DataPagKitDe DATETIME NULL,
--   KitQuinzenal VARCHAR(3) NULL,
--   KitQPago VARCHAR(3) NULL,
--   DataPagKitQu DATETIME NULL,
--   KitMensal VARCHAR(3) NULL,
--   KitMPago VARCHAR(3) NULL,
--   DataPagKitMe DATETIME NULL,
--   KitSemestral VARCHAR(3) NULL,
--   KitSPago VARCHAR(3) NULL,
--   DataPagKitSe DATETIME NULL,
--   KitAnual VARCHAR(3) NULL,
--   KitAPago VARCHAR(3) NULL,
--   DataPagKitAn DATETIME NULL,
--   )

   -- TABELA DE KIT INICIAL

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_INICIAL_INTERNOS'))
   CREATE TABLE KITS_INICIAL_INTERNOS
   (
   IdKitInicial INT IDENTITY (1,1) PRIMARY KEY NOT NULL,    
   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
   DataChegada DATETIME NULL,   
   DataPrevisaoPro DATETIME NULL,  
   DataPagto DATETIME NULL,
   KitPago VARCHAR(3) NULL,
   Utilizado VARCHAR(3) NULL,
   IDREG_PROG INT NULL,
   )

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_DECENDIAL_INTERNOS'))
   CREATE TABLE KITS_DECENDIAL_INTERNOS
   (
   IdKitDecendial INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   IdRegistroComp INT NULL,	
   DataPagto DATETIME NULL,   
   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
   KitPago VARCHAR(3) NULL,
   Utilizado VARCHAR(3) NULL,
   ProximaData DATETIME NULL,
   DataPrevisaoPro DATETIME NULL,  
   PrimeiroDecendial VARCHAR(3) NULL,
   IDREG_PROG INT NULL,
   )

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_QUINZENAL_INTERNOS'))
   CREATE TABLE KITS_QUINZENAL_INTERNOS
   (
   IdKitQuinzenal INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   IdRegistroComp INT NULL,	
   DataPagto DATETIME NULL,   
   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
   KitPago VARCHAR(3) NULL,
   Utilizado VARCHAR(3) NULL,
   DataPrevisaoPro DATETIME NULL,  
   DataPrevisao DATETIME NULL,
   IDREG_PROG INT NULL,
   )

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_MENSAL_INTERNOS'))
   CREATE TABLE KITS_MENSAL_INTERNOS
   (
   IdKitMensal INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   IdRegistroComp INT NULL,	
   DataPagto DATETIME NULL,   
   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
   KitPago VARCHAR(3) NULL,
   Utilizado VARCHAR(3) NULL,
   ProximaData DATETIME NULL,
   DataPrevisaoPro DATETIME NULL,  
   IDREG_PROG INT NULL,
   )

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_SEMESTRAL_INTERNOS'))
   CREATE TABLE KITS_SEMESTRAL_INTERNOS
   (
   IdKitSemestral INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   IdRegistroComp INT NULL,	
   DataPagto DATETIME NULL,   
   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
   KitPago VARCHAR(3) NULL,
   Utilizado VARCHAR(3) NULL,
   ProximaData DATETIME NULL,
   DataPrevisaoPro DATETIME NULL, 
   IDREG_PROG INT NULL,    
   )

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('KITS_ANUAL_INTERNOS'))
   CREATE TABLE KITS_ANUAL_INTERNOS
   (
   IdKitAnual INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   IdRegistroComp INT NULL,	
   DataPagto DATETIME NULL,   
   IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
   KitPago VARCHAR(3) NULL,
   Utilizado VARCHAR(3) NULL,
   ProximaData DATETIME NULL,
   DataPrevisaoPro DATETIME NULL,  
   IDREG_PROG INT NULL,
   )


 -- BIOMETRIA PEDAGOGIA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'BiometriaPeda')
   ALTER TABLE PARAMETROSCRC ADD BiometriaPeda VARCHAR(3) NULL

--- PARAMETROS DO SISTEMA

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'TipoServidor')
   ALTER TABLE PARAMETROSCRC ADD TipoServidor VARCHAR(100) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PARAMETROSCRC') AND NAME = 'TipoBancoDados')
   ALTER TABLE PARAMETROSCRC ADD TipoBancoDados VARCHAR(100) NULL

-- CAMPO PARA CALCULAR A PRODUTIVIDADE

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('REGISTRO_ATENDIMENTO_INTERNO_PSP') AND NAME = 'Qtd')
   ALTER TABLE REGISTRO_ATENDIMENTO_INTERNO_PSP ADD Qtd INT NULL

   --ID DO REGISTRO DE COMPOSIÇÃO PARA DAR BAIXA NOS PRODUTOS DO KITDE HIGIENE.

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PAGAMENTO_KIT_INTERNOS') AND NAME = 'IdRegistro')
   ALTER TABLE PAGAMENTO_KIT_INTERNOS ADD IdRegistro INT NULL

-- ID DO INTERNO NO PAGAMENTO DO KIT PARA RELACIONAR AOS PRODUTOS.

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('ITENS_PAGAMENTO_KIT_INTERNOS_PRODUTOS') AND NAME = 'IdInternoCrc')
   ALTER TABLE ITENS_PAGAMENTO_KIT_INTERNOS_PRODUTOS ADD IdInternoCrc INT NULL

-- TABELA DE COMPOSIÇÃO DO KIT

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE') AND NAME = 'ProgGerada')
   ALTER TABLE COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE ADD ProgGerada VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE') AND NAME = 'DataProgramacao')
   ALTER TABLE COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE ADD DataProgramacao DATETIME NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE') AND NAME = 'KitPago')
   ALTER TABLE COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE ADD KitPago VARCHAR(3) NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE') AND NAME = 'DataPagamento')
   ALTER TABLE COMPOSICAO_PAGAMENTO_KIT_INTERNOS_LOTE ADD DataPagamento DATETIME NULL

--- TABELA DE PAAMENTO DO KIT

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PAGAMENTO_KIT_INTERNOS') AND NAME = 'IdKit')
   ALTER TABLE PAGAMENTO_KIT_INTERNOS ADD IdKit INT NULL

-- TABELA DE KITS PARA PROGRAMAÇÃO DOS MESMOS.

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('KITS_INICIAL_INTERNOS') AND NAME = 'IDREG_PROG')
   ALTER TABLE KITS_INICIAL_INTERNOS ADD IDREG_PROG INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('KITS_DECENDIAL_INTERNOS') AND NAME = 'IDREG_PROG')
   ALTER TABLE KITS_DECENDIAL_INTERNOS ADD IDREG_PROG INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('KITS_QUINZENAL_INTERNOS') AND NAME = 'IDREG_PROG')
   ALTER TABLE KITS_QUINZENAL_INTERNOS ADD IDREG_PROG INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('KITS_MENSAL_INTERNOS') AND NAME = 'IDREG_PROG')
   ALTER TABLE KITS_MENSAL_INTERNOS ADD IDREG_PROG INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('KITS_SEMESTRAL_INTERNOS') AND NAME = 'IDREG_PROG')
   ALTER TABLE KITS_SEMESTRAL_INTERNOS ADD IDREG_PROG INT NULL

IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('KITS_ANUAL_INTERNOS') AND NAME = 'IDREG_PROG')
   ALTER TABLE KITS_ANUAL_INTERNOS ADD IDREG_PROG INT NULL


-- PROGRAMAÇÃO DE PAGAMENTO DE KIT


IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('PROGRAMACAO_PAGAMENTO_KITS_INTERNOS'))
   CREATE TABLE PROGRAMACAO_PAGAMENTO_KITS_INTERNOS
   (
   IdPROG INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
   IdRegistroComp INT NULL,
   DataPROG DATETIME NULL,   
   DataUltimoPagto DATETIME NULL, 
   DataPrevisao DATETIME NULL,
   TipoKit INT NULL,
   IdPav INT FOREIGN KEY REFERENCES PAVILHAO(IdPav) NOT NULL,
   IdKit INT FOREIGN KEY REFERENCES KITS_HIGIENE_INTERNO(IdKit) NOT NULL,
   ProgGerada VARCHAR(3) NULL,
   KitPago VARCHAR(3) NULL,
   DataPagamento DATETIME NULL,
   UsuarioInsert VARCHAR(50) NULL,	
   DataInsert VARCHAR(20) NULL,	 
   HorarioInsert VARCHAR(10) NULL,	
   )

-- ALTERAR O CAMPO DA TABELA PARA PODER FINALIZAR A COMPOSIÇÃO

ALTER TABLE ITENS_PRODUTOS_INTERNOS_PAVILHAO_KIT_LOTE ALTER COLUMN QuantProd INT NULL

-- ADICIONAR COLUNA StausPav NA TABELA PAVILHAO E ACRESCENTAR O CONTEÚDO NA TABELA
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS WHERE ID = OBJECT_ID('PAVILHAO') AND NAME = 'StatusPav')
   ALTER TABLE PAVILHAO ADD StatusPav VARCHAR(10) NULL
   UPDATE PAVILHAO SET StatusPav='Ativo'


--17/05/2019
-- TABELA DE PERFIL CARCERARIO DE INTERNOS

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO
	(
	IdIndAco INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	StatusPerfil VARCHAR(20) NULL,
	MesRef VARCHAR(30) NULL,
	AnoRef INT NULL,
	DataPerfil DATETIME NULL,	
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	OpcaoSexual VARCHAR(100) NULL,
	AnoNasc INT NULL,
	ObservacaoPerfil VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO_ENFERMARIA'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO_ENFERMARIA
	(
	IdEnf INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdIndAco INT FOREIGN KEY REFERENCES INDICADOR_ACOMPANHAMENTO_INTERNO(IdIndAco) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataReg DATETIME NULL,
	Diabetes VARCHAR(3) NULL,
	DiabControl VARCHAR(3) NULL,
	QtdDiabetes INT NULL,
	Hipertensao VARCHAR(3) NULL,
	HiperControl VARCHAR(3) NULL,
	QtdHipertensao INT NULL,
	Escabiose VARCHAR(3) NULL,
	EscabioseCura VARCHAR(3) NULL,
	QtdEscabiose INT NULL,
	Hanseniase VARCHAR(3) NULL,
	HanseniaseCura VARCHAR(3) NULL,
	QtdHanseniase INT NULL,
	Sifilis VARCHAR(13) NULL,
	SifilisCura VARCHAR(3) NULL,
	QtdSifilis INT NULL,
	Tuberculose VARCHAR(13) NULL,
	TuberculoseCura VARCHAR(3) NULL,
	QtdTuberculose INT NULL,
	Hiv VARCHAR(13) NULL,
	HivControlada VARCHAR(3) NULL,
	QtdHiv INT NULL,
	HepatiteB VARCHAR(13) NULL,
	HepatiteBCont VARCHAR(3) NULL,
	QtdHepatiteB INT NULL,
	HepatiteC VARCHAR(13) NULL,
	HepatiteCCont VARCHAR(3) NULL,
	QtdHepatiteC INT NULL,
	Dst VARCHAR(13) NULL,
	DstCurada VARCHAR(3) NULL,
	QtdDst INT NULL,
	Vdlr VARCHAR(13) NULL,
	VdlrCurada VARCHAR(3) NULL,
	QtdVdlr INT NULL,
	Vacina VARCHAR(3) NULL,
	VacinaCura VARCHAR(3) NULL,
	QtdVacina INT NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO_PEDAGOGIA'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO_PEDAGOGIA
	(
	IdPedago INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdIndAco INT FOREIGN KEY REFERENCES INDICADOR_ACOMPANHAMENTO_INTERNO(IdIndAco) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataPeda DATETIME NULL,
	ICAA VARCHAR(3) NULL,
	QtdICAA INT NULL,
	IC1 VARCHAR(3) NULL,
	QtdIC1 INT NULL,
	IC2P VARCHAR(3) NULL,
	QtdIC2P INT NULL,
	IAAU VARCHAR(3) NULL,
	QtdIAAU INT NULL,
	IC3 VARCHAR(3) NULL,
	QtdIC3 INT NULL,
	IREL VARCHAR(3) NULL,
	QtdIREL INT NULL,
	IAC VARCHAR(3) NULL,
	QtdIAC INT NULL,
	ICU1 VARCHAR(3) NULL,
	QtdICU1 INT NULL,
	IC2 VARCHAR(3) NULL,
	QtdIC2 INT NULL,
	ICA VARCHAR(3) NULL,
	QtdICA INT NULL,
	Observacao VARCHAR(250) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO_JURIDICO_CRC'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO_JURIDICO_CRC
	(
	IdJurCrc INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdIndAco INT FOREIGN KEY REFERENCES INDICADOR_ACOMPANHAMENTO_INTERNO(IdIndAco) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataJurCrc DATETIME NULL,
	Processos VARCHAR(3) NULL,
	QtdProgresso INT NULL,
	Documentacao VARCHAR(3) NULL,
	QtdDocumentacao INT NULL,
	Progressao VARCHAR(3) NULL,
	QtdProgressao INT NULL,
	Livramento VARCHAR(3) NULL,
	QtdLivramento INT NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO_TO'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO_TO
	(
	IdTo INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdIndAco INT FOREIGN KEY REFERENCES INDICADOR_ACOMPANHAMENTO_INTERNO(IdIndAco) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataTo DATETIME NULL,
	Programa VARCHAR(3) NULL,
	Qtdprograma INT NULL,
	Curso VARCHAR(3) NULL,
	QtdCurso INT NULL,
	Profissional VARCHAR(3) NULL,
	QtdProfissional INT NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO_PSI'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO_PSI
	(
	IdPsi INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdIndAco INT FOREIGN KEY REFERENCES INDICADOR_ACOMPANHAMENTO_INTERNO(IdIndAco) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataPsi DATETIME NULL,
	Tratamento VARCHAR(3) NULL,
	QtdTratamento INT NULL,
	Acompanha VARCHAR(3) NULL,
	QtdAcompanha INT NULL,
	Recuperacao VARCHAR(3) NULL,
	QtdRecuperacao INT NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)

IF NOT EXISTS (SELECT NULL FROM SYSOBJECTS WHERE ID = OBJECT_ID('INDICADOR_ACOMPANHAMENTO_INTERNO_SS'))
	CREATE TABLE INDICADOR_ACOMPANHAMENTO_INTERNO_SS
	(
	IdSS INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	IdIndAco INT FOREIGN KEY REFERENCES INDICADOR_ACOMPANHAMENTO_INTERNO(IdIndAco) NOT NULL,
	IdInternoCrc INT FOREIGN KEY REFERENCES PRONTUARIOSCRC(IdInternoCrc) NOT NULL,
	DataSS DATETIME NULL,
	AcompanhaSS VARCHAR(3) NULL,
	QtdAcompanhaSS INT NULL,
	Observacao VARCHAR(MAX) NULL,
	UsuarioInsert VARCHAR(50) NULL,
	UsuarioUp VARCHAR(50) NULL,
	DataInsert VARCHAR(20) NULL,
	DataUp VARCHAR(20) NULL,
	HorarioInsert VARCHAR(10) NULL,
	HorarioUp VARCHAR(10) NULL,	
	)